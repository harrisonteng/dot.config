
/emcsvn/emc/emcmailer/trunk/forwarding/forwarding.c,433
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
void do_dynamic_recip(31,642
int p_expand_dynamic_forwarding(32,702
int forwarding_expand_bounce(34,789
int forwarding_expand 108,2605
int p_expand_dynamic_forwarding(384,10560
void do_dynamic_recip(539,14090
GArray *forwarding_get_members forwarding_get_members557,14617
char *get_boxfulladdress_by_rid get_boxfulladdress_by_rid600,15650

/emcsvn/emc/emcmailer/trunk/forwarding/forwarding.h,218
#define EMC_FORWARDING2,23
int forwarding_expand_bounce(4,47
int forwarding_expand(5,113
GArray *forwarding_get_members forwarding_get_members6,172
char *get_boxfulladdress_by_rid get_boxfulladdress_by_rid7,239

/emcsvn/emc/emcmailer/trunk/constants.h,1655
#define EMC_CONSTANTS_H2,24
#define ASSERT(5,64
#define START_BREAK_FRAME 8,203
#define END_BREAK_FRAME 11,264
#define SAFE_FREE(14,329
#define DUPLICATE_RECIPIENT_ERROR 17,397
#define OP_FAIL 19,436
#define OP_OK 20,458
#define SPAM_ACTION 22,478
#define VIRUS_ACTION 23,510
#define EIC_ACTION 24,543
#define RELAY_ACTION 25,574
#define BOUNCE_ACTION 26,607
#define MF_ACTION 27,641
#define LIST_ACTION 28,676
#define AUTO_ACTION 29,712
#define BCAST_BOUNCE_ACTION 30,748
#define LIST_BOUNCE_ACTION 31,788
#define LISTSERVE_ACTION 32,825
#define OUT_BCS_ACTION	33,861
#define OUT_VIRUS_ACTION 34,893
#define OUT_MF_ACTION 35,933
#define OUT_BOUNCE_ACTION 36,970
#define OUT_TAGLINE	37,1007
#define J2_STORAGE_ACTION 38,1042
#define ARCHIVER_ACTION 39,1081
#define OUT_ARCHIVER_ACTION 40,1120
#define CONFILTER_ACTION 41,1162
#define OUT_CONFILTER_ACTION 42,1199
#define SPOOL_ACTION	43,1243
#define OUT_SPOOL_ACTION	44,1272
#define POLICYSMART_ACTION	45,1308
#define OUT_POLICYSMART_ACTION	46,1345
#define I_RELAY_ACTION 48,1390
#define I_FORWARD_ACTION 49,1424
#define I_SHRDCAL_ACTION 50,1460
#define I_FWD_BOUNCE_ACTION 51,1496
#define I_HOSTED_ACTION 52,1534
#define I_EXTERNAL_ACTION 53,1568
#define QE_PND 55,1605
#define QE_FAIL 56,1624
#define QE_DONE 57,1643
#define QE_STOP 58,1662
#define QE_FRZE 59,1681
#define AL_PND 61,1701
#define AL_FAIL 62,1720
#define AL_DONE 63,1739
#define AL_STOP 64,1758
#define AL_FRZE 65,1777
#define EMC_FAIL 67,1797
#define DEFAULT_RETRY_TIMES 69,1818
#define DEFAULT_RETRY_INTERVAL 70,1848
#define DEFAULT_ON_FAIL 71,1881
#define DEFAULT_ON_FATAL 72,1912

/emcsvn/emc/emcmailer/trunk/listserv/listserv.c,917
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
EmcQImpl * impl;27,548
EmcConfig * config;28,565
MYSQL mysql;29,585
MYSQL_ROW row;30,598
MYSQL_RES * rs;31,613
char * filename 33,630
char * sender 34,654
char * recip 35,676
int debugmode 36,697
int unlink_msgfile 37,716
char * configfile 38,740
int sock 39,766
char * msgid 40,780
char * refdomain 41,801
char * data 42,826
char * local 44,847
char * domain 45,868
#define BUFFER_SIZE 47,891
int leave(49,921
void do_help(53,959
int check_password(110,2737
int member_exists(156,3711
void send_to_owner(187,4328
void send_auth_token(264,5981
int subscribe_member(353,8584
int unsubscribe_member(404,9879
void admin_subscribe(455,11189
void admin_unsubscribe(507,12876
void user_subscribe(555,14380
void user_unsubscribe(673,17996
void sub_conf(758,20615
void init_args(836,22927
int main(931,25007

/emcsvn/emc/emcmailer/trunk/libemcqmysql/libemcqmysql.h,10239
#define LIB_Q_MYSQL_H2,22
#define _GNU_SOURCE4,45
#define MY_TYPE 12,164
extern char *_mysql_quote(_mysql_quote14,189
typedef struct QMysqlImpl_t 16,250
	EmcConfig *config;config17,280
	MYSQL *queue;queue18,300
	MYSQL *aka;aka19,315
} QMysqlImpl;20,328
typedef struct EmcQEntry_t 22,343
	char * _sender;23,372
	char * _recipient;24,389
	char * _msgid;25,409
	long	_inode;26,425
	char * _status;27,439
	int	 _lock;28,456
	long	_time;29,469
	long	_last_retry;30,482
	char * _file;31,501
	char * _host;32,516
	int    _outbound;33,531
	QMysqlImpl * _impl;34,550
} EmcQEntry;35,571
typedef struct EmcAList_t 37,585
	long	 _qnum;38,613
	long	 _alnum;39,627
	char *  _msgid;40,642
	long	 _inode;41,659
	char *  _file;42,674
	char *  _recipient;43,690
	char *  _sender;44,711
	int	  _level;45,729
	int	  _allow_ext;46,744
	char *  _data;47,763
	char *  _status;48,779
	int	 _lock;49,797
	QMysqlImpl * _impl;50,810
} EmcAList;51,831
typedef struct EmcAEntry_t 53,844
	long	 _qnum;54,873
	long	 _alnum;55,887
	char *  _msgid;56,902
	char *  _recipient;57,919
	char *  _local;58,940
	char *  _domain;59,957
	char *  _sender;60,975
	int	  _itemnum;61,993
	char *  _action;62,1010
	char *  _data;63,1028
	char *  _status;64,1044
	int	  _retry_times;65,1062
	long	 _last_retry;66,1083
	char *  _last_error;67,1103
	QMysqlImpl * _impl;68,1125
} EmcAEntry;69,1146
typedef struct EmcHeader_t 72,1161
	long	 _qnum;73,1190
	long	 _alnum;74,1204
	long   _inode;75,1219
	char * _file;76,1235
	char * _header;77,1250
	QMysqlImpl * _impl;78,1267
} EmcHeader;79,1288
typedef struct EmcHint_t 81,1302
	char * _msgid;82,1329
	long	 _inode;83,1345
	char * _agent;84,1360
	char * _key;85,1376
	char * _hint;86,1390
	QMysqlImpl * _impl;87,1405
} EmcHint;88,1426
typedef struct EmcHostedEntry_t 90,1438
	long   _qnum;91,1472
	long   _alnum;92,1487
	char * _msgid;93,1503
	char * _recipient;94,1519
	char * _sender;95,1539
	long   _inode;96,1556
	char * _file;97,1572
	char * _data;98,1587
	char * _status;99,1602
	int	  _retry_times;100,1619
	long	 _last_retry;101,1640
	char *  _last_error;102,1660
	QMysqlImpl * _impl;103,1682
} EmcHostedEntry;104,1703
typedef struct EmcExternalEntry_t 106,1722
	long   _qnum;107,1758
	long   _alnum;108,1773
	char * _msgid;109,1789
	char * _recipient;110,1805
	char * _sender;111,1825
	long   _inode;112,1842
	char * _file;113,1858
	char * _data;114,1873
	char * _status;115,1888
	char * _rhost;116,1905
	int	  _retry_times;117,1921
	long	 _last_retry;118,1942
	char *  _last_error;119,1962
	QMysqlImpl * _impl;120,1984
} EmcExternalEntry;121,2005
typedef EmcQEntry *			EmcQEntryArray;123,2026
typedef EmcAList *			EmcAListArray;124,2064
typedef EmcAEntry *			EmcAEntryArray;125,2100
typedef EmcHeader *			EmcHeaderArray;126,2138
typedef EmcHostedEntry* 	EmcHostedEntryArray;127,2176
typedef EmcExternalEntry* 	EmcExternalEntryArray;128,2222
QMysqlImpl * l_init_impl(132,2300
QMysqlImpl * l_init_impl2(133,2348
MYSQL * l_impl_get_akadb(134,2417
void _reinit(135,2464
void _fini(136,2497
char * mysql_quote(137,2511
void p_qentry_init(141,2583
const char * l_qentry_get_sender(150,2751
const char * l_qentry_get_recipient(151,2807
const char * l_qentry_get_message_id(152,2866
long l_qentry_get_qnum(153,2926
long l_qentry_get_inode(154,2972
const char * l_qentry_get_status(155,3019
int l_qentry_get_lock(156,3075
long l_qentry_get_time(157,3120
long l_qentry_get_last_retry(158,3166
const char * l_qentry_get_filename(159,3218
const char * l_qentry_get_host(160,3276
int l_qentry_is_outbound(161,3330
QMysqlImpl * l_qentry_get_impl(162,3378
void l_qentry_set_impl(163,3432
EmcQEntry * l_qentry_dup(164,3497
EmcQEntry * l_qentry_create 165,3538
EmcQEntry * l_qentry_create_with_data 172,3696
EmcQEntry * l_qentry_create_real 181,3893
char * l_qentry_serialize(191,4104
EmcQEntry * l_qentry_deserialize(192,4172
int l_qentry_remove(193,4248
EmcQEntry * l_qentry_get(194,4290
int l_qentry_lock(195,4347
int l_qentry_unlock(196,4388
int l_qentry_set_status(197,4431
int l_qentry_get_pending(198,4499
int l_qentry_get_locked(199,4585
int l_qentry_finished(200,4680
EmcQEntry * l_qentry_get_at(201,4725
void l_qentry_free_list(202,4787
int l_qentry_get_processing_status(203,4846
void l_qentry_free(204,4905
long l_alist_get_qnum(207,4959
long l_alist_get_alnum(208,5003
const char * l_alist_get_message_id(209,5047
long l_alist_get_inode(210,5104
const char * l_alist_get_filename(211,5148
const char * l_alist_get_recipient(212,5203
const char * l_alist_get_sender(213,5259
int l_alist_get_level(214,5312
int l_alist_get_allow_ext(215,5355
const char * l_alist_get_data(216,5402
const char * l_alist_get_status(217,5453
QMysqlImpl * l_alist_get_impl(218,5506
MYSQL* l_alist_get_akadb(219,5558
void l_alist_set_impl(220,5601
EmcAList * l_alist_create(221,5663
EmcAList * l_alist_clone(229,5818
int l_alist_get_lock(234,5915
char * l_alist_serialize(235,5957
EmcAList * l_alist_deserialize(236,6020
EmcAList * l_alist_get_by_hosted(237,6097
int l_alist_lock(238,6176
int l_alist_unlock(239,6214
int l_alist_set_status(240,6254
int l_alist_set_allow_ext(241,6319
int l_alist_error(242,6377
int l_alist_get_pending(243,6416
int l_alist_finished(244,6485
EmcAList * l_alist_get_at(245,6527
int l_alist_message_modified(246,6583
int l_alist_remove_all_aentries(248,6666
int l_alist_max_itemnum(249,6719
void l_alist_free_list(250,6765
void l_alist_free(251,6819
long l_aentry_get_qnum(255,6874
long l_aentry_get_alnum(256,6921
const char * l_aentry_get_message_id(257,6968
const char * l_aentry_get_recipient(258,7028
const char * l_aentry_get_user(259,7087
const char * l_aentry_get_domain(260,7141
const char * l_aentry_get_sender(261,7197
int l_aentry_get_itemnum(262,7253
const char * l_aentry_get_action(263,7301
const char * l_aentry_get_status(264,7357
const char * l_aentry_get_data(265,7413
int l_aentry_get_retry_times(266,7467
long l_aentry_get_last_retry(267,7519
const char * l_aentry_last_error(268,7571
EmcAEntry * l_aentry_create(270,7628
int l_aentry_get_pending(277,7781
EmcAEntry * l_aentry_get_at(278,7851
void l_aentry_free_list(279,7911
int l_aentry_set_error(280,7968
int l_aentry_set_status(281,8035
int l_aentry_stop_after(282,8104
int l_aentry_hold_after(283,8152
void l_aentry_free(284,8200
long l_header_get_qnum(288,8257
long l_header_get_alnum(289,8303
long l_header_get_inode(290,8350
const char * l_header_get_filename(291,8397
const char * l_header_get_header(292,8455
EmcHeader * l_header_create(293,8511
int l_header_get_pending(294,8585
EmcHeader * l_header_get_like 296,8679
EmcHeader * l_header_get_at(298,8779
void l_header_free_list(299,8838
void l_header_free(300,8894
const char * l_hint_get_message_id(303,8948
long l_hint_get_inode(304,9003
const char * l_hint_get_agent(305,9045
const char * l_hint_get_key(306,9095
const char * l_hint_get_hint(307,9143
EmcHint * l_hint_create(308,9192
EmcHint * l_hint_get(315,9350
long l_hosted_get_qnum(321,9467
long l_hosted_get_alnum(322,9518
const char * l_hosted_get_message_id(323,9570
const char * l_hosted_get_recipient(324,9635
const char * l_hosted_get_sender(325,9699
long l_hosted_get_inode(326,9760
const char * l_hosted_get_filename(327,9812
const char * l_hosted_get_data(328,9875
const char * l_hosted_get_status(329,9934
int l_hosted_get_retry_times(330,9995
long l_hosted_get_last_retry(331,10052
const char * l_hosted_get_last_error(332,10109
EmcHostedEntry * l_hosted_create(333,10174
int l_hosted_set_error(340,10345
int l_hosted_touch(341,10416
int l_hosted_set_status(342,10483
int l_hosted_get_pending(343,10556
EmcHostedEntry * l_hosted_get_at(344,10632
void l_hosted_free_list(345,10701
void l_hosted_free(346,10762
long l_external_get_qnum(350,10826
long l_external_get_alnum(351,10883
const char * l_external_get_message_id(352,10941
const char * l_external_get_recipient(353,11012
const char * l_external_get_sender(354,11082
long l_external_get_inode(355,11149
const char * l_external_get_filename(356,11207
const char * l_external_get_data(357,11276
const char * l_external_get_status(358,11341
int l_external_get_retry_times(359,11408
long l_external_get_last_retry(360,11471
const char * l_external_get_last_error(361,11534
EmcExternalEntry * l_external_create(362,11605
int l_external_set_error(370,11803
int l_external_set_status(371,11880
int l_external_get_pending(372,11959
EmcExternalEntry * l_external_get_at(373,12039
void l_external_free_list(374,12114
void l_external_free(375,12179
int l_message_store(380,12249
int l_message_remove(388,12429
int l_message_merge_headers(391,12497
int l_message_merge_headers_escape(396,12613
char * l_message_merge_headers_as_string(402,12749
char * l_message_create(406,12866
char * l_message_create_with_data(415,13072
char * l_message_create_outbound_with_data(425,13302
char * l_message_create_with_mode_data(435,13541
int l_misc_sender_valid(450,13801
char * l_misc_get_unique_id(451,13849
char * l_misc_get_localname(452,13916
char * l_misc_get_domain(453,13969
char * str_tolower(454,14019
int l_build_expand_alist(457,14073
int l_build_expand_outbound_alist(458,14120
int l_build_expand_forward(459,14176
int l_build_expand_forward_bounce(460,14245
int l_build_expand_shcal(461,14321
int l_build_expand_hosted(462,14388
int l_build_expand_external(463,14456
int l_build_is_external_domain(464,14526
int l_build_is_external_address(465,14600
int p_build_do_special_addresses(466,14677
int p_expand_dynamic_forwarding(467,14746
int l_admin_get_all_entries(471,14852
int l_admin_get_pending_entries(473,14928
int l_admin_get_frozen_entries(475,15008
int l_admin_get_failed_entries(477,15087
int l_admin_lock_qentry(479,15166
int l_admin_unlock_qentry(480,15233
int l_admin_get_locked_entries(481,15301
int l_admin_get_qentry_info(483,15381
int l_admin_get_action_entries(493,15630
int l_admin_reset_failed_qentry(498,15755
int l_admin_thaw_qentry(500,15832
EmcQEntry * l_admin_get_qentry(502,15901
int l_admin_set_qentry_status(503,15973
int l_admin_queue_rebuild(505,16067

/emcsvn/emc/emcmailer/trunk/libemcqmysql/qentry.c,1472
#define _GNU_SOURCE2,20
extern MYSQL * mysql_sock;18,355
extern char *_mysql_quote(_mysql_quote19,382
void p_qentry_init(25,614
const char * l_qentry_get_sender(48,1181
const char * l_qentry_get_recipient(51,1263
const char * l_qentry_get_message_id(54,1351
long l_qentry_get_qnum(57,1436
long l_qentry_get_inode(60,1507
const char * l_qentry_get_status(63,1579
int l_qentry_get_lock(66,1661
long l_qentry_get_time(69,1730
long l_qentry_get_last_retry(72,1800
const char * l_qentry_get_filename(75,1881
const char * l_qentry_get_host(78,1963
int l_qentry_is_outbound(81,2041
QMysqlImpl * l_qentry_get_impl(84,2117
void l_qentry_set_impl(87,2195
EmcQEntry * l_qentry_dup(91,2285
EmcQEntry *l_qentry_create l_qentry_create105,2540
void p_qentry_create_fail_cleanup(118,2799
EmcQEntry *l_qentry_create_with_data l_qentry_create_with_data141,3368
EmcQEntry *l_qentry_create_real(l_qentry_create_real163,3704
char * l_qentry_serialize(329,7349
EmcQEntry * l_qentry_deserialize(359,7934
#define _CHECK_STREAM 361,8013
int l_qentry_remove(423,9426
EmcQEntry *l_qentry_get(l_qentry_get581,14011
int l_qentry_lock(656,15500
int l_qentry_unlock(684,16088
int l_qentry_set_status(712,16656
int l_qentry_get_pending(746,17408
int l_qentry_get_locked(878,20474
EmcQEntry * l_qentry_get_at(985,22924
void l_qentry_free_list(989,23018
int l_qentry_finished(1001,23230
int l_qentry_get_processing_status(1048,24241
void l_qentry_free(1113,26143

/emcsvn/emc/emcmailer/trunk/libemcqmysql/hint.c,416
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
#define HINT_SELECT 24,441
#define HINT_DB_POPULATE 32,533
const char * l_hint_get_message_id(39,722
long l_hint_get_inode(42,801
const char * l_hint_get_agent(45,867
const char * l_hint_get_key(48,941
const char * l_hint_get_hint(51,1011
EmcHint * l_hint_create(55,1084
EmcHint * l_hint_get(118,2367

/emcsvn/emc/emcmailer/trunk/libemcqmysql/hosted.c,902
#define _GNU_SOURCE3,21
extern MYSQL *mysql_sock;mysql_sock21,353
extern char *_mysql_quote(_mysql_quote22,379
long l_hosted_get_qnum(24,440
long l_hosted_get_alnum(27,517
const char * l_hosted_get_message_id(30,596
const char * l_hosted_get_recipient(33,688
const char * l_hosted_get_sender(36,783
long l_hosted_get_inode(39,872
const char * l_hosted_get_filename(42,951
const char * l_hosted_get_data(45,1040
const char * l_hosted_get_status(48,1125
int l_hosted_get_retry_times(51,1214
long l_hosted_get_last_retry(54,1304
const char * l_hosted_get_last_error(57,1393
EmcHostedEntry * l_hosted_create(61,1491
int l_hosted_set_error(158,3904
int l_hosted_touch(248,6199
int l_hosted_set_status(306,7573
int l_hosted_get_pending(340,8385
EmcHostedEntry * l_hosted_get_at(425,10602
void l_hosted_free_list(429,10712
void l_hosted_free(441,10946
void l_hosted_remove 459,11344

/emcsvn/emc/emcmailer/trunk/libemcqmysql/main.c,361
#define MY_TYPE 17,287
static MYSQL *mysql_sock mysql_sock19,312
static MYSQL *akadb akadb20,345
static int inited_mysql 21,373
static int inited_akadb 22,402
QMysqlImpl * l_init_impl(24,432
QMysqlImpl *l_init_impl2(l_init_impl228,515
MYSQL *l_impl_get_akadb(l_impl_get_akadb123,2703
void _reinit(128,2771
void _fini(155,3541
void _init(174,3937

/emcsvn/emc/emcmailer/trunk/libemcqmysql/misc.c,262
#define _GNU_SOURCE1,0
#define UNIQUE_ID_SIZE 12,195
extern int is_sender_valid(14,223
int l_misc_sender_valid(16,273
char * l_misc_get_localname(66,1046
char * l_misc_get_domain(98,1540
char * string_base62(131,2028
char * l_misc_get_unique_id(146,2337

/emcsvn/emc/emcmailer/trunk/libemcqmysql/admin.c,855
#define _GNU_SOURCE3,21
#define ALIST_SELECT 25,434
#define ALIST_DB_POPULATE 40,630
#define AENTRY_SELECT 54,1069
#define AENTRY_DB_POPULATE 71,1308
int p_admin_get_entries(87,1850
int l_admin_get_all_entries(89,1933
int l_admin_get_pending_entries(95,2063
int l_admin_get_frozen_entries(101,2198
int l_admin_get_failed_entries(107,2333
int l_admin_lock_qentry(113,2468
int l_admin_unlock_qentry(136,2817
int l_admin_get_locked_entries(159,3169
int l_admin_get_qentry_info(228,4441
int l_admin_get_action_entries(458,9108
int p_admin_queue_read_envelope(522,10143
int l_admin_queue_rebuild(596,12208
int l_admin_set_action_status 717,15910
int l_admin_reset_failed_qentry(752,16550
int l_admin_thaw_qentry(832,18048
int l_admin_set_qentry_status(905,19259
EmcQEntry * l_admin_get_qentry(918,19507
int p_admin_get_entries(983,20642

/emcsvn/emc/emcmailer/trunk/libemcqmysql/alist.c,1471
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;23,412
#define ALIST_SELECT 25,440
#define ALIST_DB_POPULATE 40,636
long l_alist_get_qnum(59,1249
long l_alist_get_alnum(62,1315
const char * l_alist_get_message_id(65,1383
long l_alist_get_inode(68,1464
const char * l_alist_get_filename(71,1532
const char * l_alist_get_recipient(74,1610
const char * l_alist_get_sender(77,1694
int l_alist_get_level(80,1772
int l_alist_get_allow_ext(83,1839
const char * l_alist_get_data(86,1914
const char * l_alist_get_status(89,1988
int l_alist_get_lock(92,2066
QMysqlImpl * l_alist_get_impl(95,2131
MYSQL * l_alist_get_akadb(98,2205
void l_alist_set_impl(101,2280
int l_build_expand_forward(105,2366
int l_build_expand_forward_bounce(110,2478
EmcAList * l_alist_create(115,2603
EmcAList * l_alist_clone(223,5183
char * l_alist_serialize(320,7425
EmcAList * l_alist_deserialize(358,8182
#define _CHECK_STREAM 360,8259
EmcAList * l_alist_get_by_hosted(413,9769
int l_alist_lock(470,10851
int l_alist_unlock(501,11530
void l_alist_set_filename(532,12206
int l_alist_set_status(537,12336
int l_alist_set_allow_ext(564,12944
int l_alist_get_processing_status(591,13529
int l_alist_finished(648,14951
int l_alist_get_pending(687,15742
EmcAList * l_alist_get_at(756,17408
void l_alist_free_list(760,17497
int l_alist_message_modified(772,17701
int l_alist_remove_all_aentries(826,18950
int l_alist_max_itemnum(845,19376
void l_alist_free(887,20268

/emcsvn/emc/emcmailer/trunk/libemcqmysql/external.c,950
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
long l_external_get_qnum(24,441
long l_external_get_alnum(27,526
const char * l_external_get_message_id(30,613
const char * l_external_get_recipient(33,713
const char * l_external_get_sender(36,816
long l_external_get_inode(39,913
const char * l_external_get_filename(42,1000
const char * l_external_get_data(45,1097
const char * l_external_get_status(48,1190
const char * l_external_get_rhost(51,1287
int l_external_get_retry_times(54,1382
long l_external_get_last_retry(57,1480
const char * l_external_get_last_error(60,1577
EmcExternalEntry * l_external_create(64,1683
int l_external_set_error(168,4238
int l_external_set_status(258,6698
int l_external_get_pending(292,7539
EmcExternalEntry * l_external_get_at(378,9904
void l_external_free_list(382,10022
void l_external_free(393,10271
void l_external_remove 413,10755

/emcsvn/emc/emcmailer/trunk/libemcqmysql/message.c,552
#define _GNU_SOURCE2,20
#define MY_TYPE 23,434
#define BUFFER_SIZE 25,459
extern MYSQL * mysql_sock;27,489
extern const char *config_get_filename(config_get_filename28,516
int l_message_store(34,743
int l_message_remove(138,3002
char * l_message_create(161,3463
char * l_message_create_with_data(177,3798
char * l_message_create_outbound_with_data(193,4163
char * l_message_create_with_mode_data(210,4538
int l_message_merge_headers(431,9188
int l_message_merge_headers_escape 441,9392
char * l_message_merge_headers_as_string(602,13060

/emcsvn/emc/emcmailer/trunk/libemcqmysql/header.c,564
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
#define HEADER_SELECT 24,441
#define HEADER_DB_POPULATE 32,538
long l_header_get_qnum(39,739
long l_header_get_alnum(42,811
long l_header_get_inode(45,885
const char * l_header_get_filename(48,959
const char * l_header_get_header(51,1043
EmcHeader * l_header_create(55,1128
int l_header_get_pending(109,2366
EmcHeader * l_header_get_like 166,3532
EmcHeader * l_header_get_at(230,5073
void l_header_free_list(234,5168
void l_header_free(246,5391

/emcsvn/emc/emcmailer/trunk/libemcqmysql/aentry.c,1021
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
#define AENTRY_SELECT 23,381
#define AENTRY_DB_POPULATE 40,620
long l_aentry_get_qnum(56,1162
long l_aentry_get_alnum(59,1234
const char * l_aentry_get_message_id(62,1308
const char * l_aentry_get_recipient(65,1395
const char * l_aentry_get_user(68,1485
const char * l_aentry_get_domain(71,1566
const char * l_aentry_get_sender(74,1650
int l_aentry_get_itemnum(77,1734
const char * l_aentry_get_action(80,1811
const char * l_aentry_get_status(83,1895
const char * l_aentry_get_data(86,1979
int l_aentry_get_retry_times(89,2059
long l_aentry_get_last_retry(92,2144
const char * l_aentry_last_error(95,2228
EmcAEntry * l_aentry_create(99,2317
int l_aentry_get_pending(227,5484
EmcAEntry * l_aentry_get_at(288,6933
void l_aentry_free_list(292,7028
int l_aentry_set_error(303,7250
int l_aentry_touch(407,9929
int l_aentry_set_status(466,11269
int l_aentry_stop_after(544,13210
int l_aentry_hold_after(598,14555
void l_aentry_free(652,15900

/emcsvn/emc/emcmailer/trunk/libemcqmysql/build.c,649
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
int p_build_do_special_addresses(27,574
int p_build_check_alias(28,639
int l_build_is_external_domain(29,681
int resp_active(31,752
reassemble_address(82,1992
int l_build_expand_alist(113,2578
int l_build_expand_outbound_alist(1008,25585
int l_build_expand_relay(1350,34137
int l_build_expand_hosted(1402,35332
int l_build_expand_external(1423,35844
int l_build_expand_shcal(1453,36470
int l_build_is_external_domain(1553,38949
int l_build_is_external_address(1600,39895
int p_build_check_alias(1622,40268
int p_build_do_special_addresses(1700,41846

/emcsvn/emc/emcmailer/trunk/sqlitecache/query.c,1135
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
void cache_free_results(31,668
char *tables_from_query(tables_from_query88,1953
void cache_free(196,3749
void sqlite_free_close(259,5193
int cache_prepare_query(276,5482
int db_do_query(561,12821
int cache_begin_transaction(661,15062
int cache_commit(673,15316
int cache_delete_result(685,15548
int cache_rollback(705,15937
void cache_result_data(717,16173
void cache_set_error(857,19480
int cache_create(870,19727
int cache_row(893,20230
int sqlite_simple(920,20723
DbRow *cache_data_to_row(cache_data_to_row967,21548
DbRow *cache_fetch_row(cache_fetch_row1063,23154
void cache_add_result_row(1078,23414
sqlite *cache_lookup_cache(cache_lookup_cache1099,23740
#define CACHE_NON_RESPONSE 1150,24839
#define CACHE_EXPIRED 1151,24870
int cache_do_query(1157,24982
int main(1266,26877
void cache_add_db(1391,29499
int cache_init(1403,29784
int cache_init_master(1466,31072
int cache_init_db(1489,31556
int cache_open_db(1518,32054
void db_init(1534,32345
void db_connect(1552,32751
char *hashquery(hashquery1573,33195

/emcsvn/emc/emcmailer/trunk/sqlitecache/query.h,2161
#define _CACHE_QUERY_H2,23
#define DB_ERROR 4,47
#define DB_OK 5,72
#define DB_NO_CONNECT 6,96
#define true 8,121
#define false 9,136
#define READ_ONLY 11,153
#define READ_WRITE 12,173
typedef struct db_info 14,195
	MYSQL sock;15,220
	int readonly;16,233
	char *server;server17,248
	char *username;username18,263
	char *password;password19,280
	char *db_name;db_name20,297
	int  timeout;21,313
	char *errmsg;errmsg22,328
	int  connected;23,343
} DbServerData;24,360
typedef struct db_row 26,377
	int columns;27,401
	int *lengths;lengths28,415
	char **data;data29,430
} DbRow;30,444
typedef struct query_cache_struct 32,454
	GArray *results;results33,490
	sqlite *master;master35,509
	char *master_db;master_db37,527
	char *dir;dir38,545
	sqlite *cache;cache40,558
	int ok;42,575
	int ttl;43,584
	char *errmsg;errmsg45,595
	char *query_hash;query_hash47,611
	char *tables;tables48,630
	char *sql_query;sql_query50,646
	char *cache_delete;cache_delete52,665
	char *cache_delete_template;cache_delete_template53,686
	char *table_query;table_query55,717
	char *table_master_query;table_master_query56,737
	char *cache_query;cache_query58,765
	char *cache_query_template;cache_query_template59,785
	char *cache_insert;cache_insert61,815
	char *cache_insert_template;cache_insert_template62,836
	GArray *db_servers;db_servers64,867
	int writequery;66,889
	int row;68,907
	int rows;69,917
	GHashTable *query_bin;query_bin71,929
	int from_cache;73,954
} QueryCache;75,972
#define EMCSAFEFREE(77,987
char *hashquery(hashquery79,1041
void cache_add_db(80,1086
void cache_set_error(81,1142
int cache_init(82,1197
void db_init(83,1254
void db_connect(84,1328
int sqlite_simple(85,1363
int cache_row(86,1429
void cache_add_result_row(87,1488
void cache_result_data(88,1546
DbRow *cache_fetch_row(cache_fetch_row89,1589
int cache_init_master(90,1632
int cache_open_master(91,1674
int cache_init_db(92,1716
int cache_open_db(93,1783
sqlite *cache_lookup_cache(cache_lookup_cache94,1854
void sqlite_free_close(95,1901
int cache_prepare_query(96,1974
int cache_do_query(97,2046

/emcsvn/emc/emcmailer/trunk/sqlitecache/encode.c,147
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int sqlite_encode_binary(125,5768
int sqlite_decode_binary(177,6981
int main(205,7563

/emcsvn/emc/emcmailer/trunk/sqlitecache/sqlite_encode.h,93
#define _SQLITE_ENCODE_H2,25
int sqlite_encode_binary(4,51
int sqlite_decode_binary(5,129

/emcsvn/emc/emcmailer/trunk/alworker.c,836
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
extern int debugmode;29,583
extern int pretendmode;30,605
extern int outboundmode;31,629
extern const char *msgid;msgid32,654
extern long host_id;33,680
extern EmcConfig *config;config35,702
int agentpid 36,728
extern alworker_options al_opts;37,746
EmcAEntry *g_aentry g_aentry39,780
long altimeout 40,808
void al_alarmer(43,854
void check_retries(44,881
int do_agent(45,945
int process_inline_action(46,1022
int process_agent_commands(47,1068
#define BUFFER_SIZE 49,1160
int dont_set_ae_status 51,1189
int stop_processing 52,1217
int pid 54,1243
int do_alworker(56,1257
int do_agent(323,8575
void check_retries(649,17282
int process_agent_commands(695,18442
int process_inline_action(1020,25818
void al_alarmer(1065,26971

/emcsvn/emc/emcmailer/trunk/alworker.h,265
#define EMC_ALWORKER2,21
typedef struct alworker_options_t 6,64
	char * configfile;8,121
	long alnum;9,141
	char * alstream;10,154
	EmcAList * alist;11,172
	EmcQImpl * impl;13,222
	char * queue_type;14,240
} alworker_options;15,260
int do_alworker(17,281

/emcsvn/emc/emcmailer/trunk/admin/emcqueue.c,1352
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define BUFFER_SIZE 25,501
const char *configfile configfile27,532
const char *queue_type queue_type28,563
EmcConfig *config config29,594
EmcQImpl *impl impl30,620
const char *msg_id msg_id32,644
const char *msgid msgid33,671
int debugmode 36,721
int list 38,741
int view 39,755
int count 40,769
int reset 41,784
int thaw 42,799
int show_alists 43,813
int show_hosted 44,834
int show_external 45,855
int show_aentries 46,878
int batch 47,901
int summary_only 48,916
const char * status 49,938
int lock 50,966
int unlock 51,980
int rebuild 52,996
int delete 53,1013
const char * recip 54,1029
const char * sender 55,1056
const char * host 56,1084
int set_action_status 58,1111
const char * action 59,1138
const char * action_status 60,1166
void view_file(63,1219
void show_qentries(64,1237
void show_qentries_exim(65,1293
void show_qentry_info(66,1354
void show_actions(74,1538
void do_single_message(75,1590
void do_batch(76,1616
int main(80,1636
void view_file(334,7336
void do_batch(351,7659
void do_single_message(429,9536
void show_actions(544,11572
void show_qentry_info(591,12775
char *get_age(get_age699,16473
char *get_size(get_size723,16865
void show_qentries(746,17297
void show_qentries_exim(800,18369

/emcsvn/emc/emcmailer/trunk/smtpc/smtp.c,302
static char *rcsid rcsid1,0
static void use_rcsid(2,77
const char *readlinefp_cb(readlinefp_cb20,385
void print_recipient_status(21,445
int smtpsend(23,535
void print_recipient_status 102,2461
#define BUFLEN	111,2694
const char *readlinefp_cb readlinefp_cb113,2715
void monitor_cb 141,3159

/emcsvn/emc/emcmailer/trunk/smtpc/test.c,75
static char *rcsid rcsid1,0
static void use_rcsid(2,77
int main(14,288

/emcsvn/emc/emcmailer/trunk/virus/zerohour_filter.c,217
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define _GNU_SOURCE8,205
#define MAX_BUFFER_SIZE 16,329
int zerohour_filter_request(20,406
char *zerohour_filter_response(zerohour_filter_response60,1378

/emcsvn/emc/emcmailer/trunk/virus/filters.h,457
typedef int (*scan_filter_request)scan_filter_request1,0
typedef char * (*scan_filter_response)scan_filter_response2,62
int default_filter_request(3,112
char * default_filter_response(4,168
int norton_filter_request(5,211
char * norton_filter_response(6,266
int clamav_filter_request(7,308
char *clamav_filter_response(clamav_filter_response8,359
int zerohour_filter_request(9,397
char *zerohour_filter_response(zerohour_filter_response10,450

/emcsvn/emc/emcmailer/trunk/virus/clamav_filter.c,210
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,204
#define MAX_BUFFER_SIZE 16,328
int clamav_filter_request(25,456
char *clamav_filter_response(clamav_filter_response41,685

/emcsvn/emc/emcmailer/trunk/virus/main.c,5219
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
#define TMPBUF 52,1037
#define HINT_BUFFER_SIZE 53,1057
#define MAX_PROVIDERS 55,1092
#define MAX_VIRUSES_FOUND 56,1117
#define SKIP_RFC822_PARSE_SIZE 58,1148
int scanned_parts 60,1188
char *decompose_dir decompose_dir61,1211
char *innoculated_dir innoculated_dir62,1239
char *parse_jail_dir parse_jail_dir63,1269
char *virus_jail_dir virus_jail_dir64,1298
char *virus_lib_dir virus_lib_dir65,1327
int virus_jail 66,1394
int new_virus 67,1414
char *new_virus_file new_virus_file68,1433
char *inject_agent inject_agent69,1462
char *tmp_dir tmp_dir70,1489
const char *msg_subject msg_subject71,1511
int NUM_PROVIDERS 75,1608
long inode 77,1632
char *msgid msgid78,1648
char *configfile configfile79,1668
char *recip recip80,1693
char *sender sender81,1713
char *local local82,1734
char *domain domain83,1754
char *refdomain refdomain84,1775
int stand_alone 85,1799
int pretend 86,1820
int no_hints 87,1837
int nocleanup 88,1855
EmcConfig *config config89,1874
EmcQImpl *impl impl90,1900
char *aka_db_host aka_db_host92,1924
char *aka_db_name aka_db_name93,1950
char *aka_db_user aka_db_user94,1976
char *aka_db_pass aka_db_pass95,2002
int aka_db_timeout 96,2028
char *cursec;cursec97,2052
char *hint_buffer hint_buffer98,2066
size_t hint_buffer_size 99,2092
char *data data100,2121
int outboundmode 102,2141
int virus_found 104,2164
MYSQL mysql_sock;106,2186
struct provider_t providers[providers108,2205
struct virus_options_t *virus_options;virus_options109,2282
const char *current_provider current_provider111,2322
char *filename filename113,2360
int debugmode 114,2383
int unlink_msgfile 115,2402
int sock 116,2426
int in_rfc822 120,2560
GMimeMessage *message message122,2580
int fd;123,2610
struct virus_t viruses_found[viruses_found124,2618
EmcHash *scan_request_filters;scan_request_filters126,2668
EmcHash *scan_response_filters;scan_response_filters127,2699
regex_t regex_tnef;129,2732
struct virus_summary_report_t virus_rep;134,2853
X509 *encryptCert encryptCert137,2916
EVP_PKEY *pkey pkey138,2942
gboolean attemptDecryption 139,2965
void init_args(142,3026
char *stdin_to_tmp(stdin_to_tmp143,3065
void deconstruct(144,3088
void part_scanner(145,3123
void handle_inline_virus(146,3189
void cleanup(149,3306
int leave(150,3331
char *virus_safe_malloc(virus_safe_malloc151,3382
int uudecode(152,3417
void process_config(153,3501
static int makepath(154,3525
void init_virus_options(155,3615
void init_db(156,3643
void record_virus(157,3660
char *quarantine_message(quarantine_message158,3746
void virus_notify(159,3802
void parse_notify(160,3839
void scan_file(161,3861
int scan_file_with_provider(162,3937
char *create_message(create_message164,4067
char *create_message_with_data(create_message_with_data171,4191
char *randid(randid179,4345
void  my_log_handler(181,4363
char *get_rawheader(get_rawheader186,4485
char *escape_percents(escape_percents187,4536
char *quarantine_virus_to_bucket(quarantine_virus_to_bucket188,4579
extern int parse_tnef(190,4654
void connect_alarm(192,4721
typedef struct SMimeKeys_t194,4754
	int keyID;196,4783
	char *name;name197,4795
	char* owner;198,4808
	char* privateKey;199,4822
	char* certificate;200,4841
	char* password;201,4861
}SMimeKeys;SMimeKeys202,4878
GMimeObject *extract_signed_content extract_signed_content204,4891
GMimeObject *decrypt_mime_part(decrypt_mime_part205,4952
SMimeKeys *db_get_smime_keys db_get_smime_keys206,5003
void  my_log_handler(208,5065
void adjust_hint_buffer(216,5234
void connect_alarm(228,5519
void init_args(237,5688
char *stdin_to_tmp(stdin_to_tmp374,9112
void deconstruct(413,9903
void part_scanner(555,13076
void scan_file(820,20347
void init_virus_report(876,21649
void free_virus_report(883,21815
void get_rest_of_data_for_virus_report(895,22109
int scan_file_with_provider(928,22971
int insert_virus_status(1270,33406
int check_virus_status(1337,35265
void record_virus(1375,36122
void handle_inline_virus(1410,36994
void cleanup(1458,38288
int leave(1504,39100
char *virus_safe_malloc(virus_safe_malloc1533,39510
void process_config(1547,39695
void init_virus_options(1746,45280
void init_db(1930,50715
char *quarantine_message(quarantine_message1955,51238
void send_parse_notify(2015,52334
void parse_notify(2050,53332
const char *send_virus_notify(send_virus_notify2054,53410
void virus_notify(2164,55629
char *create_message(create_message2283,59485
char *create_message_with_data(create_message_with_data2294,59713
char *randid(randid2452,62944
int process_hints(2468,63535
int main(2624,67143
#define UUDECODE_BUFFER_LEN 2894,74477
int uudecode(2897,74510
static int makepath(3093,79163
char *get_rawheader(get_rawheader3141,80129
char *escape_percents(escape_percents3168,80627
char *quarantine_virus_to_bucket(quarantine_virus_to_bucket3192,81038
GMimeObject *extract_signed_content extract_signed_content3292,83510
GMimeObject *decrypt_mime_part(decrypt_mime_part3342,84976
SMimeKeys *db_get_smime_keys db_get_smime_keys3436,87603

/emcsvn/emc/emcmailer/trunk/virus/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1007

/emcsvn/emc/emcmailer/trunk/virus/tnef.c,393
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,195
extern EmcQImpl  *impl;impl28,571
extern EmcConfig *config;config29,595
extern regex_t regex_tnef;31,622
extern int leave(33,650
#define BUFFER_SIZE 35,710
static int parse_out_file_names 37,741
static int parse_out_file_names 40,833
void test_parse_out_file_names 100,2038
int parse_tnef(116,2437

/emcsvn/emc/emcmailer/trunk/virus/virus.h,1664
#define EMC_VIRUS_H2,20
#define NOTIFY_SENDER 4,41
#define NOTIFY_RECIPIENT 5,72
#define NOTIFY_ADMINISTRATOR 6,103
#define NOTIFY_OUTBOUND_SENDER 8,135
#define NOTIFY_OUTBOUND_ADMIN 9,168
#define DELETE_MESSAGE 11,202
#define STRIP_ATTACHMENT 12,227
#define NEW_VIRUS_FREEZE 14,255
#define NEW_VIRUS_DELIVER 15,282
#define PARSE_FAIL_NOTIFY_ADMIN 17,311
#define PARSE_FAIL_DELIVER_ANYWAY 18,345
#define SUBJ_LEN 20,382
#define SUBJ_LEN_ENC 21,402
#define SCANNER_TYPE_PARTS_SCAN 23,437
#define SCANNER_TYPE_FULL_MESSAGE_SCAN 24,471
struct virus_summary_report_t 27,539
	char * msg_filename;28,571
	char * ip;29,593
	char * subject;30,605
} virus_summary_report;31,622
struct virus_options_t 33,647
	int providers;34,672
	int notify;35,688
	int notify_outbound;36,701
	int notify_local_only;37,723
	int daily_digest;38,747
	int monthly_digest;39,766
	int trigger_action;40,787
	int new_virus_action;41,808
	int parse_fail_action;42,831
	int block_encrypted;43,855
	char *admin;admin44,877
	char *notify_text;notify_text45,891
	char *notify_footer;notify_footer46,911
	char *new_virus_notify_address;new_virus_notify_address47,933
	char *parse_fail_admin;parse_fail_admin48,966
	char *admin2;admin249,991
	char *admin3;admin350,1006
struct provider_t 53,1025
	char * name;54,1045
	int code;55,1059
	char * host;56,1070
	int port;57,1084
	char * scan_dir;58,1095
	int sock;59,1113
	int header_added;60,1124
	int fallback;61,1143
	int was_used;62,1158
	int was_clean;63,1173
	int type;64,1189
struct virus_t 67,1204
	char * virus_name;68,1221
	char * attachment_name;69,1241
	char * provider_name;70,1266

/emcsvn/emc/emcmailer/trunk/virus/default_filter.c,164
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define MAX_BUFFER_SIZE 12,265
int default_filter_request(14,299
char * default_filter_response(21,438

/emcsvn/emc/emcmailer/trunk/virus/norton_filter.c,189
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,204
#define MAX_BUFFER_SIZE 16,328
int norton_filter_request(38,840
char * norton_filter_response(54,1096

/emcsvn/emc/emcmailer/trunk/autoresp/autoresp.c,651
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
char * filename 26,534
const char * configfile;27,558
int debugmode 28,583
char * msgid 29,602
char * sender 30,623
char * refdomain 31,645
char * data 32,670
char * recip 33,690
char * local 34,711
char * domain 35,732
int leave(40,818
void  my_log_handler(44,856
void init_args(53,1083
void autoresp_init_read_db(148,3280
void autoresp_init_write_db(204,4711
GMimeMessage *build_message(build_message261,6180
int headers_contain_address(504,13639
int headers_contain_aliases(565,15075
int should_respond_to_message(622,16397
int main(732,19948

/emcsvn/emc/emcmailer/trunk/listbnc/listbnc.c,440
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char * filename 24,486
char * sender 25,510
char * recip 26,532
int debugmode 27,553
int unlink_msgfile 28,572
char * configfile 29,596
int sock 30,622
char * msgid 31,636
char * refdomain 32,657
char * data 33,682
char * local 35,703
char * domain 36,724
#define BUFFER_SIZE 38,747
int leave(40,777
void init_args(44,819
int main(139,2923

/emcsvn/emc/emcmailer/trunk/qrunner.c,814
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
qworker_options qe_opts;28,537
#define BUFFER_SIZE 30,563
EmcConfig * config 32,594
int reconfig 33,621
int stop 34,639
char * msgid 37,677
long host_id 38,698
int debugmode 39,717
int pretendmode 40,736
int ownmode 41,757
EmcHash * qworkers 43,775
int concurrent_qworkers 44,802
long qentry_retry_interval 45,831
long timeout 47,864
void do_qrunner(50,909
void qr_reaper(51,928
void qr_hupper(52,953
void release_qworker(53,978
void qr_alarmer(54,1021
void init(55,1047
void cleanup(56,1060
void qr_reaper(58,1077
void qr_hupper(63,1135
void qr_stopper(68,1179
int main(74,1256
void init(158,3246
void cleanup(225,4814
void do_qrunner(236,4986
void qr_alarmer(410,9186
void release_qworker(416,9302

/emcsvn/emc/emcmailer/trunk/maillist/maillist.c,1803
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define PASSWORD_BODY 37,810
#define PASSWORD_SUBJECT 38,837
#define MODERATED_OPEN 43,1055
#define MODERATED_CLOSED 44,1082
#define MODERATED_MEMBER 45,1109
char *filename filename47,1137
char *sender sender48,1160
char *recip recip49,1181
int debugmode 50,1201
int unlink_msgfile 51,1220
char *configfile configfile52,1244
int sock 53,1269
char *msgid msgid54,1283
char *refdomain refdomain55,1303
char *data data56,1327
long inode 57,1346
long max_archive_size 58,1363
char *local local60,1391
char *domain domain61,1411
EmcConfig *config;config63,1433
EmcQImpl *impl;impl64,1452
int attempt 66,1469
char *tmp_dir tmp_dir67,1486
char *tmp_file tmp_file68,1508
char *tmp_file_stripped tmp_file_stripped70,1576
char *newmsgid newmsgid71,1608
char *password password72,1631
char *password_line password_line73,1654
char *msg_prefix msg_prefix75,1683
char *msg_suffix msg_suffix76,1708
char *msg_subject msg_subject77,1733
int msg_archive 78,1759
int list_moderated 79,1780
int password_type 80,1804
char *list_moderator list_moderator81,1839
char *list_modpass list_modpass82,1868
int list_useverps 83,1895
int set_replyto 84,1918
#define BUFFER_SIZE 87,1941
#define DEFAULT_MAX_ARCHIVE_SIZE 89,1976
int leave(91,2018
void  my_log_handler(95,2056
void process_hints(102,2228
void init_args(122,2597
void init_list_options(225,4715
void notify_bad_password(316,6583
void check_moderated_subject(380,7880
void check_moderated(485,10307
int check_is_list_member(622,13332
void check_member(673,14387
void format_manually(777,16652
void format_message(896,19728
long pipe_recipients(1061,24236
void archive_message(1155,26432
int main(1213,27614

/emcsvn/emc/emcmailer/trunk/confdnet.c,199
char *read_confd_net(read_confd_net11,166
int match_ips(53,952
int main(70,1259
GSList *parse_confd_net(parse_confd_net96,1747
const char *extract_quoted_string(extract_quoted_string172,3459

/emcsvn/emc/emcmailer/trunk/confdnet.h,199
#define __CONFDNET_H2,21
GSList *parse_confd_net(parse_confd_net6,62
const char *extract_quoted_string(extract_quoted_string7,114
int match_ips(8,200
char *read_confd_net(read_confd_net9,238

/emcsvn/emc/emcmailer/trunk/mfilter/mfilter.c,2421
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char *msgid msgid47,888
char *configfile configfile48,908
char *recip recip49,933
char *sender sender50,953
char *local local51,974
char *domain domain52,994
char *refdomain refdomain53,1015
int stand_alone 54,1039
int pretend 55,1060
char *data data56,1077
MYSQL mysql_sock;58,1097
char *filename filename60,1116
int debugmode 61,1139
GMimeMessage *message message63,1159
GMimeStream *stream stream64,1189
GMimeParser *parser parser65,1217
EmcConfig * config;67,1246
int redirect 69,1267
char * redirect_to 70,1285
int action_type 71,1312
char * action_option 72,1333
quarantine_violation_report quarantine_report;74,1363
EmcArray *mime_list;mime_list76,1411
#define NOTIFY_SENDER 79,1453
#define NOTIFY_RECIP 80,1477
#define NOTIFY_ADMIN 81,1500
#define RULE_ATTACH_TYPE 84,1541
#define RULE_ATTACH_SIZE 85,1568
#define RULE_SUBJECT 86,1595
#define RULE_SENDER 87,1618
#define RULE_DOMAIN 88,1640
#define MATCH_CONTAIN 92,1690
#define MATCH_NOTCONTAIN 93,1714
#define MATCH_EQUAL 94,1741
#define MATCH_NOTEQUAL 95,1763
#define MATCH_ISBIGGER 96,1789
#define ACTION_NONE 99,1829
#define ACTION_BOUNCE 100,1851
#define ACTION_DELETE 101,1875
#define ACTION_REDIRECT 102,1899
#define ACTION_STRIP 103,1925
char *escape_percents(escape_percents106,1966
void do_quar_and_log(107,2009
void do_quarantine_report(108,2033
void free_quarantine_data(109,2094
char *setActionTaken(setActionTaken110,2155
int process_new_msg 111,2194
int get_notif_data(113,2236
int send_notification(167,3500
int create_notification(284,6441
void log_report(341,7583
void execute_action(357,8116
int generic_match(445,10545
int create_list(541,13179
int do_rule(577,14014
void get_mf_profile 648,15715
void init_args(731,17974
void fudo(835,20127
char *get_attach_type(get_attach_type861,20769
int attachment_type 880,21139
int do_profile(1049,26500
int strip_attach(1397,35848
int process_new_msg 1420,36667
void init_quar_mfilter_report(1466,37692
void free_string(1481,38029
char *setActionTaken(setActionTaken1490,38157
void free_quarantine_data(1520,38587
void do_quarantine_report(1528,38777
char *escape_percents(escape_percents1549,39517
char *quarantine_message_to_bucket(quarantine_message_to_bucket1572,39866
void do_quar_and_log(1666,42064
int main(1680,42588

/emcsvn/emc/emcmailer/trunk/mfilter/mfilter.h,1141
#define SUBJ_LEN 2,1
#define SUBJ_LEN_ENC 3,21
#define QUAR_REP_MAX_SIZE 4,55
typedef struct quarantine_violation_report_t 9,211
	char * quar_filename;10,258
	const char * sender;11,281
	const char * recip;12,303
	const char * ip;13,324
	char * subject;14,342
	char * attach_name;15,359
	const char * profile_name;16,380
	int profile_number;17,408
	char * violation_type;18,429
	char * action_taken;19,453
	char * other_data;20,475
	int force_default;21,495
} quarantine_violation_report;22,515
typedef struct mf_profile_t 24,547
	int mf_num;25,577
	char * mf_desc;26,590
	char * aka_domain;27,607
	int ByAttachSize;28,627
	int ByAttachType;29,646
	int BySubject;30,665
	int BySender;31,681
	int ByDomain;32,696
	int default_apply;33,711
	int pre_apply;34,731
	char *send_as_name;send_as_name35,747
	char *send_as_email;send_as_email36,768
} mf_prof;37,790
typedef struct notif_t 39,802
	int notification_type;40,827
	char * notification_option;41,851
	char * sender_msg;42,880
	char * recip_msg;43,900
	char * admin_msg;44,919
} notif;45,938
int create_notification(47,948
int strip_attach(57,1132

/emcsvn/emc/emcmailer/trunk/remote_deliver/remote_deliver.c,515
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,194
#define BUFFER_SIZE 26,535
const char * msgid 28,565
int debugmode 29,592
char *remote_delivery_addr(remote_delivery_addr31,612
const char * recip 33,721
const char * folder 34,748
const char * maildir 35,779
const char * cdomain 36,808
const char * filename 37,856
const char * sender 38,886
const char * tmpdir 40,915
void init_args(42,946
int main(90,1773
char *remote_delivery_addr(remote_delivery_addr180,3673

/emcsvn/emc/emcmailer/trunk/quarantine/quarantine.c,264
#define _GNU_SOURCE5,49
quarantine_file *quarantine_file_new quarantine_file_new30,598
const char* quarantine_file_get_qfilename(52,1137
int quarantine_file_save 58,1249
char *escape_percents(escape_percents173,4161
int quarantine_file_logsummary(196,4576

/emcsvn/emc/emcmailer/trunk/quarantine/quarantine.h,1498
#define QUARANTINE_H_2,22
#define DEFAULT_BUCKET_DIR	4,45
#define MAX_MEGA_SUMMARY_LEN	5,93
#define SPAM_MEGA_SUMMARY_HEADER 6,128
#define SPAM_REP_SEP 8,183
#define BOX_FA_LEN 9,206
#define RULES_SUMMARY_HEADER_LEN 10,229
#define IP_LEN 11,266
#define SUBJ_LEN 12,284
#define SUBJ_LEN_ENC 13,304
#define BODY_LEN 14,338
#define QUARANTINE_CATEGORY_SPAM 16,408
#define QUARANTINE_CATEGORY_VIRUS 17,449
#define QUARANTINE_CATEGORY_MFILTER 18,492
#define QUARANTINE_CATEGORY_POLICY 19,538
#define QUARANTINE_CATEGORY_FILES 20,583
#define QUARANTINE_CATEGORY_MAIL 21,626
#define QUARANTINE_CATEGORY_VAULTSMART	22,667
typedef struct quarantine_file_t24,717
	const char *baseDir;baseDir26,752
	int bucketMinutes;27,774
	const char* originalFilename;28,794
	char* qfilename;29,825
	off_t filesize;30,843
	char* checksum;31,883
	int storageDays;32,916
	time_t time;33,934
	char server[server34,948
	const char *category;category35,967
	const char *sender;sender37,1031
	const char *recip;recip38,1052
	double total_score;39,1072
	const char *summary_header;summary_header40,1093
	const char *body;body41,1122
	const char *subject;subject42,1141
	const char *ip;ip43,1163
	EmcHash *details;details45,1181
} quarantine_file;47,1201
quarantine_file *quarantine_file_new(quarantine_file_new49,1221
const char* quarantine_file_get_qfilename(51,1282
int quarantine_file_save 53,1346
int quarantine_file_to_dir 54,1393
int quarantine_file_logsummary(55,1461

/emcsvn/emc/emcmailer/trunk/j2storage/encrypt.c,244
static char *rcsid rcsid16,495
static void use_rcsid(17,575
extern int all_ok;26,765
EMC_BOOL ENCRYPT_mime_part(35,1055
void ENCRYPTER_look_partwalker(138,4742
void DECRYPTER_look_partwalker(191,6206
EMC_BOOL DECRYPT_mime_part(244,7651

/emcsvn/emc/emcmailer/trunk/j2storage/encrypt.h,260
#define _EMC_CRYPT_H 11,203
#define GPG_PATH	19,323
#define GPG_USERID	20,356
#define GPG_PASSPHRASE	21,408
EMC_BOOL ENCRYPT_mime_part(23,484
void ENCRYPTER_look_partwalker(24,549
EMC_BOOL DECRYPT_mime_part(31,836
void DECRYPTER_look_partwalker(32,901

/emcsvn/emc/emcmailer/trunk/j2storage/util.c,808
static char *rcsid rcsid45,1688
static void use_rcsid(46,1764
#undef  VERSION 54,1927
void *util_mutex util_mutex58,2026
extern int errno;67,2076
extern emc_config_t confg;68,2094
void _pprintf_dbg(88,2540
void _printf_dbg(166,4223
void _dummy_debug(247,5911
void _dummy_pdebug(265,6261
char *UTIL_get_date(UTIL_get_date284,6661
char *UTIL_strndup(UTIL_strndup318,7544
char *UTIL_strdup(UTIL_strdup366,8518
void *UTIL_malloc(UTIL_malloc401,9175
void *UTIL_realloc(UTIL_realloc442,10208
void UTIL_free(479,10934
char *UTIL_get_rawheader(UTIL_get_rawheader514,11744
int UTIL_get_skey(573,12903
int UTIL_get_ckey(620,14120
int UTIL_nuke_imap_account(667,15303
EMC_BOOL UTIL_validate_skey(772,18180
long UTIL_get_maildir_size(822,19648
char * UTIL_get_imap_host_for_user(938,22474

/emcsvn/emc/emcmailer/trunk/j2storage/util.h,2003
#define _UTIL_H 47,1752
#define _GNU_SOURCE 50,1791
#define __USE_BSD 54,1866
#define FL_A 99,3150
#define FL_B 100,3193
#define FL_C 101,3237
#define FL_D 102,3292
#define FL_E 103,3349
#define FL_F 104,3406
#define FL_G 105,3464
#define EMC_MAX_DATETIME 108,3575
#define IMAP_BUF_SIZE 111,3627
#define BUFFER_SIZE 114,3684
#define EX_TEMPFAIL 117,3740
#define EX_OK 118,3763
typedef struct emc_config_s126,3830
  int level;128,3860
} emc_config_t;129,3898
typedef enum EMC_BOOL147,4390
  EMC_FALSE 149,4414
  EMC_TRUE150,4431
} EMC_BOOL;151,4442
#define EMC_MAX_DEBUG 153,4455
#define SIZEOF(163,4910
#  define __FUNCTION__ 168,5010
#  define __FUNCTION__ 170,5050
#define xmalloc(180,5207
#define xrealloc(181,5280
#define xfree(182,5357
#define xstrdup(183,5428
#define xstrndup(184,5467
#define xprintf(193,5583
#define xvprintf(197,5735
#define xpprintf(201,5909
#define xeprintf(205,6029
#define xepprintf(209,6178
#define xpthread_mutex_lock(218,6301
#define xpthread_mutex_unlock(219,6367
#define f_bit_set(223,6466
#define DEBUG_LOG_FILE 231,6619
#define OUTPUT_LOG_FILE 234,6719
#define dbg_printf 237,6804
#define dbg_pprintf 238,6835
#define dbg_printf 242,6895
#define dbg_pprintf 243,6927
void _printf_dbg(258,7032
void _pprintf_dbg(261,7130
void _dummy_debug(264,7224
void _dummy_pdebug(267,7323
void *UTIL_malloc(UTIL_malloc276,7466
void *UTIL_realloc(UTIL_realloc277,7543
void  UTIL_free(278,7629
char *UTIL_get_date(UTIL_get_date286,7767
char *UTIL_strndup(UTIL_strndup287,7794
char *UTIL_strdup(UTIL_strdup288,7842
char    *UTIL_get_rawheader(UTIL_get_rawheader296,7910
int      UTIL_get_skey(297,7967
int UTIL_get_ckey(298,8005
int      UTIL_nuke_imap_account(299,8038
EMC_BOOL UTIL_validate_skey(300,8104
long     UTIL_get_maildir_size(301,8182
char * UTIL_get_imap_host_for_user(302,8259
void _UTIL_pthread_mutex(309,8374
extern pthread_mutex_t util_mutex;315,8506
extern void *util_mutex;util_mutex320,8592

/emcsvn/emc/emcmailer/trunk/j2storage/j2storage.c,4066
static char *rcsid rcsid16,307
static void use_rcsid(17,388
#define _GNU_SOURCE 23,496
#define BUFFER_SIZE 59,1659
#define MAX_RETRIES 61,1691
u_int16_t quota_port 64,1791
int sock 66,1852
int debugmode 67,1897
int unlink_msgfile 68,1947
int imapport 69,1985
int all_ok 70,2033
int action_encrypt 71,2123
int uid_mail 74,2311
int gid_mail 75,2329
int perms_dir 76,2347
const char *MAIL_FOLDER MAIL_FOLDER78,2441
char *sender sender80,2544
char *recipient recipient81,2609
char *msgid msgid82,2677
char *data data83,2746
char *local local84,2784
char *domain domain85,2861
char *tmp_dir tmp_dir86,2934
char *filename filename87,2991
char *refdomain refdomain88,3058
char *queue_type queue_type89,3133
char *quota_host quota_host90,3182
char *imapserv imapserv91,3239
char *valid_domains valid_domains92,3297
char *pg_quota pg_quota93,3362
char *j2senders j2senders94,3406
char *j2billingsenders j2billingsenders95,3472
char *forcesf_domains forcesf_domains96,3552
char *send_domains_pgname_free send_domains_pgname_free97,3617
char *send_domains_pgname_paid send_domains_pgname_paid98,3703
char *urlDeliverTarget urlDeliverTarget101,3865
int aret 103,3897
int chret 104,3944
char *gpg_home gpg_home106,4018
const char *configfile configfile108,4042
emc_config_t confg;110,4103
MYSQL mysql_ro;113,4159
MYSQL mysql_rw;114,4229
MYSQL mysql_local;115,4295
EmcConfig *config;config116,4369
EmcQImpl *impl;impl117,4429
static char *J2STORAGE_http_post(J2STORAGE_http_post121,4505
static GType test_session_get_type(135,4872
static void test_session_class_init(168,5476
static char *request_passwd(request_passwd188,5932
int leave(209,6400
void J2STORAGE_fini(226,6629
void J2STORAGE_init(255,7109
EMC_BOOL J2STORAGE_decrypt_message(578,16517
EMC_BOOL J2STORAGE_encrypt_message(686,19377
int create_people_entry(825,24096
int create_hosted_mailbox(888,25977
void J2STORAGE_remove_stale_lock_file(958,28176
void J2STORAGE_free_key_value_mem(983,29046
int J2STORAGE_is_migrated(1016,29798
char * J2STORAGE_read_file_contents(1052,30794
static unsigned long int J2STORAGE_copy_file(1085,31771
int J2STORAGE_set_skey_NEW(1128,32877
int J2STORAGE_set_skey_OLD(1156,34040
int J2STORAGE_get_skey_db_NEW(1182,35009
int J2STORAGE_get_skey_db_OLD(1223,36185
char *J2STORAGE_get_box_maildir(J2STORAGE_get_box_maildir1264,37237
int J2STORAGE_get_mailbox_pg_num(1306,38436
int J2STORAGE_get_pg_num_by_name(1344,39299
int J2STORAGE_extra_send_logic(1428,41669
int J2STORAGE_connect_mysql_local(1474,43896
static int J2STORAGE_write_ocr_queue(1547,45861
static int J2STORAGE_get_mobile_notification_pref(1590,47169
static long int J2STORAGE_get_last_rowid(1625,48441
static long int J2STORAGE_get_folder_id(1647,49000
static int J2STORAGE_create_folder(1671,49595
static char *J2STORAGE_get_hostname(J2STORAGE_get_hostname1687,49900
int J2STORAGE_mark_corruption(1727,50771
static int J2STORAGE_sqlite_fix2(1757,52077
static int J2STORAGE_sql_retry(1827,55481
static int J2STORAGE_check_and_create(1883,57659
static char *J2STORAGE_get_bucket_and_filename(J2STORAGE_get_bucket_and_filename1939,59448
static char *J2STORAGE_generate_bucket(J2STORAGE_generate_bucket1965,59953
int J2STORAGE_tables_exist(1982,60348
static int J2STORAGE_maildir_deliver(2027,61769
static char* J2STORAGE_compose_json_nuke_mailbox(2135,65311
static char* J2STORAGE_compose_json_delivery(2167,66428
static uint http_write_to_string(2325,72829
static char *J2STORAGE_http_post(J2STORAGE_http_post2339,73167
static int J2STORAGE_nuke_mailbox(2416,76633
static long int J2STORAGE_api_delivery(2469,79132
static long int J2STORAGE_local_delivery(2572,84210
void parse_folder(2944,99887
void space_to_dash(2985,100932
char *J2STORAGE_get_DOC_rootfolder(J2STORAGE_get_DOC_rootfolder3002,101183
int J2STORAGE_set_DOC_rootfolder(3039,102075
int J2STORAGE_is_remote_user(3068,103086
EMC_BOOL J2STORAGE_does_string_contain(3113,104209
int mainDataOnCall(3135,104874
int main(3406,116876

/emcsvn/emc/emcmailer/trunk/j2storage/j2storage.h,571
#define _J2STORAGE_H 11,205
typedef struct _TestSession TestSession;22,341
typedef struct _TestSessionClass TestSessionClass;23,382
struct _TestSession25,434
  GMimeSession parent_object;27,456
struct _TestSessionClass30,490
  GMimeSessionClass parent_class;32,517
void test_session_finalize(36,583
static GMimeSessionClass *parent_class parent_class38,623
static void test_session_class_init(39,670
static char *request_passwd request_passwd40,727
void     J2STORAGE_init(44,853
void     J2STORAGE_fini(45,905
EMC_BOOL J2STORAGE_encrypt_mime_part(47,982

/emcsvn/emc/emcmailer/trunk/j2storage/email_encrypter.c,839
static char *rcsid rcsid14,254
static void use_rcsid(15,337
#define _GNU_SOURCE 21,445
#define BUFFER_SIZE 46,1344
int debugmode 51,1401
char *filename filename52,1448
char *outfile outfile53,1511
char *action action54,1534
int all_ok 55,1558
char *msgid msgid57,1575
emc_config_t confg;58,1595
static GType test_session_get_type(73,1924
static void test_session_class_init(106,2556
static char *request_passwd(request_passwd126,3018
int leave(147,3489
void initParams(153,3529
EMC_BOOL encrypt_mime_part(234,5083
EMC_BOOL decrypt_mime_part(335,8335
void look_partwalker_encrypter(439,11686
EMC_BOOL J2STORAGE_encrypt_message(502,13444
void look_partwalker_decrypter(602,16151
EMC_BOOL J2STORAGE_decrypt_message(658,17685
char *get_rawheader(get_rawheader754,20243
int get_skey(797,21112
int main(835,21991

/emcsvn/emc/emcmailer/trunk/emcmailer.h,1088
#define EMC_MAILER_H2,21
typedef GArray EmcArray;7,83
EmcArray * emc_array_new(8,108
int emc_array_append_val(9,185
int emc_array_append_vals(10,244
int emc_array_insert_val(11,322
int emc_array_insert_vals(12,392
int emc_array_prepend_val(13,472
int emc_array_prepend_vals(14,532
int emc_array_remove_index(15,611
void * emc_array_index(16,671
int emc_array_set_size(17,726
void emc_array_free(18,784
void * emc_array_get_data(19,843
typedef void (*user_hash_func)user_hash_func21,891
typedef GHashTable EmcHash;22,958
typedef GHashFunc EmcHashFunc;23,986
typedef GCompareFunc EmcHashCompareFunc;24,1017
EmcHash * emc_hash_new(25,1058
EmcHash * emc_hash_new_full(26,1084
void emc_hash_insert(27,1159
int emc_hash_size(28,1223
void * emc_hash_lookup(29,1260
void emc_hash_remove(30,1320
void emc_hash_foreach(31,1378
void emc_hash_destroy(32,1453
char * str_tolower(34,1495
#define EMC_MAXLINE 36,1537
typedef struct EmFd 38,1597
	int   fd;39,1619
	char *read_ptr;read_ptr40,1630
	int   read_cnt;41,1647
	char  read_buf[read_buf42,1664
} EmFd;43,1694

/emcsvn/emc/emcmailer/trunk/alworker_main.c,276
static char *rcsid rcsid1,0
static void use_rcsid(2,85
alworker_options al_opts;21,400
#define BUFFER_SIZE 23,427
EmcConfig * config 25,458
char * msgid 28,509
long host_id 29,530
int debugmode 30,549
int pretendmode 31,568
int outboundmode 32,589
int main(34,612

/emcsvn/emc/emcmailer/trunk/bounce/bounce.c,461
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
char * filename 21,424
char * sender 22,448
char * recip 23,470
int debugmode 24,491
int unlink_msgfile 25,510
char * configfile 26,534
int sock 27,560
char * msgid 28,574
char * refdomain 29,595
char * data 30,620
char * local 32,641
char * domain 33,662
int outbound 35,685
#define BUFFER_SIZE 37,704
int leave(39,734
void init_args(44,777
int main(138,2875

/emcsvn/emc/emcmailer/trunk/cidr.c,405
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
unsigned long int endian_swap(11,223
gboolean ip_in_cidr 13,276
unsigned long int endian_swap(43,1078
gboolean ip_in_range 53,1253
void cidr_free(68,1665
cidr_s *cidr_new cidr_new73,1712
char *cidr_to_str cidr_to_str80,1818
int cidr_parse_str 89,1975
int ip_range_parse_str 112,2661
int octets_to_ip 169,4118

/emcsvn/emc/emcmailer/trunk/cidr.h,484
#define __CIDR_H__2,19
typedef struct cidr_t 12,188
    struct in_addr network;13,212
    int masklen;14,240
} cidr_s;15,257
typedef struct ip_range_t 17,268
	struct in_addr start_ip;18,296
	struct in_addr end_ip;19,322
} ip_range_s;20,346
gboolean ip_in_cidr 22,361
gboolean ip_in_range 23,417
cidr_s *cidr_new cidr_new25,493
void cidr_free 26,514
char *cidr_to_str cidr_to_str27,545
int cidr_parse_str 28,579
int ip_range_parse_str 29,639
int octets_to_ip 30,715

/emcsvn/emc/emcmailer/trunk/qworker.c,1141
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
extern int debugmode;33,671
extern int pretendmode;34,693
int outboundmode;35,717
extern const char * msgid;36,735
extern long host_id;37,762
extern int agentpid;39,784
extern EmcConfig * config;40,805
extern qworker_options qe_opts;41,832
#define BUFFER_SIZE 43,865
EmcHash * alworkers 45,895
long qwtimeout 46,923
int bail 47,943
void process_alists(50,984
void qw_leave_well(51,1007
int process_externals(52,1067
int process_hosted(53,1092
void release_alworker(54,1114
void qw_reaper(55,1158
void qw_alarmer(56,1183
void ex_fail_setter(57,1209
void l_fail_setter(58,1266
alworker_options al_opts;61,1390
ldeliver_options ldeliver_opts;62,1416
exdeliver_options exdeliver_opts;63,1448
int ex_retries 64,1482
int l_retries 65,1502
void do_qworker(67,1522
void process_alists(222,5463
void qw_leave_well(313,7728
int process_externals(396,9831
int process_hosted(697,17226
void release_alworker(1068,25811
void qw_reaper(1132,27208
void qw_alarmer(1136,27266
void ex_fail_setter(1142,27447
void l_fail_setter(1152,27853

/emcsvn/emc/emcmailer/trunk/qworker.h,261
#define EMC_QWORKER2,20
typedef struct qworker_options_t 6,62
	char * configfile;7,97
	long qnum;8,117
	char * qestream;9,129
	EmcQEntry * qentry;10,147
	EmcQImpl * impl;11,168
	char * queue_type;12,186
} qworker_options;13,206
void do_qworker(15,226

/emcsvn/emc/emcmailer/trunk/common.c,1150
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define _CHECK_BAD_SYMBOL 23,452
int install_impl(27,539
void fatal(454,16691
int is_sender_valid(459,16783
int connect_to_aka_db_rw(505,17505
int connect_to_aka_db(575,18963
char *_mysql_quote(_mysql_quote651,20590
char *mysql_quote(mysql_quote669,20925
int emc_query(674,21018
char * str_tolower(688,21375
void md5hash(712,21668
void hmacHash 735,22065
EmcArray * emc_array_new(766,22690
int emc_array_append_val(771,22842
int emc_array_append_vals(775,22953
int emc_array_insert_val(779,23080
int emc_array_insert_vals(783,23209
int emc_array_prepend_val(787,23354
int emc_array_prepend_vals(791,23467
int emc_array_remove_index(795,23596
void * emc_array_index(799,23711
int emc_array_set_size(805,23863
void emc_array_free(809,23975
void * emc_array_get_data(813,24076
EmcHash * emc_hash_new_full(820,24178
EmcHash * emc_hash_new(825,24322
void emc_hash_insert(830,24427
int emc_hash_size(834,24535
void * emc_hash_lookup(838,24611
void emc_hash_remove(842,24717
void emc_hash_foreach(846,24808
void emc_hash_destroy(850,24937

/emcsvn/emc/emcmailer/trunk/common.h,12643
#define EMC_COMMON_H2,21
typedef void * EmcQImpl;13,199
typedef void * EmcQueue;14,224
typedef void * EmcQEntry;15,249
typedef void * EmcAList;16,275
typedef void * EmcAEntry;17,300
typedef void * EmcHeader;18,326
typedef void * EmcHint;19,352
typedef void * EmcHostedEntry;20,376
typedef void * EmcExternalEntry;21,407
typedef EmcQEntry        EmcQEntryArray;23,441
typedef EmcAList         EmcAListArray;24,482
typedef EmcAEntry        EmcAEntryArray;25,522
typedef EmcHeader        EmcHeaderArray;26,563
typedef EmcHostedEntry   EmcHostedEntryArray;27,604
typedef EmcExternalEntry EmcExternalEntryArray;28,650
EmcQImpl *   (*init_impl)init_impl31,734
EmcQImpl *   (*init_impl2)init_impl232,797
MYSQL *      (*impl_get_akadb)impl_get_akadb33,879
EmcQEntry  * (*qentry_dup)qentry_dup37,950
const char * (*qentry_get_sender)qentry_get_sender38,1006
const char * (*qentry_get_recipient)qentry_get_recipient39,1062
const char * (*qentry_get_message_id)qentry_get_message_id40,1118
long         (*qentry_get_qnum)qentry_get_qnum41,1174
long         (*qentry_get_inode)qentry_get_inode42,1230
const char * (*qentry_get_status)qentry_get_status43,1286
int          (*qentry_get_lock)qentry_get_lock44,1342
int          (*qentry_is_outbound)qentry_is_outbound45,1398
long         (*qentry_get_time)qentry_get_time46,1454
long         (*qentry_get_last_retry)qentry_get_last_retry47,1510
const char * (*qentry_get_filename)qentry_get_filename48,1566
const char * (*qentry_get_host)qentry_get_host49,1622
void         (*qentry_set_impl)qentry_set_impl50,1678
int          (*qentry_remove)qentry_remove51,1746
char *       (*qentry_serialize)qentry_serialize52,1802
EmcQEntry*   (*qentry_deserialize)qentry_deserialize53,1868
EmcQEntry*   (*qentry_create)qentry_create55,1936
EmcQEntry*   (*qentry_create_with_data)qentry_create_with_data61,2126
EmcQEntry*   (*qentry_create_real)qentry_create_real67,2329
EmcQEntry*   (*qentry_get)qentry_get73,2532
int          (*qentry_lock)qentry_lock74,2594
int          (*qentry_unlock)qentry_unlock75,2650
int          (*qentry_set_status)qentry_set_status76,2706
int          (*qentry_get_pending)qentry_get_pending77,2776
int          (*qentry_get_locked)qentry_get_locked78,2864
int          (*qentry_finished)qentry_finished79,2957
EmcQEntry *  (*qentry_get_at)qentry_get_at80,3021
void         (*qentry_free_list)qentry_free_list81,3085
void         (*qentry_free)qentry_free82,3150
int          (*qentry_get_processing_status)qentry_get_processing_status83,3207
long         (*alist_get_qnum)alist_get_qnum88,3297
long         (*alist_get_alnum)alist_get_alnum89,3359
const char * (*alist_get_message_id)alist_get_message_id90,3421
long         (*alist_get_inode)alist_get_inode91,3483
const char * (*alist_get_filename)alist_get_filename92,3545
const char * (*alist_get_recipient)alist_get_recipient93,3607
const char * (*alist_get_sender)alist_get_sender94,3669
int          (*alist_get_level)alist_get_level95,3731
int          (*alist_get_allow_ext)alist_get_allow_ext96,3793
const char * (*alist_get_data)alist_get_data97,3855
const char * (*alist_get_status)alist_get_status98,3917
int          (*alist_get_lock)alist_get_lock99,3979
MYSQL*       (*alist_get_akadb)alist_get_akadb100,4041
void         (*alist_set_impl)alist_set_impl101,4103
EmcAList *   (*alist_create)alist_create102,4170
EmcAList *   (*alist_clone)alist_clone109,4416
char *       (*alist_serialize)alist_serialize113,4567
EmcAList *   (*alist_deserialize)alist_deserialize114,4644
EmcAList *   (*alist_get_by_hosted)alist_get_by_hosted115,4727
int          (*alist_lock)alist_lock117,4828
int          (*alist_unlock)alist_unlock118,4890
void         (*alist_set_filename)alist_set_filename119,4952
int          (*alist_set_status)alist_set_status120,5036
int          (*alist_set_allow_ext)alist_set_allow_ext121,5119
int          (*alist_get_processing_status)alist_get_processing_status122,5192
int          (*alist_get_pending)alist_get_pending123,5256
int          (*alist_finished)alist_finished124,5342
EmcAList *   (*alist_get_at)alist_get_at125,5405
int          (*alist_message_modified)alist_message_modified126,5476
int          (*alist_remove_all_aentries)alist_remove_all_aentries129,5600
int          (*alist_max_itemnum)alist_max_itemnum130,5662
void         (*alist_free_list)alist_free_list131,5724
void         (*alist_free)alist_free132,5796
long         (*aentry_get_qnum)aentry_get_qnum137,5874
long         (*aentry_get_alnum)aentry_get_alnum138,5938
const char * (*aentry_get_message_id)aentry_get_message_id139,6002
const char * (*aentry_get_recipient)aentry_get_recipient140,6066
const char * (*aentry_get_user)aentry_get_user141,6130
const char * (*aentry_get_domain)aentry_get_domain142,6194
const char * (*aentry_get_sender)aentry_get_sender143,6258
int          (*aentry_get_itemnum)aentry_get_itemnum144,6322
const char * (*aentry_get_action)aentry_get_action145,6386
const char * (*aentry_get_data)aentry_get_data146,6450
const char * (*aentry_get_status)aentry_get_status147,6514
int          (*aentry_get_retry_times)aentry_get_retry_times148,6578
long         (*aentry_get_last_retry)aentry_get_last_retry149,6642
const char * (*aentry_last_error)aentry_last_error150,6706
EmcAEntry *  (*aentry_create)aentry_create152,6771
int          (*aentry_get_pending)aentry_get_pending158,7001
EmcAEntry *  (*aentry_get_at)aentry_get_at159,7076
void         (*aentry_free_list)aentry_free_list160,7148
int          (*aentry_set_error)aentry_set_error161,7221
int          (*aentry_touch)aentry_touch162,7292
int          (*aentry_set_status)aentry_set_status163,7349
int          (*aentry_stop_after)aentry_stop_after164,7420
int          (*aentry_hold_after)aentry_hold_after165,7484
void         (*aentry_free)aentry_free166,7548
long         (*header_get_qnum)header_get_qnum170,7627
long         (*header_get_alnum)header_get_alnum171,7692
long         (*header_get_inode)header_get_inode172,7757
const char * (*header_get_filename)header_get_filename173,7822
const char * (*header_get_header)header_get_header174,7887
EmcHeader *  (*header_create)header_create175,7952
int          (*header_get_pending)header_get_pending177,8055
EmcHeader *  (*header_get_like)header_get_like180,8191
EmcHeader *  (*header_get_at)header_get_at183,8327
void         (*header_free_list)header_free_list184,8400
void         (*header_free)header_free185,8474
const char * (*hint_get_message_id)hint_get_message_id189,8552
long         (*hint_get_inode)hint_get_inode190,8612
const char * (*hint_get_agent)hint_get_agent191,8672
const char * (*hint_get_key)hint_get_key192,8732
const char * (*hint_get_hint)hint_get_hint193,8792
EmcHint *    (*hint_create)hint_create194,8852
EmcHint *    (*hint_get)hint_get200,9076
long         (*hosted_get_qnum)hosted_get_qnum207,9253
long         (*hosted_get_alnum)hosted_get_alnum208,9322
const char * (*hosted_get_message_id)hosted_get_message_id209,9391
const char * (*hosted_get_recipient)hosted_get_recipient210,9460
const char * (*hosted_get_sender)hosted_get_sender211,9529
long         (*hosted_get_inode)hosted_get_inode212,9598
const char * (*hosted_get_filename)hosted_get_filename213,9667
const char * (*hosted_get_data)hosted_get_data214,9736
const char * (*hosted_get_status)hosted_get_status215,9805
int          (*hosted_get_retry_times)hosted_get_retry_times216,9874
long         (*hosted_get_last_retry)hosted_get_last_retry217,9943
const char * (*hosted_get_last_error)hosted_get_last_error218,10012
EmcHostedEntry * (*hosted_create)hosted_create219,10081
int          (*hosted_set_error)hosted_set_error225,10312
int          (*hosted_touch)hosted_touch226,10387
int          (*hosted_set_status)hosted_set_status227,10462
int          (*hosted_get_pending)hosted_get_pending228,10537
EmcHostedEntry * (*hosted_get_at)hosted_get_at229,10615
void         (*hosted_free_list)hosted_free_list230,10692
void         (*hosted_free)hosted_free231,10770
void         (*hosted_remove)hosted_remove232,10839
long         (*external_get_qnum)external_get_qnum236,10925
long         (*external_get_alnum)external_get_alnum237,10998
const char * (*external_get_message_id)external_get_message_id238,11071
const char * (*external_get_recipient)external_get_recipient239,11144
const char * (*external_get_sender)external_get_sender240,11217
long         (*external_get_inode)external_get_inode241,11290
const char * (*external_get_filename)external_get_filename242,11363
const char * (*external_get_data)external_get_data243,11436
const char * (*external_get_status)external_get_status244,11509
const char * (*external_get_rhost)external_get_rhost245,11582
int          (*external_get_retry_times)external_get_retry_times246,11655
long         (*external_get_last_retry)external_get_last_retry247,11728
const char * (*external_get_last_error)external_get_last_error248,11801
EmcExternalEntry * (*external_create)external_create249,11874
int          (*external_set_error)external_set_error256,12139
int          (*external_set_status)external_set_status257,12216
int          (*external_get_pending)external_get_pending258,12293
EmcExternalEntry * (*external_get_at)external_get_at259,12373
void         (*external_free_list)external_free_list260,12452
void         (*external_free)external_free261,12532
void         (*external_remove)external_remove262,12605
int          (*message_store)message_store266,12694
int          (*message_remove)message_remove273,12921
int          (*message_merge_headers)message_merge_headers275,13006
int          (*message_merge_headers_escape)message_merge_headers_escape279,13170
char *       (*message_merge_headers_as_string)message_merge_headers_as_string284,13367
char *       (*message_create)message_create287,13512
char *       (*message_create_with_data)message_create_with_data295,13823
char *       (*message_create_outbound_with_data)message_create_outbound_with_data304,14161
int          (*misc_sender_valid)misc_sender_valid318,14523
char *       (*misc_get_unique_id)misc_get_unique_id319,14588
char *       (*misc_get_localname)misc_get_localname320,14666
char *       (*misc_get_domain)misc_get_domain321,14732
int          (*build_expand_alist)build_expand_alist325,14812
int          (*build_expand_outbound_alist)build_expand_outbound_alist326,14874
int          (*build_expand_forward)build_expand_forward327,14939
int          (*build_expand_forward_bounce)build_expand_forward_bounce328,15020
int          (*build_expand_shcal)build_expand_shcal329,15103
int          (*build_expand_hosted)build_expand_hosted330,15184
int          (*build_expand_external)build_expand_external331,15265
int          (*build_expand_relay)build_expand_relay332,15346
int          (*build_is_external_domain)build_is_external_domain333,15427
int          (*build_is_external_address)build_is_external_address334,15502
int          (*build_do_special_addresses)build_do_special_addresses335,15577
int          (*admin_get_all_entries)admin_get_all_entries339,15653
int          (*admin_get_pending_entries)admin_get_pending_entries341,15754
int          (*admin_get_frozen_entries)admin_get_frozen_entries343,15855
int          (*admin_get_failed_entries)admin_get_failed_entries345,15956
int          (*admin_lock_qentry)admin_lock_qentry347,16057
int          (*admin_unlock_qentry)admin_unlock_qentry349,16153
int          (*admin_get_locked_entries)admin_get_locked_entries350,16234
int          (*admin_get_qentry_info)admin_get_qentry_info352,16336
int          (*admin_set_action_status)admin_set_action_status361,16699
int          (*admin_get_action_entries)admin_get_action_entries366,16902
int          (*admin_reset_failed_qentry)admin_reset_failed_qentry370,17072
int          (*admin_thaw_qentry)admin_thaw_qentry371,17152
EmcQEntry *  (*admin_get_qentry)admin_get_qentry372,17232
int          (*admin_set_qentry_status)admin_set_qentry_status373,17312
int          (*admin_queue_rebuild)admin_queue_rebuild376,17443
int connect_to_aka_db(382,17516
int connect_to_aka_db_rw(383,17575
char *mysql_quote(mysql_quote384,17637
char *_mysql_quote(_mysql_quote385,17689
int emc_query(386,17742
void md5hash(387,17790
void hmacHash 388,17853
int install_impl(389,17943
void fatal(390,17998
int is_sender_valid(391,18028

/emcsvn/emc/emcmailer/trunk/config.c,705
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define DEFAULT_HASH_SIZE 19,368
static int do_config_section(21,400
static int do_config_param(22,449
EmcConfig *config_init_internal(config_init_internal23,516
static char *cursec cursec26,605
static hash *curhash curhash27,630
static EmcConfig *dynamic dynamic28,659
int is_sane(30,694
EmcConfig *config_init(config_init139,3727
EmcConfig *config_init_internal(config_init_internal148,3880
const char *config_get_filename(config_get_filename179,4551
char *config_getopt(config_getopt184,4633
void config_destroy(195,4855
static int do_config_section(205,5003
static int do_config_param(212,5108

/emcsvn/emc/emcmailer/trunk/emclib/realmtree.c,244
static char *rcsid rcsid1,0
static void use_rcsid(2,31
#define _GNU_SOURCE7,94
char *realm_get_parent(realm_get_parent22,371
char **realmpath_get_parents(realmpath_get_parents88,1580
char **realm_get_parents(realm_get_parents172,3024

/emcsvn/emc/emcmailer/trunk/emclib/realmtree.h,127
#define _EMC_REALMTREE_H_2,26
char *realm_get_parent(realm_get_parent6,78
char **realm_get_parents(realm_get_parents8,122

/emcsvn/emc/emcmailer/trunk/emclib/emc_services.c,267
static char *rcsid rcsid6,86
static void use_rcsid(8,170
#define _GNU_SOURCE18,282
GArray* db_load_services(36,768
gboolean realm_is_subscribed(38,814
GArray* get_emc_services(111,2118
gboolean emcservice_is_active(139,2707
GArray* db_load_services(143,2799

/emcsvn/emc/emcmailer/trunk/emclib/emc_services.h,858
#define _EMC_SERVICES_H_7,111
typedef struct emcService_t9,137
	int serviceNum;11,167
	char *name;name12,184
	char *shortname;shortname13,197
	char *desc;desc14,215
    gboolean active;15,228
    gboolean cascade;16,249
} EmcService;17,271
#define SERVICE_FORWARDING 19,286
#define SERVICE_AUTORESPONDER 20,317
#define SERVICE_HOSTED 21,350
#define SERVICE_FILTERING	22,378
#define SERVICE_VIRUS	23,407
#define SERVICE_SPAM	24,433
#define SERVICE_OUTBOUND_RELAY 25,458
#define SERVICE_HBF 26,493
#define SERVICE_VAULTSMART 27,519
#define SERVICE_POLICYSMART	28,551
#define SERVICE_CYPHERSMART	29,583
#define SERVICE_SPOOL	30,615
#define SERVICE_FUSEMAIL	31,642
#define SERVICE_EXCHANGE	33,672
gboolean is_subscribed(35,703
gboolean emcservice_is_active(36,762
GArray* get_emc_services(37,814
gboolean realm_is_subscribed(38,859

/emcsvn/emc/emcmailer/trunk/emclib/edate.c,66
GDate *e_parse_date(e_parse_date1,0
time_t e_parse_time(45,967

/emcsvn/emc/emcmailer/trunk/emclib/emclib.h,64
#define _EMC_LIB_H_2,20
#define FALSE 5,55
#define TRUE 6,71

/emcsvn/emc/emcmailer/trunk/emclib/emime.c,489
#define _GNU_SOURCE5,49
const char* demime_header_get_value(20,343
MsgHeader *demime_get_msg_header_file(demime_get_msg_header_file25,416
GArray* headersArray 54,966
GArray* demime_get_headers_file(56,996
const char *demime_get_header_file(demime_get_header_file66,1239
void demime_header_set_value(88,1670
void demime_save_with_new_headers 94,1786
char *demime_get_raw_headers(demime_get_raw_headers144,2721
GArray *demime_parse_raw_headers(demime_parse_raw_headers170,3181

/emcsvn/emc/emcmailer/trunk/emclib/emime.h,556
#define _EMC_MIME2,18
typedef struct MsgHeader_t4,37
	char* name;6,66
	char* value;7,79
	char* raw;8,93
} MsgHeader;9,105
GArray* demime_get_headers_file(11,119
const char *demime_get_header_file(demime_get_header_file12,174
char *demime_get_raw_headers(demime_get_raw_headers13,252
GArray *demime_parse_raw_headers(demime_parse_raw_headers14,304
const char* demime_header_get_value(15,362
void demime_header_set_value(16,413
MsgHeader *demime_get_msg_header_file(demime_get_msg_header_file18,480
void demime_save_with_new_headers 19,561

/emcsvn/emc/emcmailer/trunk/emclib/echecksum.c,237
#define _GNU_SOURCE5,49
#define FILE_READ_BUFFER_SIZE 15,219
char* e_file_checksum(17,269
char *e_md5_checksum_file(e_md5_checksum_file19,344
char *e_sha256_checksum_file(e_sha256_checksum_file24,448
char* e_file_checksum(29,558

/emcsvn/emc/emcmailer/trunk/emclib/echecksum.h,137
#define _EMC_CHECKSUM2,22
char *e_md5_checksum_file(e_md5_checksum_file4,45
char *e_sha256_checksum_file(e_sha256_checksum_file5,94

/emcsvn/emc/emcmailer/trunk/emclib/epcre.c,142
pcre *parse_pcre(parse_pcre1,0
regex_t *parse_regex(parse_regex71,1371
char* e_pcre_replace_with 87,1674
char * e_pcre_replace 138,2716

/emcsvn/emc/emcmailer/trunk/emclib/epcre.h,152
#define _EMC_PCRE2,18
pcre *parse_pcre(parse_pcre4,37
char *e_pcre_replace_with e_pcre_replace_with5,97
char *e_pcre_replace e_pcre_replace6,196

/emcsvn/emc/emcmailer/trunk/emclib/estdio.c,69
#define _GNU_SOURCE5,49
int e_mkdir 24,403
int e_file_copy 42,769

/emcsvn/emc/emcmailer/trunk/emclib/estdio.h,64
#define _EMC_STDIO2,19
int e_mkdir 4,39
int e_file_copy 5,74

/emcsvn/emc/emcmailer/trunk/emclib/elog.c,757
#define _GNU_SOURCE5,49
#define REPORT_ERROR 21,361
#define REPORT_DEBUG 22,384
#define REPORT_AGENT 23,407
#define REPORT_STATS 24,430
#define REPORT_INFO 25,453
#define DEBUG_SYSLOG 27,477
#define DEBUG_STDOUT 28,506
#define DEBUG_RULE 29,535
#define DEBUG_FINGERPRINT 30,564
#define DEBUG_CONFIG 31,593
#define DEBUG_WARN 32,623
#define DEBUG_FAIL 33,653
#define DEBUG_INFO 34,683
#define DEBUG_RESULT 35,714
#define DEBUG_PARSE_DOM 36,745
#define DEBUG_MAX 37,776
extern const char *msgid;msgid39,808
extern int debugmode;40,834
void e_log_message(41,856
void e_log_error(43,909
void e_log_warn(56,1181
void e_log_info(69,1452
void e_log_debug(83,1722
void e_log_trace(97,1994
void e_log_message(110,2265
void e_log(123,2672

/emcsvn/emc/emcmailer/trunk/emclib/elog.h,267
	EMC_LOG_ERROR,3,16
	EMC_LOG_WARN,4,32
	EMC_LOG_INFO,5,47
	EMC_LOG_DEBUG,6,62
	EMC_LOG_TRACE,7,78
} EMC_LOG_LEVEL;8,94
void e_log 10,112
void e_log_error(12,178
void e_log_warn(13,227
void e_log_info(14,275
void e_log_debug(15,323
void e_log_trace(16,372

/emcsvn/emc/emcmailer/trunk/emclib/estring.c,281
static char *rcsid rcsid1,0
static void use_rcsid(2,31
char *e_strdup(e_strdup14,266
void *e_malloc(e_malloc22,444
int e_asprintf(34,681
void e_chomp(49,974
int e_strpos(68,1224
int e_strrpos(79,1389
char *e_str_replace(e_str_replace89,1524
int e_is_numeric(119,2067

/emcsvn/emc/emcmailer/trunk/emclib/estring.h,245
#define _EMC_STRING_H_2,23
char *e_str_replace(e_str_replace8,129
int e_strpos(10,209
int e_strrpos(11,260
int e_asprintf(13,306
char *e_strdup(e_strdup14,362
void *e_malloc(e_malloc15,398
void e_chomp(16,441
int e_is_numeric(17,472

/emcsvn/emc/emcmailer/trunk/espamc/espamc.c,3067
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
typedef enum ComMode_t 38,768
	COM_SOCKET_MODE 39,793
	COM_FILE_MODE 40,815
} ComMode;41,835
#define ESPAMC_VERSION 43,847
#define DEFAULT_TMP_DIR 45,877
#define DEFAULT_PORT 46,908
char *get_rawheader(get_rawheader48,936
int get_mysql_socket(49,987
int process_hints(50,1102
int has_custom_spam_settings(51,1134
const char *get_last2_dirs(get_last2_dirs52,1203
void show_usage(53,1247
int do_args(54,1287
char *stdin_to_tmp(stdin_to_tmp55,1325
char *socket_to_tmp(socket_to_tmp56,1387
void init_spam_report(61,1490
void do_one_line_spam_report(62,1542
void free_key_value_mem(63,1601
int process_response(64,1669
void process_config(66,1764
AllowDenyList allow_list;68,1792
AllowDenyList deny_list;69,1818
EmcConfig * gConfig;71,1844
EmcQImpl *	gImpl;72,1865
char *gFilename gFilename74,1884
char *gCfgFilename gCfgFilename75,1908
char *gRecip gRecip76,1935
char *gDomain gDomain77,1956
const char *hintRealm hintRealm78,1978
char *gSender gSender79,2008
char *fromAddr fromAddr80,2030
char *gPolicyRealm gPolicyRealm82,2102
char *gData gData83,2129
char *msgid msgid84,2149
BOOL gNoHints 85,2169
int  debugmode 86,2192
char *gTmpDir gTmpDir87,2212
BOOL gPretend 88,2234
long gMaxSize 89,2257
char *gPort gPort91,2295
char *gHost gHost92,2315
char *escape_percents(escape_percents94,2336
int get_storage_days(95,2379
char *get_spam_folder get_spam_folder96,2421
ComMode	gComMode 98,2466
#define DEFAULT_CONFIG_FILENAME 100,2503
#define CONTENT_LENGTH_HEADER	102,2559
#define RECIPIENT_HEADER	104,2609
#define SENDER_HEADER	105,2649
#define MESSAGE_ID_HEADER	106,2684
#define FILENAME_HEADER	107,2726
#define ADD_HEADER_HEADER	109,2766
#define STOP_MESSAGE_HEADER	110,2808
#define ADD_RECIPIENT_HEADER	111,2854
#define MODIFIED_MESSAGE_HEADER	112,2901
#define SCORE_HEADER 114,2955
#define THRESHOLD_HEADER 115,3002
#define IP_HEADER 117,3054
#define QUARANTINE_HEADER 119,3101
#define QUARANTINE_SUM_HEADER 120,3148
#define SPAM_REPORT_HEADER 122,3204
#define POLICY_REALM_HEADER 124,3253
#define STATUS_HEADER	125,3299
#define SUBJECT_HEADER 126,3334
#define CRLF 128,3372
#define CRLF_LEN 129,3392
#define LINE_BUFFER_SIZE	131,3423
char gLineBuffer[gLineBuffer132,3468
void show_usage(135,3506
int do_args(148,3788
#define TMPBUF 237,5541
char *stdin_to_tmp(stdin_to_tmp239,5566
char *socket_to_tmp(socket_to_tmp274,6325
void init_spam_report(313,7137
void do_one_line_spam_report(324,7366
const char *get_last2_dirs(get_last2_dirs410,9618
int process_response(449,10294
char *escape_percents(escape_percents876,20605
void process_config(899,20956
int process_hints(963,22463
int get_mysql_socket(1109,25559
int main(1134,26037
int has_custom_spam_settings(1668,41538
#define LONG_REPORT_LINE 1704,42660
#define SHORT_REPORT_LINE 1705,42716
char *get_rawheader(get_rawheader1707,42760
int get_storage_days 1734,43258
char *get_spam_folder get_spam_folder1790,44364

/emcsvn/emc/emcmailer/trunk/espamc/misc.c,412
static char *rcsid rcsid1,0
static void use_rcsid(2,76
int espamc_tcp_connect(17,416
int espamc_Tcp_connect(61,1527
ssize_t espamc_Readline(66,1632
ssize_t espamc_Readn(77,1835
void espamc_Writen(88,2030
void espamc_Write(96,2205
inline const char *find_next_rn(find_next_rn107,2431
inline const char * find_end_header(135,2832
#define CURRENT_BUFFER_SIZE 176,3521
char * Get_header_value(178,3575

/emcsvn/emc/emcmailer/trunk/espamc/misc.h,324
#define __espamc_misc_h2,24
#define BOOL 26,445
#define TRUE 30,483
#define FALSE 31,498
char *mysql_quote(mysql_quote34,522
int espamc_Tcp_connect(35,574
ssize_t espamc_Readline(36,634
ssize_t espamc_Readn(37,693
void espamc_Writen(38,750
void espamc_Write(39,811
char *Get_header_value(Get_header_value40,871

/emcsvn/emc/emcmailer/trunk/espamc/whitelist.c,777
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE8,190
#define D(16,321
#define D(18,342
extern int debugmode;21,363
void free_key_value_mem(26,451
int init_ad_list_struct(28,520
void free_key_value_mem(46,923
void destroy_ad_list_struct(65,1279
const char *getDomain(getDomain90,1911
int get_list_sql_filter(103,2127
int load_allow_lists(269,6856
int load_deny_list(461,13231
int whitelisted(644,19558
int blacklisted(665,19866
int check_lists(673,20048
char *get_customer_by_domain(get_customer_by_domain919,26674
int load_forwarding_alias_reverse(971,27929
char *get_forwarding_alias(get_forwarding_alias1050,29959
int load_customer_allow_domains(1104,31291
char *get_customer_wide_allow(get_customer_wide_allow1227,34472

/emcsvn/emc/emcmailer/trunk/espamc/whitelist.h,829
#define EMC_ESPAMC_WHITELIST_H2,31
typedef struct AllowDenyList_t 10,157
	GHashTable *global;global11,190
	GHashTable *domain;domain12,211
	GHashTable *user;user13,232
} AllowDenyList;14,251
#define WL_ERROR 16,269
#define WL_NO_HITS 17,294
#define WL_HIT_ALLOW 18,318
#define WL_HIT_DENY 19,342
#define WL_HIT_DOMAIN 20,366
#define WL_HIT_USER 21,390
char *get_customer_by_domain(get_customer_by_domain23,415
char *get_forwarding_alias(get_forwarding_alias27,479
int load_customer_allow_domains(31,539
char *get_customer_wide_allow(get_customer_wide_allow40,699
int load_forwarding_alias_reverse(44,764
int load_allow_lists(53,927
int load_deny_list(62,1100
int check_lists(71,1270
int init_ad_list_struct(80,1439
void destroy_ad_list_struct(82,1483
int whitelisted(84,1531
int blacklisted(88,1589

/emcsvn/emc/emcmailer/trunk/espamc/whitetest.c,173
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define DEBUG 15,298
char *msgid msgid17,315
int debugmode 18,337
void printHashEntry(20,357
int main(25,488

/emcsvn/emc/emcmailer/trunk/espamc/spam_central.c,356
static char *rcsid rcsid1,0
static void use_rcsid(2,84
const char * root_dir 31,614
#define BUFFER_SIZE 33,645
extern char * msgid;35,675
extern int debugmode;36,696
void extract_msg_info(38,719
char *quarantine_spam_to_bucket(quarantine_spam_to_bucket102,2133
int quarantine_spam_to_dir(205,4581
int quarantine_spam_from_hints_to_dir(378,8850

/emcsvn/emc/emcmailer/trunk/espamc/spam_central.h,1130
#define ESPAMC_SPAM_CENTRAL_H2,30
#define MEGA_SUMMARY_LEN 12,195
#define MEGA_SUMMARY_HEADER 13,225
#define X_SPAM_SUMMARY_HEADER 14,273
#define SPAM_REP_SEP 15,320
#define BOX_FA_LEN 16,343
#define RULES_SUMMARY_HEADER_LEN 17,366
#define IP_LEN 18,403
#define SUBJ_LEN 19,421
#define SUBJ_LEN_ENC 20,442
#define BODY_LEN 21,476
typedef struct quarantine_spam_report_t 24,547
	const char * quar_filename;25,589
	double total_score;26,618
	const char * sender;27,639
	const char * recip;28,661
	const char * summary_header;29,682
	const char * ip;30,712
	const char * subject;31,730
	char * body;32,753
} quarantine_spam_report;33,767
typedef struct quarantine_params_t 36,795
	EmcQImpl * impl;37,832
	EmcConfig * config;38,850
	const char * recip;39,871
	const char * sender;40,892
	const char * msgfile;41,914
	const char * preview;42,937
	const char * score_text;43,960
	double score;44,986
	int storage_days;45,1001
} quarantine_params;46,1020
int quarantine_spam_to_dir(48,1042
int quarantine_spam_from_hints_to_dir(49,1097
char *quarantine_spam_to_bucket(quarantine_spam_to_bucket55,1252

/emcsvn/emc/emcmailer/trunk/espamc/strip_html.c,773
static char *rcsid rcsid1,0
static void use_rcsid(2,82
typedef struct HtmlBuffer_t 21,419
	const char * buffer;22,449
	const char * pos;23,471
	size_t len;24,490
} HtmlBuffer;25,503
#define OPENTAG 27,518
#define ENDTAG 28,538
#define TOKEN_DELIM 30,558
typedef enum TagType_t 32,583
	UNKNOWN_TAG,33,608
	IMG_TAG,34,622
	A_TAG,35,632
	FONT_TAG,36,640
	COMMENT_TAG,37,651
} TagType;38,665
#define BUFLEN1 40,677
#define BUFLEN2 41,725
#define SECURE_BUFFER 42,776
void append_html_token(44,832
void append_text_token(60,1242
void eat_space(76,1586
TagType get_tag_type(86,1718
int parse_tag_contents(129,2812
int parse_tag_property(146,3170
int parse_comment_tag(194,4191
int parse_tag(214,4655
int parse_text(301,6617
int strip_html(357,7704

/emcsvn/emc/emcmailer/trunk/espamc/strip_html.h,456
#define __strip_html2,21
typedef struct HtmlOptions_t 6,62
	BOOL delete_spaces;7,93
	BOOL save_img;8,114
	BOOL save_href;9,130
	BOOL save_comments;10,147
	BOOL save_img_contents;11,168
	BOOL save_anchor_contents;12,193
	BOOL save_font_contents;13,221
	int num_imgs;15,249
	int num_anchors;16,264
	int num_comments;17,282
	int num_fonts;18,301
	int num_tags;19,317
	long total_html_tag_len;20,332
} HtmlOptions;21,358
int strip_html(23,374

/emcsvn/emc/emcmailer/trunk/hash.c,569
static char *rcsid rcsid1,0
static void use_rcsid(2,76
enum { ht_num_primes 18,311
static unsigned long ht_prime_list[ht_prime_list20,341
inline void * ht_val(30,724
inline char *ht_key(ht_key36,827
inline int ht_hashcode(42,929
struct ht_node *ht_node_create(ht_node_create48,1081
hash *hash_create(hash_create70,1607
void hash_destroy(87,2012
inline void *hash_find(hash_find129,2947
inline void hash_insert(139,3213
inline struct ht_node *ht_next(ht_next169,3841
inline struct ht_node *ht_first(ht_first187,4245
inline int hash_count(193,4387

/emcsvn/emc/emcmailer/trunk/hash.h,522
#define EMC_HASH2,17
typedef struct ht_node 8,153
	char * key;9,178
	void * val;10,191
	struct ht_node *next;next11,204
} hash_node;12,227
typedef struct ht_ht 14,241
	int size;15,264
	struct ht_node **tbl;tbl16,275
	int iter_index;17,298
	struct ht_node *iter_next;iter_next18,315
	int items;19,343
	 int collisions;21,371
} hash;23,411
hash *hash_create(hash_create25,420
inline void *hash_find(hash_find26,459
inline void hash_insert(27,512
void hash_destroy(28,589
inline int hash_count(29,626

/emcsvn/emc/emcmailer/trunk/mcfg.c,900
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define BUFR_INC 13,263
static char *bufr=bufr15,289
static int  bsize=16,328
static char *cursec=cursec17,355
static FILE   *openConfFile  _Declare 22,430
static int    Parse          _Declare 23,488
static int    Section        _Declare 26,687
static int    Continuation   _Declare 27,760
static char   *loc_realloc   _Declare 28,822
static int    eatWhitespace  _Declare 29,882
static int    Parameter      _Declare 30,934
static int Parameter 78,2627
static FILE *openConfFile(openConfFile259,7033
int paramProcess(332,9114
static int eatComment(386,10078
static int eatWhitespace(399,10236
static int Continuation(411,10389
static int Parse(463,11772
static int Section(546,13589
static char *loc_realloc(loc_realloc646,15882
static void regSection(699,16837
char *getCurrentSection(getCurrentSection733,17303

/emcsvn/emc/emcmailer/trunk/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1007

/emcsvn/emc/emcmailer/trunk/archiver/archiver.c,743
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define MAX_CF_GROUPS 25,585
char *filename filename27,611
char *msgid msgid28,671
char *configfile configfile29,733
char *recip recip30,758
char *sender sender31,819
char *domain domain32,877
char *data data33,935
char *refdomain refdomain34,960
char *local local35,1028
int debugmode 37,1054
int outbound	38,1095
int init_args(40,1151
static void sig_alrm(132,3282
	const char *host;host137,3327
	const char *sender;sender138,3346
	const char *final_addr;final_addr139,3367
}smtp_deliver_info;smtp_deliver_info140,3392
int smtp_deliver(142,3413
int archive_remotely(185,4280
int archive_locally(242,5753
int main(324,7830

/emcsvn/emc/emcmailer/trunk/vaultsmart/vaultsmart.c,199
#define _GNU_SOURCE5,49
VaultsmartMsg *vaultsmart_msg_new vaultsmart_msg_new31,646
int vaultsmart_save_msg 49,1011
int vaultsmart_msg_log_line(141,3514
int vaultsmart_msg_get_log_line(150,3783

/emcsvn/emc/emcmailer/trunk/vaultsmart/vaultsmart.h,652
#define VAULTSMART_H_2,22
typedef struct vaultsmart_msg_t4,45
	long unsigned cusNum;6,79
	long unsigned userRid;7,103
	long unsigned policyID;8,140
	int outbound;9,165
	const char *originalFilename;originalFilename10,180
	const char *domain;domain11,211
	const char *sender;sender12,232
	const char *recip;recip13,253
	char* qfilename;15,274
	off_t filesize;16,292
	char* sha256;17,332
	time_t receiveTime;18,361
	char server[server19,382
} VaultsmartMsg;20,401
VaultsmartMsg *vaultsmart_msg_new vaultsmart_msg_new22,419
int vaultsmart_save_msg 23,457
int vaultsmart_msg_log_line(24,501
int vaultsmart_msg_get_log_line(25,551

/emcsvn/emc/emcmailer/trunk/tagliner/message_body.c,151
static char *rcsid rcsid1,0
static void use_rcsid(2,85
GMimeObject *multi_get_body(multi_get_body40,1388
GMimeObject *get_body(get_body120,3625

/emcsvn/emc/emcmailer/trunk/tagliner/message_body.h,115
#define MESSAGE_BODY_H2,23
GMimeObject *multi_get_body multi_get_body4,47
GMimeObject *get_body get_body5,115

/emcsvn/emc/emcmailer/trunk/tagliner/sql.c,105
static char *rcsid rcsid1,0
static void use_rcsid(2,75
int init_sql(15,312
int sql_fill_hash(41,825

/emcsvn/emc/emcmailer/trunk/tagliner/sql.h,42
int init_sql(1,0
int sql_fill_hash(2,23

/emcsvn/emc/emcmailer/trunk/tagliner/tagger.c,1255
static char *rcsid rcsid11,219
static void use_rcsid(12,297
#define _GNU_SOURCE18,405
#define TMPBUF 42,855
char *copy_to_file(copy_to_file44,876
void hashprint(45,917
void fill_template(46,963
char *nl2br(nl2br47,1020
int message_has_type(48,1047
void print_mime_struct(49,1107
char *stdin_to_tmp(stdin_to_tmp50,1161
void my_log_handler(51,1183
int process_hints(55,1303
char *configfile configfile58,1358
char *filename filename59,1410
char *sender sender60,1435
char *recip recip61,1460
char *recip_domain recip_domain62,1485
char *msgid msgid63,1512
char *tmp_dir tmp_dir64,1537
char *refdomain refdomain65,1564
char *data data66,1589
char *local local67,1614
char *domain domain68,1639
int  do_plain 69,1664
int	no_hints 70,1686
EmcQImpl * impl;71,1704
int debugmode 73,1722
int unlink_msgfile 74,1741
EmcConfig *config;config76,1766
void init_args(88,1917
#define BUFLEN 186,4011
int main(200,4360
int message_has_type(779,18786
void print_mime_struct(834,19873
char *nl2br(nl2br891,21032
void hashprint(935,21923
void fill_template(957,22675
char *stdin_to_tmp(stdin_to_tmp1023,23731
void  my_log_handler(1077,24715
char *copy_to_file(copy_to_file1085,24906
int process_hints(1127,25843

/emcsvn/emc/emcmailer/trunk/tagliner/hyperlink.c,177
static char *rcsid rcsid11,214
static void use_rcsid(12,296
#define MATCH_COUNT 21,442
#define PCRE_OPT 22,465
#define PRE_FETCH 23,497
char *hyperlink(hyperlink41,1011

/emcsvn/emc/emcmailer/trunk/tagliner/hyperlink.h,79
#define HYPERLINK_H2,20
char *hyperlink(hyperlink4,41
int check_space(5,90

/emcsvn/emc/emcmailer/trunk/contentfilter/mail_security.c,1627
static char *rcsid rcsid1,0
static void use_rcsid(3,87
#define _GNU_SOURCE13,199
X509 *smime_get_emc_ca(smime_get_emc_ca35,678
EVP_PKEY *smime_get_emc_pkey(smime_get_emc_pkey36,704
int rand_serial(37,736
RSA *gen_rsa_key(gen_rsa_key38,782
X509 *ca_generate_certificate(ca_generate_certificate39,812
X509 *ca_sign_certificate(ca_sign_certificate40,858
gboolean smime_inited=43,896
void smime_init(45,927
int rand_serial(72,1452
X509 *emcCA=emcCA99,1785
EVP_PKEY *CApkey=CApkey100,1804
X509 *smime_get_emc_ca(smime_get_emc_ca102,1829
EVP_PKEY *smime_get_emc_pkey(smime_get_emc_pkey135,2446
RSA *gen_rsa_key(gen_rsa_key169,3128
X509_NAME *user_get_x509_subject(user_get_x509_subject195,3493
X509 *ca_generate_certificate(ca_generate_certificate275,6011
X509 *ca_sign_certificate(ca_sign_certificate329,6950
char *ca_update_certificate ca_update_certificate376,7950
SMimeKeys *auto_gen_smime_keys(auto_gen_smime_keys493,10520
char *send_newkey_notification(send_newkey_notification656,13684
GMimeObject *smime_encrypt_g_mime_object smime_encrypt_g_mime_object805,18455
GMimeObject *smime_decrypt_g_mime_object(smime_decrypt_g_mime_object844,20055
GMimeObject *smime_get_signed_g_mime_object(smime_get_signed_g_mime_object881,21282
GMimeObject *smime_sign_g_mime_object smime_sign_g_mime_object919,22664
int smime_encrypt 1028,27047
int smime_decrypt(1061,27656
int smime_verify_signature(1103,28544
int smime_sign 1153,29728
EVP_PKEY *smime_key_get_pkey(smime_key_get_pkey1208,30977
X509 *smime_key_get_x509(smime_key_get_x5091237,31503
gboolean smime_key_is_new 1267,32021

/emcsvn/emc/emcmailer/trunk/contentfilter/mail_security.h,971
#define MAIL_SECURITY_H_2,25
#define RSA_BITS	12,231
#define SERIAL_RAND_BITS 13,254
#define LHASH 15,283
int rand_serial(17,305
void smime_init(18,351
SMimeKeys *auto_gen_smime_keys(auto_gen_smime_keys19,370
char *send_newkey_notification(send_newkey_notification20,451
GMimeObject *smime_encrypt_g_mime_object smime_encrypt_g_mime_object22,583
GMimeObject *smime_decrypt_g_mime_object smime_decrypt_g_mime_object23,675
GMimeObject *smime_sign_g_mime_object smime_sign_g_mime_object24,775
GMimeObject *smime_get_signed_g_mime_object smime_get_signed_g_mime_object25,914
int smime_encrypt 27,1017
int smime_decrypt 28,1083
int smime_sign 30,1158
int smime_verify_signature 31,1285
EVP_PKEY *smime_key_get_pkey(smime_key_get_pkey33,1380
X509 *smime_key_get_x509(smime_key_get_x50934,1431
char *ca_update_certificate ca_update_certificate36,1479
X509_NAME *user_get_x509_subject(user_get_x509_subject37,1551
gboolean smime_key_is_new 38,1627

/emcsvn/emc/emcmailer/trunk/contentfilter/msg_template.c,1440
		*rcsid rcsid2,12
static void use_rcsid(3,87
#define _GNU_SOURCE13,199
char *template_user template_user23,407
void msg_template_set_user 25,436
msg_template *msg_template_new(msg_template_new30,518
void msg_template_clear(39,669
const char* msg_template_get_name(52,923
const char* msg_template_get_subject(57,1002
const char* msg_template_get_body(62,1087
const char* msg_template_get_html_body(67,1166
const char* msg_template_get_sender(72,1255
const char* msg_template_get_sender_name(77,1338
const char* msg_template_get_type(82,1431
const char* msg_template_get_id(87,1510
const char* msg_template_get_recipient(92,1585
void msg_template_set_name(97,1674
void msg_template_set_subject(102,1776
void msg_template_set_body(107,1884
void msg_template_set_html_body(112,1986
void msg_template_set_sender(117,2098
void msg_template_set_sender_name(122,2204
void msg_template_set_type(127,2320
void msg_template_set_id(135,2514
void msg_template_set_recipient(140,2612
void msg_template_print(145,2724
void hashprint(152,2940
GMimeMessage *msg_template_parse(msg_template_parse158,3078
char *get_message_body_string(get_message_body_string444,10920
void msg_template_free(519,12473
void msg_template_apply(550,12913
void parse_data(558,13121
const char *get_token_value(get_token_value563,13206
char *tagger_fill_template(tagger_fill_template606,14207
char *fill_template(fill_template690,15743

/emcsvn/emc/emcmailer/trunk/contentfilter/msg_template.h,2245
#define MSG_TEMPLATE_H_2,24
#define MSG_TEMPLATE_DEFAULT_REPLY 6,70
#define MSG_TEMPLATE_DEFAULT_REJECT 7,112
#define MSG_TEMPLATE_DEFAULT_NOTIFY	8,171
#define MSG_TEMPLATE_ENCRYPT_KEY_NOTIFY	9,213
#define MSG_TEMPLATE_SIGN_KEY_NOTIFY	10,264
#define MSG_TEMPLATE_ENC_RECIP	11,312
#define MSG_TEMPLATE_ENC_SIGN_SENDER	12,390
#define MSG_TEMPLATE_SIGN_RECIP	13,478
#define MSG_TEMPLATE_SIGN_SENDER	14,554
#define MSG_TEMPLATE_PASSWORD_PROTECT 15,627
#define MSG_TEMPLATE_MANUAL_CERT_NOTIFY	16,698
#define SECURE_MESSAGE_WELCOME	18,778
#define SECURE_MESSAGE_NOTIFICATION 19,860
#define SECURE_MESSAGE_WELCOME_SENDER 20,933
#define MSG_TEMPLATE_ATTACHMENT_PASSWORD	22,1030
#define AUTOREPLY	24,1106
#define NOTIFICATION	25,1137
typedef struct msg_template_t27,1174
	char* name;29,1206
	char* id;30,1235
	char* sender;31,1246
	char* sender_name;32,1261
	char* subject;33,1281
	char* body;34,1297
	char* html_body;35,1310
	char* recipient;36,1328
	char* type;37,1346
}msg_template;msg_template38,1359
msg_template *msg_template_new(msg_template_new46,1488
void msg_template_clear(47,1522
void msg_template_free(48,1567
void msg_template_print(49,1611
void msg_template_set_user 51,1657
const char* msg_template_get_name(52,1704
const char* msg_template_get_subject(53,1759
const char* msg_template_get_body(54,1817
const char* msg_template_get_html_body(55,1872
const char* msg_template_get_sender(56,1932
const char* msg_template_get_sender_name(57,1989
const char* msg_template_get_id(58,2051
const char* msg_template_get_recipient(59,2104
const char* msg_template_get_type(60,2164
void msg_template_set_name(62,2220
void msg_template_set_subject(63,2288
void msg_template_set_body(64,2359
void msg_template_set_html_body(65,2427
void msg_template_set_sender(66,2500
void msg_template_set_sender_name(67,2570
void msg_template_set_id(68,2645
void msg_template_set_recipient(69,2711
void msg_template_set_type(70,2784
char *get_message_body_string(get_message_body_string72,2851
const char *get_token_value(get_token_value74,2941
GMimeMessage *msg_template_parse(msg_template_parse75,2989
char *tagger_fill_template(tagger_fill_template77,3044
char *fill_template(fill_template78,3107

/emcsvn/emc/emcmailer/trunk/contentfilter/rule_set.c,1086
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define _GNU_SOURCE12,193
CF_HASH_NODE RULE_SET_MATCH_OP_STR 16,256
char *ruleset_get_header(ruleset_get_header25,538
int ruleset_get_count(27,583
float ruleset_get_points(35,718
char *ruleset_get_match_op(ruleset_get_match_op40,791
Rule *ruleset_get_rule(ruleset_get_rule45,867
RuleSet *ruleset_new(ruleset_new53,1064
void ruleset_set_points(71,1398
void ruleset_set_match_op(76,1486
void ruleset_set_id(92,2085
gboolean ruleset_set_matched(97,2186
gboolean ruleset_get_matched(103,2302
void ruleset_set_total_points(108,2380
float ruleset_get_total_points(112,2478
void ruleset_append_rule(117,2562
void ruleset_free(149,3244
char* ruleset_get_string(171,3566
char *ruleset_get_header(ruleset_get_header216,4243
gboolean ruleset_apply(250,5110
gboolean ruleset_has_attachment_rules(353,7347
gboolean ruleset_contains_criteria(369,7679
char *ruleset_get_status_headers(ruleset_get_status_headers385,7963
void ruleset_log_status(416,8472
RuleSet *ruleset_scan_string(ruleset_scan_string511,10927

/emcsvn/emc/emcmailer/trunk/contentfilter/rule_set.h,1017
#define RULESET_H_2,19
#define RULESET_ALWAYS	7,88
#define RULESET_ALL	8,123
#define RULESET_ANY	9,153
#define RULESET_POINTS_MORE_THAN	10,183
#define RULESET_POINTS_LESS_THAN	11,235
RuleSet *ruleset_new(ruleset_new13,288
void ruleset_set_points(14,312
void ruleset_set_match_op(15,369
void ruleset_set_id(16,435
gboolean ruleset_set_matched(18,500
void ruleset_set_total_points(19,566
gboolean ruleset_get_matched(21,630
float ruleset_get_total_points(22,678
int ruleset_get_count(24,729
float ruleset_get_points(25,770
char *ruleset_get_match_op(ruleset_get_match_op26,814
Rule *ruleset_get_rule(ruleset_get_rule27,860
char* ruleset_get_string(28,916
void ruleset_free(29,960
gboolean ruleset_apply(30,997
void ruleset_append_rule(32,1040
void ruleset_log_status(34,1097
gboolean ruleset_has_attachment_rules(36,1141
gboolean ruleset_contains_criteria(37,1198
RuleSet *ruleset_scan_string(ruleset_scan_string39,1267
char *ruleset_get_status_headers(ruleset_get_status_headers40,1311

/emcsvn/emc/emcmailer/trunk/contentfilter/data_match.c,1709
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
#define OVECSIZE 29,531
#define MAX_TOKENS	30,556
#define ENCRYPTED_TYPE_LIST_ID 31,583
extern GArray* g_matches;33,620
list_db_s DB_DATA_LIST 35,647
list_db_s DB_IP_LIST 39,760
magic_t magicCookie=43,871
DataList *encryptedTypeList=encryptedTypeList44,898
const char *encyTypes[encyTypes46,934
int file_match_rule(52,1184
int str_match_list(155,3368
int tokens_match_str(197,4446
int tokens_match_list(215,4883
int tokens_match_db_list(244,5657
int str_match_db_list(273,6140
int text_match_db_list(310,6912
int text_match_list(377,8441
DataList *datalist_new(datalist_new385,8581
DataList *datalist_parse(datalist_parse397,8794
DataList *datalist_new_db(datalist_new_db421,9273
DataList *get_encrypted_type_list(get_encrypted_type_list459,10071
int db_get_list_count(476,10426
void print_datalist(515,11118
void datalist_free(527,11314
const char *datalist_get_item(datalist_get_item532,11341
int text_match(540,11463
int str_count_str(564,11976
int str_count_token(592,12477
gboolean str_match(650,13569
gboolean ip_address_match(758,15901
gboolean scaler_match(818,17224
gboolean date_match(847,17780
gboolean time_match(878,18440
unsigned long int parse_list_id(907,18978
int parse_priority_value(919,19173
GDate *parse_date(parse_date952,19885
time_t parse_time(996,20852
off_t parse_size(1030,21429
pcre *parse_pcre(parse_pcre1080,22226
regex_t *parse_regex(parse_regex1153,23618
MATCH_OP match_op_negate(1169,23926
gboolean get_match_op_default(1200,24411
const char* get_file_type_desc(1219,24730
char* pcre_replace 1239,25239
char * g_pcre_replace 1290,26267

/emcsvn/emc/emcmailer/trunk/contentfilter/data_match.h,2869
#define RULE_DATA_H_2,21
#define MAX_MATCHES 8,104
typedef enum MATCH_OP10,129
	MATCH_NONE,12,153
	MATCH_IS,13,166
	MATCH_IS_NOT,14,177
	MATCH_CONTAINS,15,192
	MATCH_DOES_NOT_CONTAIN,16,209
	MATCH_CONTAINS_WORD,17,234
	MATCH_DOES_NOT_CONTAIN_WORD,18,256
	MATCH_BEGINS_WITH,19,286
	MATCH_END_WITH,20,306
	MATCH_LESS_THAN,21,323
	MATCH_EQUALS,22,341
	MATCH_GREATER_THAN,23,356
	MATCH_HIGHER_THAN,24,377
	MATCH_LOWER_THAN,25,397
	MATCH_DATE_NEWER,26,416
	MATCH_DATE_OLDER,27,435
	MATCH_REG_EXP,28,454
	MATCH_REG_EXP_LIST,29,470
	MATCH_PCRE,30,491
	MATCH_PCRE_LIST,31,504
	MATCH_IN_LIST,32,522
	MATCH_NOT_IN_LIST,33,538
	MATCH_IN_CIDR,34,558
	MATCH_NOT_IN_CIDR,35,574
	MATCH_IN_RANGE,36,594
	MATCH_NOT_IN_RANGE,37,611
	MATCH_CONTAINS_ITEM,38,632
	MATCH_DOES_NOT_CONTAIN_ITEM,39,654
	MATCH_CONTAINS_TOKEN,40,684
	MATCH_DOES_NOT_CONTAIN_TOKEN,41,707
	MATCH_CONTAINS_IGNORE_SPACE42,738
} MATCH_OP;43,767
typedef enum MSG_PRIORITY45,780
	PRIORITY_NONE,47,808
	PRIORITY_HIGHEST,48,824
	PRIORITY_HIGH,49,847
	PRIORITY_NORMAL,50,867
	PRIORITY_LOW,51,889
	PRIORITY_LOWEST 52,908
} MSG_PRIORITY;53,929
#define MAX_DB_LOAD_ITEMS	55,946
typedef struct list_db_t57,979
	const char* DB_LIST_TABLE_NAME;59,1006
	const char* DB_TABLE_NAME;60,1039
	const char* DB_LIST_ID;61,1067
	const char* DB_OWNER;62,1092
	const char* DB_DATA;63,1115
}list_db_s;list_db_s64,1137
typedef struct DataList_t66,1150
	const char** items;68,1178
	int totalItems;69,1199
	int nItems;70,1216
	int startOffset;71,1229
	unsigned long listID;72,1247
	list_db_s *dbInfo;dbInfo73,1270
}DataList;DataList74,1290
int file_match_rule(76,1302
int str_match_list(78,1362
int str_match_db_list(81,1460
int str_count_str(84,1561
int str_count_token(85,1638
int tokens_match_str(87,1717
int tokens_match_list(90,1820
int tokens_match_db_list(93,1920
MATCH_OP match_op_negate(96,2023
gboolean get_match_op_default(97,2067
int text_match(99,2117
		str_match(103,2223
		scaler_match(106,2309
gboolean date_match(107,2385
gboolean time_match(109,2470
gboolean ip_address_match(111,2549
int parse_priority_value(114,2639
pcre *parse_pcre(parse_pcre116,2694
regex_t *parse_regex(parse_regex117,2754
char* pcre_replace 118,2801
off_t parse_size(120,2894
GDate *parse_date(parse_date121,2936
time_t parse_time(122,2979
unsigned long int parse_list_id(124,3021
DataList *datalist_new(datalist_new126,3072
DataList *datalist_parse(datalist_parse127,3098
DataList *datalist_new_db(datalist_new_db128,3155
void datalist_free(130,3221
int db_get_list_count(132,3244
const char *datalist_get_item(datalist_get_item134,3309
int datalist_match(136,3368
void print_datalist(139,3460
const char* get_file_type_desc(141,3498
DataList *get_encrypted_type_list(get_encrypted_type_list142,3552
char *g_pcre_replace g_pcre_replace144,3590

/emcsvn/emc/emcmailer/trunk/contentfilter/parser.c,2187
		*rcsid rcsid2,12
static void use_rcsid(4,87
#define _GNU_SOURCE14,199
demime_handle *dh=dh36,859
gboolean demimedMessage=38,885
gboolean dearchivedMessage=39,917
gboolean msgModifiedFlag=40,952
gboolean initialized=41,985
GHashTable *newHeaders newHeaders42,1014
char* newRawHeaders 43,1045
unsigned long matchedPolicyIDs[matchedPolicyIDs45,1074
int nMatchedPolicies 46,1111
char* domainKeySignature 47,1137
char *get_file_name(get_file_name49,1171
char *get_file_name(get_file_name55,1413
void setDomainKeySignature(77,1796
void parser_init(82,1866
void parser_cleanup(96,2059
void close_demime_handle(101,2110
demime_handle* get_demime_handle(124,2515
char *get_spooldir(get_spooldir182,3556
GMimeMessage *parser_get_message(parser_get_message208,4058
const char *parser_get_from_address(parser_get_from_address297,5987
const char *parser_get_header(parser_get_header323,6589
void parser_add_header(378,7786
void parser_set_header(397,8239
void parser_remove_header(455,9499
void g_mime_remove_header(479,9948
void parser_remove_header_recursive 534,11286
void parser_append_policy_id(546,11615
char *parser_get_policy_ids(parser_get_policy_ids554,11764
off_t parser_get_file_size(573,12136
GList *parser_get_attachment_parts(parser_get_attachment_parts585,12340
GMimeObject *get_text_body_part(get_text_body_part626,13171
GMimeObject *get_html_body_part(get_html_body_part650,13695
GMimeObject *parser_get_text_body_part(parser_get_text_body_part674,14220
GMimeObject *parser_get_html_body_part(parser_get_html_body_part700,14777
GMimeObject *parser_get_body_part(parser_get_body_part727,15336
gboolean g_mime_object_has_attachment 738,15497
gboolean message_has_attachments(786,16490
char *strip_html_tags(strip_html_tags811,16948
int parser_dearchive_parts(887,18468
void message_add_hash_header(921,19101
void mailer_add_hash_header(926,19282
char *save_message_to_disk(save_message_to_disk931,19434
ssize_t write_message_to_stream 1041,21975
char* parser_commit_changes(1073,22822
void set_message_modified_flag(1092,23119
gboolean get_message_modified_flag(1097,23189
int write_mime_part_to_spool(1102,23256

/emcsvn/emc/emcmailer/trunk/contentfilter/parser.h,1722
#define PARSER_H_2,18
#define RAW_HEADERS 6,58
demime_handle* get_demime_handle(15,181
void close_demime_handle(16,217
GMimeMessage *parser_get_message(parser_get_message18,246
GMimeObject *get_text_body_part(get_text_body_part20,283
GMimeObject *get_html_body_part(get_html_body_part21,339
GMimeObject *parser_get_text_body_part(parser_get_text_body_part23,396
GMimeObject *parser_get_html_body_part(parser_get_html_body_part24,438
GMimeObject *parser_get_body_part(parser_get_body_part26,481
const char *parser_get_header(parser_get_header27,518
const char *parser_get_from_address(parser_get_from_address28,569
gboolean g_mime_object_has_attachment 29,608
off_t parser_get_file_size(31,668
GList *parser_get_attachment_parts(parser_get_attachment_parts33,699
gboolean message_has_attachments(35,738
char *strip_html_tags(strip_html_tags37,775
int parser_dearchive_parts(38,816
char *save_message_to_disk(save_message_to_disk40,847
GMimeObject *parser_message_get_body(parser_message_get_body43,943
void parser_add_header(46,1053
void parser_set_header(47,1116
void parser_remove_header(48,1179
void parser_remove_header_recursive 49,1226
void set_message_modified_flag(51,1289
gboolean get_message_modified_flag(52,1333
char* parser_commit_changes(54,1372
char *get_spooldir(get_spooldir55,1403
void parser_init(57,1426
void parser_cleanup(58,1446
void parser_append_policy_id(60,1470
char *parser_get_policy_ids(parser_get_policy_ids61,1524
ssize_t write_message_to_stream 63,1556
void setDomainKeySignature(64,1633
char *get_message_raw_headers(get_message_raw_headers65,1672
GArray *parse_raw_headers(parse_raw_headers66,1725
int write_mime_part_to_spool(68,1777

/emcsvn/emc/emcmailer/trunk/contentfilter/database.c,3228
static char *rcsid rcsid11,151
static void use_rcsid(12,232
#define _GNU_SOURCE22,344
#define MAX_ROWS	38,828
void db_init_rule(39,849
void db_init_action(40,895
int sql_fill_hash(41,947
MYSQL mysql_ro,43,1015
MYSQL mysql_ro, *mysql_sock=mysql_sock43,1015
MYSQL mysql_rw,44,1080
MYSQL mysql_rw, *mysql_sock_rw mysql_sock_rw44,1080
MYSQL wl_mysql_ro,45,1150
MYSQL wl_mysql_ro, *wl_mysql_sock=wl_mysql_sock45,1150
MYSQL qcdb_mysql_rw,47,1232
MYSQL qcdb_mysql_rw, *qcdb_mysql_sock_rw qcdb_mysql_sock_rw47,1232
GHashTable *users_hash=users_hash49,1313
int cus_num 51,1344
int db_connect(53,1362
int db_connect_rw(59,1473
MYSQL *db_get_connection(db_get_connection65,1596
MYSQL *db_get_connection_rw(db_get_connection_rw76,1763
MYSQL *db_connect_qcdb_rw(db_connect_qcdb_rw87,1945
MYSQL *db_get_qcdb_connection(db_get_qcdb_connection112,2562
MYSQL *db_get_wl_connection(db_get_wl_connection122,2758
void db_disconnect(142,3269
MYSQL_RES *_db_query _db_query162,3596
gboolean _db_query_w 197,4184
gboolean db_query_w 221,4643
MYSQL_RES *db_query db_query227,4769
char* db_mysql_quote(232,4857
int get_customer_number(245,5116
FilterList *get_customer_filters(get_customer_filters317,6186
char *db_get_realm_parent(db_get_realm_parent331,6490
FilterList *get_domain_filters(get_domain_filters390,7375
FilterList *get_group_filters(get_group_filters401,7596
FilterList *get_user_filters(get_user_filters406,7716
FilterList *db_load_filters(db_load_filters421,8130
Filter *db_load_policy(db_load_policy498,9892
RuleSet *db_load_ruleset(db_load_ruleset568,11509
Rule *db_load_rule(db_load_rule684,13503
void db_init_action(742,14412
void db_init_rule(752,14603
ActionSet *db_load_actionset(db_load_actionset772,15206
Action *db_load_action(db_load_action836,16359
gboolean db_item_in_list(894,17358
char* db_get_match_from_list(938,18321
gboolean db_in_whitelist 1001,20234
gboolean db_item_regexp_list(1076,22088
gboolean db_in_blacklist(1119,23010
int db_count_items_in_text(1182,24332
int db_count_tokens_in_list(1251,25624
int db_get_list_items(1325,27017
msg_template *db_load_msg_template(db_load_msg_template1371,27911
char *db_load_text(db_load_text1420,29047
GHashTable *db_load_people_hash(db_load_people_hash1454,29549
int sql_fill_hash(1497,30411
AkaDomain *db_get_aka_domain(db_get_aka_domain1549,31302
gboolean db_mailbox_exists 1599,32511
gboolean db_mailbox_exists_in 1604,32655
Mailbox* db_get_aka_mailbox 1637,33285
unsigned long long db_get_new_rid 1681,34251
unsigned long long db_last_insert_id 1690,34427
char *db_get_rand_word db_get_rand_word1695,34521
gboolean db_save_spamcentral_mailbox(1711,34891
gboolean db_save_mailbox(1744,35687
int db_get_auto_log_entry(1796,37487
void db_update_auto_log(1835,38298
DomainKeys *db_get_domainkeys db_get_domainkeys1870,39170
SMimeKeys **_db_get_smime_key_list _db_get_smime_key_list1930,40313
SMimeKeys *db_get_smime_keys db_get_smime_keys2016,42187
SMimeKeys *db_get_smime_keys_by_owner db_get_smime_keys_by_owner2026,42394
int db_save_smime_keys 2036,42611
GHashTable *db_get_prefs db_get_prefs2101,44402
unsigned long long db_insert_quarantine_report 2148,45359

/emcsvn/emc/emcmailer/trunk/contentfilter/database.h,2838
#define DATABASE_H_7,97
#define 	MAX_SQL_LEN	9,118
#define FILTER_DB_TABLE_NAME 18,328
#define FILTER_DB_FILTER_ID 19,380
#define FILTER_DB_POLICY_ID 20,422
#define FILTER_DB_OWNER 21,464
#define FILTER_DB_NAME 22,499
#define FILTER_DB_DESC 23,532
#define FILTER_DB_POSITION 24,572
#define FILTER_DB_TYPE 25,612
#define FILTER_DB_RULE_SET_ID 26,645
#define FILTER_DB_ACTION_SET_ID 27,691
#define FILTER_DB_APPLY_LIST_ID 28,739
#define FILTER_DB_EXCEPTION_LIST_ID 29,787
#define FILTER_DB_ACTIVE_FLAG 30,843
#define FILTER_DB_CREATED_ON 31,889
#define FILTER_DB_CREATED_BY 32,933
#define FILTER_DB_MODIFIED_ON 33,977
#define FILTER_DB_MODIFIED_BY 34,1022
int get_customer_number(36,1069
FilterList *get_customer_filters(get_customer_filters38,1115
FilterList *get_domain_filters(get_domain_filters39,1191
FilterList *get_group_filters(get_group_filters40,1265
FilterList *get_user_filters(get_user_filters41,1338
gboolean db_item_regexp_list(43,1411
FilterList *db_load_filters(db_load_filters45,1501
Filter *db_load_policy(db_load_policy46,1573
int db_connect(48,1646
int db_connect_rw(49,1681
void db_disconnect(50,1719
MYSQL *db_get_connection(db_get_connection51,1741
MYSQL *db_get_connection_rw(db_get_connection_rw52,1769
MYSQL_RES *db_query db_query53,1800
gboolean db_query_w 54,1839
Action *db_load_action(db_load_action57,1880
Rule *db_load_rule(db_load_rule58,1928
RuleSet *db_load_ruleset(db_load_ruleset59,1970
ActionSet *db_load_actionset(db_load_actionset60,2021
Filter *db_load_filter(db_load_filter61,2078
int db_get_list_items(63,2127
gboolean db_item_in_list(66,2249
char* db_get_match_from_list(69,2337
int db_count_items_in_text(71,2440
int db_count_tokens_in_list(74,2535
gboolean db_in_whitelist(77,2646
gboolean db_in_whitelist_for(78,2704
gboolean db_in_blacklist(79,2787
msg_template *db_load_msg_template(db_load_msg_template81,2846
char *db_load_text(db_load_text82,2908
int db_get_auto_log_entry(84,2951
void db_update_auto_log(85,3041
GHashTable *db_load_people_hash(db_load_people_hash88,3131
DomainKeys *db_get_domainkeys db_get_domainkeys90,3183
SMimeKeys *db_get_smime_keys db_get_smime_keys91,3226
SMimeKeys *db_get_smime_keys_by_owner db_get_smime_keys_by_owner92,3268
SMimeKeys** _db_get_smime_key_list 93,3327
int db_save_smime_keys 94,3394
gboolean db_mailbox_exists 95,3434
gboolean db_mailbox_exists_in 96,3481
gboolean db_save_spamcentral_mailbox(97,3553
unsigned long long db_last_insert_id 98,3605
char *db_get_rand_word db_get_rand_word100,3647
gboolean db_save_mailbox(101,3674
AkaDomain *db_get_aka_domain(db_get_aka_domain102,3714
Mailbox* db_get_aka_mailbox 103,3764
GHashTable *db_get_prefs db_get_prefs105,3813
unsigned long long db_insert_quarantine_report 106,3859
char* db_mysql_quote(108,3932

/emcsvn/emc/emcmailer/trunk/contentfilter/file_aparser.c,504
		*rcsid rcsid2,12
static void use_rcsid(3,86
#define _GNU_SOURCE13,198
#define EX_TEMPFAIL 28,502
#define PARSER_HEADER 33,590
#define PARSER_STRINGS 34,623
#define PARSER_TEXT 35,657
#define PARSER_HTML 36,688
static int parse_flags(38,720
GList *parserConfig=parserConfig40,780
char* file2text(42,808
const char* guess_file_type(131,2708
static int parse_flags(156,3231
GList *read_config(read_config173,3572
void print_config(263,5295
config_node *find_parser(find_parser282,5749

/emcsvn/emc/emcmailer/trunk/contentfilter/file_aparser.h,500
#define TEXT_PARSER_H_2,23
typedef struct config4,47
	const char *type,type6,71
	const char *type, *subtype,subtype6,71
	const char *type, *subtype, *ext;ext6,71
	const char *parser;parser7,106
	int use_stdin;8,127
}config_node;config_node9,196
config_node *find_parser(find_parser11,211
GList *read_config(read_config14,309
char* file2text(16,384
char* file2text2(18,481
char* pdf2text(19,543
char* msword2text(20,581
char* html2text(21,622
const char* guess_file_type(23,662

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_action.c,3703
		*rcsid rcsid2,12
static void use_rcsid(3,88
#define _GNU_SOURCE13,200
#define	ZIP_PATH	35,697
#define	P7ZIP_PATH	36,729
#define	MAX_ATTACHMENTS	37,763
extern GArray* g_matches;39,792
		ACTION_STR 43,878
extern EmcQImpl *impl;impl136,4369
void spool_report 138,4393
quarantine_report *qr qr139,4436
const char* prefRealm 140,4466
int stoppedActions[stoppedActions142,4497
int nStoppedActions 143,4522
void stopAction(145,4548
gboolean isActionStopped(149,4634
ActionStatus action_apply(163,5010
ActionStatus smarthost 459,11841
ActionStatus spool_message 474,12399
char *get_quarantine_url_params get_quarantine_url_params778,20886
quarantine_report *quarantine_report_new(quarantine_report_new813,21973
void spool_report 862,23132
ActionStatus do_tag(982,25704
ActionStatus do_discard_msg_changes(1014,26599
ActionStatus do_add_footer(1039,27212
ActionStatus do_add_html_footer(1206,31492
ActionStatus do_add_header(1520,39344
ActionStatus do_set_header(1574,41090
ActionStatus do_remove_header(1655,43096
ActionStatus do_forward_copy(1707,44375
ActionStatus do_forward_current_copy(1774,46231
char *get_cluster_by_hostname(get_cluster_by_hostname1883,49086
int attachmentNo 1919,49876
int randPassword 1920,49898
const char *attachPassword attachPassword1921,49920
unsigned long long detachSizeList[detachSizeList1922,49955
char *detachNameList[detachNameList1923,50013
char *detachTextReplacement[detachTextReplacement1924,50061
char *detachHtmlReplacement[detachHtmlReplacement1925,50116
GHashTable *attachTokenHt attachTokenHt1926,50171
char *detachHtmlMessageTemplate detachHtmlMessageTemplate1927,50205
char *detachTextMessageTemplate detachTextMessageTemplate1928,50245
void mime_part_detach_attachment(1930,50286
void mime_part_strip_attachment(2282,61035
ActionStatus do_strip_attachment(2349,62901
int p7zip_files 2530,69004
int zip_files 2596,70633
ActionStatus zip_attachments 2658,71997
ActionStatus do_delete(2881,78891
ActionStatus do_bounce(2888,79088
ActionStatus do_archive(2918,79917
ActionStatus vaultsmart_archive_action(2945,80676
ActionStatus add_delayed_action(2987,81885
ActionStatus do_redirect(3011,82684
ActionStatus do_commit_modified_msg(3103,84971
ActionStatus set_spam_options(3139,85568
ActionStatus do_bypass_spam(3170,86323
ActionStatus do_notify(3206,87279
ActionStatus do_reply(3338,90809
char* send_new_message(3456,93949
char* send_new_message_with_data(3461,94138
void do_stop_message(3508,95294
ActionStatus do_quarantine(3518,95435
ActionStatus do_set_deliver_folder(3668,99853
ActionStatus do_run_agent(3695,100566
ActionStatus do_domain_key_sign(3717,101120
void send_cyphersmart_notification(3984,106825
gboolean secure_message_done 4085,109588
ActionStatus secure_message 4086,109626
ActionStatus do_smime_encrypt_with_key 4424,120498
ActionStatus do_smime_encrypt 4459,121536
ActionStatus do_smime_decrypt 4521,123228
GMimeObject *get_smime_decrypted_part get_smime_decrypted_part4561,124472
ActionStatus do_smime_sign_with_key 4608,125796
ActionStatus do_smime_sign 4677,127723
void cf_report(4744,129564
Action* action_new(4855,131700
void action_clear(4871,131927
void action_free(4883,132133
char *action_get_string(action_get_string4894,132260
const char *action_get_data(action_get_data4983,134407
void action_set_data(4991,134508
void action_set_type(4999,134648
const char *get_action_type_string(get_action_type_string5016,134997
void action_set_id(5030,135187
ActionStatus action_set_status(5035,135281
ActionStatus action_get_status(5041,135396
int action_get_type(5046,135472
Action *action_scan_string(action_scan_string5051,135535

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_action.h,4124
#define FILTER_ACTION_H_2,25
typedef enum FILTER_ACTION6,75
	ACTION_NONE,8,104
	ACTION_TAG,9,118
	ACTION_ADD_FOOTER,10,145
	ACTION_ADD_HTML_FOOTER,11,190
	ACTION_ADD_HEADER,12,244
	ACTION_SET_HEADER,13,288
	ACTION_REMOVE_HEADER,14,327
	ACTION_DELIVER,15,374
	ACTION_BYPASS_SPAM,16,391
	ACTION_DELETE,17,412
	ACTION_BOUNCE,18,428
	ACTION_REDIRECT,19,444
	ACTION_BCC,20,462
	ACTION_NEW_COPY,21,475
	ACTION_REPLY,22,493
	ACTION_NOTIFY,23,508
	ACTION_NOTIFY_RECIPIENT,24,524
	ACTION_NOTIFY_SENDER,25,550
	ACTION_NOTIFY_ADMIN,26,573
	ACTION_DELIVER_AND_QUARANTINE,27,595
	ACTION_QUARANTINE,28,627
	ACTION_ARCHIVE,29,647
	ACTION_STRIP_ATTACHMENT,30,664
	ACTION_STRIP_ALL_ATTACHMENTS,31,690
	ACTION_SET_DELIVER_FOLDER,32,721
	ACTION_RUN_AGENT,33,749
	ACTION_DISCARD_MSG_CHANGES,34,768
	ACTION_DOMAIN_KEY_SIGN,35,797
	ACTION_SMIME_SIGN,36,822
	ACTION_SMIME_CLEAR_SIGN,37,842
	ACTION_SMIME_OPAQUE_SIGN,38,868
	ACTION_SMIME_ENCRYPT,39,895
	ACTION_SMIME_DECRYPT,40,918
	ACTION_GPG_SIGN,41,941
	ACTION_SPOOL,42,959
	ACTION_SMARTHOST,43,974
	ACTION_ENFORCE_TLS,44,993
	ACTION_DETACH_ATTACHMENT,45,1014
	ACTION_SPAM_OPTIONS,46,1041
	ACTION_ZIP_ATTACHMENTS,47,1063
	ACTION_PASSWORD_PROTECT_MESSAGE,48,1088
	ACTION_PASSWORD_PROTECT_ATTACHMENTS,49,1122
	ACTION_ENCRYPT_MESSAGE,50,1160
	ACTION_STOP_MESSAGE51,1185
} FILTER_ACTION;52,1206
#define  ACTION_SET_DB_TABLE_NAME	55,1270
#define  ACTION_SET_DB_ACTION_SET_ID 56,1331
#define  ACTION_SET_DB_OWNER	57,1386
#define  ACTION_SET_DB_NAME	58,1425
#define  ACTION_SET_DB_DESCRIPTION 59,1463
#define  ACTION_SET_DB_CREATED_ON 60,1515
#define  ACTION_SET_DB_CREATED_BY 61,1565
#define  ACTION_SET_DB_MODIFIED_ON 62,1615
#define  ACTION_SET_DB_MODIFIED_BY 63,1667
#define POLICY_OWNER_QUARANTINE	65,1720
#define DOMAIN_QUARANTINE	66,1757
#define USER_QUARANTINE	67,1789
Action* action_new(69,1821
void action_clear(70,1843
void action_free(71,1878
char *action_get_string(action_get_string73,1913
int action_get_type(74,1954
const char *action_get_data(action_get_data75,1991
void action_set_id(76,2036
void action_set_type(77,2096
void action_set_data(78,2152
ActionStatus action_set_status(80,2209
ActionStatus action_get_status(81,2278
ActionStatus action_apply(83,2327
ActionStatus do_tag(85,2393
ActionStatus do_add_header(86,2430
ActionStatus do_set_header(87,2474
ActionStatus do_remove_header(88,2518
ActionStatus do_add_footer(89,2565
ActionStatus do_add_html_footer(90,2632
ActionStatus do_strip_attachment(91,2704
ActionStatus do_notify(92,2754
ActionStatus do_reply(93,2794
ActionStatus do_forward_copy(94,2833
ActionStatus do_forward_current_copy(95,2879
ActionStatus do_redirect(96,2933
ActionStatus do_delete(97,2975
ActionStatus do_quarantine(98,3015
ActionStatus do_archive(99,3059
ActionStatus vaultsmart_archive_action(100,3100
ActionStatus do_bounce(101,3172
ActionStatus do_bypass_spam(102,3212
ActionStatus set_spam_options(103,3257
ActionStatus do_set_deliver_folder(104,3304
ActionStatus do_run_agent(105,3356
ActionStatus do_discard_msg_changes(106,3399
ActionStatus do_domain_key_sign(107,3452
ActionStatus do_smime_sign(108,3501
ActionStatus do_smime_encrypt 109,3545
ActionStatus do_smime_decrypt 110,3593
ActionStatus do_smime_sign_with_key 111,3641
ActionStatus do_smime_encrypt_with_key 112,3717
ActionStatus do_gpg_sign(113,3796
ActionStatus spool_message 114,3838
ActionStatus smarthost 115,3883
ActionStatus add_delayed_action(116,3924
ActionStatus zip_attachments 117,3973
int zip_files 118,4020
int p7zip_files 119,4108
ActionStatus secure_message 120,4198
GMimeObject *get_smime_decrypted_part get_smime_decrypted_part121,4244
char* send_new_message(123,4332
char* send_new_message_with_data(124,4419
void do_stop_message(126,4535
ActionStatus do_commit_modified_msg(127,4559
char *get_quarantine_url_params get_quarantine_url_params129,4599
quarantine_report *quarantine_report_new(quarantine_report_new130,4656
void cf_report(131,4700
const char* get_action_type_string(133,4765
Action *action_scan_string(action_scan_string134,4818

/emcsvn/emc/emcmailer/trunk/contentfilter/action_set.c,734
static char*rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
int smime_footer_position 21,384
int is_signed 22,416
int is_encrypted 23,436
const char *smime_text_footer_id smime_text_footer_id24,459
const char *smime_html_footer_id smime_html_footer_id25,501
ActionStatus actionset_apply(27,544
void actionset_secure_apply(185,5001
char* actionset_get_string(345,9506
ActionSet *actionset_new(actionset_new378,10092
void actionset_append(383,10177
void actionset_prepend(391,10314
Action* actionset_get_action(399,10453
int actionset_get_count(407,10633
gboolean actionset_contains_type(415,10745
void actionset_free(430,11055
ActionSet *actionset_scan_string(actionset_scan_string447,11352

/emcsvn/emc/emcmailer/trunk/contentfilter/action_set.h,439
#define ACTIONSET_H_2,21
int actionset_get_count(7,94
char* actionset_get_string(8,141
Action* actionset_get_action(9,191
ActionStatus actionset_apply(11,258
void actionset_secure_apply(12,310
void actionset_free(14,384
ActionSet *actionset_new(actionset_new16,428
void actionset_append(17,456
void actionset_prepend(18,517
ActionSet *actionset_scan_string(actionset_scan_string20,580
gboolean actionset_contains_type(21,628

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_rule.c,2507
		*rcsid rcsid2,12
static void use_rcsid(3,86
#define _GNU_SOURCE13,198
#define	WHITELIST	35,688
#define	BLACKLIST	36,708
#define STR_CHECKSUM_MD5 38,729
#define STR_CHECKSUM_SHA1 39,764
#define STR_CHECKSUM_SHA256 40,801
		MATCH_OP_STR 44,901
		RULE_CRITERIA_STR 97,3075
list_db_s DB_DOMAIN_LIST 164,5987
list_db_s DB_LIST_INFO 168,6102
const char *ipAddress=ipAddress182,6446
const char *outIpAddress outIpAddress183,6475
const char *inIpAddress inIpAddress184,6508
DataList *encTypeList encTypeList186,6542
const char *encTypes[encTypes187,6572
gboolean gmime_part_is_encrypted 190,6704
RuleStatus rule_apply(243,7920
DataList *rule_get_data_list(rule_get_data_list985,29332
RuleStatus rule_match(1018,29890
AttachmentStatus *attachment_status_new(attachment_status_new1108,32072
RuleStatus rule_attachment_match(1120,32303
gboolean rule_get_default(1715,47765
Rule *rule_new(rule_new1720,47866
Rule *rule_new_simple(rule_new_simple1734,48107
Rule *rule_copy(rule_copy1745,48318
void rule_clear(1752,48426
void rule_free(1778,49007
void rule_set_ruleID(1795,49295
void rule_set_listID(1800,49379
void rule_set_count(1805,49463
void rule_set_points(1821,49704
void rule_set_criteria(1826,49780
void rule_set_case_sensitive(1865,50623
void rule_set_reverse_op(1870,50707
void rule_set_matchOp(1875,50783
void rule_set_data(1892,51109
void rule_set_countOp(1897,51193
unsigned long rule_get_list_id(1921,51722
DATA_TYPE rule_get_data_type(1933,51920
DATA_TYPE rule_set_data_type(1938,51990
RuleStatus rule_set_matched(1944,52108
RuleStatus rule_set_status(1954,52296
void rule_set_repeat_points(1960,52399
void rule_set_n_matches(1965,52498
int rule_get_n_matches(1970,52581
gboolean rule_is_valid(1975,52645
unsigned long rule_get_ruleID(1984,52784
int rule_get_criteria(1989,52853
char* rule_get_criteria_str(1994,52916
gboolean is_attachment_criteria(1999,52988
int rule_get_match_op(2011,53425
char* rule_get_match_op_str(2016,53487
int rule_get_count_op(2021,53558
char* rule_get_count_op_str(2026,53620
const char* rule_get_data(2031,53691
gboolean rule_has_count(2036,53754
int rule_get_count(2047,54265
gboolean rule_get_matched(2052,54322
RuleStatus rule_get_status(2057,54405
float rule_get_points(2062,54471
float rule_get_total_points(2067,54532
int rule_get_repeat_points(2076,54692
int rule_get_priority(2081,54764
Rule * rule_scan_string(2086,54845
void showRuleFormat(2189,57001
char* rule_get_string(2228,57929

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_rule.h,3486
#define FILTER_RULE_H_2,23
#define OVECSIZE 10,196
#define MAX_TOKENS	11,221
#define COUNT_AT_LEAST	13,249
#define COUNT_AT_MOST	14,277
#define COUNT_EXACTLY	15,304
#define COUNT_AT_LEAST_STR	17,332
#define COUNT_AT_MOST_STR	18,372
#define COUNT_EXACTLY_STR	19,410
typedef enum CRITERIA26,638
	CRITERIA_NONE,28,662
	CRITERIA_ENV_TO,29,678
	CRITERIA_ENV_FROM,30,696
	CRITERIA_SENDER_DOMAIN,31,716
	CRITERIA_RECIPIENT_DOMAIN,32,741
	CRITERIA_SENDER,33,769
	CRITERIA_RECIPIENT,34,787
	CRITERIA_TIME,35,808
	CRITERIA_DATE,36,824
	CRITERIA_SIZE,37,840
	CRITERIA_IP_ADDRESS,38,856
	CRITERIA_FROM,39,878
	CRITERIA_FROM_ALL,40,894
	CRITERIA_FROM_NAME,41,914
	CRITERIA_FROM_ADDR,42,935
	CRITERIA_TO,43,956
	CRITERIA_TO_ALL,44,970
	CRITERIA_TO_NAME,45,988
	CRITERIA_TO_ADDR,46,1007
	CRITERIA_CC,47,1026
	CRITERIA_CC_ALL,48,1040
	CRITERIA_CC_NAME,49,1058
	CRITERIA_CC_ADDR,50,1077
	CRITERIA_BCC,51,1096
	CRITERIA_BCC_ALL,52,1111
	CRITERIA_BCC_NAME,53,1130
	CRITERIA_BCC_ADDR,54,1150
	CRITERIA_SUBJECT,55,1170
	CRITERIA_CUSTOM_HEADER,56,1189
	CRITERIA_HEADERS,57,1214
    CRITERIA_MAILBOX_SERVICE,58,1233
	CRITERIA_PEOPLE_DIRECTORY,59,1263
	CRITERIA_PRIORITY,60,1291
	CRITERIA_STATUS,61,1311
	CRITERIA_MESSAGE,62,1329
	CRITERIA_MESSAGE_DATE,63,1348
	CRITERIA_MESSAGE_TIME,64,1372
	CRITERIA_TEXT_BODY_SIZE,65,1396
	CRITERIA_HTML_BODY_SIZE,66,1422
	CRITERIA_BODY_SIZE,67,1448
	CRITERIA_BODY,68,1469
	CRITERIA_ATTACHMENT_COUNT,69,1485
	CRITERIA_ATTACHMENT_NAME,70,1513
	CRITERIA_ATTACHMENT_SIZE,71,1540
	CRITERIA_ATTACHMENT_CHECKSUM,72,1567
	CRITERIA_ATTACHMENT_TOTAL_SIZE,73,1598
	CRITERIA_ATTACHMENT_EXT,74,1631
	CRITERIA_ATTACHMENT_TYPE,75,1657
	CRITERIA_ATTACHMENT76,1684
} CRITERIA;77,1705
RuleStatus rule_apply(79,1718
Rule* rule_new(81,1754
void rule_clear(82,1772
void rule_free(83,1801
Rule *rule_new_simple(rule_new_simple85,1830
unsigned long rule_get_ruleID(87,1899
const char* rule_get_data(88,1942
int rule_get_count(89,1981
int rule_get_criteria(91,2014
char* rule_get_criteria_str(92,2049
gboolean is_attachment_criteria(93,2090
int rule_get_match_op(95,2146
char* rule_get_match_op_str(96,2181
int rule_get_count_op(97,2222
char* rule_get_count_op_str(98,2257
int rule_get_priority(100,2299
char* rule_get_string(101,2334
gboolean rule_get_matched(102,2369
RuleStatus rule_get_status(103,2408
void rule_set_n_matches(104,2448
int rule_get_n_matches(105,2499
float rule_get_points(106,2535
float rule_get_total_points(107,2570
int rule_get_repeat_points(108,2611
DATA_TYPE rule_get_data_type(109,2651
void rule_set_ruleID(111,2694
void rule_set_count(112,2750
void rule_set_points(113,2794
void rule_set_repeat_points(114,2842
DATA_TYPE rule_set_data_type(115,2901
void rule_set_criteria(117,2964
void rule_set_matchOp(118,3025
void rule_set_data(119,3084
void rule_set_countOp(120,3134
RuleStatus rule_set_matched(121,3193
RuleStatus rule_set_status(122,3252
unsigned long rule_get_list_id(123,3311
DataList *rule_get_data_list(rule_get_data_list124,3355
void rule_set_case_sensitive(125,3397
void rule_set_reverse_op(126,3451
void rule_set_listID(127,3501
gboolean rule_get_default(129,3558
gboolean rule_is_valid(130,3597
Rule *rule_copy(rule_copy131,3633
gboolean rule_has_count(133,3663
RuleStatus rule_match(135,3701
RuleStatus rule_attachment_match(136,3754
int rule_file_match(137,3813
Rule *rule_scan_string(rule_scan_string139,3873
void showRuleFormat(140,3918

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_debugging.c,432
		*rcsid rcsid13,212
static void use_rcsid(14,287
#define _GNU_SOURCE24,399
void debug_show_filter_data(38,821
void debug_show_filters(70,1394
void print_mime_message(93,1886
void print_mime_struct(137,2986
int write_attachment(232,4971
void debug_print_dh(280,5765
void debug_print_attach_parts(298,6413
void glist_test(344,7684
GList *debug_glist_create(debug_glist_create353,7864
void debug_glist_destroy(368,8072

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_debugging.h,336
void debug_show_filters(13,204
void debug_show_filter_data(14,242
void print_mime_message(17,343
void print_mime_struct(18,405
int write_attachment(19,474
void debug_print_dh(22,591
void debug_print_attach_parts(23,631
void glist_test(26,755
GList *debug_glist_create(debug_glist_create27,774
void debug_glist_destroy(28,803

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_common.c,1771
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
EmcConfig *config=config30,558
gboolean process_all_attachments=31,583
gboolean process_all_rules=32,624
Filter* current_filter=33,659
GHashTable *global_pref_hash global_pref_hash35,690
const char* realm_get_pref(37,728
void set_current_filter(72,1495
Filter *get_current_filter(get_current_filter77,1566
void set_process_all_attachments(82,1624
gboolean get_process_all_attachments(87,1710
void set_process_all_rules(92,1787
gboolean get_process_all_rules(97,1861
const char *get_domain(get_domain102,1971
const char *get_global_token_value(get_global_token_value115,2160
char *replace_tokens replace_tokens221,4390
cf_options *cf_options_new(cf_options_new306,5821
void cf_options_clear(314,5977
void cf_options_free(336,6523
void cf_options_init(377,7307
gboolean cf_log(890,19047
#define MEGA_SUMMARY_LEN 1045,22883
void do_one_line_cf_report(1047,22916
typedef struct attachment_report_t1153,25056
	Rule *rule;rule1155,25093
	char *attachment_name;attachment_name1156,25106
	gboolean matched;1157,25130
}attachment_report_s;attachment_report_s1158,25149
GArray *attachment_report_list=attachment_report_list1160,25172
void attachment_report_new(1162,25211
gboolean attachment_matched(1209,26746
void attachment_report_free(1231,27220
int hash_get_val(1257,27689
const char *hash_get_desc(hash_get_desc1271,27871
CF_HASH_NODE *hash_get_node(hash_get_node1284,28064
const char *to_string(to_string1298,28256
unsigned char* urlencode(1311,28417
char *str_replace(str_replace1345,28947
char *get_rand_word(get_rand_word1375,29410
gboolean dir_check_and_create 1393,29773
int copy_file(1412,30195
char* file_checksum(1446,31033

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_common.h,9118
#define CF_COMMON_H_2,21
#define	DEMIME_TEST	13,224
#define	PROCESS_ALL_RULES	14,254
#define	REORDER_RULES	15,288
#define	SIMULATE_ACTIONS	16,319
#define	SKIP_CUSTOMER_FILTERS	17,352
#define	SKIP_DOMAIN_FILTERS	18,389
#define	SKIP_USER_FILTERS	19,425
#define	QC_POLICY_TEST	20,459
#define	STAND_ALONE_TEST	21,491
#define CF_FATAL 24,539
#define CF_ERROR 25,566
#define CF_DEBUG 26,593
#define ACTION_DONE_INFO 27,620
#define CF_INFO 28,653
#define STATS_INFO 29,679
#define AGENT_ACTION_INFO 30,708
#define SQL_INFO 31,743
#define FILTER_INFO 32,770
#define RULESET_INFO 33,799
#define ACTIONSET_INFO 34,829
#define EXCEPTIONLIST_INFO 35,862
#define APPLYLIST_INFO 36,898
#define HEADER_DATA_INFO 37,931
#define MSG_DATA_INFO 38,965
#define MATCHED_INFO 39,997
#define NOT_MATCHED_INFO 40,1028
#define MIME_STRUCT_INFO	41,1062
#define DEMIME_OUTPUT_INFO	42,1095
#define DEMIME_DUMP_INFO	43,1130
#define CF_EXTINFO 44,1163
#define LOG_MATCHED_ITEMS 46,1194
typedef enum AgentName48,1225
	POLICYSMART,50,1250
	OUTPOLICYSMART,51,1264
	SPOOL,52,1281
	OUTSPOOL,53,1290
	PACTION,54,1301
	OUTPACTION,55,1311
	SMIME,56,1324
	OUTSMIME57,1332
} AgentName;58,1342
typedef enum CypherActionStatus60,1356
	DECRYPTION_OK,62,1390
	SIGNATURE_OK,63,1406
	CERTIFICATE_NOT_FOUND,64,1421
	INVALID_CERTIFICATE,65,1445
	INVALID_PRIVATE_KEY,66,1467
	INVALID_CERTIFICATE_PASSWORD,67,1489
	DECRYPTION_FAILED,68,1520
	INVALID_SIGNATURE,69,1540
	NOT_SIGNED,70,1560
	NOT_ENCRYPTED71,1573
} CypherActionStatus;72,1588
typedef enum ActionStatus74,1611
	ACTION_SKIPPED,76,1639
	SOFT_ACTION_FAILED,77,1656
	HARD_ACTION_FAILED,78,1677
	SOFT_ACTION_DONE,79,1698
	HARD_ACTION_DONE,80,1717
	ACTION_DELAYED,81,1736
	HARD_ACTION_DELAYED82,1753
} ActionStatus;83,1774
typedef enum RuleStatus85,1791
	RULE_NOT_CHECKED,87,1817
	RULE_MATCHED,88,1836
	RULE_NOT_MATCHED,89,1851
	RULE_SKIPPED90,1870
} RuleStatus;91,1884
typedef enum FilterStatus93,1899
	FILTER_NOT_CHECKED,95,1927
	APPLY_LIST_MATCHED,96,1948
	APPLY_LIST_NOT_MATCHED,97,1969
	EXCEPTION_LIST_MATCHED,98,1994
	EXCEPTION_LIST_NOT_MATCHED,99,2019
	FILTER_SKIPPED,100,2048
	FILTER_APPLIED,101,2065
	HARD_FILTER_APPLIED102,2082
} FilterStatus;103,2103
#define MAX_LOG_MSG_LEN 105,2120
#define MAX_ATTACHMENT_SIZE	108,2270
#define EMC_READ_BUFFER_SIZE	109,2320
typedef struct action_t111,2356
	unsigned long actionID;113,2382
	int type;116,2444
	char *actionStr;actionStr117,2455
	char *data;data118,2473
	ActionStatus status;119,2486
}Action;Action120,2508
typedef enum DATA_TYPE122,2518
	GENERAL_LIST,124,2543
	EMAIL,125,2558
	EMAIL_LIST,126,2566
	DOMAIN,127,2579
	DOMAIN_LIST,128,2588
	IP_ADDRESS,129,2602
	IP_LIST,130,2615
	STRING,131,2625
	TEXT,132,2634
	SCALAR,133,2641
	SIZE,134,2650
	DATE135,2657
} DATA_TYPE;136,2663
typedef struct AttachmentStatus_t138,2677
	struct demime_part *demimePart;demimePart140,2713
	RuleStatus status;141,2746
	int nMatches;142,2766
	char *summary;summary143,2781
} AttachmentStatus;144,2797
typedef struct rule_t146,2818
	unsigned long ruleID;148,2842
	char *criteriaStr;criteriaStr151,2900
	int criteria;152,2920
	char *matchOpStr;matchOpStr153,2935
	int matchOp;154,2954
	gboolean caseSensitive;155,2968
	gboolean reverseOp;156,2994
	unsigned long listID;157,3015
	char *data;data158,3038
	DATA_TYPE dataType;159,3052
	char *countOpStr;countOpStr160,3073
	int countOp;161,3092
	int count;162,3106
	int repeatPoints;163,3118
	float points;164,3181
	char *joinOp;joinOp165,3196
	RuleStatus status;166,3211
	int nMatches;167,3231
	GArray *attachmentStatusArray;attachmentStatusArray168,3246
}Rule;Rule173,3364
typedef struct RuleSet_t175,3372
	unsigned long ruleSetID;177,3399
	char *matchOp;matchOp178,3425
	float points;179,3441
	GArray *rules;rules180,3456
	gboolean matched;181,3472
	int totalPoints;182,3491
}RuleSet;RuleSet183,3509
typedef GArray ActionSet;185,3520
typedef struct filter_t187,3547
	unsigned long filterID;189,3573
	unsigned long policyID;190,3598
	unsigned long ruleSetID;192,3642
	unsigned long actionSetID;193,3668
	long applyListID;194,3696
	long exceptionListID;195,3715
	char *type;type196,3738
	gboolean activeFlag;197,3751
	char *owner;owner198,3773
	char *name;name199,3787
	RuleSet *ruleSet;ruleSet201,3823
	ActionSet *actionSet;actionSet202,3842
	FilterStatus status;203,3865
}Filter;Filter204,3887
typedef struct CF_HASH_NODE_t206,3897
	char *key;key208,3929
	int val;209,3941
	char *desc;desc210,3951
}CF_HASH_NODE, *CF_HASH;CF_HASH211,3964
int hash_get_val(213,3990
const char *hash_get_desc(hash_get_desc214,4039
CF_HASH_NODE *hash_get_node(hash_get_node215,4097
typedef struct cf_options_t217,4158
	unsigned int reportmode;219,4188
	unsigned int runOptions;220,4239
	int outboundmode;221,4291
	const char *user;user222,4310
	char *sender;sender223,4329
	char *from_address;from_address224,4344
	char *recipient;recipient225,4365
	char *msgid;msgid226,4383
	char *data;data227,4397
	char *short_msgid;short_msgid228,4410
	char *domain;domain229,4430
	char *filename;filename230,4445
	char *modified_filename;modified_filename231,4462
	char *spooldir;spooldir232,4488
	char *configfile;configfile233,4505
	char *smime_action;smime_action234,4524
	long int inode;235,4545
	Filter *filter;filter236,4562
	AgentName agent_name;237,4579
}cf_options;cf_options238,4602
#define SPAM_REP_SEP 240,4616
#define BOX_FA_LEN 241,4641
#define RULES_SUMMARY_HEADER_LEN 242,4664
#define IP_LEN 243,4701
#define SUBJ_LEN 244,4719
#define SUBJ_LEN_ENC 245,4739
#define BODY_LEN 246,4773
#define BODY_LEN_ENC 247,4834
typedef struct quarantine_report_t248,4916
	char* filename;250,4953
	const char* user;251,4970
	const char* sender;252,4989
	const char* recip;253,5010
	unsigned long filter_id;254,5030
	const char* policy_owner;255,5056
	unsigned long policy_id;256,5083
	const char* policy_name;257,5109
	const char* ip;258,5135
	const char* subject;259,5152
	const char* body;260,5174
	const char* access_type;261,5193
	unsigned long long filesize;262,5219
	int spool_days;263,5249
	const char *uid;uid264,5266
	char server[server265,5284
	time_t time;266,5303
	const char *table;table267,5317
	gboolean outbound;268,5365
}quarantine_report;quarantine_report269,5385
typedef struct DomainKeys_t271,5406
	int keyID;273,5436
	char *name;name274,5448
	char *owner;owner275,5461
	char* type;276,5475
	char* selector;277,5505
	char* privateKey;278,5548
	char* publicKey;279,5567
	char* password;280,5585
}DomainKeys;DomainKeys281,5602
typedef struct SMimeKeys_t283,5616
	int keyID;285,5645
	char* name;286,5657
	char* owner;287,5670
	char* privateKey;288,5684
	char* certificate;289,5703
	char* password;290,5723
	char* status;291,5740
    gboolean deleted;292,5755
}SMimeKeys;SMimeKeys293,5777
typedef struct AkaDomain_t295,5790
	char *aka_default;aka_default297,5819
	char* primary_service;298,5839
	char* preferred_mailstore;299,5863
	char* preferred_maildir;300,5891
	unsigned long cus_num;301,5917
	char* aka_nomb_action;302,5941
	char* aka_nomb_server;303,5965
	char* aka_nomb_address;304,5989
	char* aka_nomb_server_type;305,6014
}AkaDomain;AkaDomain306,6043
typedef struct Mailbox_t308,6056
	unsigned long long rid;310,6083
	char* aka_domain;311,6108
	char* box_id;312,6127
	char* box_fulladdress;313,6142
	char* box_pass;314,6166
	char* password;315,6183
	unsigned long box_num;316,6200
	int mc_num;317,6224
	int pg_num;318,6237
	int wp_num;319,6250
	char* box_mailstore;320,6263
	char* box_maildir;321,6285
	char* primary_service;322,6305
	char* created_by;323,6329
	char* modified_by;324,6348
	char* realm;325,6368
}Mailbox;Mailbox326,6382
cf_options *cf_options_new(cf_options_new328,6393
void cf_options_init(329,6423
void cf_options_clear(330,6490
void cf_options_free(331,6534
void attachment_report_new(333,6578
gboolean attachment_matched(335,6697
void attachment_report_free(336,6755
char *escape_percents(escape_percents338,6787
gboolean cf_log(339,6830
void do_one_line_cf_report(340,6902
void set_process_all_attachments(342,6954
gboolean get_process_all_attachments(343,7003
void set_process_all_rules(345,7044
gboolean get_process_all_rules(346,7087
const char *get_domain(get_domain348,7122
void set_current_filter(350,7173
Filter *get_current_filter(get_current_filter351,7214
const char* realm_get_pref(353,7245
const char *to_string(to_string355,7315
unsigned char *urlencode(urlencode356,7355
char *str_replace(str_replace358,7397
char *get_rand_word(get_rand_word360,7470
gboolean dir_check_and_create 361,7503
char *replace_tokens replace_tokens363,7557
const char *get_global_token_value(get_global_token_value364,7615
char* agent_data_get_value(365,7670
int copy_file(367,7734
char* file_checksum(368,7790
extern cf_options *cf_args;cf_args370,7863
extern EmcConfig *config;config371,7891
extern int debugmode;372,7917
extern char policyIDs[policyIDs373,7939

/emcsvn/emc/emcmailer/trunk/contentfilter/contentfilter.c,1792
		*rcsid rcsid11,148
static void use_rcsid(12,224
#define _GNU_SOURCE22,336
#define	MAX_ARCHIVES	45,1043
EmcQImpl *impl=impl46,1067
const unsigned char *archiveHints[archiveHints48,1090
int nArchiveHints 50,1148
int debugmode 52,1172
char *msgid=msgid55,1342
int inbound 61,1643
int verify_signature 64,1782
int decrypt_message 65,1856
int apply_all_policies 66,1935
int apply_realm_policies(67,2025
int set_archive_hint(69,2095
cf_options *cf_args=cf_args71,2120
list_db_s DB_EXCEPTION_LIST 73,2148
list_db_s DB_APPLY_LIST 77,2271
GArray* g_matches 81,2386
int main(88,2459
int apply_all_policies 489,13422
int apply_realm_policies(507,13834
char* agent_data_get_value(554,14842
int verify_signature 605,15496
int decrypt_message 675,17302
void cf_exit(786,20604
FilterStatus filterlist_apply(818,21080
void filterlist_free(843,21588
int filterlist_count(863,21956
FilterList *filterlist_new(filterlist_new868,22036
FilterList * filterlist_append(875,22122
void filter_add_archive_hint(881,22267
int set_archive_hint(914,23039
FilterStatus filter_apply(941,23596
Filter * filter_new(1173,29972
void filter_clear(1188,30194
void filter_set_type(1207,30569
void filter_free(1222,30925
RuleSet *filter_get_ruleset(filter_get_ruleset1240,31198
ActionSet *filter_get_actionset(filter_get_actionset1251,31538
unsigned long filter_get_id(1260,31738
const char* filter_get_name(1265,31813
const char* filter_get_type(1270,31884
const char* filter_get_owner(1275,31955
unsigned long filter_get_policy_id(1280,32028
FilterStatus filter_get_status(1285,32110
FilterStatus filter_set_status(1290,32186
const char *filter_get_short_desc(filter_get_short_desc1296,32301
gboolean is_customer_filter 1311,32594
gboolean is_domain_filter 1320,32736

/emcsvn/emc/emcmailer/trunk/contentfilter/contentfilter.h,1024
#define CONTENT_FILTER_H_8,111
#define FILTER_TYPE_INBOUND	15,225
#define FILTER_TYPE_OUTBOUND	16,264
#define FILTER_TYPE_BOTH	17,304
typedef GList FilterList;19,338
Filter* filter_new(21,365
void filter_clear(22,387
void filter_free(23,422
void filter_set_type(24,451
FilterStatus filter_set_status(25,507
FilterStatus filter_get_status(26,576
gboolean is_customer_filter 28,625
gboolean is_domain_filter 29,666
unsigned long filter_get_id(31,706
unsigned long filter_get_policy_id(32,751
const char* filter_get_name(33,803
const char* filter_get_type(34,848
const char* filter_get_owner(35,893
const char *filter_get_short_desc(filter_get_short_desc36,939
int filterlist_count(38,986
FilterList* filterlist_new(39,1032
FilterList* filterlist_append(40,1062
FilterStatus filterlist_apply(41,1133
void filterlist_free(42,1188
FilterStatus filter_apply(44,1235
RuleSet* filter_get_ruleset(46,1279
ActionSet* filter_get_actionset(47,1324
void filter_add_archive_hint(49,1374
void cf_exit(51,1421

/emcsvn/emc/emcmailer/trunk/exdeliver.c,774
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define _GNU_SOURCE8,189
extern int debugmode;29,583
extern int pretendmode;30,605
extern const char *msgid;msgid31,629
extern exdeliver_options exdeliver_opts;33,656
#define BUFFER_SIZE 35,698
#define MAX_BATCH 36,727
#define EXIM_QUEUE_MODE_THRESHOLD 37,748
EmcHash * ex_recipients;39,787
void do_exfilenames(43,862
void do_exhosts(44,920
int do_retail(45,974
int do_ex_recipient(46,1047
int do_batch(47,1127
int rcomp(48,1199
long queue_threshold 51,1243
int queue_override 52,1293
long total_recipients 53,1317
int do_exdeliver(55,1345
void do_exfilenames(214,4901
void do_exhosts(222,5098
int do_batch(341,7501
int do_retail(580,12986
int do_ex_recipient(594,13218
int rcomp(823,18908

/emcsvn/emc/emcmailer/trunk/exdeliver.h,226
#define EX_DELIVER_H2,21
typedef struct exdeliver_options_t 8,109
	EmcQImpl * impl;10,148
	EmcConfig * config;11,166
	int batch_num;12,187
	const char * sender;13,203
} exdeliver_options;15,226
int do_exdeliver(17,248

/emcsvn/emc/emcmailer/trunk/smtp.c,334
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
const char *readlinefp_cb(readlinefp_cb21,405
void print_recipient_status(22,465
int smtpsendsingle(24,555
void print_recipient_status 118,3046
#define BUFLEN	127,3279
const char *readlinefp_cb readlinefp_cb129,3300
void monitor_cb 157,3744

/emcsvn/emc/emcmailer/trunk/smtp.h,46
#define _SMTP_H2,16
int smtpsendsingle(4,33

/emcsvn/emc/emcmailer/trunk/utils.c,227
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define FALSE 18,362
#define TRUE 19,378
char * safe_strdup(22,401
void * safe_malloc(30,589
int safe_asprintf(42,838
void chomp(57,1142

/emcsvn/emc/emcmailer/trunk/utils.h,118
#define _EMC_UTILS2,19
int safe_asprintf(6,60
char * safe_strdup(7,119
void * safe_malloc(8,159
void chomp(9,206

/emcsvn/emc/emcmailer/trunk/qcleaner.c,279
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
int debugmode 27,516
int ownmode 28,535
char * msgid 29,552
char * configfile 30,572
EmcConfig * config 31,598
EmcQImpl * impl 32,625
void init(34,650
int main(36,664
void init(124,2423

/emcsvn/emc/emcmailer/trunk/qinject.c,871
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char *recipient recipient24,476
EmcArray *recips recips25,500
char *sender sender26,525
char *msgid msgid27,546
char *data data28,566
int debugmode 29,585
int allow_ext 30,604
int lmtp 31,623
int outboundmode=33,638
FILE *tmp_msg tmp_msg35,660
char *tmp_dir tmp_dir36,682
char *tmp_file tmp_file37,704
long host_id 39,728
const char *configfile configfile41,748
EmcConfig *config config42,779
#define CINLINE 44,806
#define BUFFER_SIZE 45,829
CINLINE int em_readline(47,860
CINLINE int _em_read(48,915
EmFd *em_new_fd(em_new_fd49,958
void do_args(51,981
int do_inject(136,2671
void transfer_recips(216,4478
void do_lmtp(223,4619
int main(429,9858
EmFd *em_new_fd(em_new_fd556,12316
CINLINE int _em_read(573,12547
CINLINE int em_readline(598,12978

/emcsvn/emc/emcmailer/trunk/logger.c,236
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
extern const char *msgid;msgid16,327
extern int debugmode;17,353
void virus_logger(19,376
void mailer_log_simple(76,1861
void mailer_log(103,2533

/emcsvn/emc/emcmailer/trunk/logger.h,556
#define LOGGER_H4,38
#define REPORT_ERROR 6,56
#define REPORT_DEBUG 7,79
#define REPORT_AGENT 8,102
#define REPORT_STATS 9,125
#define REPORT_INFO 10,148
#define DEBUG_SYSLOG 13,173
#define DEBUG_STDOUT 14,202
#define DEBUG_RULE 15,231
#define DEBUG_FINGERPRINT 16,260
#define DEBUG_CONFIG 17,289
#define DEBUG_WARN 18,319
#define DEBUG_FAIL 19,349
#define DEBUG_INFO 20,379
#define DEBUG_RESULT 21,410
#define DEBUG_PARSE_DOM 22,441
#define DEBUG_MAX 23,472
void spam_logger(25,504
void mailer_log(26,557
void mailer_log_simple(27,617

/emcsvn/emc/emcmailer/trunk/parse.c,138
static char *rcsid rcsid1,0
static void use_rcsid(2,78
void print_mime_struct(15,315
int main(17,370
void print_mime_struct(50,1027

/emcsvn/emc/emcmailer/trunk/ldeliver_main.c,324
static char *rcsid rcsid1,0
static void use_rcsid(2,85
#define BUFFER_SIZE 20,399
char * msgid 23,453
int debugmode 24,474
int pretendmode 25,493
const char * sender;27,515
long batch_num 28,536
const char * queue_type 29,556
const char * configfile 30,588
ldeliver_options ldeliver_opts;32,621
int main(34,654

/emcsvn/emc/emcmailer/trunk/courier_deliver/private.h,190
#define SENDMAIL 1,0
#define BMC_DELIVER_EXE 2,61
#define CORRUPT_MAILBOX_TO_ADDRESS 3,120
#define CORRUPT_MAILBOX_FROM_ADDRESS 4,185
void do_deliver(7,301
void corrupt_mailbox 14,650

/emcsvn/emc/emcmailer/trunk/courier_deliver/dagent-dovecot.c,740
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,194
#define MYBUFSIZE 21,428
#define MAX_ADDRESS_LEN 22,451
void usage(24,480
struct delivery *get_delivery_info(get_delivery_info25,498
char *decode_address(decode_address26,561
int make_maildirfolder(27,599
struct delivery 29,645
	char mailbox[mailbox30,663
	char address[address31,690
	char maildir[maildir32,724
long dodeliver(35,755
char *get_delivery_maildir(get_delivery_maildir36,810
char *get_quota(get_quota37,860
char *get_quota(get_quota39,901
int make_maildirfolder(113,3019
char *decode_address(decode_address167,4426
struct delivery *get_delivery_info(get_delivery_info204,5050
void usage(238,5793
int main 244,5885

/emcsvn/emc/emcmailer/trunk/courier_deliver/common.h,2637
#define EMC_MAILER_COMMIN2,26
#define DEBUG_SYSLOG 31,553
#define DEBUG_INFO 32,578
#define DEBUG_INFO2 33,603
#define DEBUG_DB_QUERY 34,628
#define DEBUG_DB_OUT 35,653
#define DEBUG_STDOUT 36,679
#define DEBUG_FAIL 37,705
#define DEBUG_WARN 38,731
#define DEBUG_CONFIG 39,758
#define DEBUG_MAX 40,785
struct conf 42,813
	char *emc_bin_dir;emc_bin_dir44,846
	char *qmail_bin_dir;qmail_bin_dir45,866
	char *aka_tmp_dir;aka_tmp_dir46,888
	char *qmail_queue;qmail_queue49,925
	char *sendmail;sendmail50,945
	char *mf_script;mf_script51,962
	char *quota_check;quota_check52,980
	char *db_connect_timeout;db_connect_timeout55,1018
	char *aka_db_read_server;aka_db_read_server56,1045
	char *aka_db_read_user;aka_db_read_user57,1072
	char *aka_db_read_pass;aka_db_read_pass58,1097
	char *aka_db_read_name;aka_db_read_name59,1122
	char *aka_db_write_server;aka_db_write_server60,1147
	char *aka_db_write_user;aka_db_write_user61,1175
	char *aka_db_write_pass;aka_db_write_pass62,1201
	char *aka_db_write_name;aka_db_write_name63,1227
	char *bounce_email;bounce_email66,1274
	char *abuse_email;abuse_email67,1295
	char *abuse_phone;abuse_phone68,1315
	char *local_delivery;local_delivery71,1359
	char *delivery_domain;delivery_domain72,1382
struct vars75,1410
	char *configfile;configfile77,1424
	int  debugmode;78,1443
	long forward_count;79,1460
	char *forward_addresses[forward_addresses80,1481
	long pop_count;81,1524
  char *pop_addresses[pop_addresses82,1541
  char *pop_mailboxes[pop_mailboxes83,1577
  long list_count;84,1613
  char *list_addresses[list_addresses85,1632
  long auto_count;86,1670
  char *auto_addresses[auto_addresses87,1689
  long listserve_count;88,1727
  char *listserve_addresses[listserve_addresses89,1751
  char *sender;sender90,1785
	char *messageid;messageid91,1801
  long bounce_count;92,1819
  char *bounce_addresses[bounce_addresses93,1840
  char *bounce_reasons[bounce_reasons94,1871
  MYSQL sock;95,1900
  long message_size;96,1914
  char *arg1;arg197,1935
  char *arg2;arg298,1949
  char *arg3;arg399,1963
  char *arg4;arg4100,1977
  char *arg5;arg5101,1991
  char *arg6;arg6102,2005
	struct conf config;103,2019
int read_env(113,2345
void aka_logger(114,2397
void aka_exit 115,2497
void sortem 116,2561
void add_bounce 118,2693
void add_pop 119,2775
void add_forward 120,2840
void memerror2 122,2921
void mserror2 124,2955
void put_date 126,3060
void qmail_q 131,3403
void exim_q 132,3485
void exim_qq 133,3566
void do_bounce 138,3934
void do_forward 142,4232
int is_special_sender(146,4527

/emcsvn/emc/emcmailer/trunk/courier_deliver/defaults.h,143
#define CONFIG_H2,17
#define MAX_FORWARD 4,35
#define MAX_POP 5,61
#define MAX_LIST 6,82
#define MAX_AUTO 7,103
#define MAX_HEADER 8,125

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/dbobj.h,735
#define	dbobj_h2,16
static const char dbobj_h_rcsid[dbobj_h_rcsid4,33
#define	DbObj	13,257
#define	dbobj	15,280
#define	dbobj_init	16,302
#define	dbobj_open	17,334
#define	dbobj_close	18,366
#define	dbobj_isopen	19,400
#define	dbobj_fetch	20,436
#define	dbobj_exists	21,470
#define	dbobj_delete	22,506
#define	dbobj_store	23,542
#define	dbobj_firstkey	24,576
#define	dbobj_nextkey	25,616
#define	DbObj	30,695
#define	dbobj	32,717
#define	dbobj_init	33,738
#define	dbobj_open	34,769
#define	dbobj_close	35,800
#define	dbobj_isopen	36,833
#define	dbobj_fetch	37,868
#define	dbobj_exists	38,901
#define	dbobj_delete	39,936
#define	dbobj_store	40,971
#define	dbobj_firstkey	41,1004
#define	dbobj_nextkey	42,1043

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmake.c,200
static void usage(31,533
extern FILE *maildir_shared_fopen(maildir_shared_fopen37,621
extern void maildir_shared_fparse(38,684
static void add(40,746
static void del(132,2169
int main(214,3349

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmisc.h,972
#define	maildirmisc_h2,22
static const char maildirmisc_h_rcsid[maildirmisc_h_rcsid17,225
#define	INBOX	27,405
#define	DRAFTS	28,427
#define	SENT	29,451
#define	TRASH	30,471
#define	SHAREDSUBDIR	32,494
char *maildir_folderdir(maildir_folderdir34,533
char *maildir_filename(maildir_filename41,795
int maildir_safeopen(50,1121
int maildir_semisafeopen(66,1744
int maildir_mkdir(76,2022
void maildir_purgetmp(81,2153
void maildir_purge(84,2241
void maildir_getnew(87,2329
int maildir_deletefolder(91,2448
int maildir_mddelete(95,2559
void maildir_list_sharable(97,2634
int maildir_shared_subscribe(102,2821
void maildir_list_shared(106,2947
int maildir_shared_unsubscribe(111,3138
char *maildir_shareddir(maildir_shareddir115,3270
void maildir_shared_sync(122,3471
int maildir_sharedisro(125,3559
int maildir_unlinksharedmsg(128,3657
char *maildir_getlink(maildir_getlink133,3807
int maildir_hasflag(137,3911
#define	MAILDIR_DELETED(139,3961

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirshared.c,1231
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid44,769
#define	YES_WE_CAN_DO_SHARED	52,956
static void list_sharable(62,1056
extern FILE *maildir_shared_fopen(maildir_shared_fopen66,1154
extern void maildir_shared_fparse(67,1217
void maildir_list_sharable(69,1279
static void list_sharable(99,1789
int maildir_shared_subscribe(137,2538
void maildir_list_shared(266,4739
int maildir_shared_unsubscribe(312,5672
char *maildir_shareddir(maildir_shareddir330,5975
static void do_maildir_shared_sync(370,6742
void maildir_shared_sync(372,6807
static int create_db(396,7197
static int build_db(451,8082
static int update_link(510,9050
static int update_cur(523,9379
static int update_link(633,11527
static int newmsgs(704,12663
static void do_maildir_shared_sync(779,13908
int maildir_sharedisro(860,15575
int maildir_unlinksharedmsg(880,15856
void maildir_list_sharable(930,16734
int maildir_shared_subscribe(936,16838
void maildir_list_shared(942,16942
int maildir_shared_unsubscribe(948,17044
char *maildir_shareddir(maildir_shareddir954,17150
void maildir_shared_sync(960,17252
int maildir_sharedisro(964,17303
int maildir_unlinksharedmsg(969,17366

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirpath.c,88
static const char rcsid[rcsid24,371
char *maildir_folderdir(maildir_folderdir26,458

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildiropen.c,148
static const char rcsid[rcsid25,390
char *maildir_getlink(maildir_getlink27,477
int maildir_semisafeopen(64,910
int maildir_safeopen(105,1421

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirquota.c,886
#define NAMLEN(13,207
#define dirent 15,261
#define NAMLEN(16,283
static const char rcsid[rcsid49,855
int maildirsize_read(53,979
static int statcurnew(123,2031
static int statsubdir(124,2078
#define	MDQUOTA_SIZE	126,2140
#define	MDQUOTA_BLOCKS	127,2209
#define	MDQUOTA_COUNT	129,2311
static int qcalc(131,2380
static int	doaddquota(171,3058
static int docheckquota(173,3132
int maildir_checkquota(180,3276
int maildir_readquota(192,3507
static int docheckquota(203,3716
int	maildir_addquota(367,6915
static int doaddquota(375,7190
		char buf[buf380,7354
		struct stat stat_buf;381,7371
char *makenewmaildirsizename(makenewmaildirsizename476,9339
static int statcurnew(509,10009
static int statsubdir(525,10454
static int docount(542,10849
int countcurnew(544,10915
int countsubdir(562,11254
static int docount(580,11687
int maildir_updatequota(649,12847

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirquota.h,328
#define	maildirquota_h2,23
static const char maildirquota_h_rcsid[maildirquota_h_rcsid20,277
int maildir_checkquota(22,383
int maildir_addquota(28,677
int maildir_readquota(34,884
int maildir_parsequota(37,982
int countsubdir(41,1140
char *makenewmaildirsizename(makenewmaildirsizename44,1223
int countcurnew(45,1274

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter2.c,367
static const char rcsid[rcsid25,418
static const char *mf_config(mf_config27,511
static char *mf_config_maildirfilter(mf_config_maildirfilter59,1129
int mf_importmaildirfilter(79,1451
int mf_loadmaildirfilter(181,3140
int mf_savemaildirfilter(199,3500
int mf_exportmaildirfilter(235,4211
int mf_hasmaildirfilter(257,4645
void mf_endmaildirfilter(268,4853

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetquota.c,29
int	maildir_getquota(21,350

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetquota.h,163
#define	maildirgetquota_h2,26
static const char maildirgetquota_h_rcsid[maildirgetquota_h_rcsid20,283
#define	QUOTABUFSIZE	22,392
int maildir_getquota(24,418

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirflags.c,65
static const char rcsid[rcsid9,137
int maildir_hasflag(11,225

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmkdir.c,64
static const char rcsid[rcsid21,315
int maildir_mkdir(23,403

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirparsequota.c,69
static const char rcsid[rcsid13,212
int maildir_parsequota(15,308

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter.c,498
static const char rcsid[rcsid29,524
struct maildirfilterrule *mf_appendrule(mf_appendrule31,616
int mf_ruleupdate(63,1251
void mf_ruledel(322,6315
void mf_ruleup(338,6715
void mf_ruledown(355,7005
static void print_pattern(372,7297
int mf_saverules(390,7608
int mf_loadrules(595,12160
#define	SET(632,12791
int mf_autoresp_info_init(740,14521
int mf_autoresp_info_init_str(752,14740
void mf_autoresp_info_free(779,15209
char *mf_autoresp_info_asstr(mf_autoresp_info_asstr788,15319

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter.h,2034
#define	maildirfilter_h2,24
static const char maildirfilter_h_rcsid[maildirfilter_h_rcsid9,142
enum maildirfiltertype 17,308
	startswith,18,333
	endswith,19,346
	contains,20,357
	hasrecipient,21,368
	mimemultipart,22,383
	textplain,23,399
	islargerthan,24,411
struct maildirfilterrule 27,470
	struct maildirfilterrule *next,next28,497
	struct maildirfilterrule *next, *prev;prev28,497
	char *rulename;rulename29,537
	enum maildirfiltertype type;30,554
	int flags;31,584
#define	MFR_DOESNOT	33,597
#define	MFR_BODY	34,661
#define	MFR_CONTINUE	37,743
#define MFR_PLAINSTRING	38,810
	char *fieldname;fieldname40,882
	char *fieldvalue;fieldvalue41,900
	char *tofolder;tofolder42,919
	char *fromhdr;fromhdr43,936
struct maildirfilter 46,958
	struct maildirfilterrule *first,first47,981
	struct maildirfilterrule *first, *last;last47,981
struct maildirfilterrule *mf_appendrule(mf_appendrule57,1349
int mf_setautoreplyfrom(67,1586
void mf_ruleup(71,1703
void mf_ruledown(72,1771
void mf_ruledel(76,1869
int mf_ruleupdate(80,1970
#define	mf_freerules(90,2180
#define	MF_ERR_BADRULENAME	101,2379
#define	MF_ERR_BADRULETYPE	102,2408
#define	MF_ERR_BADRULEHEADER	103,2437
#define	MF_ERR_BADRULEVALUE	104,2468
#define	MF_ERR_BADRULEFOLDER	105,2498
#define MF_ERR_BADFROMHDR	106,2529
#define MF_ERR_INTERNAL	107,2557
int mf_saverules(111,2630
int mf_loadrules(117,2837
#define	MF_LOADOK	119,2894
#define	MF_LOADNOTFOUND	120,2914
#define	MF_LOADFOREIGN	121,2940
#define	MF_LOADERROR	122,2965
int mf_importmaildirfilter(128,3228
int mf_loadmaildirfilter(129,3299
int mf_savemaildirfilter(130,3363
int mf_exportmaildirfilter(131,3441
int mf_hasmaildirfilter(133,3521
void mf_endmaildirfilter(135,3595
struct mf_autoresp_info 141,3735
	char *name;name142,3761
	int dsnflag;143,3774
	unsigned days;144,3788
int mf_autoresp_info_init_str(147,3809
int mf_autoresp_info_init(148,3881
void mf_autoresp_info_free(149,3949
char *mf_autoresp_info_asstr(mf_autoresp_info_asstr150,4004

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirshared2.c,129
static const char rcsid[rcsid12,192
FILE *maildir_shared_fopen(maildir_shared_fopen14,282
void maildir_shared_fparse(32,571

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirrequota.c,84
static const char rcsid[rcsid14,228
char *maildir_requota(maildir_requota16,321

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirrequota.h,148
#define	maildirrequota_h2,25
static const char maildirrequota_h_rcsid[maildirrequota_h_rcsid17,238
char *maildir_requota(maildir_requota21,415

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilename.c,156
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid41,694
char *maildir_filename(maildir_filename52,1063

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetnew.c,212
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid39,656
static void do_maildir_getnew(41,745
void maildir_getnew(43,805
static void do_maildir_getnew(65,1233

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/autoresponse.c,862
#define NAMLEN(26,448
#define dirent 28,502
#define NAMLEN(29,524
static const char rcsid[rcsid41,711
struct autoresponse_quota 43,802
	unsigned files;44,830
	unsigned long bytes;45,847
struct temp_autoresponse_list 48,874
	struct temp_autoresponse_list *next;next49,906
	char *filename;filename50,944
char **autoresponse_list(autoresponse_list53,966
void autoresponse_list_free(145,2201
static char *afilename(afilename154,2304
int autoresponse_validate(182,3043
static void deletefiles(194,3280
void autoresponse_delete(229,3828
static void read_quota(245,4035
static int get_quota(289,4675
static void add_quota(309,5032
static int calc_quota(319,5240
static int check_quota(361,5955
FILE *autoresponse_create(autoresponse_create371,6235
int autoresponse_create_finish(395,6608
FILE *autoresponse_open(autoresponse_open439,7291

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/autoresponse.h,465
#define	maildir_autoresponse_h2,31
static const char maildir_autoresponse_h_rcsid[maildir_autoresponse_h_rcsid9,156
extern char **autoresponse_list(autoresponse_list20,411
extern void autoresponse_list_free(21,458
extern int autoresponse_validate(25,543
extern void autoresponse_delete(29,651
extern FILE *autoresponse_create(autoresponse_create30,712
extern int autoresponse_create_finish(31,774
extern FILE *autoresponse_open(autoresponse_open33,850

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirdelfolder.c,162
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static int delsubdir(41,694
int maildir_mddelete(70,1158
int maildir_deletefolder(94,1538

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/testmaildirfilter.c,55
static const char rcsid[rcsid12,215
int main(14,308

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreateh.c,78
static const char rcsid[rcsid25,414
int maildir_try_create_hostname(27,507

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircache.c,926
#define NAMLEN(31,537
#define dirent 33,591
#define NAMLEN(34,613
#define	syslog(48,843
static const char rcsid[rcsid51,873
static const char * const *authvars;authvars53,963
static char **authvals;authvals54,1000
static time_t expinterval;55,1024
static time_t lastclean=56,1051
static const char *cachedir;cachedir57,1078
static const char *cacheowner;cacheowner58,1107
int maildir_cache_init(60,1139
static char *create_cache_name(create_cache_name81,1454
static pid_t childproc=151,2808
static int childpipe;152,2836
void maildir_cache_start(154,2859
static int savebuf(289,5275
void maildir_cache_save(302,5424
void maildir_cache_cancel(340,6268
int maildir_cache_search(350,6415
struct purge_list 458,8064
	struct purge_list *next;next459,8084
	char *n;n460,8110
static void add_purge_list(463,8125
static void rmrf(485,8397
void maildir_cache_purge(487,8430
static void rmrf(580,9665

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircache.h,332
#define	logincache_h80,2975
static const char rfc2047_h_rcsid[rfc2047_h_rcsid86,3056
extern int maildir_cache_init(88,3154
extern void maildir_cache_start(90,3252
extern void maildir_cache_save(91,3291
extern void maildir_cache_cancel(93,3383
extern int maildir_cache_search(95,3424
extern void maildir_cache_purge(99,3541

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/deliverquota.c,360
#define	BUFSIZE	31,572
#define	EX_OSERR	35,618
#define	EX_IOERR	39,663
#define EX_TEMPFAIL	43,711
#define	EX_NOPERM	47,760
static const char rcsid[rcsid50,789
static long deliver(52,879
static void do_deliver_warning(55,1014
static void deliver_warning(57,1075
static void do_deliver_warning(87,1639
static long deliver(205,3722
int main(310,5484

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreate.c,100
extern int gethostname(20,308
static const char rcsid[rcsid23,362
int maildir_try_create(25,454

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreate.h,170
#define	maildircreate_h2,24
static const char maildircreate_h_rcsid[maildircreate_h_rcsid17,236
int maildir_try_create(19,341
int maildir_try_create_hostname(28,711

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirpurgetmp.c,156
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static void dopurge(38,637
void maildir_purgetmp(65,1146
void maildir_purge(75,1334

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfiltertypelist.h,219
#define	maildirfiltertypelist_h2,32
static const char maildirfiltertypelist_h_rcsid[maildirfiltertypelist_h_rcsid9,163
	enum maildirfiltertype type;14,321
	const char *name;name15,351
	} typelist[typelist16,370

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj2.c,229
static char *fetchkeyval(fetchkeyval8,123
extern char *gdbm_dofetch(gdbm_dofetch9,199
char	*gdbmobj_firstkey(gdbmobj_firstkey11,277
static char *fetchkeyval(fetchkeyval31,641
char	*gdbmobj_nextkey(gdbmobj_nextkey40,890

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj3.c,26
int	gdbmobj_delete(8,123

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj.c,300
static const char rcsid[rcsid19,277
void gdbmobj_init(21,360
void gdbmobj_close(28,461
int gdbmobj_open(42,641
int gdbmobj_store(82,1297
int	gdbmobj_exists(101,1677
char *gdbm_dofetch(gdbm_dofetch114,1904
char	*gdbmobj_fetch(gdbmobj_fetch116,1975
char *gdbm_dofetch(gdbm_dofetch163,2757

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj.h,1123
#define	gdbmobj_h2,18
static const char gdbmobj_h_rcsid[gdbmobj_h_rcsid9,138
struct gdbmobj 19,311
	GDBM_FILE	dbf;20,328
	int		has_dbf;21,344
	char	*prev_key;prev_key22,359
	size_t	prev_key_len;23,376
void gdbmobj_init(26,404
int gdbmobj_open(28,442
void gdbmobj_close(29,506
#define	gdbmobj_isopen(31,545
char	*gdbmobj_fetch(gdbmobj_fetch33,589
int	gdbmobj_exists(34,674
int	gdbmobj_delete(35,734
int	gdbmobj_store(36,794
char	*gdbmobj_firstkey(gdbmobj_firstkey39,892
char	*gdbmobj_nextkey(gdbmobj_nextkey40,963
class GdbmObj 45,1058
	struct gdbmobj obj;GdbmObj::obj47,1075
	GdbmObj(GdbmObj::GdbmObj49,1097
	GdbmObj	&operator=(GdbmObj::operator=50,1139
	GdbmObj(GdbmObj::GdbmObj53,1200
	~GdbmObj(GdbmObj::~GdbmObj54,1235
	int	Open(GdbmObj::Open55,1272
	int	IsOpen(GdbmObj::IsOpen60,1380
	void	Close(GdbmObj::Close61,1429
	char	*Fetch(GdbmObj::Fetch62,1468
	int	Exists(GdbmObj::Exists69,1628
	int	Delete(GdbmObj::Delete74,1728
	int	Store(GdbmObj::Store79,1828
	char	*FetchFirstKeyVal(GdbmObj::FetchFirstKeyVal87,2013
	char	*FetchNextKeyVal(GdbmObj::FetchNextKeyVal91,2149

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strgidt.c,72
static const char rcsid[rcsid12,186
char *str_gid_t(str_gid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strinot.c,72
static const char rcsid[rcsid12,186
char *str_ino_t(str_ino_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strofft.c,72
static const char rcsid[rcsid12,186
char *str_off_t(str_off_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhinot.c,114
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,270
char *strh_ino_t(strh_ino_t16,320

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strpidt.c,72
static const char rcsid[rcsid12,186
char *str_pid_t(str_pid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strsize.c,100
static const char rcsid[rcsid12,179
static void cat_n(14,262
char *str_sizekb(str_sizekb28,517

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/struidt.c,72
static const char rcsid[rcsid12,186
char *str_uid_t(str_uid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhpidt.c,114
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,270
char *strh_pid_t(strh_pid_t16,320

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strsizet.c,74
static const char rcsid[rcsid12,186
char *str_size_t(str_size_t14,270

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhtimet.c,116
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,271
char *strh_time_t(strh_time_t16,321

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/numlib.h,493
#define	numlib_h2,17
static const char numlib_h_rcsid[numlib_h_rcsid13,175
#define	NUMBUFSIZE	22,354
char	*str_time_t(str_time_t26,424
char	*str_off_t(str_off_t27,458
char	*str_pid_t(str_pid_t28,490
char	*str_ino_t(str_ino_t29,522
char	*str_uid_t(str_uid_t30,554
char	*str_gid_t(str_gid_t31,586
char	*str_size_t(str_size_t32,618
char	*str_sizekb(str_sizekb34,653
char	*strh_time_t(strh_time_t38,758
char	*strh_pid_t(strh_pid_t39,793
char	*strh_ino_t(strh_ino_t40,826

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strtimet.c,74
static const char rcsid[rcsid12,186
char *str_time_t(str_time_t14,270

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822.c,651
static void tokenize(15,260
static void parseaddr(206,2935
static void print_token(419,7014
void rfc822tok_print(456,7647
void rfc822_print(473,7984
void rfc822_print_common(479,8197
void rfc822t_free(577,10264
void rfc822a_free(583,10349
void rfc822_deladdr(589,10432
static void compat_err_func(604,10691
struct rfc822t *rfc822t_alloc(rfc822t_alloc613,10872
struct rfc822t *rfc822t_alloc_new(rfc822t_alloc_new620,11043
struct rfc822a *rfc822a_alloc(rfc822a_alloc640,11572
void rfc822_praddr(659,12036
void rfc822_addrlist(674,12359
void rfc822_prname(683,12543
void rfc822_prname_orlist(696,12844
void rfc822_namelist(744,13748

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822.h,1499
#define	rfc822_h5,78
struct rfc822token 29,531
	struct rfc822token *next;next30,552
	int token;32,633
#define	rfc822_is_atom(42,808
	const char *ptr;ptr44,876
	int len;45,932
struct rfc822addr 71,2077
	struct rfc822token *tokens;tokens72,2097
	struct rfc822token *name;name73,2126
struct rfc822t 82,2336
	struct rfc822token *tokens;tokens83,2353
	int	ntokens;84,2382
struct rfc822t *rfc822t_alloc(rfc822t_alloc87,2401
struct rfc822t *rfc822t_alloc_new(rfc822t_alloc_new90,2508
void rfc822t_free(94,2636
void rfc822tok_print(96,2703
struct rfc822a 105,2996
	struct rfc822addr *addrs;addrs106,3013
	int	naddrs;107,3040
struct rfc822a *rfc822a_alloc(rfc822a_alloc110,3058
void rfc822a_free(111,3107
void rfc822_deladdr(113,3174
void rfc822_print(120,3427
void rfc822_print_common(126,3614
void rfc822_addrlist(135,3958
void rfc822_namelist(139,4116
void rfc822_prname(145,4344
void rfc822_praddr(146,4425
void rfc822_prname_orlist(152,4607
char *rfc822_gettok(rfc822_gettok157,4724
char *rfc822_getaddr(rfc822_getaddr158,4773
char *rfc822_getname(rfc822_getname159,4824
char *rfc822_getname_orlist(rfc822_getname_orlist160,4875
char *rfc822_getaddrs(rfc822_getaddrs161,4933
char *rfc822_getaddrs_wrap(rfc822_getaddrs_wrap162,4980
void rfc822_mkdate_buf(164,5038
const char *rfc822_mkdate(rfc822_mkdate165,5078
time_t rfc822_parsedt(166,5113
char *rfc822_coresubj(rfc822_coresubj168,5151
char *rfc822_coresubj_nouc(rfc822_coresubj_nouc169,5195

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047.c,1383
static const char rcsid[rcsid15,223
static const char xdigit[xdigit17,306
static char *rfc2047_search_quote(rfc2047_search_quote19,354
static int nyb(33,587
static unsigned char decode64tab[decode64tab42,715
static int decode64tab_init=43,754
static size_t decodebase64(45,786
int rfc2047_decode(94,2146
struct simple_info 189,4003
	char *string;string190,4024
	int index;191,4039
	const char *mychset;mychset192,4051
static int count_simple(195,4079
static int save_simple(205,4255
char *rfc2047_decode_simple(rfc2047_decode_simple215,4474
static int do_enhanced(239,4960
static int count_enhanced(264,5471
static int save_enhanced(270,5620
char *rfc2047_decode_enhanced(rfc2047_decode_enhanced276,5767
void rfc2047_print(296,6184
static char *a_rfc2047_encode_str(a_rfc2047_encode_str305,6445
static void rfc2047_encode_header_do(307,6519
static char *a_rfc2047_encode_str(a_rfc2047_encode_str321,6926
static void count(364,7551
static void counts2(365,7587
static void save(366,7632
static void saves2(367,7667
char *rfc2047_encode_header(rfc2047_encode_header369,7712
static void count(384,8012
static void counts2(389,8069
static void save(397,8187
static void saves2(403,8259
int rfc2047_encode_callback(411,8375
static int count_char(532,10439
static int save_char(540,10547
char *rfc2047_encode_str(rfc2047_encode_str549,10671

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047.h,569
#define	rfc2047_h2,18
static const char rfc2047_h_rcsid[rfc2047_h_rcsid14,180
extern int rfc2047_decode(16,273
extern char *rfc2047_decode_simple(rfc2047_decode_simple20,388
extern char *rfc2047_decode_enhanced(rfc2047_decode_enhanced22,443
extern char *rfc2047_decode_unicode(rfc2047_decode_unicode31,664
#define	RFC2047_DECODE_DISCARD	35,771
#define RFC2047_DECODE_ABORT	37,866
void rfc2047_print(50,1100
char *rfc2047_encode_str(rfc2047_encode_str61,1436
int rfc2047_encode_callback(69,1687
char *rfc2047_encode_header(rfc2047_encode_header76,1898

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_getaddr.c,246
static void cntlen(12,210
static void saveaddr(18,286
char *rfc822_getaddr(rfc822_getaddr28,389
char *rfc822_getname(rfc822_getname43,689
char *rfc822_getname_orlist(rfc822_getname_orlist65,1102
char *rfc822_gettok(rfc822_gettok87,1536

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047u.c,327
static const char rcsid[rcsid16,242
struct decode_unicode_s 22,380
	const struct unicode_info *mychset;mychset23,406
	int options;24,443
	char *bufptr;bufptr26,458
	size_t bufsize;27,473
static void save_unicode_text(30,495
static int save_unicode(38,653
char *rfc2047_decode_unicode(rfc2047_decode_unicode78,1388

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imaprefs.c,1244
static void swapmsgdata(20,302
#define swap(27,425
#undef	swap36,647
struct imap_refmsgtable *rfc822_threadalloc(rfc822_threadalloc39,662
void rfc822_threadfree(49,862
static int hashmsgid(81,1441
#define	HMIDS	89,1561
#define	HHMIDSS	90,1619
struct imap_refmsg *rfc822_threadallocmsg(rfc822_threadallocmsg101,1785
struct imap_refmsg *rfc822_threadsearchmsg(rfc822_threadsearchmsg141,2567
static int findsubj(158,2883
static void linkparent(204,3655
static void breakparent(218,3918
static struct imap_refmsg *dorefcreate(dorefcreate230,4190
struct imap_refmsg *rfc822_threadmsg(rfc822_threadmsg376,7677
struct imap_refmsg *rfc822_threadgetroot(rfc822_threadgetroot449,9011
void rfc822_threadprune(481,9651
static int cmp_msgs(534,10671
int rfc822_threadsortsubj(536,10721
int rfc822_threadgathersubj(577,11804
int rfc822_threadmergesubj(684,13961
static int cmp_msgs(850,17736
struct imap_threadsortinfo 880,18237
	struct imap_refmsgtable *mt;mt881,18266
	struct imap_refmsg **sort_table;sort_table882,18296
	size_t sort_table_cnt;883,18330
static int dothreadsort(886,18359
int rfc822_threadsortbydate(889,18440
static int dothreadsort(905,18704
struct imap_refmsg *rfc822_thread(rfc822_thread947,19507

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imaprefs.h,1782
#define	imaprefs_h5,82
struct imap_refmsg 26,351
	struct imap_refmsg *next,next27,372
	struct imap_refmsg *next, *last;last27,372
	struct imap_refmsg *parent;parent28,434
	struct imap_refmsg *firstchild,firstchild29,480
	struct imap_refmsg *firstchild, *lastchild;lastchild29,480
	struct imap_refmsg *prevsib,prevsib30,550
	struct imap_refmsg *prevsib, *nextsib;nextsib30,550
	char isdummy;32,619
	char flag2;33,673
	char *msgid;msgid35,711
	char *subj;subj37,756
	time_t timestamp;38,808
	unsigned long seqnum;39,844
struct imap_refmsgtable 42,895
        struct imap_refmsg *firstmsg,firstmsg43,921
        struct imap_refmsg *firstmsg, *lastmsg;lastmsg43,921
        struct imap_refmsghash *hashtable[hashtable47,1042
        struct imap_subjlookup *subjtable[subjtable49,1091
        struct imap_refmsg *rootptr;rootptr51,1140
struct imap_refmsgtable *rfc822_threadalloc(rfc822_threadalloc54,1208
void rfc822_threadfree(55,1259
struct imap_refmsg *rfc822_threadmsg(rfc822_threadmsg56,1310
struct imap_refmsg *rfc822_thread(rfc822_thread63,1535
struct imap_refmsghash 68,1635
	struct imap_refmsghash *nexthash;nexthash69,1660
	struct imap_refmsg *msg;msg70,1695
struct imap_subjlookup 73,1726
	struct imap_subjlookup *nextsubj;nextsubj74,1751
	char *subj;subj75,1786
	struct imap_refmsg *msg;msg76,1799
	int msgisrefwd;77,1825
struct imap_refmsg *rfc822_threadallocmsg(rfc822_threadallocmsg80,1847
void rfc822_threadprune(82,1945
struct imap_refmsg *rfc822_threadgetroot(rfc822_threadgetroot83,1999
struct imap_refmsg *rfc822_threadsearchmsg(rfc822_threadsearchmsg84,2070
int rfc822_threadsortsubj(86,2170
int rfc822_threadgathersubj(87,2223
int rfc822_threadmergesubj(89,2312
int rfc822_threadsortbydate(91,2401

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822hdr.c,132
static const char rcsid[rcsid12,195
int rfc822hdr_read(18,317
void rfc822hdr_fixname(103,1453
void rfc822hdr_collapse(113,1585

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822hdr.h,368
#define	rfc822hdr_h5,84
static const char rfc822hdr_h_rcsid[rfc822hdr_h_rcsid12,198
struct rfc822hdr 26,464
	char *header;header27,483
	char *value;value28,498
	size_t hdrsize;30,513
	size_t maxsize;31,530
#define rfc822hdr_init(34,552
#define rfc822hdr_free(35,627
int rfc822hdr_read(38,713
void rfc822hdr_fixname(39,777
void rfc822hdr_collapse(40,821

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/testsuite.c,217
static const char rcsid[rcsid10,160
static void print_func(12,247
static void print_separator(18,311
static struct rfc822t *tokenize(tokenize24,392
static struct rfc822a *doaddr(doaddr49,938
int main(62,1225

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imapsubj.c,271
#define	strcasecmp	19,302
#define	strncasecmp	25,365
static char *skipblob(skipblob30,425
static char *skipblobs(skipblobs54,687
static void stripsubj(68,848
char *rfc822_coresubj(rfc822_coresubj228,3458
char *rfc822_coresubj_nouc(rfc822_coresubj_nouc246,3781

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_getaddrs.c,257
static void cntlen(12,211
static void cntlensep(18,276
static void saveaddr(23,360
static void saveaddrsep(28,428
char *rfc822_getaddrs(rfc822_getaddrs33,516
static void saveaddrsep_wrap(48,828
char *rfc822_getaddrs_wrap(rfc822_getaddrs_wrap59,969

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/reftest.c,379
static void test1(29,396
static void prtree(50,912
static void prpc(71,1236
static void test2(84,1441
static void test3(106,1859
static void test4(133,2382
static void test5(155,2828
static void prsubj(173,3177
static void test6(185,3480
static void test7(225,4478
static void test8(246,5033
static void test9(284,5995
static void test10(322,6966
int main(351,7723

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_parsedt.c,475
static unsigned parsedig(22,428
static const char * const weekdays[weekdays34,580
static const char * const mnames[mnames38,675
#define	leap(43,809
static unsigned mlength[mlength47,890
#define	mdays(48,955
static const char * const zonenames[zonenames50,1022
#define	ZH(61,1271
static int zoneoffset[zoneoffset63,1304
static unsigned parsekey(74,1603
static int parsetime(92,1880
time_t rfc822_parsedt(113,2318
const char *rfc822_mkdt(rfc822_mkdt225,4334

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_mkdate.c,175
static const char * const months[months20,316
static const char * const wdays[wdays34,451
void rfc822_mkdate_buf(43,545
const char *rfc822_mkdate(rfc822_mkdate107,1384

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm864convert.c,112
unicode_char *unicode_ibm864_c2u(unicode_ibm864_c2u15,320
char *unicode_ibm864_u2c(unicode_ibm864_u2c48,782

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1250.c,454
static const unicode_char windows1250_unicode 10,183
static const char windows1250_uc 20,766
static const char windows1250_lc 54,3657
static const char windows1250_tc 88,6548
static unicode_char *c2u(c2u124,9441
static char *u2c(u2c129,9556
static char *toupper_func(toupper_func134,9671
static char *tolower_func(tolower_func139,9786
static char *totitle_func(totitle_func144,9901
const struct unicode_info unicode_WINDOWS_1250 149,10016

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1251.c,455
static const unicode_char windows1251_unicode 10,183
static const char windows1251_uc 20,869
static const char windows1251_lc 54,3760
static const char windows1251_tc 88,6651
static unicode_char *c2u(c2u124,9544
static char *u2c(u2c129,9659
static char *toupper_func(toupper_func134,9774
static char *tolower_func(tolower_func139,9889
static char *totitle_func(totitle_func144,10004
const struct unicode_info unicode_WINDOWS_1251 149,10119

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1252.c,454
static const unicode_char windows1252_unicode 10,183
static const char windows1252_uc 20,766
static const char windows1252_lc 54,3657
static const char windows1252_tc 88,6548
static unicode_char *c2u(c2u124,9441
static char *u2c(u2c129,9556
static char *toupper_func(toupper_func134,9671
static char *tolower_func(tolower_func139,9786
static char *totitle_func(totitle_func144,9901
const struct unicode_info unicode_WINDOWS_1252 149,10016

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1253.c,453
static const unicode_char windows1253_unicode 10,183
static const char windows1253_uc 20,743
static const char windows1253_lc 54,3634
static const char windows1253_tc 88,6525
static unicode_char *c2u(c2u124,9418
static char *u2c(u2c129,9533
static char *toupper_func(toupper_func134,9648
static char *tolower_func(tolower_func139,9763
static char *totitle_func(totitle_func144,9878
const struct unicode_info unicode_WINDOWS_1253 149,9993

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1254.c,454
static const unicode_char windows1254_unicode 10,183
static const char windows1254_uc 20,762
static const char windows1254_lc 54,3653
static const char windows1254_tc 88,6544
static unicode_char *c2u(c2u124,9437
static char *u2c(u2c129,9552
static char *toupper_func(toupper_func134,9667
static char *tolower_func(tolower_func139,9782
static char *totitle_func(totitle_func144,9897
const struct unicode_info unicode_WINDOWS_1254 149,10012

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1255.c,454
static const unicode_char windows1255_unicode 10,183
static const char windows1255_uc 20,784
static const char windows1255_lc 54,3675
static const char windows1255_tc 88,6566
static unicode_char *c2u(c2u124,9459
static char *u2c(u2c129,9574
static char *toupper_func(toupper_func134,9689
static char *tolower_func(tolower_func139,9804
static char *totitle_func(totitle_func144,9919
const struct unicode_info unicode_WINDOWS_1255 149,10034

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1256.c,454
static const unicode_char windows1256_unicode 10,183
static const char windows1256_uc 20,840
static const char windows1256_lc 54,3731
static const char windows1256_tc 88,6622
static unicode_char *c2u(c2u124,9515
static char *u2c(u2c129,9630
static char *toupper_func(toupper_func134,9745
static char *tolower_func(tolower_func139,9860
static char *totitle_func(totitle_func144,9975
const struct unicode_info unicode_WINDOWS_1256 149,10090

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1257.c,454
static const unicode_char windows1257_unicode 10,183
static const char windows1257_uc 20,752
static const char windows1257_lc 54,3643
static const char windows1257_tc 88,6534
static unicode_char *c2u(c2u124,9427
static char *u2c(u2c129,9542
static char *toupper_func(toupper_func134,9657
static char *tolower_func(tolower_func139,9772
static char *totitle_func(totitle_func144,9887
const struct unicode_info unicode_WINDOWS_1257 149,10002

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1258.c,454
static const unicode_char windows1258_unicode 10,183
static const char windows1258_uc 20,759
static const char windows1258_lc 54,3650
static const char windows1258_tc 88,6541
static unicode_char *c2u(c2u124,9434
static char *u2c(u2c129,9549
static char *toupper_func(toupper_func134,9664
static char *tolower_func(tolower_func139,9779
static char *totitle_func(totitle_func144,9894
const struct unicode_info unicode_WINDOWS_1258 149,10009

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode_ultcase.c,316
extern const unsigned unicode_case_hash;11,202
extern const unicode_char unicode_case_tab[unicode_case_tab12,243
extern const unsigned unicode_case_offset[unicode_case_offset13,292
static unsigned find_case(15,338
unicode_char unicode_uc(35,616
unicode_char unicode_lc(42,754
unicode_char unicode_tc(49,892

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode2.c,196
char *unicode_toutf8(unicode_toutf814,254
unicode_char *unicode_fromutf8(unicode_fromutf819,339
char *unicode_ctoutf8(unicode_ctoutf824,424
char *unicode_cfromutf8(unicode_cfromutf840,677

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885910.c,443
static const unicode_char iso885910_unicode 10,181
static const char iso885910_uc 20,756
static const char iso885910_lc 54,3645
static const char iso885910_tc 88,6534
static unicode_char *c2u(c2u124,9425
static char *u2c(u2c129,9538
static char *toupper_func(toupper_func134,9651
static char *tolower_func(tolower_func139,9764
static char *totitle_func(totitle_func144,9877
const struct unicode_info unicode_ISO8859_10 149,9990

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885913.c,443
static const unicode_char iso885913_unicode 10,181
static const char iso885913_uc 20,759
static const char iso885913_lc 54,3648
static const char iso885913_tc 88,6537
static unicode_char *c2u(c2u124,9428
static char *u2c(u2c129,9541
static char *toupper_func(toupper_func134,9654
static char *tolower_func(tolower_func139,9767
static char *totitle_func(totitle_func144,9880
const struct unicode_info unicode_ISO8859_13 149,9993

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885914.c,444
static const unicode_char iso885914_unicode 10,181
static const char iso885914_uc 20,777
static const char iso885914_lc 54,3666
static const char iso885914_tc 88,6555
static unicode_char *c2u(c2u124,9446
static char *u2c(u2c129,9559
static char *toupper_func(toupper_func134,9672
static char *tolower_func(tolower_func139,9785
static char *totitle_func(totitle_func144,9898
const struct unicode_info unicode_ISO8859_14 149,10011

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885915.c,443
static const unicode_char iso885915_unicode 10,181
static const char iso885915_uc 20,756
static const char iso885915_lc 54,3645
static const char iso885915_tc 88,6534
static unicode_char *c2u(c2u124,9425
static char *u2c(u2c129,9538
static char *toupper_func(toupper_func134,9651
static char *tolower_func(tolower_func139,9764
static char *totitle_func(totitle_func144,9877
const struct unicode_info unicode_ISO8859_15 149,9990

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm437.c,429
static const unicode_char ibm437_unicode 10,178
static const char ibm437_uc 20,811
static const char ibm437_lc 54,3697
static const char ibm437_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_437 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm775.c,428
static const unicode_char ibm775_unicode 10,178
static const char ibm775_uc 20,785
static const char ibm775_lc 54,3671
static const char ibm775_tc 88,6557
static unicode_char *c2u(c2u124,9445
static char *u2c(u2c129,9555
static char *toupper_func(toupper_func134,9665
static char *tolower_func(tolower_func139,9775
static char *totitle_func(totitle_func144,9885
const struct unicode_info unicode_IBM_775 149,9995

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm850.c,428
static const unicode_char ibm850_unicode 10,178
static const char ibm850_uc 20,779
static const char ibm850_lc 54,3665
static const char ibm850_tc 88,6551
static unicode_char *c2u(c2u124,9439
static char *u2c(u2c129,9549
static char *toupper_func(toupper_func134,9659
static char *tolower_func(tolower_func139,9769
static char *totitle_func(totitle_func144,9879
const struct unicode_info unicode_IBM_850 149,9989

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm852.c,428
static const unicode_char ibm852_unicode 10,178
static const char ibm852_uc 20,778
static const char ibm852_lc 54,3664
static const char ibm852_tc 88,6550
static unicode_char *c2u(c2u124,9438
static char *u2c(u2c129,9548
static char *toupper_func(toupper_func134,9658
static char *tolower_func(tolower_func139,9768
static char *totitle_func(totitle_func144,9878
const struct unicode_info unicode_IBM_852 149,9988

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm855.c,429
static const unicode_char ibm855_unicode 10,178
static const char ibm855_uc 20,871
static const char ibm855_lc 54,3757
static const char ibm855_tc 88,6643
static unicode_char *c2u(c2u124,9531
static char *u2c(u2c129,9641
static char *toupper_func(toupper_func134,9751
static char *tolower_func(tolower_func139,9861
static char *totitle_func(totitle_func144,9971
const struct unicode_info unicode_IBM_855 149,10081

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm857.c,428
static const unicode_char ibm857_unicode 10,178
static const char ibm857_uc 20,772
static const char ibm857_lc 54,3658
static const char ibm857_tc 88,6544
static unicode_char *c2u(c2u124,9432
static char *u2c(u2c129,9542
static char *toupper_func(toupper_func134,9652
static char *tolower_func(tolower_func139,9762
static char *totitle_func(totitle_func144,9872
const struct unicode_info unicode_IBM_857 149,9982

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm860.c,429
static const unicode_char ibm860_unicode 10,178
static const char ibm860_uc 20,810
static const char ibm860_lc 54,3696
static const char ibm860_tc 88,6582
static unicode_char *c2u(c2u124,9470
static char *u2c(u2c129,9580
static char *toupper_func(toupper_func134,9690
static char *tolower_func(tolower_func139,9800
static char *totitle_func(totitle_func144,9910
const struct unicode_info unicode_IBM_860 149,10020

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm861.c,429
static const unicode_char ibm861_unicode 10,178
static const char ibm861_uc 20,811
static const char ibm861_lc 54,3697
static const char ibm861_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_861 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm862.c,429
static const unicode_char ibm862_unicode 10,178
static const char ibm862_uc 20,838
static const char ibm862_lc 54,3724
static const char ibm862_tc 88,6610
static unicode_char *c2u(c2u124,9498
static char *u2c(u2c129,9608
static char *toupper_func(toupper_func134,9718
static char *tolower_func(tolower_func139,9828
static char *totitle_func(totitle_func144,9938
const struct unicode_info unicode_IBM_862 149,10048

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm863.c,429
static const unicode_char ibm863_unicode 10,178
static const char ibm863_uc 20,811
static const char ibm863_lc 54,3697
static const char ibm863_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_863 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm864.c,434
static const unicode_char ibm864_unicode 10,173
static const char ibm864_uc 28,1320
static const char ibm864_lc 62,4206
static const char ibm864_tc 96,7092
static unicode_char *c2u(c2u132,9980
static char *u2c(u2c137,10089
static char *toupper_func(toupper_func142,10198
static char *tolower_func(tolower_func147,10308
static char *totitle_func(totitle_func152,10418
const struct unicode_info unicode_IBM_864 157,10528

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm865.c,429
static const unicode_char ibm865_unicode 10,178
static const char ibm865_uc 20,811
static const char ibm865_lc 54,3697
static const char ibm865_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_865 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm866.c,429
static const unicode_char ibm866_unicode 10,178
static const char ibm866_uc 20,873
static const char ibm866_lc 54,3759
static const char ibm866_tc 88,6645
static unicode_char *c2u(c2u124,9533
static char *u2c(u2c129,9643
static char *toupper_func(toupper_func134,9753
static char *tolower_func(tolower_func139,9863
static char *totitle_func(totitle_func144,9973
const struct unicode_info unicode_IBM_866 149,10083

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm869.c,428
static const unicode_char ibm869_unicode 10,178
static const char ibm869_uc 20,763
static const char ibm869_lc 54,3649
static const char ibm869_tc 88,6535
static unicode_char *c2u(c2u124,9423
static char *u2c(u2c129,9533
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9753
static char *totitle_func(totitle_func144,9863
const struct unicode_info unicode_IBM_869 149,9973

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows874u.c,60
char *unicode_windows874_u2c(unicode_windows874_u2c13,238

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf8_chset.c,189
static char *toupper_func(toupper_func19,392
static char *tolower_func(tolower_func34,628
static char *totitle_func(totitle_func49,864
const struct unicode_info unicode_UTF8 64,1100

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/gb2312.c,378
static const unicode_char * const gb2312[gb231213,231
static unicode_char *c2u(c2u87,1143
static unsigned revlookup(158,2061
static char *u2c(u2c182,2488
static char *toupper_func(toupper_func235,3172
static char *tolower_func(tolower_func259,3467
static char *totitle_func(totitle_func283,3762
const struct unicode_info unicode_GB2312 307,4057
int main(317,4179

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/gb2312.h,4356
static const unicode_char gb2312_b0[gb2312_b010,178
static const unicode_char gb2312_b1[gb2312_b116,790
static const unicode_char gb2312_b2[gb2312_b222,1402
static const unicode_char gb2312_b3[gb2312_b328,2014
static const unicode_char gb2312_b4[gb2312_b434,2626
static const unicode_char gb2312_b5[gb2312_b540,3238
static const unicode_char gb2312_b6[gb2312_b646,3850
static const unicode_char gb2312_b7[gb2312_b752,4462
static const unicode_char gb2312_b8[gb2312_b858,5074
static const unicode_char gb2312_b9[gb2312_b964,5686
static const unicode_char gb2312_ba[gb2312_ba70,6298
static const unicode_char gb2312_bb[gb2312_bb76,6910
static const unicode_char gb2312_bc[gb2312_bc82,7522
static const unicode_char gb2312_bd[gb2312_bd88,8134
static const unicode_char gb2312_be[gb2312_be94,8746
static const unicode_char gb2312_bf[gb2312_bf100,9358
static const unicode_char gb2312_c0[gb2312_c0106,9970
static const unicode_char gb2312_c1[gb2312_c1112,10582
static const unicode_char gb2312_c2[gb2312_c2118,11194
static const unicode_char gb2312_c3[gb2312_c3124,11806
static const unicode_char gb2312_c4[gb2312_c4130,12418
static const unicode_char gb2312_c5[gb2312_c5136,13030
static const unicode_char gb2312_c6[gb2312_c6142,13642
static const unicode_char gb2312_c7[gb2312_c7148,14254
static const unicode_char gb2312_c8[gb2312_c8154,14866
static const unicode_char gb2312_c9[gb2312_c9160,15478
static const unicode_char gb2312_ca[gb2312_ca166,16090
static const unicode_char gb2312_cb[gb2312_cb172,16702
static const unicode_char gb2312_cc[gb2312_cc178,17314
static const unicode_char gb2312_cd[gb2312_cd184,17926
static const unicode_char gb2312_ce[gb2312_ce190,18538
static const unicode_char gb2312_cf[gb2312_cf196,19150
static const unicode_char gb2312_d0[gb2312_d0202,19762
static const unicode_char gb2312_d1[gb2312_d1208,20374
static const unicode_char gb2312_d2[gb2312_d2214,20986
static const unicode_char gb2312_d3[gb2312_d3220,21598
static const unicode_char gb2312_d4[gb2312_d4226,22210
static const unicode_char gb2312_d5[gb2312_d5232,22822
static const unicode_char gb2312_d6[gb2312_d6238,23434
static const unicode_char gb2312_d7[gb2312_d7244,24046
static const unicode_char gb2312_d8[gb2312_d8250,24638
static const unicode_char gb2312_d9[gb2312_d9256,25250
static const unicode_char gb2312_da[gb2312_da262,25862
static const unicode_char gb2312_db[gb2312_db268,26474
static const unicode_char gb2312_dc[gb2312_dc274,27086
static const unicode_char gb2312_dd[gb2312_dd280,27698
static const unicode_char gb2312_de[gb2312_de286,28310
static const unicode_char gb2312_df[gb2312_df292,28922
static const unicode_char gb2312_e0[gb2312_e0298,29534
static const unicode_char gb2312_e1[gb2312_e1304,30146
static const unicode_char gb2312_e2[gb2312_e2310,30758
static const unicode_char gb2312_e3[gb2312_e3316,31370
static const unicode_char gb2312_e4[gb2312_e4322,31982
static const unicode_char gb2312_e5[gb2312_e5328,32594
static const unicode_char gb2312_e6[gb2312_e6334,33206
static const unicode_char gb2312_e7[gb2312_e7340,33818
static const unicode_char gb2312_e8[gb2312_e8346,34430
static const unicode_char gb2312_e9[gb2312_e9352,35042
static const unicode_char gb2312_ea[gb2312_ea358,35654
static const unicode_char gb2312_eb[gb2312_eb364,36266
static const unicode_char gb2312_ec[gb2312_ec370,36878
static const unicode_char gb2312_ed[gb2312_ed376,37490
static const unicode_char gb2312_ee[gb2312_ee382,38102
static const unicode_char gb2312_ef[gb2312_ef388,38714
static const unicode_char gb2312_f0[gb2312_f0394,39326
static const unicode_char gb2312_f1[gb2312_f1400,39938
static const unicode_char gb2312_f2[gb2312_f2406,40550
static const unicode_char gb2312_f3[gb2312_f3412,41162
static const unicode_char gb2312_f4[gb2312_f4418,41774
static const unicode_char gb2312_f5[gb2312_f5424,42386
static const unicode_char gb2312_f6[gb2312_f6430,42998
static const unicode_char gb2312_f7[gb2312_f7436,43610
static const unsigned gb2312_revhash_size=442,44222
static const unicode_char gb2312_revtable_uc[gb2312_revtable_uc443,44270
static const unsigned gb2312_revtable_octets[gb2312_revtable_octets867,85321
static const unsigned gb2312_revtable_index[gb2312_revtable_index1291,126372

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/xtest.c,315
extern const struct unicode_info unicode_ISO8859_1;15,231
static unicode_char *c2u(c2u17,284
static char *u2c(u2c28,497
static char *toupper_func(toupper_func40,703
static char *tolower_func(tolower_func45,813
static char *totitle_func(totitle_func50,923
const struct unicode_info unicode_XTEST 55,1033

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode.c,399
const char *unicode_default_chset(unicode_default_chset15,272
const struct unicode_info *unicode_find(unicode_find25,416
char *unicode_convert(unicode_convert55,923
char *unicode_convert_fromchset(unicode_convert_fromchset84,1344
struct ux_buf 101,1664
	char *buffer;buffer102,1680
	size_t bufsize;103,1695
static int ux_alloc(106,1717
char *unicode_xconvert(unicode_xconvert125,1964

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode.h,1931
#define	unicode_h2,18
typedef wchar_t unicode_char;28,385
struct unicode_info 30,416
	const char *chset;chset31,438
	unicode_char *(*c2u)c2u32,488
	char *(*u2c)u2c35,593
	char *(*toupper_func)toupper_func40,778
	char *(*tolower_func)tolower_func41,823
	char *(*totitle_func)totitle_func42,868
extern const struct unicode_info unicode_ISO8859_1;45,919
extern const struct unicode_info unicode_UTF8;46,971
extern char *unicode_iso8859_u2c(unicode_iso8859_u2c48,1019
extern char *unicode_windows874_u2c(unicode_windows874_u2c51,1106
extern unicode_char *unicode_iso8859_c2u(unicode_iso8859_c2u56,1249
extern char *unicode_iso8859_convert(unicode_iso8859_convert59,1340
unicode_char *unicode_ibm864_c2u(unicode_ibm864_c2u64,1460
char *unicode_ibm864_u2c(unicode_ibm864_u2c67,1543
struct unicode_chsetlist 71,1626
	const char *chsetname;chsetname72,1653
	const struct unicode_info *ptr;ptr73,1677
extern const struct unicode_chsetlist unicode_chsetlist[unicode_chsetlist76,1716
extern const char *unicode_default_chset(unicode_default_chset77,1775
extern const struct unicode_info *unicode_find(unicode_find78,1819
extern char *unicode_toutf8(unicode_toutf886,1945
extern unicode_char *unicode_fromutf8(unicode_fromutf887,1996
extern unicode_char unicode_uc(91,2110
extern unicode_char unicode_lc(92,2156
extern unicode_char unicode_tc(93,2202
extern char *unicode_ctoutf8(unicode_ctoutf897,2288
extern char *unicode_cfromutf8(unicode_cfromutf899,2376
extern unicode_char *unicode_utf8_tou(unicode_utf8_tou104,2497
extern char *unicode_utf8_fromu(unicode_utf8_fromu105,2557
extern char *unicode_convert(unicode_convert109,2669
extern char *unicode_xconvert(unicode_xconvert114,2854
extern char *unicode_convert_fromchset(unicode_convert_fromchset122,3129
unicode_char *unicode_modutf7touc(unicode_modutf7touc135,3514
char *unicode_uctomodutf7(unicode_uctomodutf7140,3717

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/koi8r.c,415
static const unicode_char koi8_tab 10,172
static const char koi8_uc 20,859
static const char koi8_lc 54,3743
static const char koi8_tc 88,6627
static unicode_char *c2u(c2u124,9513
static char *u2c(u2c129,9617
static char *toupper_func(toupper_func134,9721
static char *tolower_func(tolower_func139,9829
static char *totitle_func(totitle_func144,9937
const struct unicode_info unicode_KOI8R 149,10045

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows874.c,449
static const unicode_char windows874_unicode 10,182
static const char windows874_uc 20,791
static const char windows874_lc 54,3681
static const char windows874_tc 88,6571
static unicode_char *c2u(c2u124,9463
static char *u2c(u2c129,9577
static char *toupper_func(toupper_func134,9694
static char *tolower_func(tolower_func139,9808
static char *totitle_func(totitle_func144,9922
const struct unicode_info unicode_WINDOWS_874 149,10036

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf7imap.c,363
static const char rcsid[rcsid12,178
static const char mbase64[mbase6414,262
static char mbase64_lookup[mbase64_lookup16,359
static int mbase64_lookup_init=17,392
unicode_char *unicode_modutf7touc(unicode_modutf7touc19,427
static size_t uctoutf7_pass(106,1765
char *unicode_uctomodutf7(unicode_uctomodutf7108,1825
static size_t uctoutf7_pass(118,1978

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/big5.c,447
static const unicode_char * const big5fwdlo[big5fwdlo13,227
static const unicode_char * const big5fwdhi[big5fwdhi104,1411
static unicode_char *c2u(c2u195,2595
static unsigned revlookup(279,3840
static char *u2c(u2c303,4253
static char *toupper_func(toupper_func356,4937
static char *tolower_func(tolower_func380,5232
static char *totitle_func(totitle_func404,5527
const struct unicode_info unicode_BIG5 428,5822
int main(438,5940

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/big5.h,10271
static const unicode_char big5_a2_lo[big5_a2_lo10,171
static const unicode_char big5_a2_hi[big5_a2_hi15,383
static const unicode_char big5_a4_lo[big5_a4_lo22,625
static const unicode_char big5_a4_hi[big5_a4_hi27,1053
static const unicode_char big5_a5_lo[big5_a5_lo34,1667
static const unicode_char big5_a5_hi[big5_a5_hi39,2095
static const unicode_char big5_a6_lo[big5_a6_lo46,2709
static const unicode_char big5_a6_hi[big5_a6_hi51,3137
static const unicode_char big5_a7_lo[big5_a7_lo58,3751
static const unicode_char big5_a7_hi[big5_a7_hi63,4179
static const unicode_char big5_a8_lo[big5_a8_lo70,4793
static const unicode_char big5_a8_hi[big5_a8_hi75,5221
static const unicode_char big5_a9_lo[big5_a9_lo82,5835
static const unicode_char big5_a9_hi[big5_a9_hi87,6263
static const unicode_char big5_aa_lo[big5_aa_lo94,6877
static const unicode_char big5_aa_hi[big5_aa_hi99,7305
static const unicode_char big5_ab_lo[big5_ab_lo106,7919
static const unicode_char big5_ab_hi[big5_ab_hi111,8347
static const unicode_char big5_ac_lo[big5_ac_lo118,8961
static const unicode_char big5_ac_hi[big5_ac_hi123,9389
static const unicode_char big5_ad_lo[big5_ad_lo130,10003
static const unicode_char big5_ad_hi[big5_ad_hi135,10431
static const unicode_char big5_ae_lo[big5_ae_lo142,11045
static const unicode_char big5_ae_hi[big5_ae_hi147,11473
static const unicode_char big5_af_lo[big5_af_lo154,12087
static const unicode_char big5_af_hi[big5_af_hi159,12515
static const unicode_char big5_b0_lo[big5_b0_lo166,13129
static const unicode_char big5_b0_hi[big5_b0_hi171,13557
static const unicode_char big5_b1_lo[big5_b1_lo178,14171
static const unicode_char big5_b1_hi[big5_b1_hi183,14599
static const unicode_char big5_b2_lo[big5_b2_lo190,15213
static const unicode_char big5_b2_hi[big5_b2_hi195,15641
static const unicode_char big5_b3_lo[big5_b3_lo202,16255
static const unicode_char big5_b3_hi[big5_b3_hi207,16683
static const unicode_char big5_b4_lo[big5_b4_lo214,17297
static const unicode_char big5_b4_hi[big5_b4_hi219,17725
static const unicode_char big5_b5_lo[big5_b5_lo226,18339
static const unicode_char big5_b5_hi[big5_b5_hi231,18767
static const unicode_char big5_b6_lo[big5_b6_lo238,19381
static const unicode_char big5_b6_hi[big5_b6_hi243,19809
static const unicode_char big5_b7_lo[big5_b7_lo250,20423
static const unicode_char big5_b7_hi[big5_b7_hi255,20851
static const unicode_char big5_b8_lo[big5_b8_lo262,21465
static const unicode_char big5_b8_hi[big5_b8_hi267,21893
static const unicode_char big5_b9_lo[big5_b9_lo274,22507
static const unicode_char big5_b9_hi[big5_b9_hi279,22935
static const unicode_char big5_ba_lo[big5_ba_lo286,23549
static const unicode_char big5_ba_hi[big5_ba_hi291,23977
static const unicode_char big5_bb_lo[big5_bb_lo298,24591
static const unicode_char big5_bb_hi[big5_bb_hi303,25019
static const unicode_char big5_bc_lo[big5_bc_lo310,25633
static const unicode_char big5_bc_hi[big5_bc_hi315,26061
static const unicode_char big5_bd_lo[big5_bd_lo322,26675
static const unicode_char big5_bd_hi[big5_bd_hi327,27103
static const unicode_char big5_be_lo[big5_be_lo334,27717
static const unicode_char big5_be_hi[big5_be_hi339,28145
static const unicode_char big5_bf_lo[big5_bf_lo346,28759
static const unicode_char big5_bf_hi[big5_bf_hi351,29187
static const unicode_char big5_c0_lo[big5_c0_lo358,29801
static const unicode_char big5_c0_hi[big5_c0_hi363,30229
static const unicode_char big5_c1_lo[big5_c1_lo370,30843
static const unicode_char big5_c1_hi[big5_c1_hi375,31271
static const unicode_char big5_c2_lo[big5_c2_lo382,31885
static const unicode_char big5_c2_hi[big5_c2_hi387,32313
static const unicode_char big5_c3_lo[big5_c3_lo394,32927
static const unicode_char big5_c3_hi[big5_c3_hi399,33355
static const unicode_char big5_c4_lo[big5_c4_lo406,33969
static const unicode_char big5_c4_hi[big5_c4_hi411,34397
static const unicode_char big5_c5_lo[big5_c5_lo418,35011
static const unicode_char big5_c5_hi[big5_c5_hi423,35439
static const unicode_char big5_c6_lo[big5_c6_lo430,36053
static const unicode_char big5_c6_hi[big5_c6_hi435,36481
static const unicode_char big5_c9_lo[big5_c9_lo442,36719
static const unicode_char big5_c9_hi[big5_c9_hi447,37147
static const unicode_char big5_ca_lo[big5_ca_lo454,37761
static const unicode_char big5_ca_hi[big5_ca_hi459,38189
static const unicode_char big5_cb_lo[big5_cb_lo466,38803
static const unicode_char big5_cb_hi[big5_cb_hi471,39231
static const unicode_char big5_cc_lo[big5_cc_lo478,39845
static const unicode_char big5_cc_hi[big5_cc_hi483,40273
static const unicode_char big5_cd_lo[big5_cd_lo490,40887
static const unicode_char big5_cd_hi[big5_cd_hi495,41315
static const unicode_char big5_ce_lo[big5_ce_lo502,41929
static const unicode_char big5_ce_hi[big5_ce_hi507,42357
static const unicode_char big5_cf_lo[big5_cf_lo514,42971
static const unicode_char big5_cf_hi[big5_cf_hi519,43399
static const unicode_char big5_d0_lo[big5_d0_lo526,44013
static const unicode_char big5_d0_hi[big5_d0_hi531,44441
static const unicode_char big5_d1_lo[big5_d1_lo538,45055
static const unicode_char big5_d1_hi[big5_d1_hi543,45483
static const unicode_char big5_d2_lo[big5_d2_lo550,46097
static const unicode_char big5_d2_hi[big5_d2_hi555,46525
static const unicode_char big5_d3_lo[big5_d3_lo562,47139
static const unicode_char big5_d3_hi[big5_d3_hi567,47567
static const unicode_char big5_d4_lo[big5_d4_lo574,48181
static const unicode_char big5_d4_hi[big5_d4_hi579,48609
static const unicode_char big5_d5_lo[big5_d5_lo586,49223
static const unicode_char big5_d5_hi[big5_d5_hi591,49651
static const unicode_char big5_d6_lo[big5_d6_lo598,50265
static const unicode_char big5_d6_hi[big5_d6_hi603,50693
static const unicode_char big5_d7_lo[big5_d7_lo610,51307
static const unicode_char big5_d7_hi[big5_d7_hi615,51735
static const unicode_char big5_d8_lo[big5_d8_lo622,52349
static const unicode_char big5_d8_hi[big5_d8_hi627,52777
static const unicode_char big5_d9_lo[big5_d9_lo634,53391
static const unicode_char big5_d9_hi[big5_d9_hi639,53819
static const unicode_char big5_da_lo[big5_da_lo646,54433
static const unicode_char big5_da_hi[big5_da_hi651,54861
static const unicode_char big5_db_lo[big5_db_lo658,55475
static const unicode_char big5_db_hi[big5_db_hi663,55903
static const unicode_char big5_dc_lo[big5_dc_lo670,56517
static const unicode_char big5_dc_hi[big5_dc_hi675,56945
static const unicode_char big5_dd_lo[big5_dd_lo682,57559
static const unicode_char big5_dd_hi[big5_dd_hi687,57987
static const unicode_char big5_de_lo[big5_de_lo694,58601
static const unicode_char big5_de_hi[big5_de_hi699,59029
static const unicode_char big5_df_lo[big5_df_lo706,59643
static const unicode_char big5_df_hi[big5_df_hi711,60071
static const unicode_char big5_e0_lo[big5_e0_lo718,60685
static const unicode_char big5_e0_hi[big5_e0_hi723,61113
static const unicode_char big5_e1_lo[big5_e1_lo730,61727
static const unicode_char big5_e1_hi[big5_e1_hi735,62155
static const unicode_char big5_e2_lo[big5_e2_lo742,62769
static const unicode_char big5_e2_hi[big5_e2_hi747,63197
static const unicode_char big5_e3_lo[big5_e3_lo754,63811
static const unicode_char big5_e3_hi[big5_e3_hi759,64239
static const unicode_char big5_e4_lo[big5_e4_lo766,64853
static const unicode_char big5_e4_hi[big5_e4_hi771,65281
static const unicode_char big5_e5_lo[big5_e5_lo778,65895
static const unicode_char big5_e5_hi[big5_e5_hi783,66323
static const unicode_char big5_e6_lo[big5_e6_lo790,66937
static const unicode_char big5_e6_hi[big5_e6_hi795,67365
static const unicode_char big5_e7_lo[big5_e7_lo802,67979
static const unicode_char big5_e7_hi[big5_e7_hi807,68407
static const unicode_char big5_e8_lo[big5_e8_lo814,69021
static const unicode_char big5_e8_hi[big5_e8_hi819,69449
static const unicode_char big5_e9_lo[big5_e9_lo826,70063
static const unicode_char big5_e9_hi[big5_e9_hi831,70491
static const unicode_char big5_ea_lo[big5_ea_lo838,71105
static const unicode_char big5_ea_hi[big5_ea_hi843,71533
static const unicode_char big5_eb_lo[big5_eb_lo850,72147
static const unicode_char big5_eb_hi[big5_eb_hi855,72575
static const unicode_char big5_ec_lo[big5_ec_lo862,73189
static const unicode_char big5_ec_hi[big5_ec_hi867,73617
static const unicode_char big5_ed_lo[big5_ed_lo874,74231
static const unicode_char big5_ed_hi[big5_ed_hi879,74659
static const unicode_char big5_ee_lo[big5_ee_lo886,75273
static const unicode_char big5_ee_hi[big5_ee_hi891,75701
static const unicode_char big5_ef_lo[big5_ef_lo898,76315
static const unicode_char big5_ef_hi[big5_ef_hi903,76743
static const unicode_char big5_f0_lo[big5_f0_lo910,77357
static const unicode_char big5_f0_hi[big5_f0_hi915,77785
static const unicode_char big5_f1_lo[big5_f1_lo922,78399
static const unicode_char big5_f1_hi[big5_f1_hi927,78827
static const unicode_char big5_f2_lo[big5_f2_lo934,79441
static const unicode_char big5_f2_hi[big5_f2_hi939,79869
static const unicode_char big5_f3_lo[big5_f3_lo946,80483
static const unicode_char big5_f3_hi[big5_f3_hi951,80911
static const unicode_char big5_f4_lo[big5_f4_lo958,81525
static const unicode_char big5_f4_hi[big5_f4_hi963,81953
static const unicode_char big5_f5_lo[big5_f5_lo970,82567
static const unicode_char big5_f5_hi[big5_f5_hi975,82995
static const unicode_char big5_f6_lo[big5_f6_lo982,83609
static const unicode_char big5_f6_hi[big5_f6_hi987,84037
static const unicode_char big5_f7_lo[big5_f7_lo994,84651
static const unicode_char big5_f7_hi[big5_f7_hi999,85079
static const unicode_char big5_f8_lo[big5_f8_lo1006,85693
static const unicode_char big5_f8_hi[big5_f8_hi1011,86121
static const unicode_char big5_f9_lo[big5_f9_lo1018,86735
static const unicode_char big5_f9_hi[big5_f9_hi1023,87163
static const unsigned big5_revhash_size=1030,87613
static const unicode_char big5_revtable_uc[big5_revtable_uc1031,87659
static const unsigned big5_revtable_octets[big5_revtable_octets1849,166902
static const unsigned big5_revtable_index[big5_revtable_index2667,246145

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88591.c,438
static const unicode_char iso88591_unicode 10,180
static const char iso88591_uc 20,753
static const char iso88591_lc 54,3641
static const char iso88591_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_1 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88592.c,438
static const unicode_char iso88592_unicode 10,180
static const char iso88592_uc 20,753
static const char iso88592_lc 54,3641
static const char iso88592_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_2 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88593.c,438
static const unicode_char iso88593_unicode 10,180
static const char iso88593_uc 20,739
static const char iso88593_lc 54,3627
static const char iso88593_tc 88,6515
static unicode_char *c2u(c2u124,9405
static char *u2c(u2c129,9517
static char *toupper_func(toupper_func134,9629
static char *tolower_func(tolower_func139,9741
static char *totitle_func(totitle_func144,9853
const struct unicode_info unicode_ISO8859_3 149,9965

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88594.c,438
static const unicode_char iso88594_unicode 10,180
static const char iso88594_uc 20,753
static const char iso88594_lc 54,3641
static const char iso88594_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_4 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88595.c,439
static const unicode_char iso88595_unicode 10,180
static const char iso88595_uc 20,846
static const char iso88595_lc 54,3734
static const char iso88595_tc 88,6622
static unicode_char *c2u(c2u124,9512
static char *u2c(u2c129,9624
static char *toupper_func(toupper_func134,9736
static char *tolower_func(tolower_func139,9848
static char *totitle_func(totitle_func144,9960
const struct unicode_info unicode_ISO8859_5 149,10072

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88596.c,438
static const unicode_char iso88596_unicode 10,180
static const char iso88596_uc 20,711
static const char iso88596_lc 54,3599
static const char iso88596_tc 88,6487
static unicode_char *c2u(c2u124,9377
static char *u2c(u2c129,9489
static char *toupper_func(toupper_func134,9601
static char *tolower_func(tolower_func139,9713
static char *totitle_func(totitle_func144,9825
const struct unicode_info unicode_ISO8859_6 149,9937

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88597.c,438
static const unicode_char iso88597_unicode 10,180
static const char iso88597_uc 20,744
static const char iso88597_lc 54,3632
static const char iso88597_tc 88,6520
static unicode_char *c2u(c2u124,9410
static char *u2c(u2c129,9522
static char *toupper_func(toupper_func134,9634
static char *tolower_func(tolower_func139,9746
static char *totitle_func(totitle_func144,9858
const struct unicode_info unicode_ISO8859_7 149,9970

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88598.c,438
static const unicode_char iso88598_unicode 10,180
static const char iso88598_uc 20,711
static const char iso88598_lc 54,3599
static const char iso88598_tc 88,6487
static unicode_char *c2u(c2u124,9377
static char *u2c(u2c129,9489
static char *toupper_func(toupper_func134,9601
static char *tolower_func(tolower_func139,9713
static char *totitle_func(totitle_func144,9825
const struct unicode_info unicode_ISO8859_8 149,9937

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88599.c,438
static const unicode_char iso88599_unicode 10,180
static const char iso88599_uc 20,753
static const char iso88599_lc 54,3641
static const char iso88599_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_9 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicodeinfo.c,17
int main(14,259

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso8859.c,116
unicode_char *unicode_iso8859_c2u(unicode_iso8859_c2u15,287
char *unicode_iso8859_u2c(unicode_iso8859_u2c49,782

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode_ultcasetab.c,168
const unsigned unicode_case_hash=10,185
const unicode_char unicode_case_tab[unicode_case_tab12,254
const unsigned unicode_case_offset[unicode_case_offset384,45263

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf8.c,110
unicode_char *unicode_utf8_tou(unicode_utf8_tou14,231
char *unicode_utf8_fromu(unicode_utf8_fromu186,3071

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso8859_convert.c,62
char *unicode_iso8859_convert(unicode_iso8859_convert14,243

/emcsvn/emc/emcmailer/trunk/courier_deliver/util.c,289
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
void aka_logger(14,265
sortem 63,1645
add_bounce 82,2034
add_pop 114,3225
add_forward 138,4098
aka_exit 162,4783
memerror2 215,6046
mserror2 222,6119
void put_date 232,6396
int read_env(323,7852

/emcsvn/emc/emcmailer/trunk/courier_deliver/dagent-courier.c,809
static char *rcsid rcsid6,293
static void use_rcsid(7,379
#define MYBUFSIZE 27,760
void usage(29,784
struct delivery *get_delivery_info(get_delivery_info30,802
char *decode_address(decode_address31,865
int make_maildirfolder(32,903
int init_config(34,949
struct delivery 87,3051
	char *mailbox;mailbox88,3069
	char *address;address89,3085
	char *maildir;maildir90,3101
long dodeliver(93,3121
char *get_delivery_maildir(get_delivery_maildir94,3176
char *get_quota(get_quota95,3226
int main 97,3267
char *get_quota(get_quota335,9966
char *get_delivery_maildir(get_delivery_maildir409,12085
void usage(452,12998
int make_maildirfolder(458,13090
long dodeliver(512,14497
struct delivery *get_delivery_info(get_delivery_info580,15656
char *decode_address(decode_address607,16110

/emcsvn/emc/emcmailer/trunk/courier_deliver/archive_deliver.c,444
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define _GNU_SOURCE8,195
char *msgid msgid27,638
int debugmode 28,656
struct delivery 31,693
	char *mailbox;mailbox32,711
	char *address;address33,727
	char *maildir;maildir34,743
static char *decode_address(decode_address37,763
static struct delivery *get_delivery_info(get_delivery_info78,1466
static int crchash(101,1952
int archive_mail(145,2788
int main 316,7736

/emcsvn/emc/emcmailer/trunk/qworker_main.c,275
static char *rcsid rcsid1,0
static void use_rcsid(2,84
qworker_options qe_opts;21,398
#define BUFFER_SIZE 23,424
EmcConfig * config 25,455
char * msgid 28,506
long host_id 29,527
int debugmode 30,546
int pretendmode 31,565
int outboundmode 32,586
int main(34,609

/emcsvn/emc/emcmailer/trunk/libemcqfile/libemcqfile.h,12790
#define LIB_Q_FILE_H2,21
#define _GNU_SOURCE5,63
#define MY_TYPE 18,266
#define CREATE_TRANSACTION_FILE 20,290
#define DELETE_TRANSACTION_FILE 21,334
int read_lock(23,379
int readw_lock(24,429
int write_lock(25,480
int writew_lock(26,531
int unlock_file(27,583
typedef struct QFileImpl_t 30,637
	EmcConfig * config;31,666
	const char * root_dir;32,687
	const char * fdb_dir;33,711
	MYSQL akadb;34,734
} QFileImpl;35,748
typedef struct EmcQEntry_t 37,762
	char * _sender;38,791
	char * _recipient;39,808
	char * _msgid;40,828
	long	 _inode;41,844
	char * _status;42,859
	int	 _lock;43,876
	long	 _time;44,889
	char * _file;45,903
	char * _host;46,918
	int    _outbound;47,933
	char * _qentry_file;48,952
	long   _offset;49,974
	long   _last_retry;50,991
	long   _magic;51,1012
	QFileImpl * _impl;52,1028
} EmcQEntry;53,1048
typedef struct EmcAList_t 55,1062
	long	 _qnum;56,1090
	long	 _alnum;57,1104
	char *  _msgid;58,1119
	long	 _inode;59,1136
	char *  _file;60,1151
	char *  _recipient;61,1167
	char *  _sender;62,1188
	int	  _level;63,1206
	int	  _allow_ext;64,1221
	char *  _data;65,1240
	char *  _status;66,1256
	int	 _lock;67,1274
	long   _last_retry;68,1287
	char * _qentry_file;69,1308
	char * _alist_file;70,1330
	QFileImpl * _impl;71,1351
} EmcAList;72,1371
typedef struct EmcAEntry_t 74,1384
	long	 _qnum;75,1413
	long	 _alnum;76,1427
	char *  _msgid;77,1442
	char *  _recipient;78,1459
	char *  _local;79,1480
	char *  _domain;80,1497
	char *  _sender;81,1515
	int	  _itemnum;82,1533
	char *  _action;83,1550
	char *  _data;84,1568
	char *  _status;85,1584
	int	  _retry_times;86,1602
	long	 _last_retry;87,1623
	char *  _last_error;88,1643
	char * _qentry_file;89,1665
	char * _alist_file;90,1687
	char * _aentry_file;91,1708
	QFileImpl * _impl;92,1730
} EmcAEntry;93,1750
typedef struct EmcHeader_t 96,1765
	long	 _qnum;97,1794
	long	 _alnum;98,1808
	long   _inode;99,1823
	char * _file;100,1839
	char * _header;101,1854
	char * _qentry_file;102,1871
	char * _alist_file;103,1893
	char * _header_file;104,1914
	QFileImpl * _impl;105,1936
} EmcHeader;106,1956
typedef struct EmcHint_t 108,1970
	char * _msgid;109,1997
	long	 _inode;110,2013
	char * _agent;111,2028
	char * _key;112,2044
	char * _hint;113,2058
	char * _hint_file;114,2073
	QFileImpl * _impl;115,2093
} EmcHint;116,2113
typedef struct EmcHostedEntry_t 118,2125
	long   _qnum;119,2159
	long   _alnum;120,2174
	char * _msgid;121,2190
	char * _recipient;122,2206
	char * _sender;123,2226
	long   _inode;124,2243
	char * _file;125,2259
	char * _data;126,2274
	char * _status;127,2289
	int	  _retry_times;128,2306
	long	 _last_retry;129,2327
	char *  _last_error;130,2347
	char * _qentry_file;131,2369
	char * _alist_file;132,2391
	char * _hosted_file;133,2412
	QFileImpl * _impl;134,2434
} EmcHostedEntry;135,2454
typedef struct EmcExternalEntry_t 137,2473
	long   _qnum;138,2509
	long   _alnum;139,2524
	char * _msgid;140,2540
	char * _recipient;141,2556
	char * _sender;142,2576
	long   _inode;143,2593
	char * _file;144,2609
	char * _data;145,2624
	char * _status;146,2639
	char * _rhost;147,2656
	int	  _retry_times;148,2672
	long	 _last_retry;149,2693
	char * _last_error;150,2713
	char * _qentry_file;151,2734
	char * _alist_file;152,2756
	char * _external_file;153,2777
	QFileImpl * _impl;154,2801
} EmcExternalEntry;155,2821
typedef EmcQEntry *			EmcQEntryArray;157,2842
typedef EmcAList *			EmcAListArray;158,2880
typedef EmcAEntry *			EmcAEntryArray;159,2916
typedef EmcHeader *			EmcHeaderArray;160,2954
typedef EmcHostedEntry* 	EmcHostedEntryArray;161,2992
typedef EmcExternalEntry* 	EmcExternalEntryArray;162,3038
QFileImpl * l_init_impl(166,3116
QFileImpl * l_init_impl2(167,3163
char * mysql_quote(168,3231
void p_qentry_init(172,3303
const char * l_qentry_get_sender(179,3433
const char * l_qentry_get_recipient(180,3489
const char * l_qentry_get_message_id(181,3548
long l_qentry_get_qnum(182,3608
long l_qentry_get_inode(183,3654
const char * l_qentry_get_status(184,3701
int l_qentry_get_lock(185,3757
long l_qentry_get_time(186,3802
long l_qentry_get_last_retry(187,3848
const char * l_qentry_get_filename(188,3900
const char * l_qentry_get_host(189,3958
int l_qentry_is_outbound(190,4012
QFileImpl * l_qentry_get_impl(191,4060
void l_qentry_set_impl(192,4113
void l_qentry_set_error(193,4177
EmcQEntry * l_qentry_dup(194,4244
EmcQEntry * l_qentry_create 195,4285
EmcQEntry * l_qentry_create_with_data 202,4442
EmcQEntry * l_qentry_create_real 211,4638
char * l_qentry_serialize(221,4848
EmcQEntry * l_qentry_deserialize(222,4915
int l_qentry_remove(223,4990
void l_qentry_free_list(224,5032
EmcQEntry * l_qentry_get(225,5091
int l_qentry_unlock(226,5147
int l_qentry_lock(227,5190
int l_qentry_set_status(228,5231
int l_qentry_get_pending(229,5299
int l_qentry_get_locked(230,5384
EmcQEntry * l_qentry_get_at(231,5478
void l_qentry_free(232,5540
int l_qentry_finished(233,5581
int l_qentry_get_processing_status(234,5626
long l_alist_get_qnum(238,5699
long l_alist_get_alnum(239,5743
const char * l_alist_get_message_id(240,5787
long l_alist_get_inode(241,5844
const char * l_alist_get_filename(242,5888
const char * l_alist_get_recipient(243,5943
const char * l_alist_get_sender(244,5999
int l_alist_get_level(245,6052
int l_alist_get_allow_ext(246,6095
const char * l_alist_get_data(247,6142
const char * l_alist_get_status(248,6193
QFileImpl * l_alist_get_impl(249,6246
MYSQL* l_alist_get_akadb(250,6296
void l_alist_set_impl(251,6339
EmcAList * l_alist_create(252,6400
EmcAList * l_alist_clone(260,6555
int l_alist_get_lock(265,6657
char * l_alist_serialize(266,6699
EmcAList * l_alist_deserialize(267,6761
EmcAList * l_alist_get_by_hosted(269,6866
int l_alist_lock(270,6945
int l_alist_unlock(271,6983
int l_alist_set_status(272,7023
int l_alist_set_allow_ext(273,7088
int l_alist_set_lastseen(274,7146
int l_alist_error(275,7199
int l_alist_get_pending(276,7238
int l_alist_finished(277,7307
EmcAList * l_alist_get_at(278,7349
int l_alist_message_modified(279,7405
int l_alist_remove_all_aentries(281,7488
int l_alist_max_itemnum(282,7541
void l_alist_free_list(283,7587
void l_alist_free(284,7641
int l_alist_get_by_status(286,7682
EmcAList * parse_alist_file(288,7794
int l_alist_get_processing_status(289,7858
long l_aentry_get_qnum(293,7925
long l_aentry_get_alnum(294,7972
const char * l_aentry_get_message_id(295,8019
const char * l_aentry_get_recipient(296,8079
const char * l_aentry_get_user(297,8138
const char * l_aentry_get_domain(298,8192
const char * l_aentry_get_sender(299,8248
int l_aentry_get_itemnum(300,8304
const char * l_aentry_get_action(301,8352
const char * l_aentry_get_status(302,8408
const char * l_aentry_get_data(303,8464
int l_aentry_get_retry_times(304,8518
long l_aentry_get_last_retry(305,8570
const char * l_aentry_last_error(306,8622
EmcAEntry * l_aentry_create(308,8679
int l_aentry_get_pending(315,8832
EmcAEntry * l_aentry_get_at(316,8902
void l_aentry_free_list(317,8962
int l_aentry_set_error(318,9019
int l_aentry_set_status(319,9086
int l_qentry_set_lastseen(320,9155
int l_aentry_stop_after(321,9211
int l_aentry_hold_after(322,9259
void l_aentry_free(323,9307
int l_aentry_get_all(325,9350
int l_aentry_get_by_status(326,9413
EmcAEntry *parse_aentry_file(parse_aentry_file328,9528
long l_header_get_qnum(332,9608
long l_header_get_alnum(333,9654
long l_header_get_inode(334,9701
const char * l_header_get_filename(335,9748
const char * l_header_get_header(336,9806
EmcHeader * l_header_create(337,9862
int l_header_get_pending(338,9936
EmcHeader * l_header_get_like 340,10029
EmcHeader * l_header_get_at(342,10128
void l_header_free_list(343,10187
void l_header_free(344,10243
void l_header_remove(345,10285
EmcHeader *parse_header_file(parse_header_file346,10327
const char * l_hint_get_message_id(350,10405
long l_hint_get_inode(351,10460
const char * l_hint_get_agent(352,10502
const char * l_hint_get_key(353,10552
const char * l_hint_get_hint(354,10600
EmcHint * l_hint_create(355,10649
EmcHint * l_hint_get(362,10806
void l_hint_free(364,10906
EmcHint * parse_hint_file(366,10943
int write_hint_file(367,11005
long l_hosted_get_qnum(372,11058
long l_hosted_get_alnum(373,11109
const char * l_hosted_get_message_id(374,11161
const char * l_hosted_get_recipient(375,11226
const char * l_hosted_get_sender(376,11290
long l_hosted_get_inode(377,11351
const char * l_hosted_get_filename(378,11403
const char * l_hosted_get_data(379,11466
const char * l_hosted_get_status(380,11525
int l_hosted_get_retry_times(381,11586
long l_hosted_get_last_retry(382,11643
const char * l_hosted_get_last_error(383,11700
EmcHostedEntry * l_hosted_create(384,11765
int l_hosted_set_error(391,11936
int l_hosted_set_status(392,12007
int l_hosted_get_pending(393,12080
EmcHostedEntry * l_hosted_get_at(394,12156
void l_hosted_free_list(395,12225
void l_hosted_free(396,12286
int l_hosted_get_by_status(398,12334
EmcHostedEntry * parse_hosted_file(400,12453
int l_hosted_touch(401,12524
long l_external_get_qnum(405,12604
long l_external_get_alnum(406,12661
const char * l_external_get_message_id(407,12719
const char * l_external_get_recipient(408,12790
const char * l_external_get_sender(409,12860
long l_external_get_inode(410,12927
const char * l_external_get_filename(411,12985
const char * l_external_get_data(412,13054
const char * l_external_get_status(413,13119
int l_external_get_retry_times(414,13186
long l_external_get_last_retry(415,13249
const char * l_external_get_last_error(416,13312
EmcExternalEntry * l_external_create(417,13383
int l_external_set_error(425,13581
int l_external_set_status(426,13658
int l_external_get_pending(427,13737
EmcExternalEntry * l_external_get_at(428,13817
void l_external_free_list(429,13892
void l_external_free(430,13957
int l_external_get_by_status(432,14011
EmcExternalEntry * parse_external_file(434,14134
int l_message_store(438,14225
int l_message_remove(447,14424
int l_message_merge_headers(450,14491
int l_message_merge_headers_escape(455,14606
char * l_message_merge_headers_as_string(461,14741
char * l_message_create(465,14857
char * l_message_create_with_data(474,15062
char * l_message_create_outbound_with_data(484,15291
char * l_message_create_with_mode_data(494,15529
int l_misc_sender_valid(509,15788
char * l_misc_get_unique_id(510,15836
char * l_misc_get_localname(511,15903
char * l_misc_get_domain(512,15956
char * str_tolower(513,16006
char * l_misc_read_line(514,16047
const char *l_misc_escape_address(l_misc_escape_address516,16086
int l_admin_get_all_entries(534,16787
int l_admin_get_pending_entries(536,16862
int l_admin_get_frozen_entries(538,16941
int l_admin_get_failed_entries(540,17019
int l_admin_lock_qentry(542,17097
int l_admin_unlock_qentry(543,17163
int l_admin_get_locked_entries(544,17230
int l_admin_get_qentry_info(546,17309
int l_admin_get_action_entries(556,17557
int l_admin_reset_failed_qentry(561,17681
int l_admin_thaw_qentry(563,17757
EmcQEntry * l_admin_get_qentry(565,17825
int l_admin_set_qentry_status(566,17896
int l_admin_queue_rebuild(568,17989
#define REC_SIZE 573,18078
#define HEADER_SIZE 574,18100
#define PAYLOAD_SIZE 575,18125
typedef struct db_header_t 577,18152
   long magic;579,18182
   long first_rec;580,18197
   long last_rec;581,18216
   long first_del;582,18234
   long last_del;583,18253
   long session_magic;584,18271
	long total_recs;585,18294
} db_header;587,18313
typedef struct db_record_t 590,18328
   long magic;592,18358
   char payload[payload593,18373
   long prev_rec;594,18404
   long next_rec;595,18422
} db_record;597,18441
typedef union db_entry_t 599,18455
	db_header header;601,18483
	db_record record;602,18502
} db_entry;604,18523
#define OLD_STATE_RECORD 607,18537
#define NEW_STATE_RECORD 608,18566
typedef struct db_jentry_t 610,18596
	long magic;611,18625
	long offset;612,18638
	int state;613,18652
	db_entry entry;614,18664
} db_jentry;615,18681
typedef struct transaction_t 617,18695
	int QDBJ;618,18726
	int QDB;619,18737
	char * journal_path;620,18747
	char * fdb_path;621,18769
} transaction;622,18787
void initdb(625,18804
int fdb_insert_rec(626,18837
int fdb_delete_rec(627,18875
int fdb_update_rec(628,18913
typedef int (*QDBFunc)QDBFunc629,18949
EmcQEntry * fdb_get(630,19005
int fdb_get_num_entries(631,19060
int fdb_foreach(632,19106
int fdb_compact_db(633,19174
EmcQEntry * parse_qentry_file(635,19215
int write_qentry_file(636,19285
void fdb_dump(637,19326
void fdb_dump_journal(638,19358
void fdb_initdb(639,19398

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdelete.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,79
const char * msgid 12,233
int debugmode 13,261
int main(15,281

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdb.c,1335
static char *rcsid rcsid1,0
static void use_rcsid(2,75
#define _GNU_SOURCE8,183
#define HEADER_MAGIC 25,514
#define JOURNAL_MAGIC 26,544
char * QFILE 29,577
char * QFILE_JOURNAL 30,599
void _fdb_initdb_internal(32,635
int _fdb_rebuild(33,696
void _add_qentry_to_fdb(34,756
int _assert_db_integrity(35,836
int _db_begin_read(36,903
int _db_begin_write(37,965
void _db_end_read(38,1028
void _db_close_transaction(39,1071
int _db_rollback(40,1123
int _db_commit(41,1202
int _fdb_insert_rec_internal(42,1279
int read_rec(44,1350
int write_rec(45,1431
int write_rec_notrans 46,1512
void fdb_initdb(49,1604
void _fdb_initdb_internal(57,1883
int _fdb_rebuild(164,4442
void _add_qentry_to_fdb(198,5238
int _assert_db_integrity(228,5908
int _db_begin_read(268,7227
int _db_begin_write(316,8240
void _db_end_read(399,10359
void _db_close_transaction(412,10594
int _db_rollback(436,11010
int _db_commit(499,12513
int fdb_insert_rec(565,14024
int _fdb_insert_rec_internal(590,14621
int fdb_delete_rec(739,18193
int fdb_update_rec(872,21465
EmcQEntry * fdb_get(933,22828
int fdb_foreach(982,24047
int read_rec(1075,25803
int write_rec(1105,26462
int write_rec_notrans 1171,28127
int fdb_get_num_entries(1215,29119
void fdb_dump(1246,29728
void fdb_dump_journal(1372,33588
int fdb_compact_db(1449,35778

/emcsvn/emc/emcmailer/trunk/libemcqfile/libcommon.c,196
static char *rcsid rcsid1,0
static void use_rcsid(2,82
int lock_reg(12,258
int read_lock(23,626
int readw_lock(27,744
int write_lock(31,864
int writew_lock(35,983
int unlock_file(39,1104

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdb.notrans.c,474
static char *rcsid rcsid1,0
static void use_rcsid(2,83
#define HEADER_MAGIC 23,477
#define REC_MAGIC 24,507
char * QFILE 27,536
char * QFILE_JOURNAL 28,558
char * filep 29,593
int read_rec(32,643
int write_rec(33,724
void fdb_initdb(36,807
int fdb_insert_rec(79,1879
int fdb_delete_rec(234,5344
int fdb_foreach(364,8550
void compact_db_callback(491,11877
int fdb_compact_db(513,12306
int read_rec(571,13672
int write_rec(613,14604
void fdb_dump(654,15542

/emcsvn/emc/emcmailer/trunk/libemcqfile/tester.c,136
static char *rcsid rcsid1,0
static void use_rcsid(2,78
char * msgid 17,331
int debugmode 18,353
void func 20,373
int main(46,872

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdumper.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,79
const char * msgid 12,233
int debugmode 13,261
int main(15,281

/emcsvn/emc/emcmailer/trunk/libemcqfile/qentry.c,2211
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int p_init_queue_directory(27,555
void purge_qentry_dir(33,789
void purge_dir(34,835
void P_BEGIN_CREATE_QENTRY(36,873
void P_COMMIT_CREATE_QENTRY(65,1563
void P_ROLLBACK_CREATE_QENTRY(91,2209
int P_IS_QENTRY_BEING_CREATED(96,2368
void P_BEGIN_DELETE_QENTRY(122,2951
int P_IS_QENTRY_BEING_DELETED(150,3698
void p_qentry_init(175,4280
const char * l_qentry_get_sender(207,5052
const char * l_qentry_get_recipient(210,5136
const char * l_qentry_get_message_id(213,5226
long l_qentry_get_qnum(216,5313
long l_qentry_get_inode(219,5387
const char * l_qentry_get_status(222,5461
int l_qentry_get_lock(225,5545
long l_qentry_get_time(228,5616
long l_qentry_get_last_retry(231,5688
const char * l_qentry_get_filename(234,5772
const char * l_qentry_get_host(237,5856
int l_qentry_is_outbound(240,5936
QFileImpl * l_qentry_get_impl(243,6014
void l_qentry_set_impl(246,6093
EmcQEntry * l_qentry_dup(250,6184
EmcQEntry * l_qentry_create 259,6418
EmcQEntry *l_qentry_create_real(l_qentry_create_real271,6684
EmcQEntry * l_qentry_create_with_data 286,7004
int p_init_queue_directory(495,11843
#define EMPTY_TAG 545,12845
char * l_qentry_serialize(547,12876
EmcQEntry * l_qentry_deserialize(587,14080
#define _CHECK_STREAM 589,14160
int l_qentry_remove(659,15923
EmcQEntry * l_qentry_get(774,18567
int l_qentry_lock(782,18721
int l_qentry_unlock(824,19586
int l_qentry_set_status(873,20662
int l_qentry_set_lastseen(922,21804
EmcQEntry * l_qentry_get_at(972,23407
void l_qentry_free_list(976,23503
typedef struct foreach_data_t 992,23831
	EmcQEntryArray * entries;993,23863
	QFileImpl * impl;994,23890
	int len;995,23909
	int limit;996,23919
	int lock;997,23931
	long retry_interval;998,23942
} foreach_data;999,23964
int p_get_pending_callback(1001,23981
int l_qentry_get_pending(1050,24944
int p_get_locked_callback(1087,25751
int l_qentry_get_locked(1129,26596
int l_qentry_finished(1166,27382
int l_qentry_get_processing_status(1215,28230
void l_qentry_free(1310,30577
void purge_qentry_dir(1324,30866
void purge_dir(1341,31145
EmcQEntry * parse_qentry_file(1395,32385
int write_qentry_file(1576,36843

/emcsvn/emc/emcmailer/trunk/libemcqfile/hint.c,398
static char *rcsid rcsid1,0
static void use_rcsid(2,77
const char * l_hint_get_message_id(26,492
long l_hint_get_inode(29,571
const char * l_hint_get_agent(32,637
const char * l_hint_get_key(35,711
const char * l_hint_get_hint(38,781
EmcHint * l_hint_create(42,854
EmcHint * l_hint_get(140,2924
void l_hint_free(229,4627
EmcHint * parse_hint_file(243,4819
int write_hint_file(348,7027

/emcsvn/emc/emcmailer/trunk/libemcqfile/hosted.c,1022
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_hosted_file(25,511
long l_hosted_get_qnum(28,562
long l_hosted_get_alnum(31,637
const char * l_hosted_get_message_id(34,714
const char * l_hosted_get_recipient(37,804
const char * l_hosted_get_sender(40,897
long l_hosted_get_inode(43,984
const char * l_hosted_get_filename(46,1061
const char * l_hosted_get_data(49,1148
const char * l_hosted_get_status(52,1231
int l_hosted_get_retry_times(55,1318
long l_hosted_get_last_retry(58,1406
const char * l_hosted_get_last_error(61,1493
EmcHostedEntry * l_hosted_create(65,1589
int l_hosted_set_error(171,4039
int l_hosted_touch(248,5870
int l_hosted_set_status(291,6797
int l_hosted_get_pending(306,7164
int l_hosted_get_all(336,7686
int l_hosted_get_by_status(361,8190
EmcHostedEntry * l_hosted_get_at(469,10327
void l_hosted_free_list(473,10435
void l_hosted_free(485,10658
void l_hosted_remove 499,11015
EmcHostedEntry * parse_hosted_file(507,11161
int write_hosted_file(688,15169

/emcsvn/emc/emcmailer/trunk/libemcqfile/main.c,348
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
#define MY_TYPE 24,487
extern int connect_to_aka_db(30,653
static MYSQL * akadb 32,717
static int inited_akadb 33,746
QFileImpl * l_init_impl(36,777
QFileImpl * l_init_impl2(41,864
MYSQL * l_impl_get_akadb(104,2457
void _fini(109,2532
void _init(114,2603

/emcsvn/emc/emcmailer/trunk/libemcqfile/misc.c,430
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define UNIQUE_ID_SIZE 18,365
extern int is_sender_valid(24,535
const char *l_misc_escape_address(l_misc_escape_address26,585
int l_misc_sender_valid(57,1151
char * l_misc_get_localname(61,1238
char * l_misc_get_domain(86,1537
char * string_base62(112,1837
char * l_misc_get_unique_id(127,2146
#define LINE_BUFFER_SIZE 164,3011
char * l_misc_read_line(166,3046

/emcsvn/emc/emcmailer/trunk/libemcqfile/hinter.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,78
const char * msgid 12,232
int debugmode 13,260
int main(15,280

/emcsvn/emc/emcmailer/trunk/libemcqfile/admin.c,1377
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define ALLOCATION_BATCH 27,558
int p_admin_get_all_callback(31,606
int p_admin_get_failed_callback(32,669
int p_admin_get_frozen_callback(33,735
int p_admin_get_pending_callback(34,801
int p_admin_get_entries(35,867
typedef struct p_admin_foreach_data_t 40,962
	EmcQEntryArray * entries;41,1002
	QFileImpl * impl;42,1029
	int len;43,1048
	int lock;44,1058
	int allocated;45,1069
} p_admin_foreach_data;46,1085
int l_admin_get_all_entries(48,1110
int l_admin_get_pending_entries(54,1263
int l_admin_get_frozen_entries(60,1425
int l_admin_get_failed_entries(67,1585
int p_admin_get_all_callback(73,1744
int p_admin_get_failed_callback(101,2319
int p_admin_get_frozen_callback(133,2965
int p_admin_get_pending_callback(165,3611
int p_admin_get_locked_callback(197,4257
int p_admin_get_unlocked_callback(229,4879
int p_admin_get_entries(261,5502
int l_admin_lock_qentry 290,6144
int l_admin_unlock_qentry 318,6703
int l_admin_get_locked_entries 346,7266
int l_admin_get_qentry_info(352,7426
int l_admin_set_action_status(383,8176
int l_admin_get_action_entries(419,8962
int l_admin_queue_rebuild(454,9804
int l_admin_reset_failed_qentry(460,9926
int l_admin_thaw_qentry(549,12068
int l_admin_set_qentry_status(608,13497
EmcQEntry * l_admin_get_qentry(636,14096

/emcsvn/emc/emcmailer/trunk/libemcqfile/alist.c,1725
static char *rcsid rcsid1,0
static void use_rcsid(2,77
int write_alist_file(26,552
int l_alist_get_by_status_internal 27,595
long l_alist_get_qnum(35,922
long l_alist_get_alnum(38,990
const char * l_alist_get_message_id(41,1060
long l_alist_get_inode(44,1143
const char * l_alist_get_filename(47,1213
const char * l_alist_get_recipient(50,1293
const char * l_alist_get_sender(53,1379
int l_alist_get_level(56,1459
int l_alist_get_allow_ext(59,1528
const char * l_alist_get_data(62,1605
const char * l_alist_get_status(65,1681
int l_alist_get_lock(68,1761
QFileImpl * l_alist_get_impl(71,1828
void l_alist_set_impl(74,1903
int l_build_expand_forward(78,1990
int l_build_expand_forward_bounce(83,2102
EmcAList * l_alist_create(87,2226
EmcAList * l_alist_clone(186,4638
EmcAList * l_alist_get_by_hosted(294,7365
int l_alist_lock(309,7728
int l_alist_unlock(344,8396
void l_alist_set_filename(378,9064
int l_alist_set_status(384,9195
int l_alist_set_allow_ext(420,9937
int l_alist_set_lastseen(454,10603
MYSQL * l_alist_get_akadb(487,11264
int l_alist_get_processing_status(491,11345
int l_alist_finished(536,12226
int l_alist_get_pending(551,12552
int l_alist_get_all(574,13043
int l_alist_get_by_status 597,13504
int l_alist_get_by_status_internal 605,13727
EmcAList * l_alist_get_at(725,16280
void l_alist_free_list(729,16373
int l_alist_message_modified(744,16677
int l_alist_remove_all_aentries(840,19176
int l_alist_max_itemnum(875,19960
#define EMPTY_TAG 908,20552
char * l_alist_serialize(910,20583
EmcAList * l_alist_deserialize(951,21711
#define _CHECK_STREAM 953,21789
void l_alist_free(1001,23399
EmcAList * parse_alist_file(1016,23706
int write_alist_file(1198,27920

/emcsvn/emc/emcmailer/trunk/libemcqfile/qe_tester.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * msgid 12,235
int debugmode 13,263
int main(15,283

/emcsvn/emc/emcmailer/trunk/libemcqfile/external.c,1092
static char *rcsid rcsid1,0
static void use_rcsid(2,80
int write_external_file(25,513
long l_external_get_qnum(28,572
long l_external_get_alnum(31,657
const char * l_external_get_message_id(34,744
const char * l_external_get_recipient(37,844
const char * l_external_get_sender(40,947
long l_external_get_inode(43,1044
const char * l_external_get_filename(46,1131
const char * l_external_get_data(49,1228
const char * l_external_get_status(52,1321
const char * l_external_get_rhost(55,1418
int l_external_get_retry_times(58,1513
long l_external_get_last_retry(61,1611
const char * l_external_get_last_error(64,1708
EmcExternalEntry * l_external_create(68,1814
int l_external_set_error(170,4456
int l_external_set_status(240,6346
int l_external_get_pending(255,6749
int l_external_get_all(280,7308
int l_external_get_by_status(305,7854
EmcExternalEntry * l_external_get_at(401,9897
void l_external_free_list(405,10015
void l_external_free(416,10269
void l_external_remove 431,10703
EmcExternalEntry * parse_external_file(439,10863
int write_external_file(624,15246

/emcsvn/emc/emcmailer/trunk/libemcqfile/message.c,700
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
#define MY_TYPE 31,643
#define BUFFER_SIZE 33,667
extern const char * config_get_filename(39,838
int l_message_store(45,1065
int l_message_remove(133,3044
char *l_message_create(l_message_create154,3481
char *l_message_create_with_data(l_message_create_with_data170,3806
char *l_message_create_outbound_with_data(l_message_create_outbound_with_data186,4161
char *l_message_create_with_mode_data(l_message_create_with_mode_data202,4525
int l_message_merge_headers(440,9502
int l_message_merge_headers_escape 450,9703
char *l_message_merge_headers_as_string(l_message_merge_headers_as_string656,14146

/emcsvn/emc/emcmailer/trunk/libemcqfile/header.c,583
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_header_file(26,512
long l_header_get_qnum(28,557
long l_header_get_alnum(31,627
long l_header_get_inode(34,699
const char * l_header_get_filename(37,771
const char * l_header_get_header(40,853
EmcHeader * l_header_create(44,936
int l_header_get_pending(171,3758
EmcHeader * l_header_get_like 302,6282
EmcHeader * l_header_get_at(344,7437
void l_header_free_list(348,7530
void l_header_remove(360,7748
void l_header_free(366,7876
EmcHeader * parse_header_file(377,8093
int write_header_file(488,10451

/emcsvn/emc/emcmailer/trunk/libemcqfile/aentry.c,1259
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_aentry_file(26,512
EmcAList * parse_alist_file(27,558
long l_aentry_get_qnum(29,627
long l_aentry_get_alnum(32,701
const char * l_aentry_get_message_id(35,777
const char * l_aentry_get_recipient(38,866
const char * l_aentry_get_user(41,958
const char * l_aentry_get_domain(44,1041
const char * l_aentry_get_sender(47,1127
int l_aentry_get_itemnum(50,1213
const char * l_aentry_get_action(53,1292
const char * l_aentry_get_status(56,1378
const char * l_aentry_get_data(59,1464
int l_aentry_get_retry_times(62,1546
long l_aentry_get_last_retry(65,1633
const char * l_aentry_last_error(68,1719
int l_aentry_internal_set_status(72,1810
EmcAEntry *l_aentry_create(l_aentry_create74,1898
int l_aentry_get_pending(158,3988
int l_aentry_get_all(179,4499
int l_aentry_get_by_status(200,4997
EmcAEntry * l_aentry_get_at(289,6756
void l_aentry_free_list(293,6853
int l_aentry_set_error(306,7102
int l_aentry_touch(404,9637
int l_aentry_set_status(462,10898
int l_aentry_stop_after(468,11032
int l_aentry_hold_after(473,11143
int l_aentry_internal_set_status(479,11255
void l_aentry_free(626,14902
EmcAEntry * parse_aentry_file(643,15322
int write_aentry_file(843,19957

/emcsvn/emc/emcmailer/trunk/libemcqfile/initdb.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,78
const char * msgid 12,232
int debugmode 13,260
int main(15,280

/emcsvn/emc/emcmailer/trunk/libemcqfile/sherlock.c,118
static char *rcsid rcsid1,0
static void use_rcsid(2,81
char * msgid 17,353
int debugmode 18,375
int main(20,395

/emcsvn/emc/emcmailer/trunk/libemcqfile/compactdb.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * msgid 11,234
int debugmode 12,262
int main(14,282

/emcsvn/emc/emcmailer/trunk/libemcqfile/build.c,648
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
int p_build_do_special_addresses(26,553
int p_build_check_alias(27,604
int l_build_is_external_domain(28,646
int resp_active(30,717
reassemble_address(81,1951
int l_build_expand_alist(112,2537
int l_build_expand_outbound_alist(917,22465
int l_build_expand_relay(1259,31028
int l_build_expand_hosted(1311,32223
int l_build_expand_external(1332,32735
int l_build_expand_shcal(1362,33361
int l_build_is_external_domain(1462,35855
int l_build_is_external_address(1509,36811
int p_build_check_alias(1531,37183
int p_build_do_special_addresses(1609,38776

/emcsvn/emc/emcmailer/trunk/exim_q.c,130
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define BUFSIZE 22,437
int exim_q(29,742
int exim_q_headers(167,4016

/emcsvn/emc/emcmailer/trunk/exim_q.h,114
#define EXIM_Q_H2,17
#define QUEUE_FILE 4,35
#define QUEUE_MEM 5,56
int exim_q(7,78
int exim_q_headers(8,167

/emcsvn/emc/emcmailer/trunk/ldeliver.c,1202
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define ELE_LDELIVER_USE_COURIER37,755
extern int debugmode;39,789
extern int pretendmode;40,811
extern const char *msgid;msgid41,835
extern ldeliver_options ldeliver_opts;43,862
#define LOCAL_DELIVERY 45,902
#define REMOTE_DELIVERY 46,927
#define AUTO_DELIVERY 47,953
#define ERR_CONTAINS 49,978
#define BUFFER_SIZE 51,1003
EmcHash *l_recipients;l_recipients53,1032
EmcHash *l_inodes;l_inodes54,1055
EmcHash *l_extra_data;l_extra_data55,1074
int deliverymode 57,1098
void do_lfilenames(60,1160
off_t get_quota(61,1215
int do_quota(62,1276
void do_quota_notify(63,1341
char *remote_delivery_addr(remote_delivery_addr64,1391
int do_mb_filters(65,1475
char *get_header_data(get_header_data67,1592
int do_contains(68,1659
char *mailboxvars(mailboxvars70,1763
int do_ldeliver(73,1844
void do_lfilenames(154,3609
off_t get_quota(726,19400
int do_quota(801,21167
void do_quota_notify(877,23512
int do_mb_filters(960,25710
char *get_header_data(get_header_data1213,32182
char *quote_with_QE(quote_with_QE1261,33265
int do_contains(1329,34927
char *mailboxvars(mailboxvars1443,37373

/emcsvn/emc/emcmailer/trunk/ldeliver.h,643
#define L_DELIVER_H2,20
#define OVECSIZE 9,128
#define WEBFILTER_AND 11,149
#define WEBFILTER_OR 12,173
#define WEBFILTER_CONTAINS 13,196
#define WEBFILTER_NOT_CONTAINS 14,225
typedef struct ldeliver_options_t 16,259
	EmcQImpl * impl;17,295
	EmcConfig * config;18,313
	int batch_num;19,334
	const char * sender;20,350
} ldeliver_options;21,372
typedef struct ldeliver_quota_t 23,393
	const char * recipient;24,427
	off_t quota;25,452
	off_t on_disk_quota;26,466
	int quota_action;27,488
	int quota_notify;28,507
	char * notify_address;29,526
	char * redirect_address;30,550
} ldeliver_quota;31,576
int do_ldeliver(33,595

/emcsvn/emc/emcmailer/trunk/memcache/mailer.c,129
static char *rcsid rcsid1,0
static void use_rcsid(2,79
em_memcache_t *emcmailer_memcache_init(emcmailer_memcache_init18,357

/emcsvn/emc/emcmailer/trunk/memcache/mailer.h,100
#define MEMCACHE_MAILER_H2,26
em_memcache_t *emcmailer_memcache_init(emcmailer_memcache_init7,99

/emcsvn/emc/emcmailer/trunk/memcache/main.c,762
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
MYSQL mysql_sock;22,430
struct virus_options_t 24,449
	int providers;25,474
	int notify;26,490
	int notify_local_only;27,503
	int daily_digest;28,527
	int monthly_digest;29,546
	int trigger_action;30,567
	int new_virus_action;31,588
	int parse_fail_action;32,611
	int block_encrypted;33,635
	char *admin;admin34,657
	char *notify_text;notify_text35,671
	char *notify_footer;notify_footer36,691
	char *new_virus_notify_address;new_virus_notify_address37,713
	char *parse_fail_admin;parse_fail_admin38,746
	char *admin2;admin239,771
	char *admin3;admin340,786
void init_db(43,805
void init_virus_options(45,822
void init_db(200,5124
int main(230,5789

/emcsvn/emc/emcmailer/trunk/memcache/virus.h,1439
#define EMC_VIRUS_H2,20
#define NOTIFY_SENDER 4,41
#define NOTIFY_RECIPIENT 5,65
#define NOTIFY_ADMINISTRATOR 6,92
#define DELETE_MESSAGE 8,124
#define STRIP_ATTACHMENT 9,149
#define NEW_VIRUS_FREEZE 11,177
#define NEW_VIRUS_DELIVER 12,204
#define PARSE_FAIL_NOTIFY_ADMIN 14,233
#define PARSE_FAIL_DELIVER_ANYWAY 15,267
#define SUBJ_LEN 17,304
#define SUBJ_LEN_ENC 18,324
struct virus_summary_report_t 21,385
	char * msg_filename;22,417
	char * ip;23,439
	char * subject;24,451
} virus_summary_report;25,468
struct virus_options_t 27,493
	int providers;28,518
	int notify;29,534
	int notify_local_only;30,547
	int daily_digest;31,571
	int monthly_digest;32,590
	int trigger_action;33,611
	int new_virus_action;34,632
	int parse_fail_action;35,655
	int block_encrypted;36,679
	char *admin;admin37,701
	char *notify_text;notify_text38,715
	char *notify_footer;notify_footer39,735
	char *new_virus_notify_address;new_virus_notify_address40,757
	char *parse_fail_admin;parse_fail_admin41,790
	char *admin2;admin242,815
	char *admin3;admin343,830
struct provider_t 46,849
	char * name;47,869
	int code;48,883
	char * host;49,894
	int port;50,908
	char * scan_dir;51,919
	int sock;52,937
	int header_added;53,948
	int fallback;54,967
	int was_used;55,982
	int was_clean;56,997
struct virus_t 59,1017
	char * virus_name;60,1034
	char * attachment_name;61,1054
	char * provider_name;62,1079

/emcsvn/emc/emcmailer/trunk/memcache/cache.c,1117
static char *rcsid rcsid1,0
static void use_rcsid(2,78
em_memcache_t *em_memcache_init(em_memcache_init20,392
GString *em_serialize_row(em_serialize_row88,1848
#define EMDELIM 109,2274
#define DELIMLEN 110,2301
void em_result_set_free(112,2321
EmResultSet *em_result_set_new(em_result_set_new140,2891
void em_db_row_free(157,3191
EmDbRow *em_db_row_new(em_db_row_new187,3660
void em_result_set_add_row(202,3976
EmDbRow *em_mysql_row_to_em_row(em_mysql_row_to_em_row208,4095
EmResultSet *em_mysql_result_to_em_result(em_mysql_result_to_em_result233,4631
EmDbRow *em_result_fetch_row(em_result_fetch_row255,5114
ConstGString *em_serialize_result(em_serialize_result266,5317
EmResultSet *em_deserialize_result_set(em_deserialize_result_set308,6386
EmDbRow *em_deserialize_row(em_deserialize_row335,6921
char **em_char_from_row(em_char_from_row376,7720
void em_dump_row(381,7784
void em_dump_result(392,7985
void em_dump_string(407,8301
EmResultSet *em_cache_get(em_cache_get424,8606
EmResultSet *em_cache_sql(em_cache_sql450,9098
EmResultSet *em_cache_query(em_cache_query492,9892

/emcsvn/emc/emcmailer/trunk/memcache/cache.h,1391
#define EM_CACHE_H2,19
typedef struct const_g_string 13,317
	char *str;str14,349
	unsigned int len;15,361
} ConstGString;16,380
typedef struct em_cached_results 21,481
	int num_rows;25,602
	GArray *rows;rows30,676
	char *data;data36,810
	int at_row;42,959
	apr_pool_t *sp;sp47,1042
} EmResultSet;48,1059
typedef struct em_row 54,1198
	int columns;58,1267
	unsigned long *lengths;lengths63,1332
	char **fields;fields68,1405
} EmDbRow;69,1421
char **em_char_from_row(em_char_from_row75,1547
EmDbRow *em_deserialize_row(em_deserialize_row80,1671
EmResultSet *em_deserialize_result_set(em_deserialize_result_set85,1818
EmResultSet *em_mysql_result_to_em_result(em_mysql_result_to_em_result90,1957
void em_dump_result(95,2085
void em_dump_row(100,2187
GString *em_serialize_row(em_serialize_row105,2318
EmDbRow *em_result_fetch_row(em_result_fetch_row110,2435
ConstGString *em_serialize_result(em_serialize_result116,2626
void em_dump_string(121,2734
typedef struct em_memcache_s 126,2852
	apr_memcache_t *cache;cache127,2883
	apr_pool_t *p;p128,2907
} em_memcache_t;129,2923
EmResultSet *em_cache_query(em_cache_query136,3209
em_memcache_t *em_memcache_init(em_memcache_init148,3478
EmResultSet *em_cache_get(em_cache_get150,3565
EmResultSet *em_cache_sql(em_cache_sql152,3650
void em_result_set_free(160,3773
void em_db_row_free(161,3820

/emcsvn/emc/emcmailer/trunk/bcastbnc/bcastbnc.c,516
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
char *filename filename23,469
char *sender sender24,492
char *recip recip25,513
int debugmode 26,533
int unlink_msgfile 27,552
char *configfile configfile28,576
int sock 29,601
char *msgid msgid30,615
char *refdomain refdomain31,635
char *data data32,659
char *local local34,679
char *domain domain35,699
#define BUFFER_SIZE 37,721
int leave(39,750
int leave(41,802
void init_args(46,840
int main(145,2907

/emcsvn/emc/emcmailer/trunk/exdeliver_main.c,326
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define BUFFER_SIZE 20,401
char * msgid 23,455
int debugmode 24,476
int pretendmode 25,495
const char * sender;27,517
long batch_num 28,538
const char * queue_type 29,558
const char * configfile 30,590
exdeliver_options exdeliver_opts;32,623
int main(34,658

/emcsvn/emc/emcmailer/trunk/forwarding/forwarding.c,433
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
void do_dynamic_recip(31,642
int p_expand_dynamic_forwarding(32,702
int forwarding_expand_bounce(34,789
int forwarding_expand 108,2605
int p_expand_dynamic_forwarding(384,10560
void do_dynamic_recip(539,14090
GArray *forwarding_get_members forwarding_get_members557,14617
char *get_boxfulladdress_by_rid get_boxfulladdress_by_rid600,15650

/emcsvn/emc/emcmailer/trunk/forwarding/forwarding.h,218
#define EMC_FORWARDING2,23
int forwarding_expand_bounce(4,47
int forwarding_expand(5,113
GArray *forwarding_get_members forwarding_get_members6,172
char *get_boxfulladdress_by_rid get_boxfulladdress_by_rid7,239

/emcsvn/emc/emcmailer/trunk/constants.h,1655
#define EMC_CONSTANTS_H2,24
#define ASSERT(5,64
#define START_BREAK_FRAME 8,203
#define END_BREAK_FRAME 11,264
#define SAFE_FREE(14,329
#define DUPLICATE_RECIPIENT_ERROR 17,397
#define OP_FAIL 19,436
#define OP_OK 20,458
#define SPAM_ACTION 22,478
#define VIRUS_ACTION 23,510
#define EIC_ACTION 24,543
#define RELAY_ACTION 25,574
#define BOUNCE_ACTION 26,607
#define MF_ACTION 27,641
#define LIST_ACTION 28,676
#define AUTO_ACTION 29,712
#define BCAST_BOUNCE_ACTION 30,748
#define LIST_BOUNCE_ACTION 31,788
#define LISTSERVE_ACTION 32,825
#define OUT_BCS_ACTION	33,861
#define OUT_VIRUS_ACTION 34,893
#define OUT_MF_ACTION 35,933
#define OUT_BOUNCE_ACTION 36,970
#define OUT_TAGLINE	37,1007
#define J2_STORAGE_ACTION 38,1042
#define ARCHIVER_ACTION 39,1081
#define OUT_ARCHIVER_ACTION 40,1120
#define CONFILTER_ACTION 41,1162
#define OUT_CONFILTER_ACTION 42,1199
#define SPOOL_ACTION	43,1243
#define OUT_SPOOL_ACTION	44,1272
#define POLICYSMART_ACTION	45,1308
#define OUT_POLICYSMART_ACTION	46,1345
#define I_RELAY_ACTION 48,1390
#define I_FORWARD_ACTION 49,1424
#define I_SHRDCAL_ACTION 50,1460
#define I_FWD_BOUNCE_ACTION 51,1496
#define I_HOSTED_ACTION 52,1534
#define I_EXTERNAL_ACTION 53,1568
#define QE_PND 55,1605
#define QE_FAIL 56,1624
#define QE_DONE 57,1643
#define QE_STOP 58,1662
#define QE_FRZE 59,1681
#define AL_PND 61,1701
#define AL_FAIL 62,1720
#define AL_DONE 63,1739
#define AL_STOP 64,1758
#define AL_FRZE 65,1777
#define EMC_FAIL 67,1797
#define DEFAULT_RETRY_TIMES 69,1818
#define DEFAULT_RETRY_INTERVAL 70,1848
#define DEFAULT_ON_FAIL 71,1881
#define DEFAULT_ON_FATAL 72,1912

/emcsvn/emc/emcmailer/trunk/listserv/listserv.c,917
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
EmcQImpl * impl;27,548
EmcConfig * config;28,565
MYSQL mysql;29,585
MYSQL_ROW row;30,598
MYSQL_RES * rs;31,613
char * filename 33,630
char * sender 34,654
char * recip 35,676
int debugmode 36,697
int unlink_msgfile 37,716
char * configfile 38,740
int sock 39,766
char * msgid 40,780
char * refdomain 41,801
char * data 42,826
char * local 44,847
char * domain 45,868
#define BUFFER_SIZE 47,891
int leave(49,921
void do_help(53,959
int check_password(110,2737
int member_exists(156,3711
void send_to_owner(187,4328
void send_auth_token(264,5981
int subscribe_member(353,8584
int unsubscribe_member(404,9879
void admin_subscribe(455,11189
void admin_unsubscribe(507,12876
void user_subscribe(555,14380
void user_unsubscribe(673,17996
void sub_conf(758,20615
void init_args(836,22927
int main(931,25007

/emcsvn/emc/emcmailer/trunk/libemcqmysql/libemcqmysql.h,10239
#define LIB_Q_MYSQL_H2,22
#define _GNU_SOURCE4,45
#define MY_TYPE 12,164
extern char *_mysql_quote(_mysql_quote14,189
typedef struct QMysqlImpl_t 16,250
	EmcConfig *config;config17,280
	MYSQL *queue;queue18,300
	MYSQL *aka;aka19,315
} QMysqlImpl;20,328
typedef struct EmcQEntry_t 22,343
	char * _sender;23,372
	char * _recipient;24,389
	char * _msgid;25,409
	long	_inode;26,425
	char * _status;27,439
	int	 _lock;28,456
	long	_time;29,469
	long	_last_retry;30,482
	char * _file;31,501
	char * _host;32,516
	int    _outbound;33,531
	QMysqlImpl * _impl;34,550
} EmcQEntry;35,571
typedef struct EmcAList_t 37,585
	long	 _qnum;38,613
	long	 _alnum;39,627
	char *  _msgid;40,642
	long	 _inode;41,659
	char *  _file;42,674
	char *  _recipient;43,690
	char *  _sender;44,711
	int	  _level;45,729
	int	  _allow_ext;46,744
	char *  _data;47,763
	char *  _status;48,779
	int	 _lock;49,797
	QMysqlImpl * _impl;50,810
} EmcAList;51,831
typedef struct EmcAEntry_t 53,844
	long	 _qnum;54,873
	long	 _alnum;55,887
	char *  _msgid;56,902
	char *  _recipient;57,919
	char *  _local;58,940
	char *  _domain;59,957
	char *  _sender;60,975
	int	  _itemnum;61,993
	char *  _action;62,1010
	char *  _data;63,1028
	char *  _status;64,1044
	int	  _retry_times;65,1062
	long	 _last_retry;66,1083
	char *  _last_error;67,1103
	QMysqlImpl * _impl;68,1125
} EmcAEntry;69,1146
typedef struct EmcHeader_t 72,1161
	long	 _qnum;73,1190
	long	 _alnum;74,1204
	long   _inode;75,1219
	char * _file;76,1235
	char * _header;77,1250
	QMysqlImpl * _impl;78,1267
} EmcHeader;79,1288
typedef struct EmcHint_t 81,1302
	char * _msgid;82,1329
	long	 _inode;83,1345
	char * _agent;84,1360
	char * _key;85,1376
	char * _hint;86,1390
	QMysqlImpl * _impl;87,1405
} EmcHint;88,1426
typedef struct EmcHostedEntry_t 90,1438
	long   _qnum;91,1472
	long   _alnum;92,1487
	char * _msgid;93,1503
	char * _recipient;94,1519
	char * _sender;95,1539
	long   _inode;96,1556
	char * _file;97,1572
	char * _data;98,1587
	char * _status;99,1602
	int	  _retry_times;100,1619
	long	 _last_retry;101,1640
	char *  _last_error;102,1660
	QMysqlImpl * _impl;103,1682
} EmcHostedEntry;104,1703
typedef struct EmcExternalEntry_t 106,1722
	long   _qnum;107,1758
	long   _alnum;108,1773
	char * _msgid;109,1789
	char * _recipient;110,1805
	char * _sender;111,1825
	long   _inode;112,1842
	char * _file;113,1858
	char * _data;114,1873
	char * _status;115,1888
	char * _rhost;116,1905
	int	  _retry_times;117,1921
	long	 _last_retry;118,1942
	char *  _last_error;119,1962
	QMysqlImpl * _impl;120,1984
} EmcExternalEntry;121,2005
typedef EmcQEntry *			EmcQEntryArray;123,2026
typedef EmcAList *			EmcAListArray;124,2064
typedef EmcAEntry *			EmcAEntryArray;125,2100
typedef EmcHeader *			EmcHeaderArray;126,2138
typedef EmcHostedEntry* 	EmcHostedEntryArray;127,2176
typedef EmcExternalEntry* 	EmcExternalEntryArray;128,2222
QMysqlImpl * l_init_impl(132,2300
QMysqlImpl * l_init_impl2(133,2348
MYSQL * l_impl_get_akadb(134,2417
void _reinit(135,2464
void _fini(136,2497
char * mysql_quote(137,2511
void p_qentry_init(141,2583
const char * l_qentry_get_sender(150,2751
const char * l_qentry_get_recipient(151,2807
const char * l_qentry_get_message_id(152,2866
long l_qentry_get_qnum(153,2926
long l_qentry_get_inode(154,2972
const char * l_qentry_get_status(155,3019
int l_qentry_get_lock(156,3075
long l_qentry_get_time(157,3120
long l_qentry_get_last_retry(158,3166
const char * l_qentry_get_filename(159,3218
const char * l_qentry_get_host(160,3276
int l_qentry_is_outbound(161,3330
QMysqlImpl * l_qentry_get_impl(162,3378
void l_qentry_set_impl(163,3432
EmcQEntry * l_qentry_dup(164,3497
EmcQEntry * l_qentry_create 165,3538
EmcQEntry * l_qentry_create_with_data 172,3696
EmcQEntry * l_qentry_create_real 181,3893
char * l_qentry_serialize(191,4104
EmcQEntry * l_qentry_deserialize(192,4172
int l_qentry_remove(193,4248
EmcQEntry * l_qentry_get(194,4290
int l_qentry_lock(195,4347
int l_qentry_unlock(196,4388
int l_qentry_set_status(197,4431
int l_qentry_get_pending(198,4499
int l_qentry_get_locked(199,4585
int l_qentry_finished(200,4680
EmcQEntry * l_qentry_get_at(201,4725
void l_qentry_free_list(202,4787
int l_qentry_get_processing_status(203,4846
void l_qentry_free(204,4905
long l_alist_get_qnum(207,4959
long l_alist_get_alnum(208,5003
const char * l_alist_get_message_id(209,5047
long l_alist_get_inode(210,5104
const char * l_alist_get_filename(211,5148
const char * l_alist_get_recipient(212,5203
const char * l_alist_get_sender(213,5259
int l_alist_get_level(214,5312
int l_alist_get_allow_ext(215,5355
const char * l_alist_get_data(216,5402
const char * l_alist_get_status(217,5453
QMysqlImpl * l_alist_get_impl(218,5506
MYSQL* l_alist_get_akadb(219,5558
void l_alist_set_impl(220,5601
EmcAList * l_alist_create(221,5663
EmcAList * l_alist_clone(229,5818
int l_alist_get_lock(234,5915
char * l_alist_serialize(235,5957
EmcAList * l_alist_deserialize(236,6020
EmcAList * l_alist_get_by_hosted(237,6097
int l_alist_lock(238,6176
int l_alist_unlock(239,6214
int l_alist_set_status(240,6254
int l_alist_set_allow_ext(241,6319
int l_alist_error(242,6377
int l_alist_get_pending(243,6416
int l_alist_finished(244,6485
EmcAList * l_alist_get_at(245,6527
int l_alist_message_modified(246,6583
int l_alist_remove_all_aentries(248,6666
int l_alist_max_itemnum(249,6719
void l_alist_free_list(250,6765
void l_alist_free(251,6819
long l_aentry_get_qnum(255,6874
long l_aentry_get_alnum(256,6921
const char * l_aentry_get_message_id(257,6968
const char * l_aentry_get_recipient(258,7028
const char * l_aentry_get_user(259,7087
const char * l_aentry_get_domain(260,7141
const char * l_aentry_get_sender(261,7197
int l_aentry_get_itemnum(262,7253
const char * l_aentry_get_action(263,7301
const char * l_aentry_get_status(264,7357
const char * l_aentry_get_data(265,7413
int l_aentry_get_retry_times(266,7467
long l_aentry_get_last_retry(267,7519
const char * l_aentry_last_error(268,7571
EmcAEntry * l_aentry_create(270,7628
int l_aentry_get_pending(277,7781
EmcAEntry * l_aentry_get_at(278,7851
void l_aentry_free_list(279,7911
int l_aentry_set_error(280,7968
int l_aentry_set_status(281,8035
int l_aentry_stop_after(282,8104
int l_aentry_hold_after(283,8152
void l_aentry_free(284,8200
long l_header_get_qnum(288,8257
long l_header_get_alnum(289,8303
long l_header_get_inode(290,8350
const char * l_header_get_filename(291,8397
const char * l_header_get_header(292,8455
EmcHeader * l_header_create(293,8511
int l_header_get_pending(294,8585
EmcHeader * l_header_get_like 296,8679
EmcHeader * l_header_get_at(298,8779
void l_header_free_list(299,8838
void l_header_free(300,8894
const char * l_hint_get_message_id(303,8948
long l_hint_get_inode(304,9003
const char * l_hint_get_agent(305,9045
const char * l_hint_get_key(306,9095
const char * l_hint_get_hint(307,9143
EmcHint * l_hint_create(308,9192
EmcHint * l_hint_get(315,9350
long l_hosted_get_qnum(321,9467
long l_hosted_get_alnum(322,9518
const char * l_hosted_get_message_id(323,9570
const char * l_hosted_get_recipient(324,9635
const char * l_hosted_get_sender(325,9699
long l_hosted_get_inode(326,9760
const char * l_hosted_get_filename(327,9812
const char * l_hosted_get_data(328,9875
const char * l_hosted_get_status(329,9934
int l_hosted_get_retry_times(330,9995
long l_hosted_get_last_retry(331,10052
const char * l_hosted_get_last_error(332,10109
EmcHostedEntry * l_hosted_create(333,10174
int l_hosted_set_error(340,10345
int l_hosted_touch(341,10416
int l_hosted_set_status(342,10483
int l_hosted_get_pending(343,10556
EmcHostedEntry * l_hosted_get_at(344,10632
void l_hosted_free_list(345,10701
void l_hosted_free(346,10762
long l_external_get_qnum(350,10826
long l_external_get_alnum(351,10883
const char * l_external_get_message_id(352,10941
const char * l_external_get_recipient(353,11012
const char * l_external_get_sender(354,11082
long l_external_get_inode(355,11149
const char * l_external_get_filename(356,11207
const char * l_external_get_data(357,11276
const char * l_external_get_status(358,11341
int l_external_get_retry_times(359,11408
long l_external_get_last_retry(360,11471
const char * l_external_get_last_error(361,11534
EmcExternalEntry * l_external_create(362,11605
int l_external_set_error(370,11803
int l_external_set_status(371,11880
int l_external_get_pending(372,11959
EmcExternalEntry * l_external_get_at(373,12039
void l_external_free_list(374,12114
void l_external_free(375,12179
int l_message_store(380,12249
int l_message_remove(388,12429
int l_message_merge_headers(391,12497
int l_message_merge_headers_escape(396,12613
char * l_message_merge_headers_as_string(402,12749
char * l_message_create(406,12866
char * l_message_create_with_data(415,13072
char * l_message_create_outbound_with_data(425,13302
char * l_message_create_with_mode_data(435,13541
int l_misc_sender_valid(450,13801
char * l_misc_get_unique_id(451,13849
char * l_misc_get_localname(452,13916
char * l_misc_get_domain(453,13969
char * str_tolower(454,14019
int l_build_expand_alist(457,14073
int l_build_expand_outbound_alist(458,14120
int l_build_expand_forward(459,14176
int l_build_expand_forward_bounce(460,14245
int l_build_expand_shcal(461,14321
int l_build_expand_hosted(462,14388
int l_build_expand_external(463,14456
int l_build_is_external_domain(464,14526
int l_build_is_external_address(465,14600
int p_build_do_special_addresses(466,14677
int p_expand_dynamic_forwarding(467,14746
int l_admin_get_all_entries(471,14852
int l_admin_get_pending_entries(473,14928
int l_admin_get_frozen_entries(475,15008
int l_admin_get_failed_entries(477,15087
int l_admin_lock_qentry(479,15166
int l_admin_unlock_qentry(480,15233
int l_admin_get_locked_entries(481,15301
int l_admin_get_qentry_info(483,15381
int l_admin_get_action_entries(493,15630
int l_admin_reset_failed_qentry(498,15755
int l_admin_thaw_qentry(500,15832
EmcQEntry * l_admin_get_qentry(502,15901
int l_admin_set_qentry_status(503,15973
int l_admin_queue_rebuild(505,16067

/emcsvn/emc/emcmailer/trunk/libemcqmysql/qentry.c,1472
#define _GNU_SOURCE2,20
extern MYSQL * mysql_sock;18,355
extern char *_mysql_quote(_mysql_quote19,382
void p_qentry_init(25,614
const char * l_qentry_get_sender(48,1181
const char * l_qentry_get_recipient(51,1263
const char * l_qentry_get_message_id(54,1351
long l_qentry_get_qnum(57,1436
long l_qentry_get_inode(60,1507
const char * l_qentry_get_status(63,1579
int l_qentry_get_lock(66,1661
long l_qentry_get_time(69,1730
long l_qentry_get_last_retry(72,1800
const char * l_qentry_get_filename(75,1881
const char * l_qentry_get_host(78,1963
int l_qentry_is_outbound(81,2041
QMysqlImpl * l_qentry_get_impl(84,2117
void l_qentry_set_impl(87,2195
EmcQEntry * l_qentry_dup(91,2285
EmcQEntry *l_qentry_create l_qentry_create105,2540
void p_qentry_create_fail_cleanup(118,2799
EmcQEntry *l_qentry_create_with_data l_qentry_create_with_data141,3368
EmcQEntry *l_qentry_create_real(l_qentry_create_real163,3704
char * l_qentry_serialize(329,7349
EmcQEntry * l_qentry_deserialize(359,7934
#define _CHECK_STREAM 361,8013
int l_qentry_remove(423,9426
EmcQEntry *l_qentry_get(l_qentry_get581,14011
int l_qentry_lock(656,15500
int l_qentry_unlock(684,16088
int l_qentry_set_status(712,16656
int l_qentry_get_pending(746,17408
int l_qentry_get_locked(878,20474
EmcQEntry * l_qentry_get_at(985,22924
void l_qentry_free_list(989,23018
int l_qentry_finished(1001,23230
int l_qentry_get_processing_status(1048,24241
void l_qentry_free(1113,26143

/emcsvn/emc/emcmailer/trunk/libemcqmysql/hint.c,416
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
#define HINT_SELECT 24,441
#define HINT_DB_POPULATE 32,533
const char * l_hint_get_message_id(39,722
long l_hint_get_inode(42,801
const char * l_hint_get_agent(45,867
const char * l_hint_get_key(48,941
const char * l_hint_get_hint(51,1011
EmcHint * l_hint_create(55,1084
EmcHint * l_hint_get(118,2367

/emcsvn/emc/emcmailer/trunk/libemcqmysql/hosted.c,902
#define _GNU_SOURCE3,21
extern MYSQL *mysql_sock;mysql_sock21,353
extern char *_mysql_quote(_mysql_quote22,379
long l_hosted_get_qnum(24,440
long l_hosted_get_alnum(27,517
const char * l_hosted_get_message_id(30,596
const char * l_hosted_get_recipient(33,688
const char * l_hosted_get_sender(36,783
long l_hosted_get_inode(39,872
const char * l_hosted_get_filename(42,951
const char * l_hosted_get_data(45,1040
const char * l_hosted_get_status(48,1125
int l_hosted_get_retry_times(51,1214
long l_hosted_get_last_retry(54,1304
const char * l_hosted_get_last_error(57,1393
EmcHostedEntry * l_hosted_create(61,1491
int l_hosted_set_error(158,3904
int l_hosted_touch(248,6199
int l_hosted_set_status(306,7573
int l_hosted_get_pending(340,8385
EmcHostedEntry * l_hosted_get_at(425,10602
void l_hosted_free_list(429,10712
void l_hosted_free(441,10946
void l_hosted_remove 459,11344

/emcsvn/emc/emcmailer/trunk/libemcqmysql/main.c,361
#define MY_TYPE 17,287
static MYSQL *mysql_sock mysql_sock19,312
static MYSQL *akadb akadb20,345
static int inited_mysql 21,373
static int inited_akadb 22,402
QMysqlImpl * l_init_impl(24,432
QMysqlImpl *l_init_impl2(l_init_impl228,515
MYSQL *l_impl_get_akadb(l_impl_get_akadb123,2703
void _reinit(128,2771
void _fini(155,3541
void _init(174,3937

/emcsvn/emc/emcmailer/trunk/libemcqmysql/misc.c,262
#define _GNU_SOURCE1,0
#define UNIQUE_ID_SIZE 12,195
extern int is_sender_valid(14,223
int l_misc_sender_valid(16,273
char * l_misc_get_localname(66,1046
char * l_misc_get_domain(98,1540
char * string_base62(131,2028
char * l_misc_get_unique_id(146,2337

/emcsvn/emc/emcmailer/trunk/libemcqmysql/admin.c,855
#define _GNU_SOURCE3,21
#define ALIST_SELECT 25,434
#define ALIST_DB_POPULATE 40,630
#define AENTRY_SELECT 54,1069
#define AENTRY_DB_POPULATE 71,1308
int p_admin_get_entries(87,1850
int l_admin_get_all_entries(89,1933
int l_admin_get_pending_entries(95,2063
int l_admin_get_frozen_entries(101,2198
int l_admin_get_failed_entries(107,2333
int l_admin_lock_qentry(113,2468
int l_admin_unlock_qentry(136,2817
int l_admin_get_locked_entries(159,3169
int l_admin_get_qentry_info(228,4441
int l_admin_get_action_entries(458,9108
int p_admin_queue_read_envelope(522,10143
int l_admin_queue_rebuild(596,12208
int l_admin_set_action_status 717,15910
int l_admin_reset_failed_qentry(752,16550
int l_admin_thaw_qentry(832,18048
int l_admin_set_qentry_status(905,19259
EmcQEntry * l_admin_get_qentry(918,19507
int p_admin_get_entries(983,20642

/emcsvn/emc/emcmailer/trunk/libemcqmysql/alist.c,1471
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;23,412
#define ALIST_SELECT 25,440
#define ALIST_DB_POPULATE 40,636
long l_alist_get_qnum(59,1249
long l_alist_get_alnum(62,1315
const char * l_alist_get_message_id(65,1383
long l_alist_get_inode(68,1464
const char * l_alist_get_filename(71,1532
const char * l_alist_get_recipient(74,1610
const char * l_alist_get_sender(77,1694
int l_alist_get_level(80,1772
int l_alist_get_allow_ext(83,1839
const char * l_alist_get_data(86,1914
const char * l_alist_get_status(89,1988
int l_alist_get_lock(92,2066
QMysqlImpl * l_alist_get_impl(95,2131
MYSQL * l_alist_get_akadb(98,2205
void l_alist_set_impl(101,2280
int l_build_expand_forward(105,2366
int l_build_expand_forward_bounce(110,2478
EmcAList * l_alist_create(115,2603
EmcAList * l_alist_clone(223,5183
char * l_alist_serialize(320,7425
EmcAList * l_alist_deserialize(358,8182
#define _CHECK_STREAM 360,8259
EmcAList * l_alist_get_by_hosted(413,9769
int l_alist_lock(470,10851
int l_alist_unlock(501,11530
void l_alist_set_filename(532,12206
int l_alist_set_status(537,12336
int l_alist_set_allow_ext(564,12944
int l_alist_get_processing_status(591,13529
int l_alist_finished(648,14951
int l_alist_get_pending(687,15742
EmcAList * l_alist_get_at(756,17408
void l_alist_free_list(760,17497
int l_alist_message_modified(772,17701
int l_alist_remove_all_aentries(826,18950
int l_alist_max_itemnum(845,19376
void l_alist_free(887,20268

/emcsvn/emc/emcmailer/trunk/libemcqmysql/external.c,950
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
long l_external_get_qnum(24,441
long l_external_get_alnum(27,526
const char * l_external_get_message_id(30,613
const char * l_external_get_recipient(33,713
const char * l_external_get_sender(36,816
long l_external_get_inode(39,913
const char * l_external_get_filename(42,1000
const char * l_external_get_data(45,1097
const char * l_external_get_status(48,1190
const char * l_external_get_rhost(51,1287
int l_external_get_retry_times(54,1382
long l_external_get_last_retry(57,1480
const char * l_external_get_last_error(60,1577
EmcExternalEntry * l_external_create(64,1683
int l_external_set_error(168,4238
int l_external_set_status(258,6698
int l_external_get_pending(292,7539
EmcExternalEntry * l_external_get_at(378,9904
void l_external_free_list(382,10022
void l_external_free(393,10271
void l_external_remove 413,10755

/emcsvn/emc/emcmailer/trunk/libemcqmysql/message.c,552
#define _GNU_SOURCE2,20
#define MY_TYPE 23,434
#define BUFFER_SIZE 25,459
extern MYSQL * mysql_sock;27,489
extern const char *config_get_filename(config_get_filename28,516
int l_message_store(34,743
int l_message_remove(138,3002
char * l_message_create(161,3463
char * l_message_create_with_data(177,3798
char * l_message_create_outbound_with_data(193,4163
char * l_message_create_with_mode_data(210,4538
int l_message_merge_headers(431,9188
int l_message_merge_headers_escape 441,9392
char * l_message_merge_headers_as_string(602,13060

/emcsvn/emc/emcmailer/trunk/libemcqmysql/header.c,564
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
#define HEADER_SELECT 24,441
#define HEADER_DB_POPULATE 32,538
long l_header_get_qnum(39,739
long l_header_get_alnum(42,811
long l_header_get_inode(45,885
const char * l_header_get_filename(48,959
const char * l_header_get_header(51,1043
EmcHeader * l_header_create(55,1128
int l_header_get_pending(109,2366
EmcHeader * l_header_get_like 166,3532
EmcHeader * l_header_get_at(230,5073
void l_header_free_list(234,5168
void l_header_free(246,5391

/emcsvn/emc/emcmailer/trunk/libemcqmysql/aentry.c,1021
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
#define AENTRY_SELECT 23,381
#define AENTRY_DB_POPULATE 40,620
long l_aentry_get_qnum(56,1162
long l_aentry_get_alnum(59,1234
const char * l_aentry_get_message_id(62,1308
const char * l_aentry_get_recipient(65,1395
const char * l_aentry_get_user(68,1485
const char * l_aentry_get_domain(71,1566
const char * l_aentry_get_sender(74,1650
int l_aentry_get_itemnum(77,1734
const char * l_aentry_get_action(80,1811
const char * l_aentry_get_status(83,1895
const char * l_aentry_get_data(86,1979
int l_aentry_get_retry_times(89,2059
long l_aentry_get_last_retry(92,2144
const char * l_aentry_last_error(95,2228
EmcAEntry * l_aentry_create(99,2317
int l_aentry_get_pending(227,5484
EmcAEntry * l_aentry_get_at(288,6933
void l_aentry_free_list(292,7028
int l_aentry_set_error(303,7250
int l_aentry_touch(407,9929
int l_aentry_set_status(466,11269
int l_aentry_stop_after(544,13210
int l_aentry_hold_after(598,14555
void l_aentry_free(652,15900

/emcsvn/emc/emcmailer/trunk/libemcqmysql/build.c,649
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
int p_build_do_special_addresses(27,574
int p_build_check_alias(28,639
int l_build_is_external_domain(29,681
int resp_active(31,752
reassemble_address(82,1992
int l_build_expand_alist(113,2578
int l_build_expand_outbound_alist(1008,25585
int l_build_expand_relay(1350,34137
int l_build_expand_hosted(1402,35332
int l_build_expand_external(1423,35844
int l_build_expand_shcal(1453,36470
int l_build_is_external_domain(1553,38949
int l_build_is_external_address(1600,39895
int p_build_check_alias(1622,40268
int p_build_do_special_addresses(1700,41846

/emcsvn/emc/emcmailer/trunk/sqlitecache/query.c,1135
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
void cache_free_results(31,668
char *tables_from_query(tables_from_query88,1953
void cache_free(196,3749
void sqlite_free_close(259,5193
int cache_prepare_query(276,5482
int db_do_query(561,12821
int cache_begin_transaction(661,15062
int cache_commit(673,15316
int cache_delete_result(685,15548
int cache_rollback(705,15937
void cache_result_data(717,16173
void cache_set_error(857,19480
int cache_create(870,19727
int cache_row(893,20230
int sqlite_simple(920,20723
DbRow *cache_data_to_row(cache_data_to_row967,21548
DbRow *cache_fetch_row(cache_fetch_row1063,23154
void cache_add_result_row(1078,23414
sqlite *cache_lookup_cache(cache_lookup_cache1099,23740
#define CACHE_NON_RESPONSE 1150,24839
#define CACHE_EXPIRED 1151,24870
int cache_do_query(1157,24982
int main(1266,26877
void cache_add_db(1391,29499
int cache_init(1403,29784
int cache_init_master(1466,31072
int cache_init_db(1489,31556
int cache_open_db(1518,32054
void db_init(1534,32345
void db_connect(1552,32751
char *hashquery(hashquery1573,33195

/emcsvn/emc/emcmailer/trunk/sqlitecache/query.h,2161
#define _CACHE_QUERY_H2,23
#define DB_ERROR 4,47
#define DB_OK 5,72
#define DB_NO_CONNECT 6,96
#define true 8,121
#define false 9,136
#define READ_ONLY 11,153
#define READ_WRITE 12,173
typedef struct db_info 14,195
	MYSQL sock;15,220
	int readonly;16,233
	char *server;server17,248
	char *username;username18,263
	char *password;password19,280
	char *db_name;db_name20,297
	int  timeout;21,313
	char *errmsg;errmsg22,328
	int  connected;23,343
} DbServerData;24,360
typedef struct db_row 26,377
	int columns;27,401
	int *lengths;lengths28,415
	char **data;data29,430
} DbRow;30,444
typedef struct query_cache_struct 32,454
	GArray *results;results33,490
	sqlite *master;master35,509
	char *master_db;master_db37,527
	char *dir;dir38,545
	sqlite *cache;cache40,558
	int ok;42,575
	int ttl;43,584
	char *errmsg;errmsg45,595
	char *query_hash;query_hash47,611
	char *tables;tables48,630
	char *sql_query;sql_query50,646
	char *cache_delete;cache_delete52,665
	char *cache_delete_template;cache_delete_template53,686
	char *table_query;table_query55,717
	char *table_master_query;table_master_query56,737
	char *cache_query;cache_query58,765
	char *cache_query_template;cache_query_template59,785
	char *cache_insert;cache_insert61,815
	char *cache_insert_template;cache_insert_template62,836
	GArray *db_servers;db_servers64,867
	int writequery;66,889
	int row;68,907
	int rows;69,917
	GHashTable *query_bin;query_bin71,929
	int from_cache;73,954
} QueryCache;75,972
#define EMCSAFEFREE(77,987
char *hashquery(hashquery79,1041
void cache_add_db(80,1086
void cache_set_error(81,1142
int cache_init(82,1197
void db_init(83,1254
void db_connect(84,1328
int sqlite_simple(85,1363
int cache_row(86,1429
void cache_add_result_row(87,1488
void cache_result_data(88,1546
DbRow *cache_fetch_row(cache_fetch_row89,1589
int cache_init_master(90,1632
int cache_open_master(91,1674
int cache_init_db(92,1716
int cache_open_db(93,1783
sqlite *cache_lookup_cache(cache_lookup_cache94,1854
void sqlite_free_close(95,1901
int cache_prepare_query(96,1974
int cache_do_query(97,2046

/emcsvn/emc/emcmailer/trunk/sqlitecache/encode.c,147
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int sqlite_encode_binary(125,5768
int sqlite_decode_binary(177,6981
int main(205,7563

/emcsvn/emc/emcmailer/trunk/sqlitecache/sqlite_encode.h,93
#define _SQLITE_ENCODE_H2,25
int sqlite_encode_binary(4,51
int sqlite_decode_binary(5,129

/emcsvn/emc/emcmailer/trunk/alworker.c,836
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
extern int debugmode;29,583
extern int pretendmode;30,605
extern int outboundmode;31,629
extern const char *msgid;msgid32,654
extern long host_id;33,680
extern EmcConfig *config;config35,702
int agentpid 36,728
extern alworker_options al_opts;37,746
EmcAEntry *g_aentry g_aentry39,780
long altimeout 40,808
void al_alarmer(43,854
void check_retries(44,881
int do_agent(45,945
int process_inline_action(46,1022
int process_agent_commands(47,1068
#define BUFFER_SIZE 49,1160
int dont_set_ae_status 51,1189
int stop_processing 52,1217
int pid 54,1243
int do_alworker(56,1257
int do_agent(323,8575
void check_retries(649,17282
int process_agent_commands(695,18442
int process_inline_action(1020,25818
void al_alarmer(1065,26971

/emcsvn/emc/emcmailer/trunk/alworker.h,265
#define EMC_ALWORKER2,21
typedef struct alworker_options_t 6,64
	char * configfile;8,121
	long alnum;9,141
	char * alstream;10,154
	EmcAList * alist;11,172
	EmcQImpl * impl;13,222
	char * queue_type;14,240
} alworker_options;15,260
int do_alworker(17,281

/emcsvn/emc/emcmailer/trunk/admin/emcqueue.c,1352
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define BUFFER_SIZE 25,501
const char *configfile configfile27,532
const char *queue_type queue_type28,563
EmcConfig *config config29,594
EmcQImpl *impl impl30,620
const char *msg_id msg_id32,644
const char *msgid msgid33,671
int debugmode 36,721
int list 38,741
int view 39,755
int count 40,769
int reset 41,784
int thaw 42,799
int show_alists 43,813
int show_hosted 44,834
int show_external 45,855
int show_aentries 46,878
int batch 47,901
int summary_only 48,916
const char * status 49,938
int lock 50,966
int unlock 51,980
int rebuild 52,996
int delete 53,1013
const char * recip 54,1029
const char * sender 55,1056
const char * host 56,1084
int set_action_status 58,1111
const char * action 59,1138
const char * action_status 60,1166
void view_file(63,1219
void show_qentries(64,1237
void show_qentries_exim(65,1293
void show_qentry_info(66,1354
void show_actions(74,1538
void do_single_message(75,1590
void do_batch(76,1616
int main(80,1636
void view_file(334,7336
void do_batch(351,7659
void do_single_message(429,9536
void show_actions(544,11572
void show_qentry_info(591,12775
char *get_age(get_age699,16473
char *get_size(get_size723,16865
void show_qentries(746,17297
void show_qentries_exim(800,18369

/emcsvn/emc/emcmailer/trunk/smtpc/smtp.c,302
static char *rcsid rcsid1,0
static void use_rcsid(2,77
const char *readlinefp_cb(readlinefp_cb20,385
void print_recipient_status(21,445
int smtpsend(23,535
void print_recipient_status 102,2461
#define BUFLEN	111,2694
const char *readlinefp_cb readlinefp_cb113,2715
void monitor_cb 141,3159

/emcsvn/emc/emcmailer/trunk/smtpc/test.c,75
static char *rcsid rcsid1,0
static void use_rcsid(2,77
int main(14,288

/emcsvn/emc/emcmailer/trunk/virus/zerohour_filter.c,217
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define _GNU_SOURCE8,205
#define MAX_BUFFER_SIZE 16,329
int zerohour_filter_request(20,406
char *zerohour_filter_response(zerohour_filter_response60,1378

/emcsvn/emc/emcmailer/trunk/virus/filters.h,457
typedef int (*scan_filter_request)scan_filter_request1,0
typedef char * (*scan_filter_response)scan_filter_response2,62
int default_filter_request(3,112
char * default_filter_response(4,168
int norton_filter_request(5,211
char * norton_filter_response(6,266
int clamav_filter_request(7,308
char *clamav_filter_response(clamav_filter_response8,359
int zerohour_filter_request(9,397
char *zerohour_filter_response(zerohour_filter_response10,450

/emcsvn/emc/emcmailer/trunk/virus/clamav_filter.c,210
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,204
#define MAX_BUFFER_SIZE 16,328
int clamav_filter_request(25,456
char *clamav_filter_response(clamav_filter_response41,685

/emcsvn/emc/emcmailer/trunk/virus/main.c,5219
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
#define TMPBUF 52,1037
#define HINT_BUFFER_SIZE 53,1057
#define MAX_PROVIDERS 55,1092
#define MAX_VIRUSES_FOUND 56,1117
#define SKIP_RFC822_PARSE_SIZE 58,1148
int scanned_parts 60,1188
char *decompose_dir decompose_dir61,1211
char *innoculated_dir innoculated_dir62,1239
char *parse_jail_dir parse_jail_dir63,1269
char *virus_jail_dir virus_jail_dir64,1298
char *virus_lib_dir virus_lib_dir65,1327
int virus_jail 66,1394
int new_virus 67,1414
char *new_virus_file new_virus_file68,1433
char *inject_agent inject_agent69,1462
char *tmp_dir tmp_dir70,1489
const char *msg_subject msg_subject71,1511
int NUM_PROVIDERS 75,1608
long inode 77,1632
char *msgid msgid78,1648
char *configfile configfile79,1668
char *recip recip80,1693
char *sender sender81,1713
char *local local82,1734
char *domain domain83,1754
char *refdomain refdomain84,1775
int stand_alone 85,1799
int pretend 86,1820
int no_hints 87,1837
int nocleanup 88,1855
EmcConfig *config config89,1874
EmcQImpl *impl impl90,1900
char *aka_db_host aka_db_host92,1924
char *aka_db_name aka_db_name93,1950
char *aka_db_user aka_db_user94,1976
char *aka_db_pass aka_db_pass95,2002
int aka_db_timeout 96,2028
char *cursec;cursec97,2052
char *hint_buffer hint_buffer98,2066
size_t hint_buffer_size 99,2092
char *data data100,2121
int outboundmode 102,2141
int virus_found 104,2164
MYSQL mysql_sock;106,2186
struct provider_t providers[providers108,2205
struct virus_options_t *virus_options;virus_options109,2282
const char *current_provider current_provider111,2322
char *filename filename113,2360
int debugmode 114,2383
int unlink_msgfile 115,2402
int sock 116,2426
int in_rfc822 120,2560
GMimeMessage *message message122,2580
int fd;123,2610
struct virus_t viruses_found[viruses_found124,2618
EmcHash *scan_request_filters;scan_request_filters126,2668
EmcHash *scan_response_filters;scan_response_filters127,2699
regex_t regex_tnef;129,2732
struct virus_summary_report_t virus_rep;134,2853
X509 *encryptCert encryptCert137,2916
EVP_PKEY *pkey pkey138,2942
gboolean attemptDecryption 139,2965
void init_args(142,3026
char *stdin_to_tmp(stdin_to_tmp143,3065
void deconstruct(144,3088
void part_scanner(145,3123
void handle_inline_virus(146,3189
void cleanup(149,3306
int leave(150,3331
char *virus_safe_malloc(virus_safe_malloc151,3382
int uudecode(152,3417
void process_config(153,3501
static int makepath(154,3525
void init_virus_options(155,3615
void init_db(156,3643
void record_virus(157,3660
char *quarantine_message(quarantine_message158,3746
void virus_notify(159,3802
void parse_notify(160,3839
void scan_file(161,3861
int scan_file_with_provider(162,3937
char *create_message(create_message164,4067
char *create_message_with_data(create_message_with_data171,4191
char *randid(randid179,4345
void  my_log_handler(181,4363
char *get_rawheader(get_rawheader186,4485
char *escape_percents(escape_percents187,4536
char *quarantine_virus_to_bucket(quarantine_virus_to_bucket188,4579
extern int parse_tnef(190,4654
void connect_alarm(192,4721
typedef struct SMimeKeys_t194,4754
	int keyID;196,4783
	char *name;name197,4795
	char* owner;198,4808
	char* privateKey;199,4822
	char* certificate;200,4841
	char* password;201,4861
}SMimeKeys;SMimeKeys202,4878
GMimeObject *extract_signed_content extract_signed_content204,4891
GMimeObject *decrypt_mime_part(decrypt_mime_part205,4952
SMimeKeys *db_get_smime_keys db_get_smime_keys206,5003
void  my_log_handler(208,5065
void adjust_hint_buffer(216,5234
void connect_alarm(228,5519
void init_args(237,5688
char *stdin_to_tmp(stdin_to_tmp374,9112
void deconstruct(413,9903
void part_scanner(555,13076
void scan_file(820,20347
void init_virus_report(876,21649
void free_virus_report(883,21815
void get_rest_of_data_for_virus_report(895,22109
int scan_file_with_provider(928,22971
int insert_virus_status(1270,33406
int check_virus_status(1337,35265
void record_virus(1375,36122
void handle_inline_virus(1410,36994
void cleanup(1458,38288
int leave(1504,39100
char *virus_safe_malloc(virus_safe_malloc1533,39510
void process_config(1547,39695
void init_virus_options(1746,45280
void init_db(1930,50715
char *quarantine_message(quarantine_message1955,51238
void send_parse_notify(2015,52334
void parse_notify(2050,53332
const char *send_virus_notify(send_virus_notify2054,53410
void virus_notify(2164,55629
char *create_message(create_message2283,59485
char *create_message_with_data(create_message_with_data2294,59713
char *randid(randid2452,62944
int process_hints(2468,63535
int main(2624,67143
#define UUDECODE_BUFFER_LEN 2894,74477
int uudecode(2897,74510
static int makepath(3093,79163
char *get_rawheader(get_rawheader3141,80129
char *escape_percents(escape_percents3168,80627
char *quarantine_virus_to_bucket(quarantine_virus_to_bucket3192,81038
GMimeObject *extract_signed_content extract_signed_content3292,83510
GMimeObject *decrypt_mime_part(decrypt_mime_part3342,84976
SMimeKeys *db_get_smime_keys db_get_smime_keys3436,87603

/emcsvn/emc/emcmailer/trunk/virus/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1007

/emcsvn/emc/emcmailer/trunk/virus/tnef.c,393
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,195
extern EmcQImpl  *impl;impl28,571
extern EmcConfig *config;config29,595
extern regex_t regex_tnef;31,622
extern int leave(33,650
#define BUFFER_SIZE 35,710
static int parse_out_file_names 37,741
static int parse_out_file_names 40,833
void test_parse_out_file_names 100,2038
int parse_tnef(116,2437

/emcsvn/emc/emcmailer/trunk/virus/virus.h,1664
#define EMC_VIRUS_H2,20
#define NOTIFY_SENDER 4,41
#define NOTIFY_RECIPIENT 5,72
#define NOTIFY_ADMINISTRATOR 6,103
#define NOTIFY_OUTBOUND_SENDER 8,135
#define NOTIFY_OUTBOUND_ADMIN 9,168
#define DELETE_MESSAGE 11,202
#define STRIP_ATTACHMENT 12,227
#define NEW_VIRUS_FREEZE 14,255
#define NEW_VIRUS_DELIVER 15,282
#define PARSE_FAIL_NOTIFY_ADMIN 17,311
#define PARSE_FAIL_DELIVER_ANYWAY 18,345
#define SUBJ_LEN 20,382
#define SUBJ_LEN_ENC 21,402
#define SCANNER_TYPE_PARTS_SCAN 23,437
#define SCANNER_TYPE_FULL_MESSAGE_SCAN 24,471
struct virus_summary_report_t 27,539
	char * msg_filename;28,571
	char * ip;29,593
	char * subject;30,605
} virus_summary_report;31,622
struct virus_options_t 33,647
	int providers;34,672
	int notify;35,688
	int notify_outbound;36,701
	int notify_local_only;37,723
	int daily_digest;38,747
	int monthly_digest;39,766
	int trigger_action;40,787
	int new_virus_action;41,808
	int parse_fail_action;42,831
	int block_encrypted;43,855
	char *admin;admin44,877
	char *notify_text;notify_text45,891
	char *notify_footer;notify_footer46,911
	char *new_virus_notify_address;new_virus_notify_address47,933
	char *parse_fail_admin;parse_fail_admin48,966
	char *admin2;admin249,991
	char *admin3;admin350,1006
struct provider_t 53,1025
	char * name;54,1045
	int code;55,1059
	char * host;56,1070
	int port;57,1084
	char * scan_dir;58,1095
	int sock;59,1113
	int header_added;60,1124
	int fallback;61,1143
	int was_used;62,1158
	int was_clean;63,1173
	int type;64,1189
struct virus_t 67,1204
	char * virus_name;68,1221
	char * attachment_name;69,1241
	char * provider_name;70,1266

/emcsvn/emc/emcmailer/trunk/virus/default_filter.c,164
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define MAX_BUFFER_SIZE 12,265
int default_filter_request(14,299
char * default_filter_response(21,438

/emcsvn/emc/emcmailer/trunk/virus/norton_filter.c,189
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,204
#define MAX_BUFFER_SIZE 16,328
int norton_filter_request(38,840
char * norton_filter_response(54,1096

/emcsvn/emc/emcmailer/trunk/autoresp/autoresp.c,651
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
char * filename 26,534
const char * configfile;27,558
int debugmode 28,583
char * msgid 29,602
char * sender 30,623
char * refdomain 31,645
char * data 32,670
char * recip 33,690
char * local 34,711
char * domain 35,732
int leave(40,818
void  my_log_handler(44,856
void init_args(53,1083
void autoresp_init_read_db(148,3280
void autoresp_init_write_db(204,4711
GMimeMessage *build_message(build_message261,6180
int headers_contain_address(504,13639
int headers_contain_aliases(565,15075
int should_respond_to_message(622,16397
int main(732,19948

/emcsvn/emc/emcmailer/trunk/listbnc/listbnc.c,440
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char * filename 24,486
char * sender 25,510
char * recip 26,532
int debugmode 27,553
int unlink_msgfile 28,572
char * configfile 29,596
int sock 30,622
char * msgid 31,636
char * refdomain 32,657
char * data 33,682
char * local 35,703
char * domain 36,724
#define BUFFER_SIZE 38,747
int leave(40,777
void init_args(44,819
int main(139,2923

/emcsvn/emc/emcmailer/trunk/qrunner.c,814
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
qworker_options qe_opts;28,537
#define BUFFER_SIZE 30,563
EmcConfig * config 32,594
int reconfig 33,621
int stop 34,639
char * msgid 37,677
long host_id 38,698
int debugmode 39,717
int pretendmode 40,736
int ownmode 41,757
EmcHash * qworkers 43,775
int concurrent_qworkers 44,802
long qentry_retry_interval 45,831
long timeout 47,864
void do_qrunner(50,909
void qr_reaper(51,928
void qr_hupper(52,953
void release_qworker(53,978
void qr_alarmer(54,1021
void init(55,1047
void cleanup(56,1060
void qr_reaper(58,1077
void qr_hupper(63,1135
void qr_stopper(68,1179
int main(74,1256
void init(158,3246
void cleanup(225,4814
void do_qrunner(236,4986
void qr_alarmer(410,9186
void release_qworker(416,9302

/emcsvn/emc/emcmailer/trunk/maillist/maillist.c,1803
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define PASSWORD_BODY 37,810
#define PASSWORD_SUBJECT 38,837
#define MODERATED_OPEN 43,1055
#define MODERATED_CLOSED 44,1082
#define MODERATED_MEMBER 45,1109
char *filename filename47,1137
char *sender sender48,1160
char *recip recip49,1181
int debugmode 50,1201
int unlink_msgfile 51,1220
char *configfile configfile52,1244
int sock 53,1269
char *msgid msgid54,1283
char *refdomain refdomain55,1303
char *data data56,1327
long inode 57,1346
long max_archive_size 58,1363
char *local local60,1391
char *domain domain61,1411
EmcConfig *config;config63,1433
EmcQImpl *impl;impl64,1452
int attempt 66,1469
char *tmp_dir tmp_dir67,1486
char *tmp_file tmp_file68,1508
char *tmp_file_stripped tmp_file_stripped70,1576
char *newmsgid newmsgid71,1608
char *password password72,1631
char *password_line password_line73,1654
char *msg_prefix msg_prefix75,1683
char *msg_suffix msg_suffix76,1708
char *msg_subject msg_subject77,1733
int msg_archive 78,1759
int list_moderated 79,1780
int password_type 80,1804
char *list_moderator list_moderator81,1839
char *list_modpass list_modpass82,1868
int list_useverps 83,1895
int set_replyto 84,1918
#define BUFFER_SIZE 87,1941
#define DEFAULT_MAX_ARCHIVE_SIZE 89,1976
int leave(91,2018
void  my_log_handler(95,2056
void process_hints(102,2228
void init_args(122,2597
void init_list_options(225,4715
void notify_bad_password(316,6583
void check_moderated_subject(380,7880
void check_moderated(485,10307
int check_is_list_member(622,13332
void check_member(673,14387
void format_manually(777,16652
void format_message(896,19728
long pipe_recipients(1061,24236
void archive_message(1155,26432
int main(1213,27614

/emcsvn/emc/emcmailer/trunk/confdnet.c,199
char *read_confd_net(read_confd_net11,166
int match_ips(53,952
int main(70,1259
GSList *parse_confd_net(parse_confd_net96,1747
const char *extract_quoted_string(extract_quoted_string172,3459

/emcsvn/emc/emcmailer/trunk/confdnet.h,199
#define __CONFDNET_H2,21
GSList *parse_confd_net(parse_confd_net6,62
const char *extract_quoted_string(extract_quoted_string7,114
int match_ips(8,200
char *read_confd_net(read_confd_net9,238

/emcsvn/emc/emcmailer/trunk/mfilter/mfilter.c,2421
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char *msgid msgid47,888
char *configfile configfile48,908
char *recip recip49,933
char *sender sender50,953
char *local local51,974
char *domain domain52,994
char *refdomain refdomain53,1015
int stand_alone 54,1039
int pretend 55,1060
char *data data56,1077
MYSQL mysql_sock;58,1097
char *filename filename60,1116
int debugmode 61,1139
GMimeMessage *message message63,1159
GMimeStream *stream stream64,1189
GMimeParser *parser parser65,1217
EmcConfig * config;67,1246
int redirect 69,1267
char * redirect_to 70,1285
int action_type 71,1312
char * action_option 72,1333
quarantine_violation_report quarantine_report;74,1363
EmcArray *mime_list;mime_list76,1411
#define NOTIFY_SENDER 79,1453
#define NOTIFY_RECIP 80,1477
#define NOTIFY_ADMIN 81,1500
#define RULE_ATTACH_TYPE 84,1541
#define RULE_ATTACH_SIZE 85,1568
#define RULE_SUBJECT 86,1595
#define RULE_SENDER 87,1618
#define RULE_DOMAIN 88,1640
#define MATCH_CONTAIN 92,1690
#define MATCH_NOTCONTAIN 93,1714
#define MATCH_EQUAL 94,1741
#define MATCH_NOTEQUAL 95,1763
#define MATCH_ISBIGGER 96,1789
#define ACTION_NONE 99,1829
#define ACTION_BOUNCE 100,1851
#define ACTION_DELETE 101,1875
#define ACTION_REDIRECT 102,1899
#define ACTION_STRIP 103,1925
char *escape_percents(escape_percents106,1966
void do_quar_and_log(107,2009
void do_quarantine_report(108,2033
void free_quarantine_data(109,2094
char *setActionTaken(setActionTaken110,2155
int process_new_msg 111,2194
int get_notif_data(113,2236
int send_notification(167,3500
int create_notification(284,6441
void log_report(341,7583
void execute_action(357,8116
int generic_match(445,10545
int create_list(541,13179
int do_rule(577,14014
void get_mf_profile 648,15715
void init_args(731,17974
void fudo(835,20127
char *get_attach_type(get_attach_type861,20769
int attachment_type 880,21139
int do_profile(1049,26500
int strip_attach(1397,35848
int process_new_msg 1420,36667
void init_quar_mfilter_report(1466,37692
void free_string(1481,38029
char *setActionTaken(setActionTaken1490,38157
void free_quarantine_data(1520,38587
void do_quarantine_report(1528,38777
char *escape_percents(escape_percents1549,39517
char *quarantine_message_to_bucket(quarantine_message_to_bucket1572,39866
void do_quar_and_log(1666,42064
int main(1680,42588

/emcsvn/emc/emcmailer/trunk/mfilter/mfilter.h,1141
#define SUBJ_LEN 2,1
#define SUBJ_LEN_ENC 3,21
#define QUAR_REP_MAX_SIZE 4,55
typedef struct quarantine_violation_report_t 9,211
	char * quar_filename;10,258
	const char * sender;11,281
	const char * recip;12,303
	const char * ip;13,324
	char * subject;14,342
	char * attach_name;15,359
	const char * profile_name;16,380
	int profile_number;17,408
	char * violation_type;18,429
	char * action_taken;19,453
	char * other_data;20,475
	int force_default;21,495
} quarantine_violation_report;22,515
typedef struct mf_profile_t 24,547
	int mf_num;25,577
	char * mf_desc;26,590
	char * aka_domain;27,607
	int ByAttachSize;28,627
	int ByAttachType;29,646
	int BySubject;30,665
	int BySender;31,681
	int ByDomain;32,696
	int default_apply;33,711
	int pre_apply;34,731
	char *send_as_name;send_as_name35,747
	char *send_as_email;send_as_email36,768
} mf_prof;37,790
typedef struct notif_t 39,802
	int notification_type;40,827
	char * notification_option;41,851
	char * sender_msg;42,880
	char * recip_msg;43,900
	char * admin_msg;44,919
} notif;45,938
int create_notification(47,948
int strip_attach(57,1132

/emcsvn/emc/emcmailer/trunk/remote_deliver/remote_deliver.c,515
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,194
#define BUFFER_SIZE 26,535
const char * msgid 28,565
int debugmode 29,592
char *remote_delivery_addr(remote_delivery_addr31,612
const char * recip 33,721
const char * folder 34,748
const char * maildir 35,779
const char * cdomain 36,808
const char * filename 37,856
const char * sender 38,886
const char * tmpdir 40,915
void init_args(42,946
int main(90,1773
char *remote_delivery_addr(remote_delivery_addr180,3673

/emcsvn/emc/emcmailer/trunk/quarantine/quarantine.c,264
#define _GNU_SOURCE5,49
quarantine_file *quarantine_file_new quarantine_file_new30,598
const char* quarantine_file_get_qfilename(52,1137
int quarantine_file_save 58,1249
char *escape_percents(escape_percents173,4161
int quarantine_file_logsummary(196,4576

/emcsvn/emc/emcmailer/trunk/quarantine/quarantine.h,1498
#define QUARANTINE_H_2,22
#define DEFAULT_BUCKET_DIR	4,45
#define MAX_MEGA_SUMMARY_LEN	5,93
#define SPAM_MEGA_SUMMARY_HEADER 6,128
#define SPAM_REP_SEP 8,183
#define BOX_FA_LEN 9,206
#define RULES_SUMMARY_HEADER_LEN 10,229
#define IP_LEN 11,266
#define SUBJ_LEN 12,284
#define SUBJ_LEN_ENC 13,304
#define BODY_LEN 14,338
#define QUARANTINE_CATEGORY_SPAM 16,408
#define QUARANTINE_CATEGORY_VIRUS 17,449
#define QUARANTINE_CATEGORY_MFILTER 18,492
#define QUARANTINE_CATEGORY_POLICY 19,538
#define QUARANTINE_CATEGORY_FILES 20,583
#define QUARANTINE_CATEGORY_MAIL 21,626
#define QUARANTINE_CATEGORY_VAULTSMART	22,667
typedef struct quarantine_file_t24,717
	const char *baseDir;baseDir26,752
	int bucketMinutes;27,774
	const char* originalFilename;28,794
	char* qfilename;29,825
	off_t filesize;30,843
	char* checksum;31,883
	int storageDays;32,916
	time_t time;33,934
	char server[server34,948
	const char *category;category35,967
	const char *sender;sender37,1031
	const char *recip;recip38,1052
	double total_score;39,1072
	const char *summary_header;summary_header40,1093
	const char *body;body41,1122
	const char *subject;subject42,1141
	const char *ip;ip43,1163
	EmcHash *details;details45,1181
} quarantine_file;47,1201
quarantine_file *quarantine_file_new(quarantine_file_new49,1221
const char* quarantine_file_get_qfilename(51,1282
int quarantine_file_save 53,1346
int quarantine_file_to_dir 54,1393
int quarantine_file_logsummary(55,1461

/emcsvn/emc/emcmailer/trunk/j2storage/encrypt.c,244
static char *rcsid rcsid16,495
static void use_rcsid(17,575
extern int all_ok;26,765
EMC_BOOL ENCRYPT_mime_part(35,1055
void ENCRYPTER_look_partwalker(138,4742
void DECRYPTER_look_partwalker(191,6206
EMC_BOOL DECRYPT_mime_part(244,7651

/emcsvn/emc/emcmailer/trunk/j2storage/encrypt.h,260
#define _EMC_CRYPT_H 11,203
#define GPG_PATH	19,323
#define GPG_USERID	20,356
#define GPG_PASSPHRASE	21,408
EMC_BOOL ENCRYPT_mime_part(23,484
void ENCRYPTER_look_partwalker(24,549
EMC_BOOL DECRYPT_mime_part(31,836
void DECRYPTER_look_partwalker(32,901

/emcsvn/emc/emcmailer/trunk/j2storage/util.c,808
static char *rcsid rcsid45,1688
static void use_rcsid(46,1764
#undef  VERSION 54,1927
void *util_mutex util_mutex58,2026
extern int errno;67,2076
extern emc_config_t confg;68,2094
void _pprintf_dbg(88,2540
void _printf_dbg(166,4223
void _dummy_debug(247,5911
void _dummy_pdebug(265,6261
char *UTIL_get_date(UTIL_get_date284,6661
char *UTIL_strndup(UTIL_strndup318,7544
char *UTIL_strdup(UTIL_strdup366,8518
void *UTIL_malloc(UTIL_malloc401,9175
void *UTIL_realloc(UTIL_realloc442,10208
void UTIL_free(479,10934
char *UTIL_get_rawheader(UTIL_get_rawheader514,11744
int UTIL_get_skey(573,12903
int UTIL_get_ckey(620,14120
int UTIL_nuke_imap_account(667,15303
EMC_BOOL UTIL_validate_skey(772,18180
long UTIL_get_maildir_size(822,19648
char * UTIL_get_imap_host_for_user(938,22474

/emcsvn/emc/emcmailer/trunk/j2storage/util.h,2003
#define _UTIL_H 47,1752
#define _GNU_SOURCE 50,1791
#define __USE_BSD 54,1866
#define FL_A 99,3150
#define FL_B 100,3193
#define FL_C 101,3237
#define FL_D 102,3292
#define FL_E 103,3349
#define FL_F 104,3406
#define FL_G 105,3464
#define EMC_MAX_DATETIME 108,3575
#define IMAP_BUF_SIZE 111,3627
#define BUFFER_SIZE 114,3684
#define EX_TEMPFAIL 117,3740
#define EX_OK 118,3763
typedef struct emc_config_s126,3830
  int level;128,3860
} emc_config_t;129,3898
typedef enum EMC_BOOL147,4390
  EMC_FALSE 149,4414
  EMC_TRUE150,4431
} EMC_BOOL;151,4442
#define EMC_MAX_DEBUG 153,4455
#define SIZEOF(163,4910
#  define __FUNCTION__ 168,5010
#  define __FUNCTION__ 170,5050
#define xmalloc(180,5207
#define xrealloc(181,5280
#define xfree(182,5357
#define xstrdup(183,5428
#define xstrndup(184,5467
#define xprintf(193,5583
#define xvprintf(197,5735
#define xpprintf(201,5909
#define xeprintf(205,6029
#define xepprintf(209,6178
#define xpthread_mutex_lock(218,6301
#define xpthread_mutex_unlock(219,6367
#define f_bit_set(223,6466
#define DEBUG_LOG_FILE 231,6619
#define OUTPUT_LOG_FILE 234,6719
#define dbg_printf 237,6804
#define dbg_pprintf 238,6835
#define dbg_printf 242,6895
#define dbg_pprintf 243,6927
void _printf_dbg(258,7032
void _pprintf_dbg(261,7130
void _dummy_debug(264,7224
void _dummy_pdebug(267,7323
void *UTIL_malloc(UTIL_malloc276,7466
void *UTIL_realloc(UTIL_realloc277,7543
void  UTIL_free(278,7629
char *UTIL_get_date(UTIL_get_date286,7767
char *UTIL_strndup(UTIL_strndup287,7794
char *UTIL_strdup(UTIL_strdup288,7842
char    *UTIL_get_rawheader(UTIL_get_rawheader296,7910
int      UTIL_get_skey(297,7967
int UTIL_get_ckey(298,8005
int      UTIL_nuke_imap_account(299,8038
EMC_BOOL UTIL_validate_skey(300,8104
long     UTIL_get_maildir_size(301,8182
char * UTIL_get_imap_host_for_user(302,8259
void _UTIL_pthread_mutex(309,8374
extern pthread_mutex_t util_mutex;315,8506
extern void *util_mutex;util_mutex320,8592

/emcsvn/emc/emcmailer/trunk/j2storage/j2storage.c,4066
static char *rcsid rcsid16,307
static void use_rcsid(17,388
#define _GNU_SOURCE 23,496
#define BUFFER_SIZE 59,1659
#define MAX_RETRIES 61,1691
u_int16_t quota_port 64,1791
int sock 66,1852
int debugmode 67,1897
int unlink_msgfile 68,1947
int imapport 69,1985
int all_ok 70,2033
int action_encrypt 71,2123
int uid_mail 74,2311
int gid_mail 75,2329
int perms_dir 76,2347
const char *MAIL_FOLDER MAIL_FOLDER78,2441
char *sender sender80,2544
char *recipient recipient81,2609
char *msgid msgid82,2677
char *data data83,2746
char *local local84,2784
char *domain domain85,2861
char *tmp_dir tmp_dir86,2934
char *filename filename87,2991
char *refdomain refdomain88,3058
char *queue_type queue_type89,3133
char *quota_host quota_host90,3182
char *imapserv imapserv91,3239
char *valid_domains valid_domains92,3297
char *pg_quota pg_quota93,3362
char *j2senders j2senders94,3406
char *j2billingsenders j2billingsenders95,3472
char *forcesf_domains forcesf_domains96,3552
char *send_domains_pgname_free send_domains_pgname_free97,3617
char *send_domains_pgname_paid send_domains_pgname_paid98,3703
char *urlDeliverTarget urlDeliverTarget101,3865
int aret 103,3897
int chret 104,3944
char *gpg_home gpg_home106,4018
const char *configfile configfile108,4042
emc_config_t confg;110,4103
MYSQL mysql_ro;113,4159
MYSQL mysql_rw;114,4229
MYSQL mysql_local;115,4295
EmcConfig *config;config116,4369
EmcQImpl *impl;impl117,4429
static char *J2STORAGE_http_post(J2STORAGE_http_post121,4505
static GType test_session_get_type(135,4872
static void test_session_class_init(168,5476
static char *request_passwd(request_passwd188,5932
int leave(209,6400
void J2STORAGE_fini(226,6629
void J2STORAGE_init(255,7109
EMC_BOOL J2STORAGE_decrypt_message(578,16517
EMC_BOOL J2STORAGE_encrypt_message(686,19377
int create_people_entry(825,24096
int create_hosted_mailbox(888,25977
void J2STORAGE_remove_stale_lock_file(958,28176
void J2STORAGE_free_key_value_mem(983,29046
int J2STORAGE_is_migrated(1016,29798
char * J2STORAGE_read_file_contents(1052,30794
static unsigned long int J2STORAGE_copy_file(1085,31771
int J2STORAGE_set_skey_NEW(1128,32877
int J2STORAGE_set_skey_OLD(1156,34040
int J2STORAGE_get_skey_db_NEW(1182,35009
int J2STORAGE_get_skey_db_OLD(1223,36185
char *J2STORAGE_get_box_maildir(J2STORAGE_get_box_maildir1264,37237
int J2STORAGE_get_mailbox_pg_num(1306,38436
int J2STORAGE_get_pg_num_by_name(1344,39299
int J2STORAGE_extra_send_logic(1428,41669
int J2STORAGE_connect_mysql_local(1474,43896
static int J2STORAGE_write_ocr_queue(1547,45861
static int J2STORAGE_get_mobile_notification_pref(1590,47169
static long int J2STORAGE_get_last_rowid(1625,48441
static long int J2STORAGE_get_folder_id(1647,49000
static int J2STORAGE_create_folder(1671,49595
static char *J2STORAGE_get_hostname(J2STORAGE_get_hostname1687,49900
int J2STORAGE_mark_corruption(1727,50771
static int J2STORAGE_sqlite_fix2(1757,52077
static int J2STORAGE_sql_retry(1827,55481
static int J2STORAGE_check_and_create(1883,57659
static char *J2STORAGE_get_bucket_and_filename(J2STORAGE_get_bucket_and_filename1939,59448
static char *J2STORAGE_generate_bucket(J2STORAGE_generate_bucket1965,59953
int J2STORAGE_tables_exist(1982,60348
static int J2STORAGE_maildir_deliver(2027,61769
static char* J2STORAGE_compose_json_nuke_mailbox(2135,65311
static char* J2STORAGE_compose_json_delivery(2167,66428
static uint http_write_to_string(2325,72829
static char *J2STORAGE_http_post(J2STORAGE_http_post2339,73167
static int J2STORAGE_nuke_mailbox(2416,76633
static long int J2STORAGE_api_delivery(2469,79132
static long int J2STORAGE_local_delivery(2572,84210
void parse_folder(2944,99887
void space_to_dash(2985,100932
char *J2STORAGE_get_DOC_rootfolder(J2STORAGE_get_DOC_rootfolder3002,101183
int J2STORAGE_set_DOC_rootfolder(3039,102075
int J2STORAGE_is_remote_user(3068,103086
EMC_BOOL J2STORAGE_does_string_contain(3113,104209
int mainDataOnCall(3135,104874
int main(3406,116876

/emcsvn/emc/emcmailer/trunk/j2storage/j2storage.h,571
#define _J2STORAGE_H 11,205
typedef struct _TestSession TestSession;22,341
typedef struct _TestSessionClass TestSessionClass;23,382
struct _TestSession25,434
  GMimeSession parent_object;27,456
struct _TestSessionClass30,490
  GMimeSessionClass parent_class;32,517
void test_session_finalize(36,583
static GMimeSessionClass *parent_class parent_class38,623
static void test_session_class_init(39,670
static char *request_passwd request_passwd40,727
void     J2STORAGE_init(44,853
void     J2STORAGE_fini(45,905
EMC_BOOL J2STORAGE_encrypt_mime_part(47,982

/emcsvn/emc/emcmailer/trunk/j2storage/email_encrypter.c,839
static char *rcsid rcsid14,254
static void use_rcsid(15,337
#define _GNU_SOURCE 21,445
#define BUFFER_SIZE 46,1344
int debugmode 51,1401
char *filename filename52,1448
char *outfile outfile53,1511
char *action action54,1534
int all_ok 55,1558
char *msgid msgid57,1575
emc_config_t confg;58,1595
static GType test_session_get_type(73,1924
static void test_session_class_init(106,2556
static char *request_passwd(request_passwd126,3018
int leave(147,3489
void initParams(153,3529
EMC_BOOL encrypt_mime_part(234,5083
EMC_BOOL decrypt_mime_part(335,8335
void look_partwalker_encrypter(439,11686
EMC_BOOL J2STORAGE_encrypt_message(502,13444
void look_partwalker_decrypter(602,16151
EMC_BOOL J2STORAGE_decrypt_message(658,17685
char *get_rawheader(get_rawheader754,20243
int get_skey(797,21112
int main(835,21991

/emcsvn/emc/emcmailer/trunk/emcmailer.h,1088
#define EMC_MAILER_H2,21
typedef GArray EmcArray;7,83
EmcArray * emc_array_new(8,108
int emc_array_append_val(9,185
int emc_array_append_vals(10,244
int emc_array_insert_val(11,322
int emc_array_insert_vals(12,392
int emc_array_prepend_val(13,472
int emc_array_prepend_vals(14,532
int emc_array_remove_index(15,611
void * emc_array_index(16,671
int emc_array_set_size(17,726
void emc_array_free(18,784
void * emc_array_get_data(19,843
typedef void (*user_hash_func)user_hash_func21,891
typedef GHashTable EmcHash;22,958
typedef GHashFunc EmcHashFunc;23,986
typedef GCompareFunc EmcHashCompareFunc;24,1017
EmcHash * emc_hash_new(25,1058
EmcHash * emc_hash_new_full(26,1084
void emc_hash_insert(27,1159
int emc_hash_size(28,1223
void * emc_hash_lookup(29,1260
void emc_hash_remove(30,1320
void emc_hash_foreach(31,1378
void emc_hash_destroy(32,1453
char * str_tolower(34,1495
#define EMC_MAXLINE 36,1537
typedef struct EmFd 38,1597
	int   fd;39,1619
	char *read_ptr;read_ptr40,1630
	int   read_cnt;41,1647
	char  read_buf[read_buf42,1664
} EmFd;43,1694

/emcsvn/emc/emcmailer/trunk/alworker_main.c,276
static char *rcsid rcsid1,0
static void use_rcsid(2,85
alworker_options al_opts;21,400
#define BUFFER_SIZE 23,427
EmcConfig * config 25,458
char * msgid 28,509
long host_id 29,530
int debugmode 30,549
int pretendmode 31,568
int outboundmode 32,589
int main(34,612

/emcsvn/emc/emcmailer/trunk/bounce/bounce.c,461
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
char * filename 21,424
char * sender 22,448
char * recip 23,470
int debugmode 24,491
int unlink_msgfile 25,510
char * configfile 26,534
int sock 27,560
char * msgid 28,574
char * refdomain 29,595
char * data 30,620
char * local 32,641
char * domain 33,662
int outbound 35,685
#define BUFFER_SIZE 37,704
int leave(39,734
void init_args(44,777
int main(138,2875

/emcsvn/emc/emcmailer/trunk/cidr.c,405
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
unsigned long int endian_swap(11,223
gboolean ip_in_cidr 13,276
unsigned long int endian_swap(43,1078
gboolean ip_in_range 53,1253
void cidr_free(68,1665
cidr_s *cidr_new cidr_new73,1712
char *cidr_to_str cidr_to_str80,1818
int cidr_parse_str 89,1975
int ip_range_parse_str 112,2661
int octets_to_ip 169,4118

/emcsvn/emc/emcmailer/trunk/cidr.h,484
#define __CIDR_H__2,19
typedef struct cidr_t 12,188
    struct in_addr network;13,212
    int masklen;14,240
} cidr_s;15,257
typedef struct ip_range_t 17,268
	struct in_addr start_ip;18,296
	struct in_addr end_ip;19,322
} ip_range_s;20,346
gboolean ip_in_cidr 22,361
gboolean ip_in_range 23,417
cidr_s *cidr_new cidr_new25,493
void cidr_free 26,514
char *cidr_to_str cidr_to_str27,545
int cidr_parse_str 28,579
int ip_range_parse_str 29,639
int octets_to_ip 30,715

/emcsvn/emc/emcmailer/trunk/qworker.c,1141
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
extern int debugmode;33,671
extern int pretendmode;34,693
int outboundmode;35,717
extern const char * msgid;36,735
extern long host_id;37,762
extern int agentpid;39,784
extern EmcConfig * config;40,805
extern qworker_options qe_opts;41,832
#define BUFFER_SIZE 43,865
EmcHash * alworkers 45,895
long qwtimeout 46,923
int bail 47,943
void process_alists(50,984
void qw_leave_well(51,1007
int process_externals(52,1067
int process_hosted(53,1092
void release_alworker(54,1114
void qw_reaper(55,1158
void qw_alarmer(56,1183
void ex_fail_setter(57,1209
void l_fail_setter(58,1266
alworker_options al_opts;61,1390
ldeliver_options ldeliver_opts;62,1416
exdeliver_options exdeliver_opts;63,1448
int ex_retries 64,1482
int l_retries 65,1502
void do_qworker(67,1522
void process_alists(222,5463
void qw_leave_well(313,7728
int process_externals(396,9831
int process_hosted(697,17226
void release_alworker(1068,25811
void qw_reaper(1132,27208
void qw_alarmer(1136,27266
void ex_fail_setter(1142,27447
void l_fail_setter(1152,27853

/emcsvn/emc/emcmailer/trunk/qworker.h,261
#define EMC_QWORKER2,20
typedef struct qworker_options_t 6,62
	char * configfile;7,97
	long qnum;8,117
	char * qestream;9,129
	EmcQEntry * qentry;10,147
	EmcQImpl * impl;11,168
	char * queue_type;12,186
} qworker_options;13,206
void do_qworker(15,226

/emcsvn/emc/emcmailer/trunk/common.c,1150
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define _CHECK_BAD_SYMBOL 23,452
int install_impl(27,539
void fatal(454,16691
int is_sender_valid(459,16783
int connect_to_aka_db_rw(505,17505
int connect_to_aka_db(575,18963
char *_mysql_quote(_mysql_quote651,20590
char *mysql_quote(mysql_quote669,20925
int emc_query(674,21018
char * str_tolower(688,21375
void md5hash(712,21668
void hmacHash 735,22065
EmcArray * emc_array_new(766,22690
int emc_array_append_val(771,22842
int emc_array_append_vals(775,22953
int emc_array_insert_val(779,23080
int emc_array_insert_vals(783,23209
int emc_array_prepend_val(787,23354
int emc_array_prepend_vals(791,23467
int emc_array_remove_index(795,23596
void * emc_array_index(799,23711
int emc_array_set_size(805,23863
void emc_array_free(809,23975
void * emc_array_get_data(813,24076
EmcHash * emc_hash_new_full(820,24178
EmcHash * emc_hash_new(825,24322
void emc_hash_insert(830,24427
int emc_hash_size(834,24535
void * emc_hash_lookup(838,24611
void emc_hash_remove(842,24717
void emc_hash_foreach(846,24808
void emc_hash_destroy(850,24937

/emcsvn/emc/emcmailer/trunk/common.h,12643
#define EMC_COMMON_H2,21
typedef void * EmcQImpl;13,199
typedef void * EmcQueue;14,224
typedef void * EmcQEntry;15,249
typedef void * EmcAList;16,275
typedef void * EmcAEntry;17,300
typedef void * EmcHeader;18,326
typedef void * EmcHint;19,352
typedef void * EmcHostedEntry;20,376
typedef void * EmcExternalEntry;21,407
typedef EmcQEntry        EmcQEntryArray;23,441
typedef EmcAList         EmcAListArray;24,482
typedef EmcAEntry        EmcAEntryArray;25,522
typedef EmcHeader        EmcHeaderArray;26,563
typedef EmcHostedEntry   EmcHostedEntryArray;27,604
typedef EmcExternalEntry EmcExternalEntryArray;28,650
EmcQImpl *   (*init_impl)init_impl31,734
EmcQImpl *   (*init_impl2)init_impl232,797
MYSQL *      (*impl_get_akadb)impl_get_akadb33,879
EmcQEntry  * (*qentry_dup)qentry_dup37,950
const char * (*qentry_get_sender)qentry_get_sender38,1006
const char * (*qentry_get_recipient)qentry_get_recipient39,1062
const char * (*qentry_get_message_id)qentry_get_message_id40,1118
long         (*qentry_get_qnum)qentry_get_qnum41,1174
long         (*qentry_get_inode)qentry_get_inode42,1230
const char * (*qentry_get_status)qentry_get_status43,1286
int          (*qentry_get_lock)qentry_get_lock44,1342
int          (*qentry_is_outbound)qentry_is_outbound45,1398
long         (*qentry_get_time)qentry_get_time46,1454
long         (*qentry_get_last_retry)qentry_get_last_retry47,1510
const char * (*qentry_get_filename)qentry_get_filename48,1566
const char * (*qentry_get_host)qentry_get_host49,1622
void         (*qentry_set_impl)qentry_set_impl50,1678
int          (*qentry_remove)qentry_remove51,1746
char *       (*qentry_serialize)qentry_serialize52,1802
EmcQEntry*   (*qentry_deserialize)qentry_deserialize53,1868
EmcQEntry*   (*qentry_create)qentry_create55,1936
EmcQEntry*   (*qentry_create_with_data)qentry_create_with_data61,2126
EmcQEntry*   (*qentry_create_real)qentry_create_real67,2329
EmcQEntry*   (*qentry_get)qentry_get73,2532
int          (*qentry_lock)qentry_lock74,2594
int          (*qentry_unlock)qentry_unlock75,2650
int          (*qentry_set_status)qentry_set_status76,2706
int          (*qentry_get_pending)qentry_get_pending77,2776
int          (*qentry_get_locked)qentry_get_locked78,2864
int          (*qentry_finished)qentry_finished79,2957
EmcQEntry *  (*qentry_get_at)qentry_get_at80,3021
void         (*qentry_free_list)qentry_free_list81,3085
void         (*qentry_free)qentry_free82,3150
int          (*qentry_get_processing_status)qentry_get_processing_status83,3207
long         (*alist_get_qnum)alist_get_qnum88,3297
long         (*alist_get_alnum)alist_get_alnum89,3359
const char * (*alist_get_message_id)alist_get_message_id90,3421
long         (*alist_get_inode)alist_get_inode91,3483
const char * (*alist_get_filename)alist_get_filename92,3545
const char * (*alist_get_recipient)alist_get_recipient93,3607
const char * (*alist_get_sender)alist_get_sender94,3669
int          (*alist_get_level)alist_get_level95,3731
int          (*alist_get_allow_ext)alist_get_allow_ext96,3793
const char * (*alist_get_data)alist_get_data97,3855
const char * (*alist_get_status)alist_get_status98,3917
int          (*alist_get_lock)alist_get_lock99,3979
MYSQL*       (*alist_get_akadb)alist_get_akadb100,4041
void         (*alist_set_impl)alist_set_impl101,4103
EmcAList *   (*alist_create)alist_create102,4170
EmcAList *   (*alist_clone)alist_clone109,4416
char *       (*alist_serialize)alist_serialize113,4567
EmcAList *   (*alist_deserialize)alist_deserialize114,4644
EmcAList *   (*alist_get_by_hosted)alist_get_by_hosted115,4727
int          (*alist_lock)alist_lock117,4828
int          (*alist_unlock)alist_unlock118,4890
void         (*alist_set_filename)alist_set_filename119,4952
int          (*alist_set_status)alist_set_status120,5036
int          (*alist_set_allow_ext)alist_set_allow_ext121,5119
int          (*alist_get_processing_status)alist_get_processing_status122,5192
int          (*alist_get_pending)alist_get_pending123,5256
int          (*alist_finished)alist_finished124,5342
EmcAList *   (*alist_get_at)alist_get_at125,5405
int          (*alist_message_modified)alist_message_modified126,5476
int          (*alist_remove_all_aentries)alist_remove_all_aentries129,5600
int          (*alist_max_itemnum)alist_max_itemnum130,5662
void         (*alist_free_list)alist_free_list131,5724
void         (*alist_free)alist_free132,5796
long         (*aentry_get_qnum)aentry_get_qnum137,5874
long         (*aentry_get_alnum)aentry_get_alnum138,5938
const char * (*aentry_get_message_id)aentry_get_message_id139,6002
const char * (*aentry_get_recipient)aentry_get_recipient140,6066
const char * (*aentry_get_user)aentry_get_user141,6130
const char * (*aentry_get_domain)aentry_get_domain142,6194
const char * (*aentry_get_sender)aentry_get_sender143,6258
int          (*aentry_get_itemnum)aentry_get_itemnum144,6322
const char * (*aentry_get_action)aentry_get_action145,6386
const char * (*aentry_get_data)aentry_get_data146,6450
const char * (*aentry_get_status)aentry_get_status147,6514
int          (*aentry_get_retry_times)aentry_get_retry_times148,6578
long         (*aentry_get_last_retry)aentry_get_last_retry149,6642
const char * (*aentry_last_error)aentry_last_error150,6706
EmcAEntry *  (*aentry_create)aentry_create152,6771
int          (*aentry_get_pending)aentry_get_pending158,7001
EmcAEntry *  (*aentry_get_at)aentry_get_at159,7076
void         (*aentry_free_list)aentry_free_list160,7148
int          (*aentry_set_error)aentry_set_error161,7221
int          (*aentry_touch)aentry_touch162,7292
int          (*aentry_set_status)aentry_set_status163,7349
int          (*aentry_stop_after)aentry_stop_after164,7420
int          (*aentry_hold_after)aentry_hold_after165,7484
void         (*aentry_free)aentry_free166,7548
long         (*header_get_qnum)header_get_qnum170,7627
long         (*header_get_alnum)header_get_alnum171,7692
long         (*header_get_inode)header_get_inode172,7757
const char * (*header_get_filename)header_get_filename173,7822
const char * (*header_get_header)header_get_header174,7887
EmcHeader *  (*header_create)header_create175,7952
int          (*header_get_pending)header_get_pending177,8055
EmcHeader *  (*header_get_like)header_get_like180,8191
EmcHeader *  (*header_get_at)header_get_at183,8327
void         (*header_free_list)header_free_list184,8400
void         (*header_free)header_free185,8474
const char * (*hint_get_message_id)hint_get_message_id189,8552
long         (*hint_get_inode)hint_get_inode190,8612
const char * (*hint_get_agent)hint_get_agent191,8672
const char * (*hint_get_key)hint_get_key192,8732
const char * (*hint_get_hint)hint_get_hint193,8792
EmcHint *    (*hint_create)hint_create194,8852
EmcHint *    (*hint_get)hint_get200,9076
long         (*hosted_get_qnum)hosted_get_qnum207,9253
long         (*hosted_get_alnum)hosted_get_alnum208,9322
const char * (*hosted_get_message_id)hosted_get_message_id209,9391
const char * (*hosted_get_recipient)hosted_get_recipient210,9460
const char * (*hosted_get_sender)hosted_get_sender211,9529
long         (*hosted_get_inode)hosted_get_inode212,9598
const char * (*hosted_get_filename)hosted_get_filename213,9667
const char * (*hosted_get_data)hosted_get_data214,9736
const char * (*hosted_get_status)hosted_get_status215,9805
int          (*hosted_get_retry_times)hosted_get_retry_times216,9874
long         (*hosted_get_last_retry)hosted_get_last_retry217,9943
const char * (*hosted_get_last_error)hosted_get_last_error218,10012
EmcHostedEntry * (*hosted_create)hosted_create219,10081
int          (*hosted_set_error)hosted_set_error225,10312
int          (*hosted_touch)hosted_touch226,10387
int          (*hosted_set_status)hosted_set_status227,10462
int          (*hosted_get_pending)hosted_get_pending228,10537
EmcHostedEntry * (*hosted_get_at)hosted_get_at229,10615
void         (*hosted_free_list)hosted_free_list230,10692
void         (*hosted_free)hosted_free231,10770
void         (*hosted_remove)hosted_remove232,10839
long         (*external_get_qnum)external_get_qnum236,10925
long         (*external_get_alnum)external_get_alnum237,10998
const char * (*external_get_message_id)external_get_message_id238,11071
const char * (*external_get_recipient)external_get_recipient239,11144
const char * (*external_get_sender)external_get_sender240,11217
long         (*external_get_inode)external_get_inode241,11290
const char * (*external_get_filename)external_get_filename242,11363
const char * (*external_get_data)external_get_data243,11436
const char * (*external_get_status)external_get_status244,11509
const char * (*external_get_rhost)external_get_rhost245,11582
int          (*external_get_retry_times)external_get_retry_times246,11655
long         (*external_get_last_retry)external_get_last_retry247,11728
const char * (*external_get_last_error)external_get_last_error248,11801
EmcExternalEntry * (*external_create)external_create249,11874
int          (*external_set_error)external_set_error256,12139
int          (*external_set_status)external_set_status257,12216
int          (*external_get_pending)external_get_pending258,12293
EmcExternalEntry * (*external_get_at)external_get_at259,12373
void         (*external_free_list)external_free_list260,12452
void         (*external_free)external_free261,12532
void         (*external_remove)external_remove262,12605
int          (*message_store)message_store266,12694
int          (*message_remove)message_remove273,12921
int          (*message_merge_headers)message_merge_headers275,13006
int          (*message_merge_headers_escape)message_merge_headers_escape279,13170
char *       (*message_merge_headers_as_string)message_merge_headers_as_string284,13367
char *       (*message_create)message_create287,13512
char *       (*message_create_with_data)message_create_with_data295,13823
char *       (*message_create_outbound_with_data)message_create_outbound_with_data304,14161
int          (*misc_sender_valid)misc_sender_valid318,14523
char *       (*misc_get_unique_id)misc_get_unique_id319,14588
char *       (*misc_get_localname)misc_get_localname320,14666
char *       (*misc_get_domain)misc_get_domain321,14732
int          (*build_expand_alist)build_expand_alist325,14812
int          (*build_expand_outbound_alist)build_expand_outbound_alist326,14874
int          (*build_expand_forward)build_expand_forward327,14939
int          (*build_expand_forward_bounce)build_expand_forward_bounce328,15020
int          (*build_expand_shcal)build_expand_shcal329,15103
int          (*build_expand_hosted)build_expand_hosted330,15184
int          (*build_expand_external)build_expand_external331,15265
int          (*build_expand_relay)build_expand_relay332,15346
int          (*build_is_external_domain)build_is_external_domain333,15427
int          (*build_is_external_address)build_is_external_address334,15502
int          (*build_do_special_addresses)build_do_special_addresses335,15577
int          (*admin_get_all_entries)admin_get_all_entries339,15653
int          (*admin_get_pending_entries)admin_get_pending_entries341,15754
int          (*admin_get_frozen_entries)admin_get_frozen_entries343,15855
int          (*admin_get_failed_entries)admin_get_failed_entries345,15956
int          (*admin_lock_qentry)admin_lock_qentry347,16057
int          (*admin_unlock_qentry)admin_unlock_qentry349,16153
int          (*admin_get_locked_entries)admin_get_locked_entries350,16234
int          (*admin_get_qentry_info)admin_get_qentry_info352,16336
int          (*admin_set_action_status)admin_set_action_status361,16699
int          (*admin_get_action_entries)admin_get_action_entries366,16902
int          (*admin_reset_failed_qentry)admin_reset_failed_qentry370,17072
int          (*admin_thaw_qentry)admin_thaw_qentry371,17152
EmcQEntry *  (*admin_get_qentry)admin_get_qentry372,17232
int          (*admin_set_qentry_status)admin_set_qentry_status373,17312
int          (*admin_queue_rebuild)admin_queue_rebuild376,17443
int connect_to_aka_db(382,17516
int connect_to_aka_db_rw(383,17575
char *mysql_quote(mysql_quote384,17637
char *_mysql_quote(_mysql_quote385,17689
int emc_query(386,17742
void md5hash(387,17790
void hmacHash 388,17853
int install_impl(389,17943
void fatal(390,17998
int is_sender_valid(391,18028

/emcsvn/emc/emcmailer/trunk/config.c,705
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define DEFAULT_HASH_SIZE 19,368
static int do_config_section(21,400
static int do_config_param(22,449
EmcConfig *config_init_internal(config_init_internal23,516
static char *cursec cursec26,605
static hash *curhash curhash27,630
static EmcConfig *dynamic dynamic28,659
int is_sane(30,694
EmcConfig *config_init(config_init139,3727
EmcConfig *config_init_internal(config_init_internal148,3880
const char *config_get_filename(config_get_filename179,4551
char *config_getopt(config_getopt184,4633
void config_destroy(195,4855
static int do_config_section(205,5003
static int do_config_param(212,5108

/emcsvn/emc/emcmailer/trunk/emclib/realmtree.c,244
static char *rcsid rcsid1,0
static void use_rcsid(2,31
#define _GNU_SOURCE7,94
char *realm_get_parent(realm_get_parent22,371
char **realmpath_get_parents(realmpath_get_parents88,1580
char **realm_get_parents(realm_get_parents172,3024

/emcsvn/emc/emcmailer/trunk/emclib/realmtree.h,127
#define _EMC_REALMTREE_H_2,26
char *realm_get_parent(realm_get_parent6,78
char **realm_get_parents(realm_get_parents8,122

/emcsvn/emc/emcmailer/trunk/emclib/emc_services.c,267
static char *rcsid rcsid6,86
static void use_rcsid(8,170
#define _GNU_SOURCE18,282
GArray* db_load_services(36,768
gboolean realm_is_subscribed(38,814
GArray* get_emc_services(111,2118
gboolean emcservice_is_active(139,2707
GArray* db_load_services(143,2799

/emcsvn/emc/emcmailer/trunk/emclib/emc_services.h,858
#define _EMC_SERVICES_H_7,111
typedef struct emcService_t9,137
	int serviceNum;11,167
	char *name;name12,184
	char *shortname;shortname13,197
	char *desc;desc14,215
    gboolean active;15,228
    gboolean cascade;16,249
} EmcService;17,271
#define SERVICE_FORWARDING 19,286
#define SERVICE_AUTORESPONDER 20,317
#define SERVICE_HOSTED 21,350
#define SERVICE_FILTERING	22,378
#define SERVICE_VIRUS	23,407
#define SERVICE_SPAM	24,433
#define SERVICE_OUTBOUND_RELAY 25,458
#define SERVICE_HBF 26,493
#define SERVICE_VAULTSMART 27,519
#define SERVICE_POLICYSMART	28,551
#define SERVICE_CYPHERSMART	29,583
#define SERVICE_SPOOL	30,615
#define SERVICE_FUSEMAIL	31,642
#define SERVICE_EXCHANGE	33,672
gboolean is_subscribed(35,703
gboolean emcservice_is_active(36,762
GArray* get_emc_services(37,814
gboolean realm_is_subscribed(38,859

/emcsvn/emc/emcmailer/trunk/emclib/edate.c,66
GDate *e_parse_date(e_parse_date1,0
time_t e_parse_time(45,967

/emcsvn/emc/emcmailer/trunk/emclib/emclib.h,64
#define _EMC_LIB_H_2,20
#define FALSE 5,55
#define TRUE 6,71

/emcsvn/emc/emcmailer/trunk/emclib/emime.c,489
#define _GNU_SOURCE5,49
const char* demime_header_get_value(20,343
MsgHeader *demime_get_msg_header_file(demime_get_msg_header_file25,416
GArray* headersArray 54,966
GArray* demime_get_headers_file(56,996
const char *demime_get_header_file(demime_get_header_file66,1239
void demime_header_set_value(88,1670
void demime_save_with_new_headers 94,1786
char *demime_get_raw_headers(demime_get_raw_headers144,2721
GArray *demime_parse_raw_headers(demime_parse_raw_headers170,3181

/emcsvn/emc/emcmailer/trunk/emclib/emime.h,556
#define _EMC_MIME2,18
typedef struct MsgHeader_t4,37
	char* name;6,66
	char* value;7,79
	char* raw;8,93
} MsgHeader;9,105
GArray* demime_get_headers_file(11,119
const char *demime_get_header_file(demime_get_header_file12,174
char *demime_get_raw_headers(demime_get_raw_headers13,252
GArray *demime_parse_raw_headers(demime_parse_raw_headers14,304
const char* demime_header_get_value(15,362
void demime_header_set_value(16,413
MsgHeader *demime_get_msg_header_file(demime_get_msg_header_file18,480
void demime_save_with_new_headers 19,561

/emcsvn/emc/emcmailer/trunk/emclib/echecksum.c,237
#define _GNU_SOURCE5,49
#define FILE_READ_BUFFER_SIZE 15,219
char* e_file_checksum(17,269
char *e_md5_checksum_file(e_md5_checksum_file19,344
char *e_sha256_checksum_file(e_sha256_checksum_file24,448
char* e_file_checksum(29,558

/emcsvn/emc/emcmailer/trunk/emclib/echecksum.h,137
#define _EMC_CHECKSUM2,22
char *e_md5_checksum_file(e_md5_checksum_file4,45
char *e_sha256_checksum_file(e_sha256_checksum_file5,94

/emcsvn/emc/emcmailer/trunk/emclib/epcre.c,142
pcre *parse_pcre(parse_pcre1,0
regex_t *parse_regex(parse_regex71,1371
char* e_pcre_replace_with 87,1674
char * e_pcre_replace 138,2716

/emcsvn/emc/emcmailer/trunk/emclib/epcre.h,152
#define _EMC_PCRE2,18
pcre *parse_pcre(parse_pcre4,37
char *e_pcre_replace_with e_pcre_replace_with5,97
char *e_pcre_replace e_pcre_replace6,196

/emcsvn/emc/emcmailer/trunk/emclib/estdio.c,69
#define _GNU_SOURCE5,49
int e_mkdir 24,403
int e_file_copy 42,769

/emcsvn/emc/emcmailer/trunk/emclib/estdio.h,64
#define _EMC_STDIO2,19
int e_mkdir 4,39
int e_file_copy 5,74

/emcsvn/emc/emcmailer/trunk/emclib/elog.c,757
#define _GNU_SOURCE5,49
#define REPORT_ERROR 21,361
#define REPORT_DEBUG 22,384
#define REPORT_AGENT 23,407
#define REPORT_STATS 24,430
#define REPORT_INFO 25,453
#define DEBUG_SYSLOG 27,477
#define DEBUG_STDOUT 28,506
#define DEBUG_RULE 29,535
#define DEBUG_FINGERPRINT 30,564
#define DEBUG_CONFIG 31,593
#define DEBUG_WARN 32,623
#define DEBUG_FAIL 33,653
#define DEBUG_INFO 34,683
#define DEBUG_RESULT 35,714
#define DEBUG_PARSE_DOM 36,745
#define DEBUG_MAX 37,776
extern const char *msgid;msgid39,808
extern int debugmode;40,834
void e_log_message(41,856
void e_log_error(43,909
void e_log_warn(56,1181
void e_log_info(69,1452
void e_log_debug(83,1722
void e_log_trace(97,1994
void e_log_message(110,2265
void e_log(123,2672

/emcsvn/emc/emcmailer/trunk/emclib/elog.h,267
	EMC_LOG_ERROR,3,16
	EMC_LOG_WARN,4,32
	EMC_LOG_INFO,5,47
	EMC_LOG_DEBUG,6,62
	EMC_LOG_TRACE,7,78
} EMC_LOG_LEVEL;8,94
void e_log 10,112
void e_log_error(12,178
void e_log_warn(13,227
void e_log_info(14,275
void e_log_debug(15,323
void e_log_trace(16,372

/emcsvn/emc/emcmailer/trunk/emclib/estring.c,281
static char *rcsid rcsid1,0
static void use_rcsid(2,31
char *e_strdup(e_strdup14,266
void *e_malloc(e_malloc22,444
int e_asprintf(34,681
void e_chomp(49,974
int e_strpos(68,1224
int e_strrpos(79,1389
char *e_str_replace(e_str_replace89,1524
int e_is_numeric(119,2067

/emcsvn/emc/emcmailer/trunk/emclib/estring.h,245
#define _EMC_STRING_H_2,23
char *e_str_replace(e_str_replace8,129
int e_strpos(10,209
int e_strrpos(11,260
int e_asprintf(13,306
char *e_strdup(e_strdup14,362
void *e_malloc(e_malloc15,398
void e_chomp(16,441
int e_is_numeric(17,472

/emcsvn/emc/emcmailer/trunk/espamc/espamc.c,3067
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
typedef enum ComMode_t 38,768
	COM_SOCKET_MODE 39,793
	COM_FILE_MODE 40,815
} ComMode;41,835
#define ESPAMC_VERSION 43,847
#define DEFAULT_TMP_DIR 45,877
#define DEFAULT_PORT 46,908
char *get_rawheader(get_rawheader48,936
int get_mysql_socket(49,987
int process_hints(50,1102
int has_custom_spam_settings(51,1134
const char *get_last2_dirs(get_last2_dirs52,1203
void show_usage(53,1247
int do_args(54,1287
char *stdin_to_tmp(stdin_to_tmp55,1325
char *socket_to_tmp(socket_to_tmp56,1387
void init_spam_report(61,1490
void do_one_line_spam_report(62,1542
void free_key_value_mem(63,1601
int process_response(64,1669
void process_config(66,1764
AllowDenyList allow_list;68,1792
AllowDenyList deny_list;69,1818
EmcConfig * gConfig;71,1844
EmcQImpl *	gImpl;72,1865
char *gFilename gFilename74,1884
char *gCfgFilename gCfgFilename75,1908
char *gRecip gRecip76,1935
char *gDomain gDomain77,1956
const char *hintRealm hintRealm78,1978
char *gSender gSender79,2008
char *fromAddr fromAddr80,2030
char *gPolicyRealm gPolicyRealm82,2102
char *gData gData83,2129
char *msgid msgid84,2149
BOOL gNoHints 85,2169
int  debugmode 86,2192
char *gTmpDir gTmpDir87,2212
BOOL gPretend 88,2234
long gMaxSize 89,2257
char *gPort gPort91,2295
char *gHost gHost92,2315
char *escape_percents(escape_percents94,2336
int get_storage_days(95,2379
char *get_spam_folder get_spam_folder96,2421
ComMode	gComMode 98,2466
#define DEFAULT_CONFIG_FILENAME 100,2503
#define CONTENT_LENGTH_HEADER	102,2559
#define RECIPIENT_HEADER	104,2609
#define SENDER_HEADER	105,2649
#define MESSAGE_ID_HEADER	106,2684
#define FILENAME_HEADER	107,2726
#define ADD_HEADER_HEADER	109,2766
#define STOP_MESSAGE_HEADER	110,2808
#define ADD_RECIPIENT_HEADER	111,2854
#define MODIFIED_MESSAGE_HEADER	112,2901
#define SCORE_HEADER 114,2955
#define THRESHOLD_HEADER 115,3002
#define IP_HEADER 117,3054
#define QUARANTINE_HEADER 119,3101
#define QUARANTINE_SUM_HEADER 120,3148
#define SPAM_REPORT_HEADER 122,3204
#define POLICY_REALM_HEADER 124,3253
#define STATUS_HEADER	125,3299
#define SUBJECT_HEADER 126,3334
#define CRLF 128,3372
#define CRLF_LEN 129,3392
#define LINE_BUFFER_SIZE	131,3423
char gLineBuffer[gLineBuffer132,3468
void show_usage(135,3506
int do_args(148,3788
#define TMPBUF 237,5541
char *stdin_to_tmp(stdin_to_tmp239,5566
char *socket_to_tmp(socket_to_tmp274,6325
void init_spam_report(313,7137
void do_one_line_spam_report(324,7366
const char *get_last2_dirs(get_last2_dirs410,9618
int process_response(449,10294
char *escape_percents(escape_percents876,20605
void process_config(899,20956
int process_hints(963,22463
int get_mysql_socket(1109,25559
int main(1134,26037
int has_custom_spam_settings(1668,41538
#define LONG_REPORT_LINE 1704,42660
#define SHORT_REPORT_LINE 1705,42716
char *get_rawheader(get_rawheader1707,42760
int get_storage_days 1734,43258
char *get_spam_folder get_spam_folder1790,44364

/emcsvn/emc/emcmailer/trunk/espamc/misc.c,412
static char *rcsid rcsid1,0
static void use_rcsid(2,76
int espamc_tcp_connect(17,416
int espamc_Tcp_connect(61,1527
ssize_t espamc_Readline(66,1632
ssize_t espamc_Readn(77,1835
void espamc_Writen(88,2030
void espamc_Write(96,2205
inline const char *find_next_rn(find_next_rn107,2431
inline const char * find_end_header(135,2832
#define CURRENT_BUFFER_SIZE 176,3521
char * Get_header_value(178,3575

/emcsvn/emc/emcmailer/trunk/espamc/misc.h,324
#define __espamc_misc_h2,24
#define BOOL 26,445
#define TRUE 30,483
#define FALSE 31,498
char *mysql_quote(mysql_quote34,522
int espamc_Tcp_connect(35,574
ssize_t espamc_Readline(36,634
ssize_t espamc_Readn(37,693
void espamc_Writen(38,750
void espamc_Write(39,811
char *Get_header_value(Get_header_value40,871

/emcsvn/emc/emcmailer/trunk/espamc/whitelist.c,777
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE8,190
#define D(16,321
#define D(18,342
extern int debugmode;21,363
void free_key_value_mem(26,451
int init_ad_list_struct(28,520
void free_key_value_mem(46,923
void destroy_ad_list_struct(65,1279
const char *getDomain(getDomain90,1911
int get_list_sql_filter(103,2127
int load_allow_lists(269,6856
int load_deny_list(461,13231
int whitelisted(644,19558
int blacklisted(665,19866
int check_lists(673,20048
char *get_customer_by_domain(get_customer_by_domain919,26674
int load_forwarding_alias_reverse(971,27929
char *get_forwarding_alias(get_forwarding_alias1050,29959
int load_customer_allow_domains(1104,31291
char *get_customer_wide_allow(get_customer_wide_allow1227,34472

/emcsvn/emc/emcmailer/trunk/espamc/whitelist.h,829
#define EMC_ESPAMC_WHITELIST_H2,31
typedef struct AllowDenyList_t 10,157
	GHashTable *global;global11,190
	GHashTable *domain;domain12,211
	GHashTable *user;user13,232
} AllowDenyList;14,251
#define WL_ERROR 16,269
#define WL_NO_HITS 17,294
#define WL_HIT_ALLOW 18,318
#define WL_HIT_DENY 19,342
#define WL_HIT_DOMAIN 20,366
#define WL_HIT_USER 21,390
char *get_customer_by_domain(get_customer_by_domain23,415
char *get_forwarding_alias(get_forwarding_alias27,479
int load_customer_allow_domains(31,539
char *get_customer_wide_allow(get_customer_wide_allow40,699
int load_forwarding_alias_reverse(44,764
int load_allow_lists(53,927
int load_deny_list(62,1100
int check_lists(71,1270
int init_ad_list_struct(80,1439
void destroy_ad_list_struct(82,1483
int whitelisted(84,1531
int blacklisted(88,1589

/emcsvn/emc/emcmailer/trunk/espamc/whitetest.c,173
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define DEBUG 15,298
char *msgid msgid17,315
int debugmode 18,337
void printHashEntry(20,357
int main(25,488

/emcsvn/emc/emcmailer/trunk/espamc/spam_central.c,356
static char *rcsid rcsid1,0
static void use_rcsid(2,84
const char * root_dir 31,614
#define BUFFER_SIZE 33,645
extern char * msgid;35,675
extern int debugmode;36,696
void extract_msg_info(38,719
char *quarantine_spam_to_bucket(quarantine_spam_to_bucket102,2133
int quarantine_spam_to_dir(205,4581
int quarantine_spam_from_hints_to_dir(378,8850

/emcsvn/emc/emcmailer/trunk/espamc/spam_central.h,1130
#define ESPAMC_SPAM_CENTRAL_H2,30
#define MEGA_SUMMARY_LEN 12,195
#define MEGA_SUMMARY_HEADER 13,225
#define X_SPAM_SUMMARY_HEADER 14,273
#define SPAM_REP_SEP 15,320
#define BOX_FA_LEN 16,343
#define RULES_SUMMARY_HEADER_LEN 17,366
#define IP_LEN 18,403
#define SUBJ_LEN 19,421
#define SUBJ_LEN_ENC 20,442
#define BODY_LEN 21,476
typedef struct quarantine_spam_report_t 24,547
	const char * quar_filename;25,589
	double total_score;26,618
	const char * sender;27,639
	const char * recip;28,661
	const char * summary_header;29,682
	const char * ip;30,712
	const char * subject;31,730
	char * body;32,753
} quarantine_spam_report;33,767
typedef struct quarantine_params_t 36,795
	EmcQImpl * impl;37,832
	EmcConfig * config;38,850
	const char * recip;39,871
	const char * sender;40,892
	const char * msgfile;41,914
	const char * preview;42,937
	const char * score_text;43,960
	double score;44,986
	int storage_days;45,1001
} quarantine_params;46,1020
int quarantine_spam_to_dir(48,1042
int quarantine_spam_from_hints_to_dir(49,1097
char *quarantine_spam_to_bucket(quarantine_spam_to_bucket55,1252

/emcsvn/emc/emcmailer/trunk/espamc/strip_html.c,773
static char *rcsid rcsid1,0
static void use_rcsid(2,82
typedef struct HtmlBuffer_t 21,419
	const char * buffer;22,449
	const char * pos;23,471
	size_t len;24,490
} HtmlBuffer;25,503
#define OPENTAG 27,518
#define ENDTAG 28,538
#define TOKEN_DELIM 30,558
typedef enum TagType_t 32,583
	UNKNOWN_TAG,33,608
	IMG_TAG,34,622
	A_TAG,35,632
	FONT_TAG,36,640
	COMMENT_TAG,37,651
} TagType;38,665
#define BUFLEN1 40,677
#define BUFLEN2 41,725
#define SECURE_BUFFER 42,776
void append_html_token(44,832
void append_text_token(60,1242
void eat_space(76,1586
TagType get_tag_type(86,1718
int parse_tag_contents(129,2812
int parse_tag_property(146,3170
int parse_comment_tag(194,4191
int parse_tag(214,4655
int parse_text(301,6617
int strip_html(357,7704

/emcsvn/emc/emcmailer/trunk/espamc/strip_html.h,456
#define __strip_html2,21
typedef struct HtmlOptions_t 6,62
	BOOL delete_spaces;7,93
	BOOL save_img;8,114
	BOOL save_href;9,130
	BOOL save_comments;10,147
	BOOL save_img_contents;11,168
	BOOL save_anchor_contents;12,193
	BOOL save_font_contents;13,221
	int num_imgs;15,249
	int num_anchors;16,264
	int num_comments;17,282
	int num_fonts;18,301
	int num_tags;19,317
	long total_html_tag_len;20,332
} HtmlOptions;21,358
int strip_html(23,374

/emcsvn/emc/emcmailer/trunk/hash.c,569
static char *rcsid rcsid1,0
static void use_rcsid(2,76
enum { ht_num_primes 18,311
static unsigned long ht_prime_list[ht_prime_list20,341
inline void * ht_val(30,724
inline char *ht_key(ht_key36,827
inline int ht_hashcode(42,929
struct ht_node *ht_node_create(ht_node_create48,1081
hash *hash_create(hash_create70,1607
void hash_destroy(87,2012
inline void *hash_find(hash_find129,2947
inline void hash_insert(139,3213
inline struct ht_node *ht_next(ht_next169,3841
inline struct ht_node *ht_first(ht_first187,4245
inline int hash_count(193,4387

/emcsvn/emc/emcmailer/trunk/hash.h,522
#define EMC_HASH2,17
typedef struct ht_node 8,153
	char * key;9,178
	void * val;10,191
	struct ht_node *next;next11,204
} hash_node;12,227
typedef struct ht_ht 14,241
	int size;15,264
	struct ht_node **tbl;tbl16,275
	int iter_index;17,298
	struct ht_node *iter_next;iter_next18,315
	int items;19,343
	 int collisions;21,371
} hash;23,411
hash *hash_create(hash_create25,420
inline void *hash_find(hash_find26,459
inline void hash_insert(27,512
void hash_destroy(28,589
inline int hash_count(29,626

/emcsvn/emc/emcmailer/trunk/mcfg.c,900
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define BUFR_INC 13,263
static char *bufr=bufr15,289
static int  bsize=16,328
static char *cursec=cursec17,355
static FILE   *openConfFile  _Declare 22,430
static int    Parse          _Declare 23,488
static int    Section        _Declare 26,687
static int    Continuation   _Declare 27,760
static char   *loc_realloc   _Declare 28,822
static int    eatWhitespace  _Declare 29,882
static int    Parameter      _Declare 30,934
static int Parameter 78,2627
static FILE *openConfFile(openConfFile259,7033
int paramProcess(332,9114
static int eatComment(386,10078
static int eatWhitespace(399,10236
static int Continuation(411,10389
static int Parse(463,11772
static int Section(546,13589
static char *loc_realloc(loc_realloc646,15882
static void regSection(699,16837
char *getCurrentSection(getCurrentSection733,17303

/emcsvn/emc/emcmailer/trunk/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1007

/emcsvn/emc/emcmailer/trunk/archiver/archiver.c,743
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define MAX_CF_GROUPS 25,585
char *filename filename27,611
char *msgid msgid28,671
char *configfile configfile29,733
char *recip recip30,758
char *sender sender31,819
char *domain domain32,877
char *data data33,935
char *refdomain refdomain34,960
char *local local35,1028
int debugmode 37,1054
int outbound	38,1095
int init_args(40,1151
static void sig_alrm(132,3282
	const char *host;host137,3327
	const char *sender;sender138,3346
	const char *final_addr;final_addr139,3367
}smtp_deliver_info;smtp_deliver_info140,3392
int smtp_deliver(142,3413
int archive_remotely(185,4280
int archive_locally(242,5753
int main(324,7830

/emcsvn/emc/emcmailer/trunk/vaultsmart/vaultsmart.c,199
#define _GNU_SOURCE5,49
VaultsmartMsg *vaultsmart_msg_new vaultsmart_msg_new31,646
int vaultsmart_save_msg 49,1011
int vaultsmart_msg_log_line(141,3514
int vaultsmart_msg_get_log_line(150,3783

/emcsvn/emc/emcmailer/trunk/vaultsmart/vaultsmart.h,652
#define VAULTSMART_H_2,22
typedef struct vaultsmart_msg_t4,45
	long unsigned cusNum;6,79
	long unsigned userRid;7,103
	long unsigned policyID;8,140
	int outbound;9,165
	const char *originalFilename;originalFilename10,180
	const char *domain;domain11,211
	const char *sender;sender12,232
	const char *recip;recip13,253
	char* qfilename;15,274
	off_t filesize;16,292
	char* sha256;17,332
	time_t receiveTime;18,361
	char server[server19,382
} VaultsmartMsg;20,401
VaultsmartMsg *vaultsmart_msg_new vaultsmart_msg_new22,419
int vaultsmart_save_msg 23,457
int vaultsmart_msg_log_line(24,501
int vaultsmart_msg_get_log_line(25,551

/emcsvn/emc/emcmailer/trunk/tagliner/message_body.c,151
static char *rcsid rcsid1,0
static void use_rcsid(2,85
GMimeObject *multi_get_body(multi_get_body40,1388
GMimeObject *get_body(get_body120,3625

/emcsvn/emc/emcmailer/trunk/tagliner/message_body.h,115
#define MESSAGE_BODY_H2,23
GMimeObject *multi_get_body multi_get_body4,47
GMimeObject *get_body get_body5,115

/emcsvn/emc/emcmailer/trunk/tagliner/sql.c,105
static char *rcsid rcsid1,0
static void use_rcsid(2,75
int init_sql(15,312
int sql_fill_hash(41,825

/emcsvn/emc/emcmailer/trunk/tagliner/sql.h,42
int init_sql(1,0
int sql_fill_hash(2,23

/emcsvn/emc/emcmailer/trunk/tagliner/tagger.c,1255
static char *rcsid rcsid11,219
static void use_rcsid(12,297
#define _GNU_SOURCE18,405
#define TMPBUF 42,855
char *copy_to_file(copy_to_file44,876
void hashprint(45,917
void fill_template(46,963
char *nl2br(nl2br47,1020
int message_has_type(48,1047
void print_mime_struct(49,1107
char *stdin_to_tmp(stdin_to_tmp50,1161
void my_log_handler(51,1183
int process_hints(55,1303
char *configfile configfile58,1358
char *filename filename59,1410
char *sender sender60,1435
char *recip recip61,1460
char *recip_domain recip_domain62,1485
char *msgid msgid63,1512
char *tmp_dir tmp_dir64,1537
char *refdomain refdomain65,1564
char *data data66,1589
char *local local67,1614
char *domain domain68,1639
int  do_plain 69,1664
int	no_hints 70,1686
EmcQImpl * impl;71,1704
int debugmode 73,1722
int unlink_msgfile 74,1741
EmcConfig *config;config76,1766
void init_args(88,1917
#define BUFLEN 186,4011
int main(200,4360
int message_has_type(779,18786
void print_mime_struct(834,19873
char *nl2br(nl2br891,21032
void hashprint(935,21923
void fill_template(957,22675
char *stdin_to_tmp(stdin_to_tmp1023,23731
void  my_log_handler(1077,24715
char *copy_to_file(copy_to_file1085,24906
int process_hints(1127,25843

/emcsvn/emc/emcmailer/trunk/tagliner/hyperlink.c,177
static char *rcsid rcsid11,214
static void use_rcsid(12,296
#define MATCH_COUNT 21,442
#define PCRE_OPT 22,465
#define PRE_FETCH 23,497
char *hyperlink(hyperlink41,1011

/emcsvn/emc/emcmailer/trunk/tagliner/hyperlink.h,79
#define HYPERLINK_H2,20
char *hyperlink(hyperlink4,41
int check_space(5,90

/emcsvn/emc/emcmailer/trunk/contentfilter/mail_security.c,1627
static char *rcsid rcsid1,0
static void use_rcsid(3,87
#define _GNU_SOURCE13,199
X509 *smime_get_emc_ca(smime_get_emc_ca35,678
EVP_PKEY *smime_get_emc_pkey(smime_get_emc_pkey36,704
int rand_serial(37,736
RSA *gen_rsa_key(gen_rsa_key38,782
X509 *ca_generate_certificate(ca_generate_certificate39,812
X509 *ca_sign_certificate(ca_sign_certificate40,858
gboolean smime_inited=43,896
void smime_init(45,927
int rand_serial(72,1452
X509 *emcCA=emcCA99,1785
EVP_PKEY *CApkey=CApkey100,1804
X509 *smime_get_emc_ca(smime_get_emc_ca102,1829
EVP_PKEY *smime_get_emc_pkey(smime_get_emc_pkey135,2446
RSA *gen_rsa_key(gen_rsa_key169,3128
X509_NAME *user_get_x509_subject(user_get_x509_subject195,3493
X509 *ca_generate_certificate(ca_generate_certificate275,6011
X509 *ca_sign_certificate(ca_sign_certificate329,6950
char *ca_update_certificate ca_update_certificate376,7950
SMimeKeys *auto_gen_smime_keys(auto_gen_smime_keys493,10520
char *send_newkey_notification(send_newkey_notification656,13684
GMimeObject *smime_encrypt_g_mime_object smime_encrypt_g_mime_object805,18455
GMimeObject *smime_decrypt_g_mime_object(smime_decrypt_g_mime_object844,20055
GMimeObject *smime_get_signed_g_mime_object(smime_get_signed_g_mime_object881,21282
GMimeObject *smime_sign_g_mime_object smime_sign_g_mime_object919,22664
int smime_encrypt 1028,27047
int smime_decrypt(1061,27656
int smime_verify_signature(1103,28544
int smime_sign 1153,29728
EVP_PKEY *smime_key_get_pkey(smime_key_get_pkey1208,30977
X509 *smime_key_get_x509(smime_key_get_x5091237,31503
gboolean smime_key_is_new 1267,32021

/emcsvn/emc/emcmailer/trunk/contentfilter/mail_security.h,971
#define MAIL_SECURITY_H_2,25
#define RSA_BITS	12,231
#define SERIAL_RAND_BITS 13,254
#define LHASH 15,283
int rand_serial(17,305
void smime_init(18,351
SMimeKeys *auto_gen_smime_keys(auto_gen_smime_keys19,370
char *send_newkey_notification(send_newkey_notification20,451
GMimeObject *smime_encrypt_g_mime_object smime_encrypt_g_mime_object22,583
GMimeObject *smime_decrypt_g_mime_object smime_decrypt_g_mime_object23,675
GMimeObject *smime_sign_g_mime_object smime_sign_g_mime_object24,775
GMimeObject *smime_get_signed_g_mime_object smime_get_signed_g_mime_object25,914
int smime_encrypt 27,1017
int smime_decrypt 28,1083
int smime_sign 30,1158
int smime_verify_signature 31,1285
EVP_PKEY *smime_key_get_pkey(smime_key_get_pkey33,1380
X509 *smime_key_get_x509(smime_key_get_x50934,1431
char *ca_update_certificate ca_update_certificate36,1479
X509_NAME *user_get_x509_subject(user_get_x509_subject37,1551
gboolean smime_key_is_new 38,1627

/emcsvn/emc/emcmailer/trunk/contentfilter/msg_template.c,1440
		*rcsid rcsid2,12
static void use_rcsid(3,87
#define _GNU_SOURCE13,199
char *template_user template_user23,407
void msg_template_set_user 25,436
msg_template *msg_template_new(msg_template_new30,518
void msg_template_clear(39,669
const char* msg_template_get_name(52,923
const char* msg_template_get_subject(57,1002
const char* msg_template_get_body(62,1087
const char* msg_template_get_html_body(67,1166
const char* msg_template_get_sender(72,1255
const char* msg_template_get_sender_name(77,1338
const char* msg_template_get_type(82,1431
const char* msg_template_get_id(87,1510
const char* msg_template_get_recipient(92,1585
void msg_template_set_name(97,1674
void msg_template_set_subject(102,1776
void msg_template_set_body(107,1884
void msg_template_set_html_body(112,1986
void msg_template_set_sender(117,2098
void msg_template_set_sender_name(122,2204
void msg_template_set_type(127,2320
void msg_template_set_id(135,2514
void msg_template_set_recipient(140,2612
void msg_template_print(145,2724
void hashprint(152,2940
GMimeMessage *msg_template_parse(msg_template_parse158,3078
char *get_message_body_string(get_message_body_string444,10920
void msg_template_free(519,12473
void msg_template_apply(550,12913
void parse_data(558,13121
const char *get_token_value(get_token_value563,13206
char *tagger_fill_template(tagger_fill_template606,14207
char *fill_template(fill_template690,15743

/emcsvn/emc/emcmailer/trunk/contentfilter/msg_template.h,2245
#define MSG_TEMPLATE_H_2,24
#define MSG_TEMPLATE_DEFAULT_REPLY 6,70
#define MSG_TEMPLATE_DEFAULT_REJECT 7,112
#define MSG_TEMPLATE_DEFAULT_NOTIFY	8,171
#define MSG_TEMPLATE_ENCRYPT_KEY_NOTIFY	9,213
#define MSG_TEMPLATE_SIGN_KEY_NOTIFY	10,264
#define MSG_TEMPLATE_ENC_RECIP	11,312
#define MSG_TEMPLATE_ENC_SIGN_SENDER	12,390
#define MSG_TEMPLATE_SIGN_RECIP	13,478
#define MSG_TEMPLATE_SIGN_SENDER	14,554
#define MSG_TEMPLATE_PASSWORD_PROTECT 15,627
#define MSG_TEMPLATE_MANUAL_CERT_NOTIFY	16,698
#define SECURE_MESSAGE_WELCOME	18,778
#define SECURE_MESSAGE_NOTIFICATION 19,860
#define SECURE_MESSAGE_WELCOME_SENDER 20,933
#define MSG_TEMPLATE_ATTACHMENT_PASSWORD	22,1030
#define AUTOREPLY	24,1106
#define NOTIFICATION	25,1137
typedef struct msg_template_t27,1174
	char* name;29,1206
	char* id;30,1235
	char* sender;31,1246
	char* sender_name;32,1261
	char* subject;33,1281
	char* body;34,1297
	char* html_body;35,1310
	char* recipient;36,1328
	char* type;37,1346
}msg_template;msg_template38,1359
msg_template *msg_template_new(msg_template_new46,1488
void msg_template_clear(47,1522
void msg_template_free(48,1567
void msg_template_print(49,1611
void msg_template_set_user 51,1657
const char* msg_template_get_name(52,1704
const char* msg_template_get_subject(53,1759
const char* msg_template_get_body(54,1817
const char* msg_template_get_html_body(55,1872
const char* msg_template_get_sender(56,1932
const char* msg_template_get_sender_name(57,1989
const char* msg_template_get_id(58,2051
const char* msg_template_get_recipient(59,2104
const char* msg_template_get_type(60,2164
void msg_template_set_name(62,2220
void msg_template_set_subject(63,2288
void msg_template_set_body(64,2359
void msg_template_set_html_body(65,2427
void msg_template_set_sender(66,2500
void msg_template_set_sender_name(67,2570
void msg_template_set_id(68,2645
void msg_template_set_recipient(69,2711
void msg_template_set_type(70,2784
char *get_message_body_string(get_message_body_string72,2851
const char *get_token_value(get_token_value74,2941
GMimeMessage *msg_template_parse(msg_template_parse75,2989
char *tagger_fill_template(tagger_fill_template77,3044
char *fill_template(fill_template78,3107

/emcsvn/emc/emcmailer/trunk/contentfilter/rule_set.c,1086
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define _GNU_SOURCE12,193
CF_HASH_NODE RULE_SET_MATCH_OP_STR 16,256
char *ruleset_get_header(ruleset_get_header25,538
int ruleset_get_count(27,583
float ruleset_get_points(35,718
char *ruleset_get_match_op(ruleset_get_match_op40,791
Rule *ruleset_get_rule(ruleset_get_rule45,867
RuleSet *ruleset_new(ruleset_new53,1064
void ruleset_set_points(71,1398
void ruleset_set_match_op(76,1486
void ruleset_set_id(92,2085
gboolean ruleset_set_matched(97,2186
gboolean ruleset_get_matched(103,2302
void ruleset_set_total_points(108,2380
float ruleset_get_total_points(112,2478
void ruleset_append_rule(117,2562
void ruleset_free(149,3244
char* ruleset_get_string(171,3566
char *ruleset_get_header(ruleset_get_header216,4243
gboolean ruleset_apply(250,5110
gboolean ruleset_has_attachment_rules(353,7347
gboolean ruleset_contains_criteria(369,7679
char *ruleset_get_status_headers(ruleset_get_status_headers385,7963
void ruleset_log_status(416,8472
RuleSet *ruleset_scan_string(ruleset_scan_string511,10927

/emcsvn/emc/emcmailer/trunk/contentfilter/rule_set.h,1017
#define RULESET_H_2,19
#define RULESET_ALWAYS	7,88
#define RULESET_ALL	8,123
#define RULESET_ANY	9,153
#define RULESET_POINTS_MORE_THAN	10,183
#define RULESET_POINTS_LESS_THAN	11,235
RuleSet *ruleset_new(ruleset_new13,288
void ruleset_set_points(14,312
void ruleset_set_match_op(15,369
void ruleset_set_id(16,435
gboolean ruleset_set_matched(18,500
void ruleset_set_total_points(19,566
gboolean ruleset_get_matched(21,630
float ruleset_get_total_points(22,678
int ruleset_get_count(24,729
float ruleset_get_points(25,770
char *ruleset_get_match_op(ruleset_get_match_op26,814
Rule *ruleset_get_rule(ruleset_get_rule27,860
char* ruleset_get_string(28,916
void ruleset_free(29,960
gboolean ruleset_apply(30,997
void ruleset_append_rule(32,1040
void ruleset_log_status(34,1097
gboolean ruleset_has_attachment_rules(36,1141
gboolean ruleset_contains_criteria(37,1198
RuleSet *ruleset_scan_string(ruleset_scan_string39,1267
char *ruleset_get_status_headers(ruleset_get_status_headers40,1311

/emcsvn/emc/emcmailer/trunk/contentfilter/data_match.c,1709
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
#define OVECSIZE 29,531
#define MAX_TOKENS	30,556
#define ENCRYPTED_TYPE_LIST_ID 31,583
extern GArray* g_matches;33,620
list_db_s DB_DATA_LIST 35,647
list_db_s DB_IP_LIST 39,760
magic_t magicCookie=43,871
DataList *encryptedTypeList=encryptedTypeList44,898
const char *encyTypes[encyTypes46,934
int file_match_rule(52,1184
int str_match_list(155,3368
int tokens_match_str(197,4446
int tokens_match_list(215,4883
int tokens_match_db_list(244,5657
int str_match_db_list(273,6140
int text_match_db_list(310,6912
int text_match_list(377,8441
DataList *datalist_new(datalist_new385,8581
DataList *datalist_parse(datalist_parse397,8794
DataList *datalist_new_db(datalist_new_db421,9273
DataList *get_encrypted_type_list(get_encrypted_type_list459,10071
int db_get_list_count(476,10426
void print_datalist(515,11118
void datalist_free(527,11314
const char *datalist_get_item(datalist_get_item532,11341
int text_match(540,11463
int str_count_str(564,11976
int str_count_token(592,12477
gboolean str_match(650,13569
gboolean ip_address_match(758,15901
gboolean scaler_match(818,17224
gboolean date_match(847,17780
gboolean time_match(878,18440
unsigned long int parse_list_id(907,18978
int parse_priority_value(919,19173
GDate *parse_date(parse_date952,19885
time_t parse_time(996,20852
off_t parse_size(1030,21429
pcre *parse_pcre(parse_pcre1080,22226
regex_t *parse_regex(parse_regex1153,23618
MATCH_OP match_op_negate(1169,23926
gboolean get_match_op_default(1200,24411
const char* get_file_type_desc(1219,24730
char* pcre_replace 1239,25239
char * g_pcre_replace 1290,26267

/emcsvn/emc/emcmailer/trunk/contentfilter/data_match.h,2869
#define RULE_DATA_H_2,21
#define MAX_MATCHES 8,104
typedef enum MATCH_OP10,129
	MATCH_NONE,12,153
	MATCH_IS,13,166
	MATCH_IS_NOT,14,177
	MATCH_CONTAINS,15,192
	MATCH_DOES_NOT_CONTAIN,16,209
	MATCH_CONTAINS_WORD,17,234
	MATCH_DOES_NOT_CONTAIN_WORD,18,256
	MATCH_BEGINS_WITH,19,286
	MATCH_END_WITH,20,306
	MATCH_LESS_THAN,21,323
	MATCH_EQUALS,22,341
	MATCH_GREATER_THAN,23,356
	MATCH_HIGHER_THAN,24,377
	MATCH_LOWER_THAN,25,397
	MATCH_DATE_NEWER,26,416
	MATCH_DATE_OLDER,27,435
	MATCH_REG_EXP,28,454
	MATCH_REG_EXP_LIST,29,470
	MATCH_PCRE,30,491
	MATCH_PCRE_LIST,31,504
	MATCH_IN_LIST,32,522
	MATCH_NOT_IN_LIST,33,538
	MATCH_IN_CIDR,34,558
	MATCH_NOT_IN_CIDR,35,574
	MATCH_IN_RANGE,36,594
	MATCH_NOT_IN_RANGE,37,611
	MATCH_CONTAINS_ITEM,38,632
	MATCH_DOES_NOT_CONTAIN_ITEM,39,654
	MATCH_CONTAINS_TOKEN,40,684
	MATCH_DOES_NOT_CONTAIN_TOKEN,41,707
	MATCH_CONTAINS_IGNORE_SPACE42,738
} MATCH_OP;43,767
typedef enum MSG_PRIORITY45,780
	PRIORITY_NONE,47,808
	PRIORITY_HIGHEST,48,824
	PRIORITY_HIGH,49,847
	PRIORITY_NORMAL,50,867
	PRIORITY_LOW,51,889
	PRIORITY_LOWEST 52,908
} MSG_PRIORITY;53,929
#define MAX_DB_LOAD_ITEMS	55,946
typedef struct list_db_t57,979
	const char* DB_LIST_TABLE_NAME;59,1006
	const char* DB_TABLE_NAME;60,1039
	const char* DB_LIST_ID;61,1067
	const char* DB_OWNER;62,1092
	const char* DB_DATA;63,1115
}list_db_s;list_db_s64,1137
typedef struct DataList_t66,1150
	const char** items;68,1178
	int totalItems;69,1199
	int nItems;70,1216
	int startOffset;71,1229
	unsigned long listID;72,1247
	list_db_s *dbInfo;dbInfo73,1270
}DataList;DataList74,1290
int file_match_rule(76,1302
int str_match_list(78,1362
int str_match_db_list(81,1460
int str_count_str(84,1561
int str_count_token(85,1638
int tokens_match_str(87,1717
int tokens_match_list(90,1820
int tokens_match_db_list(93,1920
MATCH_OP match_op_negate(96,2023
gboolean get_match_op_default(97,2067
int text_match(99,2117
		str_match(103,2223
		scaler_match(106,2309
gboolean date_match(107,2385
gboolean time_match(109,2470
gboolean ip_address_match(111,2549
int parse_priority_value(114,2639
pcre *parse_pcre(parse_pcre116,2694
regex_t *parse_regex(parse_regex117,2754
char* pcre_replace 118,2801
off_t parse_size(120,2894
GDate *parse_date(parse_date121,2936
time_t parse_time(122,2979
unsigned long int parse_list_id(124,3021
DataList *datalist_new(datalist_new126,3072
DataList *datalist_parse(datalist_parse127,3098
DataList *datalist_new_db(datalist_new_db128,3155
void datalist_free(130,3221
int db_get_list_count(132,3244
const char *datalist_get_item(datalist_get_item134,3309
int datalist_match(136,3368
void print_datalist(139,3460
const char* get_file_type_desc(141,3498
DataList *get_encrypted_type_list(get_encrypted_type_list142,3552
char *g_pcre_replace g_pcre_replace144,3590

/emcsvn/emc/emcmailer/trunk/contentfilter/parser.c,2187
		*rcsid rcsid2,12
static void use_rcsid(4,87
#define _GNU_SOURCE14,199
demime_handle *dh=dh36,859
gboolean demimedMessage=38,885
gboolean dearchivedMessage=39,917
gboolean msgModifiedFlag=40,952
gboolean initialized=41,985
GHashTable *newHeaders newHeaders42,1014
char* newRawHeaders 43,1045
unsigned long matchedPolicyIDs[matchedPolicyIDs45,1074
int nMatchedPolicies 46,1111
char* domainKeySignature 47,1137
char *get_file_name(get_file_name49,1171
char *get_file_name(get_file_name55,1413
void setDomainKeySignature(77,1796
void parser_init(82,1866
void parser_cleanup(96,2059
void close_demime_handle(101,2110
demime_handle* get_demime_handle(124,2515
char *get_spooldir(get_spooldir182,3556
GMimeMessage *parser_get_message(parser_get_message208,4058
const char *parser_get_from_address(parser_get_from_address297,5987
const char *parser_get_header(parser_get_header323,6589
void parser_add_header(378,7786
void parser_set_header(397,8239
void parser_remove_header(455,9499
void g_mime_remove_header(479,9948
void parser_remove_header_recursive 534,11286
void parser_append_policy_id(546,11615
char *parser_get_policy_ids(parser_get_policy_ids554,11764
off_t parser_get_file_size(573,12136
GList *parser_get_attachment_parts(parser_get_attachment_parts585,12340
GMimeObject *get_text_body_part(get_text_body_part626,13171
GMimeObject *get_html_body_part(get_html_body_part650,13695
GMimeObject *parser_get_text_body_part(parser_get_text_body_part674,14220
GMimeObject *parser_get_html_body_part(parser_get_html_body_part700,14777
GMimeObject *parser_get_body_part(parser_get_body_part727,15336
gboolean g_mime_object_has_attachment 738,15497
gboolean message_has_attachments(786,16490
char *strip_html_tags(strip_html_tags811,16948
int parser_dearchive_parts(887,18468
void message_add_hash_header(921,19101
void mailer_add_hash_header(926,19282
char *save_message_to_disk(save_message_to_disk931,19434
ssize_t write_message_to_stream 1041,21975
char* parser_commit_changes(1073,22822
void set_message_modified_flag(1092,23119
gboolean get_message_modified_flag(1097,23189
int write_mime_part_to_spool(1102,23256

/emcsvn/emc/emcmailer/trunk/contentfilter/parser.h,1722
#define PARSER_H_2,18
#define RAW_HEADERS 6,58
demime_handle* get_demime_handle(15,181
void close_demime_handle(16,217
GMimeMessage *parser_get_message(parser_get_message18,246
GMimeObject *get_text_body_part(get_text_body_part20,283
GMimeObject *get_html_body_part(get_html_body_part21,339
GMimeObject *parser_get_text_body_part(parser_get_text_body_part23,396
GMimeObject *parser_get_html_body_part(parser_get_html_body_part24,438
GMimeObject *parser_get_body_part(parser_get_body_part26,481
const char *parser_get_header(parser_get_header27,518
const char *parser_get_from_address(parser_get_from_address28,569
gboolean g_mime_object_has_attachment 29,608
off_t parser_get_file_size(31,668
GList *parser_get_attachment_parts(parser_get_attachment_parts33,699
gboolean message_has_attachments(35,738
char *strip_html_tags(strip_html_tags37,775
int parser_dearchive_parts(38,816
char *save_message_to_disk(save_message_to_disk40,847
GMimeObject *parser_message_get_body(parser_message_get_body43,943
void parser_add_header(46,1053
void parser_set_header(47,1116
void parser_remove_header(48,1179
void parser_remove_header_recursive 49,1226
void set_message_modified_flag(51,1289
gboolean get_message_modified_flag(52,1333
char* parser_commit_changes(54,1372
char *get_spooldir(get_spooldir55,1403
void parser_init(57,1426
void parser_cleanup(58,1446
void parser_append_policy_id(60,1470
char *parser_get_policy_ids(parser_get_policy_ids61,1524
ssize_t write_message_to_stream 63,1556
void setDomainKeySignature(64,1633
char *get_message_raw_headers(get_message_raw_headers65,1672
GArray *parse_raw_headers(parse_raw_headers66,1725
int write_mime_part_to_spool(68,1777

/emcsvn/emc/emcmailer/trunk/contentfilter/database.c,3228
static char *rcsid rcsid11,151
static void use_rcsid(12,232
#define _GNU_SOURCE22,344
#define MAX_ROWS	38,828
void db_init_rule(39,849
void db_init_action(40,895
int sql_fill_hash(41,947
MYSQL mysql_ro,43,1015
MYSQL mysql_ro, *mysql_sock=mysql_sock43,1015
MYSQL mysql_rw,44,1080
MYSQL mysql_rw, *mysql_sock_rw mysql_sock_rw44,1080
MYSQL wl_mysql_ro,45,1150
MYSQL wl_mysql_ro, *wl_mysql_sock=wl_mysql_sock45,1150
MYSQL qcdb_mysql_rw,47,1232
MYSQL qcdb_mysql_rw, *qcdb_mysql_sock_rw qcdb_mysql_sock_rw47,1232
GHashTable *users_hash=users_hash49,1313
int cus_num 51,1344
int db_connect(53,1362
int db_connect_rw(59,1473
MYSQL *db_get_connection(db_get_connection65,1596
MYSQL *db_get_connection_rw(db_get_connection_rw76,1763
MYSQL *db_connect_qcdb_rw(db_connect_qcdb_rw87,1945
MYSQL *db_get_qcdb_connection(db_get_qcdb_connection112,2562
MYSQL *db_get_wl_connection(db_get_wl_connection122,2758
void db_disconnect(142,3269
MYSQL_RES *_db_query _db_query162,3596
gboolean _db_query_w 197,4184
gboolean db_query_w 221,4643
MYSQL_RES *db_query db_query227,4769
char* db_mysql_quote(232,4857
int get_customer_number(245,5116
FilterList *get_customer_filters(get_customer_filters317,6186
char *db_get_realm_parent(db_get_realm_parent331,6490
FilterList *get_domain_filters(get_domain_filters390,7375
FilterList *get_group_filters(get_group_filters401,7596
FilterList *get_user_filters(get_user_filters406,7716
FilterList *db_load_filters(db_load_filters421,8130
Filter *db_load_policy(db_load_policy498,9892
RuleSet *db_load_ruleset(db_load_ruleset568,11509
Rule *db_load_rule(db_load_rule684,13503
void db_init_action(742,14412
void db_init_rule(752,14603
ActionSet *db_load_actionset(db_load_actionset772,15206
Action *db_load_action(db_load_action836,16359
gboolean db_item_in_list(894,17358
char* db_get_match_from_list(938,18321
gboolean db_in_whitelist 1001,20234
gboolean db_item_regexp_list(1076,22088
gboolean db_in_blacklist(1119,23010
int db_count_items_in_text(1182,24332
int db_count_tokens_in_list(1251,25624
int db_get_list_items(1325,27017
msg_template *db_load_msg_template(db_load_msg_template1371,27911
char *db_load_text(db_load_text1420,29047
GHashTable *db_load_people_hash(db_load_people_hash1454,29549
int sql_fill_hash(1497,30411
AkaDomain *db_get_aka_domain(db_get_aka_domain1549,31302
gboolean db_mailbox_exists 1599,32511
gboolean db_mailbox_exists_in 1604,32655
Mailbox* db_get_aka_mailbox 1637,33285
unsigned long long db_get_new_rid 1681,34251
unsigned long long db_last_insert_id 1690,34427
char *db_get_rand_word db_get_rand_word1695,34521
gboolean db_save_spamcentral_mailbox(1711,34891
gboolean db_save_mailbox(1744,35687
int db_get_auto_log_entry(1796,37487
void db_update_auto_log(1835,38298
DomainKeys *db_get_domainkeys db_get_domainkeys1870,39170
SMimeKeys **_db_get_smime_key_list _db_get_smime_key_list1930,40313
SMimeKeys *db_get_smime_keys db_get_smime_keys2016,42187
SMimeKeys *db_get_smime_keys_by_owner db_get_smime_keys_by_owner2026,42394
int db_save_smime_keys 2036,42611
GHashTable *db_get_prefs db_get_prefs2101,44402
unsigned long long db_insert_quarantine_report 2148,45359

/emcsvn/emc/emcmailer/trunk/contentfilter/database.h,2838
#define DATABASE_H_7,97
#define 	MAX_SQL_LEN	9,118
#define FILTER_DB_TABLE_NAME 18,328
#define FILTER_DB_FILTER_ID 19,380
#define FILTER_DB_POLICY_ID 20,422
#define FILTER_DB_OWNER 21,464
#define FILTER_DB_NAME 22,499
#define FILTER_DB_DESC 23,532
#define FILTER_DB_POSITION 24,572
#define FILTER_DB_TYPE 25,612
#define FILTER_DB_RULE_SET_ID 26,645
#define FILTER_DB_ACTION_SET_ID 27,691
#define FILTER_DB_APPLY_LIST_ID 28,739
#define FILTER_DB_EXCEPTION_LIST_ID 29,787
#define FILTER_DB_ACTIVE_FLAG 30,843
#define FILTER_DB_CREATED_ON 31,889
#define FILTER_DB_CREATED_BY 32,933
#define FILTER_DB_MODIFIED_ON 33,977
#define FILTER_DB_MODIFIED_BY 34,1022
int get_customer_number(36,1069
FilterList *get_customer_filters(get_customer_filters38,1115
FilterList *get_domain_filters(get_domain_filters39,1191
FilterList *get_group_filters(get_group_filters40,1265
FilterList *get_user_filters(get_user_filters41,1338
gboolean db_item_regexp_list(43,1411
FilterList *db_load_filters(db_load_filters45,1501
Filter *db_load_policy(db_load_policy46,1573
int db_connect(48,1646
int db_connect_rw(49,1681
void db_disconnect(50,1719
MYSQL *db_get_connection(db_get_connection51,1741
MYSQL *db_get_connection_rw(db_get_connection_rw52,1769
MYSQL_RES *db_query db_query53,1800
gboolean db_query_w 54,1839
Action *db_load_action(db_load_action57,1880
Rule *db_load_rule(db_load_rule58,1928
RuleSet *db_load_ruleset(db_load_ruleset59,1970
ActionSet *db_load_actionset(db_load_actionset60,2021
Filter *db_load_filter(db_load_filter61,2078
int db_get_list_items(63,2127
gboolean db_item_in_list(66,2249
char* db_get_match_from_list(69,2337
int db_count_items_in_text(71,2440
int db_count_tokens_in_list(74,2535
gboolean db_in_whitelist(77,2646
gboolean db_in_whitelist_for(78,2704
gboolean db_in_blacklist(79,2787
msg_template *db_load_msg_template(db_load_msg_template81,2846
char *db_load_text(db_load_text82,2908
int db_get_auto_log_entry(84,2951
void db_update_auto_log(85,3041
GHashTable *db_load_people_hash(db_load_people_hash88,3131
DomainKeys *db_get_domainkeys db_get_domainkeys90,3183
SMimeKeys *db_get_smime_keys db_get_smime_keys91,3226
SMimeKeys *db_get_smime_keys_by_owner db_get_smime_keys_by_owner92,3268
SMimeKeys** _db_get_smime_key_list 93,3327
int db_save_smime_keys 94,3394
gboolean db_mailbox_exists 95,3434
gboolean db_mailbox_exists_in 96,3481
gboolean db_save_spamcentral_mailbox(97,3553
unsigned long long db_last_insert_id 98,3605
char *db_get_rand_word db_get_rand_word100,3647
gboolean db_save_mailbox(101,3674
AkaDomain *db_get_aka_domain(db_get_aka_domain102,3714
Mailbox* db_get_aka_mailbox 103,3764
GHashTable *db_get_prefs db_get_prefs105,3813
unsigned long long db_insert_quarantine_report 106,3859
char* db_mysql_quote(108,3932

/emcsvn/emc/emcmailer/trunk/contentfilter/file_aparser.c,504
		*rcsid rcsid2,12
static void use_rcsid(3,86
#define _GNU_SOURCE13,198
#define EX_TEMPFAIL 28,502
#define PARSER_HEADER 33,590
#define PARSER_STRINGS 34,623
#define PARSER_TEXT 35,657
#define PARSER_HTML 36,688
static int parse_flags(38,720
GList *parserConfig=parserConfig40,780
char* file2text(42,808
const char* guess_file_type(131,2708
static int parse_flags(156,3231
GList *read_config(read_config173,3572
void print_config(263,5295
config_node *find_parser(find_parser282,5749

/emcsvn/emc/emcmailer/trunk/contentfilter/file_aparser.h,500
#define TEXT_PARSER_H_2,23
typedef struct config4,47
	const char *type,type6,71
	const char *type, *subtype,subtype6,71
	const char *type, *subtype, *ext;ext6,71
	const char *parser;parser7,106
	int use_stdin;8,127
}config_node;config_node9,196
config_node *find_parser(find_parser11,211
GList *read_config(read_config14,309
char* file2text(16,384
char* file2text2(18,481
char* pdf2text(19,543
char* msword2text(20,581
char* html2text(21,622
const char* guess_file_type(23,662

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_action.c,3703
		*rcsid rcsid2,12
static void use_rcsid(3,88
#define _GNU_SOURCE13,200
#define	ZIP_PATH	35,697
#define	P7ZIP_PATH	36,729
#define	MAX_ATTACHMENTS	37,763
extern GArray* g_matches;39,792
		ACTION_STR 43,878
extern EmcQImpl *impl;impl136,4369
void spool_report 138,4393
quarantine_report *qr qr139,4436
const char* prefRealm 140,4466
int stoppedActions[stoppedActions142,4497
int nStoppedActions 143,4522
void stopAction(145,4548
gboolean isActionStopped(149,4634
ActionStatus action_apply(163,5010
ActionStatus smarthost 459,11841
ActionStatus spool_message 474,12399
char *get_quarantine_url_params get_quarantine_url_params778,20886
quarantine_report *quarantine_report_new(quarantine_report_new813,21973
void spool_report 862,23132
ActionStatus do_tag(982,25704
ActionStatus do_discard_msg_changes(1014,26599
ActionStatus do_add_footer(1039,27212
ActionStatus do_add_html_footer(1206,31492
ActionStatus do_add_header(1520,39344
ActionStatus do_set_header(1574,41090
ActionStatus do_remove_header(1655,43096
ActionStatus do_forward_copy(1707,44375
ActionStatus do_forward_current_copy(1774,46231
char *get_cluster_by_hostname(get_cluster_by_hostname1883,49086
int attachmentNo 1919,49876
int randPassword 1920,49898
const char *attachPassword attachPassword1921,49920
unsigned long long detachSizeList[detachSizeList1922,49955
char *detachNameList[detachNameList1923,50013
char *detachTextReplacement[detachTextReplacement1924,50061
char *detachHtmlReplacement[detachHtmlReplacement1925,50116
GHashTable *attachTokenHt attachTokenHt1926,50171
char *detachHtmlMessageTemplate detachHtmlMessageTemplate1927,50205
char *detachTextMessageTemplate detachTextMessageTemplate1928,50245
void mime_part_detach_attachment(1930,50286
void mime_part_strip_attachment(2282,61035
ActionStatus do_strip_attachment(2349,62901
int p7zip_files 2530,69004
int zip_files 2596,70633
ActionStatus zip_attachments 2658,71997
ActionStatus do_delete(2881,78891
ActionStatus do_bounce(2888,79088
ActionStatus do_archive(2918,79917
ActionStatus vaultsmart_archive_action(2945,80676
ActionStatus add_delayed_action(2987,81885
ActionStatus do_redirect(3011,82684
ActionStatus do_commit_modified_msg(3103,84971
ActionStatus set_spam_options(3139,85568
ActionStatus do_bypass_spam(3170,86323
ActionStatus do_notify(3206,87279
ActionStatus do_reply(3338,90809
char* send_new_message(3456,93949
char* send_new_message_with_data(3461,94138
void do_stop_message(3508,95294
ActionStatus do_quarantine(3518,95435
ActionStatus do_set_deliver_folder(3668,99853
ActionStatus do_run_agent(3695,100566
ActionStatus do_domain_key_sign(3717,101120
void send_cyphersmart_notification(3984,106825
gboolean secure_message_done 4085,109588
ActionStatus secure_message 4086,109626
ActionStatus do_smime_encrypt_with_key 4424,120498
ActionStatus do_smime_encrypt 4459,121536
ActionStatus do_smime_decrypt 4521,123228
GMimeObject *get_smime_decrypted_part get_smime_decrypted_part4561,124472
ActionStatus do_smime_sign_with_key 4608,125796
ActionStatus do_smime_sign 4677,127723
void cf_report(4744,129564
Action* action_new(4855,131700
void action_clear(4871,131927
void action_free(4883,132133
char *action_get_string(action_get_string4894,132260
const char *action_get_data(action_get_data4983,134407
void action_set_data(4991,134508
void action_set_type(4999,134648
const char *get_action_type_string(get_action_type_string5016,134997
void action_set_id(5030,135187
ActionStatus action_set_status(5035,135281
ActionStatus action_get_status(5041,135396
int action_get_type(5046,135472
Action *action_scan_string(action_scan_string5051,135535

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_action.h,4124
#define FILTER_ACTION_H_2,25
typedef enum FILTER_ACTION6,75
	ACTION_NONE,8,104
	ACTION_TAG,9,118
	ACTION_ADD_FOOTER,10,145
	ACTION_ADD_HTML_FOOTER,11,190
	ACTION_ADD_HEADER,12,244
	ACTION_SET_HEADER,13,288
	ACTION_REMOVE_HEADER,14,327
	ACTION_DELIVER,15,374
	ACTION_BYPASS_SPAM,16,391
	ACTION_DELETE,17,412
	ACTION_BOUNCE,18,428
	ACTION_REDIRECT,19,444
	ACTION_BCC,20,462
	ACTION_NEW_COPY,21,475
	ACTION_REPLY,22,493
	ACTION_NOTIFY,23,508
	ACTION_NOTIFY_RECIPIENT,24,524
	ACTION_NOTIFY_SENDER,25,550
	ACTION_NOTIFY_ADMIN,26,573
	ACTION_DELIVER_AND_QUARANTINE,27,595
	ACTION_QUARANTINE,28,627
	ACTION_ARCHIVE,29,647
	ACTION_STRIP_ATTACHMENT,30,664
	ACTION_STRIP_ALL_ATTACHMENTS,31,690
	ACTION_SET_DELIVER_FOLDER,32,721
	ACTION_RUN_AGENT,33,749
	ACTION_DISCARD_MSG_CHANGES,34,768
	ACTION_DOMAIN_KEY_SIGN,35,797
	ACTION_SMIME_SIGN,36,822
	ACTION_SMIME_CLEAR_SIGN,37,842
	ACTION_SMIME_OPAQUE_SIGN,38,868
	ACTION_SMIME_ENCRYPT,39,895
	ACTION_SMIME_DECRYPT,40,918
	ACTION_GPG_SIGN,41,941
	ACTION_SPOOL,42,959
	ACTION_SMARTHOST,43,974
	ACTION_ENFORCE_TLS,44,993
	ACTION_DETACH_ATTACHMENT,45,1014
	ACTION_SPAM_OPTIONS,46,1041
	ACTION_ZIP_ATTACHMENTS,47,1063
	ACTION_PASSWORD_PROTECT_MESSAGE,48,1088
	ACTION_PASSWORD_PROTECT_ATTACHMENTS,49,1122
	ACTION_ENCRYPT_MESSAGE,50,1160
	ACTION_STOP_MESSAGE51,1185
} FILTER_ACTION;52,1206
#define  ACTION_SET_DB_TABLE_NAME	55,1270
#define  ACTION_SET_DB_ACTION_SET_ID 56,1331
#define  ACTION_SET_DB_OWNER	57,1386
#define  ACTION_SET_DB_NAME	58,1425
#define  ACTION_SET_DB_DESCRIPTION 59,1463
#define  ACTION_SET_DB_CREATED_ON 60,1515
#define  ACTION_SET_DB_CREATED_BY 61,1565
#define  ACTION_SET_DB_MODIFIED_ON 62,1615
#define  ACTION_SET_DB_MODIFIED_BY 63,1667
#define POLICY_OWNER_QUARANTINE	65,1720
#define DOMAIN_QUARANTINE	66,1757
#define USER_QUARANTINE	67,1789
Action* action_new(69,1821
void action_clear(70,1843
void action_free(71,1878
char *action_get_string(action_get_string73,1913
int action_get_type(74,1954
const char *action_get_data(action_get_data75,1991
void action_set_id(76,2036
void action_set_type(77,2096
void action_set_data(78,2152
ActionStatus action_set_status(80,2209
ActionStatus action_get_status(81,2278
ActionStatus action_apply(83,2327
ActionStatus do_tag(85,2393
ActionStatus do_add_header(86,2430
ActionStatus do_set_header(87,2474
ActionStatus do_remove_header(88,2518
ActionStatus do_add_footer(89,2565
ActionStatus do_add_html_footer(90,2632
ActionStatus do_strip_attachment(91,2704
ActionStatus do_notify(92,2754
ActionStatus do_reply(93,2794
ActionStatus do_forward_copy(94,2833
ActionStatus do_forward_current_copy(95,2879
ActionStatus do_redirect(96,2933
ActionStatus do_delete(97,2975
ActionStatus do_quarantine(98,3015
ActionStatus do_archive(99,3059
ActionStatus vaultsmart_archive_action(100,3100
ActionStatus do_bounce(101,3172
ActionStatus do_bypass_spam(102,3212
ActionStatus set_spam_options(103,3257
ActionStatus do_set_deliver_folder(104,3304
ActionStatus do_run_agent(105,3356
ActionStatus do_discard_msg_changes(106,3399
ActionStatus do_domain_key_sign(107,3452
ActionStatus do_smime_sign(108,3501
ActionStatus do_smime_encrypt 109,3545
ActionStatus do_smime_decrypt 110,3593
ActionStatus do_smime_sign_with_key 111,3641
ActionStatus do_smime_encrypt_with_key 112,3717
ActionStatus do_gpg_sign(113,3796
ActionStatus spool_message 114,3838
ActionStatus smarthost 115,3883
ActionStatus add_delayed_action(116,3924
ActionStatus zip_attachments 117,3973
int zip_files 118,4020
int p7zip_files 119,4108
ActionStatus secure_message 120,4198
GMimeObject *get_smime_decrypted_part get_smime_decrypted_part121,4244
char* send_new_message(123,4332
char* send_new_message_with_data(124,4419
void do_stop_message(126,4535
ActionStatus do_commit_modified_msg(127,4559
char *get_quarantine_url_params get_quarantine_url_params129,4599
quarantine_report *quarantine_report_new(quarantine_report_new130,4656
void cf_report(131,4700
const char* get_action_type_string(133,4765
Action *action_scan_string(action_scan_string134,4818

/emcsvn/emc/emcmailer/trunk/contentfilter/action_set.c,734
static char*rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
int smime_footer_position 21,384
int is_signed 22,416
int is_encrypted 23,436
const char *smime_text_footer_id smime_text_footer_id24,459
const char *smime_html_footer_id smime_html_footer_id25,501
ActionStatus actionset_apply(27,544
void actionset_secure_apply(185,5001
char* actionset_get_string(345,9506
ActionSet *actionset_new(actionset_new378,10092
void actionset_append(383,10177
void actionset_prepend(391,10314
Action* actionset_get_action(399,10453
int actionset_get_count(407,10633
gboolean actionset_contains_type(415,10745
void actionset_free(430,11055
ActionSet *actionset_scan_string(actionset_scan_string447,11352

/emcsvn/emc/emcmailer/trunk/contentfilter/action_set.h,439
#define ACTIONSET_H_2,21
int actionset_get_count(7,94
char* actionset_get_string(8,141
Action* actionset_get_action(9,191
ActionStatus actionset_apply(11,258
void actionset_secure_apply(12,310
void actionset_free(14,384
ActionSet *actionset_new(actionset_new16,428
void actionset_append(17,456
void actionset_prepend(18,517
ActionSet *actionset_scan_string(actionset_scan_string20,580
gboolean actionset_contains_type(21,628

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_rule.c,2507
		*rcsid rcsid2,12
static void use_rcsid(3,86
#define _GNU_SOURCE13,198
#define	WHITELIST	35,688
#define	BLACKLIST	36,708
#define STR_CHECKSUM_MD5 38,729
#define STR_CHECKSUM_SHA1 39,764
#define STR_CHECKSUM_SHA256 40,801
		MATCH_OP_STR 44,901
		RULE_CRITERIA_STR 97,3075
list_db_s DB_DOMAIN_LIST 164,5987
list_db_s DB_LIST_INFO 168,6102
const char *ipAddress=ipAddress182,6446
const char *outIpAddress outIpAddress183,6475
const char *inIpAddress inIpAddress184,6508
DataList *encTypeList encTypeList186,6542
const char *encTypes[encTypes187,6572
gboolean gmime_part_is_encrypted 190,6704
RuleStatus rule_apply(243,7920
DataList *rule_get_data_list(rule_get_data_list985,29332
RuleStatus rule_match(1018,29890
AttachmentStatus *attachment_status_new(attachment_status_new1108,32072
RuleStatus rule_attachment_match(1120,32303
gboolean rule_get_default(1715,47765
Rule *rule_new(rule_new1720,47866
Rule *rule_new_simple(rule_new_simple1734,48107
Rule *rule_copy(rule_copy1745,48318
void rule_clear(1752,48426
void rule_free(1778,49007
void rule_set_ruleID(1795,49295
void rule_set_listID(1800,49379
void rule_set_count(1805,49463
void rule_set_points(1821,49704
void rule_set_criteria(1826,49780
void rule_set_case_sensitive(1865,50623
void rule_set_reverse_op(1870,50707
void rule_set_matchOp(1875,50783
void rule_set_data(1892,51109
void rule_set_countOp(1897,51193
unsigned long rule_get_list_id(1921,51722
DATA_TYPE rule_get_data_type(1933,51920
DATA_TYPE rule_set_data_type(1938,51990
RuleStatus rule_set_matched(1944,52108
RuleStatus rule_set_status(1954,52296
void rule_set_repeat_points(1960,52399
void rule_set_n_matches(1965,52498
int rule_get_n_matches(1970,52581
gboolean rule_is_valid(1975,52645
unsigned long rule_get_ruleID(1984,52784
int rule_get_criteria(1989,52853
char* rule_get_criteria_str(1994,52916
gboolean is_attachment_criteria(1999,52988
int rule_get_match_op(2011,53425
char* rule_get_match_op_str(2016,53487
int rule_get_count_op(2021,53558
char* rule_get_count_op_str(2026,53620
const char* rule_get_data(2031,53691
gboolean rule_has_count(2036,53754
int rule_get_count(2047,54265
gboolean rule_get_matched(2052,54322
RuleStatus rule_get_status(2057,54405
float rule_get_points(2062,54471
float rule_get_total_points(2067,54532
int rule_get_repeat_points(2076,54692
int rule_get_priority(2081,54764
Rule * rule_scan_string(2086,54845
void showRuleFormat(2189,57001
char* rule_get_string(2228,57929

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_rule.h,3486
#define FILTER_RULE_H_2,23
#define OVECSIZE 10,196
#define MAX_TOKENS	11,221
#define COUNT_AT_LEAST	13,249
#define COUNT_AT_MOST	14,277
#define COUNT_EXACTLY	15,304
#define COUNT_AT_LEAST_STR	17,332
#define COUNT_AT_MOST_STR	18,372
#define COUNT_EXACTLY_STR	19,410
typedef enum CRITERIA26,638
	CRITERIA_NONE,28,662
	CRITERIA_ENV_TO,29,678
	CRITERIA_ENV_FROM,30,696
	CRITERIA_SENDER_DOMAIN,31,716
	CRITERIA_RECIPIENT_DOMAIN,32,741
	CRITERIA_SENDER,33,769
	CRITERIA_RECIPIENT,34,787
	CRITERIA_TIME,35,808
	CRITERIA_DATE,36,824
	CRITERIA_SIZE,37,840
	CRITERIA_IP_ADDRESS,38,856
	CRITERIA_FROM,39,878
	CRITERIA_FROM_ALL,40,894
	CRITERIA_FROM_NAME,41,914
	CRITERIA_FROM_ADDR,42,935
	CRITERIA_TO,43,956
	CRITERIA_TO_ALL,44,970
	CRITERIA_TO_NAME,45,988
	CRITERIA_TO_ADDR,46,1007
	CRITERIA_CC,47,1026
	CRITERIA_CC_ALL,48,1040
	CRITERIA_CC_NAME,49,1058
	CRITERIA_CC_ADDR,50,1077
	CRITERIA_BCC,51,1096
	CRITERIA_BCC_ALL,52,1111
	CRITERIA_BCC_NAME,53,1130
	CRITERIA_BCC_ADDR,54,1150
	CRITERIA_SUBJECT,55,1170
	CRITERIA_CUSTOM_HEADER,56,1189
	CRITERIA_HEADERS,57,1214
    CRITERIA_MAILBOX_SERVICE,58,1233
	CRITERIA_PEOPLE_DIRECTORY,59,1263
	CRITERIA_PRIORITY,60,1291
	CRITERIA_STATUS,61,1311
	CRITERIA_MESSAGE,62,1329
	CRITERIA_MESSAGE_DATE,63,1348
	CRITERIA_MESSAGE_TIME,64,1372
	CRITERIA_TEXT_BODY_SIZE,65,1396
	CRITERIA_HTML_BODY_SIZE,66,1422
	CRITERIA_BODY_SIZE,67,1448
	CRITERIA_BODY,68,1469
	CRITERIA_ATTACHMENT_COUNT,69,1485
	CRITERIA_ATTACHMENT_NAME,70,1513
	CRITERIA_ATTACHMENT_SIZE,71,1540
	CRITERIA_ATTACHMENT_CHECKSUM,72,1567
	CRITERIA_ATTACHMENT_TOTAL_SIZE,73,1598
	CRITERIA_ATTACHMENT_EXT,74,1631
	CRITERIA_ATTACHMENT_TYPE,75,1657
	CRITERIA_ATTACHMENT76,1684
} CRITERIA;77,1705
RuleStatus rule_apply(79,1718
Rule* rule_new(81,1754
void rule_clear(82,1772
void rule_free(83,1801
Rule *rule_new_simple(rule_new_simple85,1830
unsigned long rule_get_ruleID(87,1899
const char* rule_get_data(88,1942
int rule_get_count(89,1981
int rule_get_criteria(91,2014
char* rule_get_criteria_str(92,2049
gboolean is_attachment_criteria(93,2090
int rule_get_match_op(95,2146
char* rule_get_match_op_str(96,2181
int rule_get_count_op(97,2222
char* rule_get_count_op_str(98,2257
int rule_get_priority(100,2299
char* rule_get_string(101,2334
gboolean rule_get_matched(102,2369
RuleStatus rule_get_status(103,2408
void rule_set_n_matches(104,2448
int rule_get_n_matches(105,2499
float rule_get_points(106,2535
float rule_get_total_points(107,2570
int rule_get_repeat_points(108,2611
DATA_TYPE rule_get_data_type(109,2651
void rule_set_ruleID(111,2694
void rule_set_count(112,2750
void rule_set_points(113,2794
void rule_set_repeat_points(114,2842
DATA_TYPE rule_set_data_type(115,2901
void rule_set_criteria(117,2964
void rule_set_matchOp(118,3025
void rule_set_data(119,3084
void rule_set_countOp(120,3134
RuleStatus rule_set_matched(121,3193
RuleStatus rule_set_status(122,3252
unsigned long rule_get_list_id(123,3311
DataList *rule_get_data_list(rule_get_data_list124,3355
void rule_set_case_sensitive(125,3397
void rule_set_reverse_op(126,3451
void rule_set_listID(127,3501
gboolean rule_get_default(129,3558
gboolean rule_is_valid(130,3597
Rule *rule_copy(rule_copy131,3633
gboolean rule_has_count(133,3663
RuleStatus rule_match(135,3701
RuleStatus rule_attachment_match(136,3754
int rule_file_match(137,3813
Rule *rule_scan_string(rule_scan_string139,3873
void showRuleFormat(140,3918

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_debugging.c,432
		*rcsid rcsid13,212
static void use_rcsid(14,287
#define _GNU_SOURCE24,399
void debug_show_filter_data(38,821
void debug_show_filters(70,1394
void print_mime_message(93,1886
void print_mime_struct(137,2986
int write_attachment(232,4971
void debug_print_dh(280,5765
void debug_print_attach_parts(298,6413
void glist_test(344,7684
GList *debug_glist_create(debug_glist_create353,7864
void debug_glist_destroy(368,8072

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_debugging.h,336
void debug_show_filters(13,204
void debug_show_filter_data(14,242
void print_mime_message(17,343
void print_mime_struct(18,405
int write_attachment(19,474
void debug_print_dh(22,591
void debug_print_attach_parts(23,631
void glist_test(26,755
GList *debug_glist_create(debug_glist_create27,774
void debug_glist_destroy(28,803

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_common.c,1771
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
EmcConfig *config=config30,558
gboolean process_all_attachments=31,583
gboolean process_all_rules=32,624
Filter* current_filter=33,659
GHashTable *global_pref_hash global_pref_hash35,690
const char* realm_get_pref(37,728
void set_current_filter(72,1495
Filter *get_current_filter(get_current_filter77,1566
void set_process_all_attachments(82,1624
gboolean get_process_all_attachments(87,1710
void set_process_all_rules(92,1787
gboolean get_process_all_rules(97,1861
const char *get_domain(get_domain102,1971
const char *get_global_token_value(get_global_token_value115,2160
char *replace_tokens replace_tokens221,4390
cf_options *cf_options_new(cf_options_new306,5821
void cf_options_clear(314,5977
void cf_options_free(336,6523
void cf_options_init(377,7307
gboolean cf_log(890,19047
#define MEGA_SUMMARY_LEN 1045,22883
void do_one_line_cf_report(1047,22916
typedef struct attachment_report_t1153,25056
	Rule *rule;rule1155,25093
	char *attachment_name;attachment_name1156,25106
	gboolean matched;1157,25130
}attachment_report_s;attachment_report_s1158,25149
GArray *attachment_report_list=attachment_report_list1160,25172
void attachment_report_new(1162,25211
gboolean attachment_matched(1209,26746
void attachment_report_free(1231,27220
int hash_get_val(1257,27689
const char *hash_get_desc(hash_get_desc1271,27871
CF_HASH_NODE *hash_get_node(hash_get_node1284,28064
const char *to_string(to_string1298,28256
unsigned char* urlencode(1311,28417
char *str_replace(str_replace1345,28947
char *get_rand_word(get_rand_word1375,29410
gboolean dir_check_and_create 1393,29773
int copy_file(1412,30195
char* file_checksum(1446,31033

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_common.h,9118
#define CF_COMMON_H_2,21
#define	DEMIME_TEST	13,224
#define	PROCESS_ALL_RULES	14,254
#define	REORDER_RULES	15,288
#define	SIMULATE_ACTIONS	16,319
#define	SKIP_CUSTOMER_FILTERS	17,352
#define	SKIP_DOMAIN_FILTERS	18,389
#define	SKIP_USER_FILTERS	19,425
#define	QC_POLICY_TEST	20,459
#define	STAND_ALONE_TEST	21,491
#define CF_FATAL 24,539
#define CF_ERROR 25,566
#define CF_DEBUG 26,593
#define ACTION_DONE_INFO 27,620
#define CF_INFO 28,653
#define STATS_INFO 29,679
#define AGENT_ACTION_INFO 30,708
#define SQL_INFO 31,743
#define FILTER_INFO 32,770
#define RULESET_INFO 33,799
#define ACTIONSET_INFO 34,829
#define EXCEPTIONLIST_INFO 35,862
#define APPLYLIST_INFO 36,898
#define HEADER_DATA_INFO 37,931
#define MSG_DATA_INFO 38,965
#define MATCHED_INFO 39,997
#define NOT_MATCHED_INFO 40,1028
#define MIME_STRUCT_INFO	41,1062
#define DEMIME_OUTPUT_INFO	42,1095
#define DEMIME_DUMP_INFO	43,1130
#define CF_EXTINFO 44,1163
#define LOG_MATCHED_ITEMS 46,1194
typedef enum AgentName48,1225
	POLICYSMART,50,1250
	OUTPOLICYSMART,51,1264
	SPOOL,52,1281
	OUTSPOOL,53,1290
	PACTION,54,1301
	OUTPACTION,55,1311
	SMIME,56,1324
	OUTSMIME57,1332
} AgentName;58,1342
typedef enum CypherActionStatus60,1356
	DECRYPTION_OK,62,1390
	SIGNATURE_OK,63,1406
	CERTIFICATE_NOT_FOUND,64,1421
	INVALID_CERTIFICATE,65,1445
	INVALID_PRIVATE_KEY,66,1467
	INVALID_CERTIFICATE_PASSWORD,67,1489
	DECRYPTION_FAILED,68,1520
	INVALID_SIGNATURE,69,1540
	NOT_SIGNED,70,1560
	NOT_ENCRYPTED71,1573
} CypherActionStatus;72,1588
typedef enum ActionStatus74,1611
	ACTION_SKIPPED,76,1639
	SOFT_ACTION_FAILED,77,1656
	HARD_ACTION_FAILED,78,1677
	SOFT_ACTION_DONE,79,1698
	HARD_ACTION_DONE,80,1717
	ACTION_DELAYED,81,1736
	HARD_ACTION_DELAYED82,1753
} ActionStatus;83,1774
typedef enum RuleStatus85,1791
	RULE_NOT_CHECKED,87,1817
	RULE_MATCHED,88,1836
	RULE_NOT_MATCHED,89,1851
	RULE_SKIPPED90,1870
} RuleStatus;91,1884
typedef enum FilterStatus93,1899
	FILTER_NOT_CHECKED,95,1927
	APPLY_LIST_MATCHED,96,1948
	APPLY_LIST_NOT_MATCHED,97,1969
	EXCEPTION_LIST_MATCHED,98,1994
	EXCEPTION_LIST_NOT_MATCHED,99,2019
	FILTER_SKIPPED,100,2048
	FILTER_APPLIED,101,2065
	HARD_FILTER_APPLIED102,2082
} FilterStatus;103,2103
#define MAX_LOG_MSG_LEN 105,2120
#define MAX_ATTACHMENT_SIZE	108,2270
#define EMC_READ_BUFFER_SIZE	109,2320
typedef struct action_t111,2356
	unsigned long actionID;113,2382
	int type;116,2444
	char *actionStr;actionStr117,2455
	char *data;data118,2473
	ActionStatus status;119,2486
}Action;Action120,2508
typedef enum DATA_TYPE122,2518
	GENERAL_LIST,124,2543
	EMAIL,125,2558
	EMAIL_LIST,126,2566
	DOMAIN,127,2579
	DOMAIN_LIST,128,2588
	IP_ADDRESS,129,2602
	IP_LIST,130,2615
	STRING,131,2625
	TEXT,132,2634
	SCALAR,133,2641
	SIZE,134,2650
	DATE135,2657
} DATA_TYPE;136,2663
typedef struct AttachmentStatus_t138,2677
	struct demime_part *demimePart;demimePart140,2713
	RuleStatus status;141,2746
	int nMatches;142,2766
	char *summary;summary143,2781
} AttachmentStatus;144,2797
typedef struct rule_t146,2818
	unsigned long ruleID;148,2842
	char *criteriaStr;criteriaStr151,2900
	int criteria;152,2920
	char *matchOpStr;matchOpStr153,2935
	int matchOp;154,2954
	gboolean caseSensitive;155,2968
	gboolean reverseOp;156,2994
	unsigned long listID;157,3015
	char *data;data158,3038
	DATA_TYPE dataType;159,3052
	char *countOpStr;countOpStr160,3073
	int countOp;161,3092
	int count;162,3106
	int repeatPoints;163,3118
	float points;164,3181
	char *joinOp;joinOp165,3196
	RuleStatus status;166,3211
	int nMatches;167,3231
	GArray *attachmentStatusArray;attachmentStatusArray168,3246
}Rule;Rule173,3364
typedef struct RuleSet_t175,3372
	unsigned long ruleSetID;177,3399
	char *matchOp;matchOp178,3425
	float points;179,3441
	GArray *rules;rules180,3456
	gboolean matched;181,3472
	int totalPoints;182,3491
}RuleSet;RuleSet183,3509
typedef GArray ActionSet;185,3520
typedef struct filter_t187,3547
	unsigned long filterID;189,3573
	unsigned long policyID;190,3598
	unsigned long ruleSetID;192,3642
	unsigned long actionSetID;193,3668
	long applyListID;194,3696
	long exceptionListID;195,3715
	char *type;type196,3738
	gboolean activeFlag;197,3751
	char *owner;owner198,3773
	char *name;name199,3787
	RuleSet *ruleSet;ruleSet201,3823
	ActionSet *actionSet;actionSet202,3842
	FilterStatus status;203,3865
}Filter;Filter204,3887
typedef struct CF_HASH_NODE_t206,3897
	char *key;key208,3929
	int val;209,3941
	char *desc;desc210,3951
}CF_HASH_NODE, *CF_HASH;CF_HASH211,3964
int hash_get_val(213,3990
const char *hash_get_desc(hash_get_desc214,4039
CF_HASH_NODE *hash_get_node(hash_get_node215,4097
typedef struct cf_options_t217,4158
	unsigned int reportmode;219,4188
	unsigned int runOptions;220,4239
	int outboundmode;221,4291
	const char *user;user222,4310
	char *sender;sender223,4329
	char *from_address;from_address224,4344
	char *recipient;recipient225,4365
	char *msgid;msgid226,4383
	char *data;data227,4397
	char *short_msgid;short_msgid228,4410
	char *domain;domain229,4430
	char *filename;filename230,4445
	char *modified_filename;modified_filename231,4462
	char *spooldir;spooldir232,4488
	char *configfile;configfile233,4505
	char *smime_action;smime_action234,4524
	long int inode;235,4545
	Filter *filter;filter236,4562
	AgentName agent_name;237,4579
}cf_options;cf_options238,4602
#define SPAM_REP_SEP 240,4616
#define BOX_FA_LEN 241,4641
#define RULES_SUMMARY_HEADER_LEN 242,4664
#define IP_LEN 243,4701
#define SUBJ_LEN 244,4719
#define SUBJ_LEN_ENC 245,4739
#define BODY_LEN 246,4773
#define BODY_LEN_ENC 247,4834
typedef struct quarantine_report_t248,4916
	char* filename;250,4953
	const char* user;251,4970
	const char* sender;252,4989
	const char* recip;253,5010
	unsigned long filter_id;254,5030
	const char* policy_owner;255,5056
	unsigned long policy_id;256,5083
	const char* policy_name;257,5109
	const char* ip;258,5135
	const char* subject;259,5152
	const char* body;260,5174
	const char* access_type;261,5193
	unsigned long long filesize;262,5219
	int spool_days;263,5249
	const char *uid;uid264,5266
	char server[server265,5284
	time_t time;266,5303
	const char *table;table267,5317
	gboolean outbound;268,5365
}quarantine_report;quarantine_report269,5385
typedef struct DomainKeys_t271,5406
	int keyID;273,5436
	char *name;name274,5448
	char *owner;owner275,5461
	char* type;276,5475
	char* selector;277,5505
	char* privateKey;278,5548
	char* publicKey;279,5567
	char* password;280,5585
}DomainKeys;DomainKeys281,5602
typedef struct SMimeKeys_t283,5616
	int keyID;285,5645
	char* name;286,5657
	char* owner;287,5670
	char* privateKey;288,5684
	char* certificate;289,5703
	char* password;290,5723
	char* status;291,5740
    gboolean deleted;292,5755
}SMimeKeys;SMimeKeys293,5777
typedef struct AkaDomain_t295,5790
	char *aka_default;aka_default297,5819
	char* primary_service;298,5839
	char* preferred_mailstore;299,5863
	char* preferred_maildir;300,5891
	unsigned long cus_num;301,5917
	char* aka_nomb_action;302,5941
	char* aka_nomb_server;303,5965
	char* aka_nomb_address;304,5989
	char* aka_nomb_server_type;305,6014
}AkaDomain;AkaDomain306,6043
typedef struct Mailbox_t308,6056
	unsigned long long rid;310,6083
	char* aka_domain;311,6108
	char* box_id;312,6127
	char* box_fulladdress;313,6142
	char* box_pass;314,6166
	char* password;315,6183
	unsigned long box_num;316,6200
	int mc_num;317,6224
	int pg_num;318,6237
	int wp_num;319,6250
	char* box_mailstore;320,6263
	char* box_maildir;321,6285
	char* primary_service;322,6305
	char* created_by;323,6329
	char* modified_by;324,6348
	char* realm;325,6368
}Mailbox;Mailbox326,6382
cf_options *cf_options_new(cf_options_new328,6393
void cf_options_init(329,6423
void cf_options_clear(330,6490
void cf_options_free(331,6534
void attachment_report_new(333,6578
gboolean attachment_matched(335,6697
void attachment_report_free(336,6755
char *escape_percents(escape_percents338,6787
gboolean cf_log(339,6830
void do_one_line_cf_report(340,6902
void set_process_all_attachments(342,6954
gboolean get_process_all_attachments(343,7003
void set_process_all_rules(345,7044
gboolean get_process_all_rules(346,7087
const char *get_domain(get_domain348,7122
void set_current_filter(350,7173
Filter *get_current_filter(get_current_filter351,7214
const char* realm_get_pref(353,7245
const char *to_string(to_string355,7315
unsigned char *urlencode(urlencode356,7355
char *str_replace(str_replace358,7397
char *get_rand_word(get_rand_word360,7470
gboolean dir_check_and_create 361,7503
char *replace_tokens replace_tokens363,7557
const char *get_global_token_value(get_global_token_value364,7615
char* agent_data_get_value(365,7670
int copy_file(367,7734
char* file_checksum(368,7790
extern cf_options *cf_args;cf_args370,7863
extern EmcConfig *config;config371,7891
extern int debugmode;372,7917
extern char policyIDs[policyIDs373,7939

/emcsvn/emc/emcmailer/trunk/contentfilter/contentfilter.c,1792
		*rcsid rcsid11,148
static void use_rcsid(12,224
#define _GNU_SOURCE22,336
#define	MAX_ARCHIVES	45,1043
EmcQImpl *impl=impl46,1067
const unsigned char *archiveHints[archiveHints48,1090
int nArchiveHints 50,1148
int debugmode 52,1172
char *msgid=msgid55,1342
int inbound 61,1643
int verify_signature 64,1782
int decrypt_message 65,1856
int apply_all_policies 66,1935
int apply_realm_policies(67,2025
int set_archive_hint(69,2095
cf_options *cf_args=cf_args71,2120
list_db_s DB_EXCEPTION_LIST 73,2148
list_db_s DB_APPLY_LIST 77,2271
GArray* g_matches 81,2386
int main(88,2459
int apply_all_policies 489,13422
int apply_realm_policies(507,13834
char* agent_data_get_value(554,14842
int verify_signature 605,15496
int decrypt_message 675,17302
void cf_exit(786,20604
FilterStatus filterlist_apply(818,21080
void filterlist_free(843,21588
int filterlist_count(863,21956
FilterList *filterlist_new(filterlist_new868,22036
FilterList * filterlist_append(875,22122
void filter_add_archive_hint(881,22267
int set_archive_hint(914,23039
FilterStatus filter_apply(941,23596
Filter * filter_new(1173,29972
void filter_clear(1188,30194
void filter_set_type(1207,30569
void filter_free(1222,30925
RuleSet *filter_get_ruleset(filter_get_ruleset1240,31198
ActionSet *filter_get_actionset(filter_get_actionset1251,31538
unsigned long filter_get_id(1260,31738
const char* filter_get_name(1265,31813
const char* filter_get_type(1270,31884
const char* filter_get_owner(1275,31955
unsigned long filter_get_policy_id(1280,32028
FilterStatus filter_get_status(1285,32110
FilterStatus filter_set_status(1290,32186
const char *filter_get_short_desc(filter_get_short_desc1296,32301
gboolean is_customer_filter 1311,32594
gboolean is_domain_filter 1320,32736

/emcsvn/emc/emcmailer/trunk/contentfilter/contentfilter.h,1024
#define CONTENT_FILTER_H_8,111
#define FILTER_TYPE_INBOUND	15,225
#define FILTER_TYPE_OUTBOUND	16,264
#define FILTER_TYPE_BOTH	17,304
typedef GList FilterList;19,338
Filter* filter_new(21,365
void filter_clear(22,387
void filter_free(23,422
void filter_set_type(24,451
FilterStatus filter_set_status(25,507
FilterStatus filter_get_status(26,576
gboolean is_customer_filter 28,625
gboolean is_domain_filter 29,666
unsigned long filter_get_id(31,706
unsigned long filter_get_policy_id(32,751
const char* filter_get_name(33,803
const char* filter_get_type(34,848
const char* filter_get_owner(35,893
const char *filter_get_short_desc(filter_get_short_desc36,939
int filterlist_count(38,986
FilterList* filterlist_new(39,1032
FilterList* filterlist_append(40,1062
FilterStatus filterlist_apply(41,1133
void filterlist_free(42,1188
FilterStatus filter_apply(44,1235
RuleSet* filter_get_ruleset(46,1279
ActionSet* filter_get_actionset(47,1324
void filter_add_archive_hint(49,1374
void cf_exit(51,1421

/emcsvn/emc/emcmailer/trunk/exdeliver.c,774
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define _GNU_SOURCE8,189
extern int debugmode;29,583
extern int pretendmode;30,605
extern const char *msgid;msgid31,629
extern exdeliver_options exdeliver_opts;33,656
#define BUFFER_SIZE 35,698
#define MAX_BATCH 36,727
#define EXIM_QUEUE_MODE_THRESHOLD 37,748
EmcHash * ex_recipients;39,787
void do_exfilenames(43,862
void do_exhosts(44,920
int do_retail(45,974
int do_ex_recipient(46,1047
int do_batch(47,1127
int rcomp(48,1199
long queue_threshold 51,1243
int queue_override 52,1293
long total_recipients 53,1317
int do_exdeliver(55,1345
void do_exfilenames(214,4901
void do_exhosts(222,5098
int do_batch(341,7501
int do_retail(580,12986
int do_ex_recipient(594,13218
int rcomp(823,18908

/emcsvn/emc/emcmailer/trunk/exdeliver.h,226
#define EX_DELIVER_H2,21
typedef struct exdeliver_options_t 8,109
	EmcQImpl * impl;10,148
	EmcConfig * config;11,166
	int batch_num;12,187
	const char * sender;13,203
} exdeliver_options;15,226
int do_exdeliver(17,248

/emcsvn/emc/emcmailer/trunk/smtp.c,334
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
const char *readlinefp_cb(readlinefp_cb21,405
void print_recipient_status(22,465
int smtpsendsingle(24,555
void print_recipient_status 118,3046
#define BUFLEN	127,3279
const char *readlinefp_cb readlinefp_cb129,3300
void monitor_cb 157,3744

/emcsvn/emc/emcmailer/trunk/smtp.h,46
#define _SMTP_H2,16
int smtpsendsingle(4,33

/emcsvn/emc/emcmailer/trunk/utils.c,227
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define FALSE 18,362
#define TRUE 19,378
char * safe_strdup(22,401
void * safe_malloc(30,589
int safe_asprintf(42,838
void chomp(57,1142

/emcsvn/emc/emcmailer/trunk/utils.h,118
#define _EMC_UTILS2,19
int safe_asprintf(6,60
char * safe_strdup(7,119
void * safe_malloc(8,159
void chomp(9,206

/emcsvn/emc/emcmailer/trunk/qcleaner.c,279
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
int debugmode 27,516
int ownmode 28,535
char * msgid 29,552
char * configfile 30,572
EmcConfig * config 31,598
EmcQImpl * impl 32,625
void init(34,650
int main(36,664
void init(124,2423

/emcsvn/emc/emcmailer/trunk/qinject.c,871
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char *recipient recipient24,476
EmcArray *recips recips25,500
char *sender sender26,525
char *msgid msgid27,546
char *data data28,566
int debugmode 29,585
int allow_ext 30,604
int lmtp 31,623
int outboundmode=33,638
FILE *tmp_msg tmp_msg35,660
char *tmp_dir tmp_dir36,682
char *tmp_file tmp_file37,704
long host_id 39,728
const char *configfile configfile41,748
EmcConfig *config config42,779
#define CINLINE 44,806
#define BUFFER_SIZE 45,829
CINLINE int em_readline(47,860
CINLINE int _em_read(48,915
EmFd *em_new_fd(em_new_fd49,958
void do_args(51,981
int do_inject(136,2671
void transfer_recips(216,4478
void do_lmtp(223,4619
int main(429,9858
EmFd *em_new_fd(em_new_fd556,12316
CINLINE int _em_read(573,12547
CINLINE int em_readline(598,12978

/emcsvn/emc/emcmailer/trunk/logger.c,236
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
extern const char *msgid;msgid16,327
extern int debugmode;17,353
void virus_logger(19,376
void mailer_log_simple(76,1861
void mailer_log(103,2533

/emcsvn/emc/emcmailer/trunk/logger.h,556
#define LOGGER_H4,38
#define REPORT_ERROR 6,56
#define REPORT_DEBUG 7,79
#define REPORT_AGENT 8,102
#define REPORT_STATS 9,125
#define REPORT_INFO 10,148
#define DEBUG_SYSLOG 13,173
#define DEBUG_STDOUT 14,202
#define DEBUG_RULE 15,231
#define DEBUG_FINGERPRINT 16,260
#define DEBUG_CONFIG 17,289
#define DEBUG_WARN 18,319
#define DEBUG_FAIL 19,349
#define DEBUG_INFO 20,379
#define DEBUG_RESULT 21,410
#define DEBUG_PARSE_DOM 22,441
#define DEBUG_MAX 23,472
void spam_logger(25,504
void mailer_log(26,557
void mailer_log_simple(27,617

/emcsvn/emc/emcmailer/trunk/parse.c,138
static char *rcsid rcsid1,0
static void use_rcsid(2,78
void print_mime_struct(15,315
int main(17,370
void print_mime_struct(50,1027

/emcsvn/emc/emcmailer/trunk/ldeliver_main.c,324
static char *rcsid rcsid1,0
static void use_rcsid(2,85
#define BUFFER_SIZE 20,399
char * msgid 23,453
int debugmode 24,474
int pretendmode 25,493
const char * sender;27,515
long batch_num 28,536
const char * queue_type 29,556
const char * configfile 30,588
ldeliver_options ldeliver_opts;32,621
int main(34,654

/emcsvn/emc/emcmailer/trunk/courier_deliver/private.h,190
#define SENDMAIL 1,0
#define BMC_DELIVER_EXE 2,61
#define CORRUPT_MAILBOX_TO_ADDRESS 3,120
#define CORRUPT_MAILBOX_FROM_ADDRESS 4,185
void do_deliver(7,301
void corrupt_mailbox 14,650

/emcsvn/emc/emcmailer/trunk/courier_deliver/dagent-dovecot.c,740
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,194
#define MYBUFSIZE 21,428
#define MAX_ADDRESS_LEN 22,451
void usage(24,480
struct delivery *get_delivery_info(get_delivery_info25,498
char *decode_address(decode_address26,561
int make_maildirfolder(27,599
struct delivery 29,645
	char mailbox[mailbox30,663
	char address[address31,690
	char maildir[maildir32,724
long dodeliver(35,755
char *get_delivery_maildir(get_delivery_maildir36,810
char *get_quota(get_quota37,860
char *get_quota(get_quota39,901
int make_maildirfolder(113,3019
char *decode_address(decode_address167,4426
struct delivery *get_delivery_info(get_delivery_info204,5050
void usage(238,5793
int main 244,5885

/emcsvn/emc/emcmailer/trunk/courier_deliver/common.h,2637
#define EMC_MAILER_COMMIN2,26
#define DEBUG_SYSLOG 31,553
#define DEBUG_INFO 32,578
#define DEBUG_INFO2 33,603
#define DEBUG_DB_QUERY 34,628
#define DEBUG_DB_OUT 35,653
#define DEBUG_STDOUT 36,679
#define DEBUG_FAIL 37,705
#define DEBUG_WARN 38,731
#define DEBUG_CONFIG 39,758
#define DEBUG_MAX 40,785
struct conf 42,813
	char *emc_bin_dir;emc_bin_dir44,846
	char *qmail_bin_dir;qmail_bin_dir45,866
	char *aka_tmp_dir;aka_tmp_dir46,888
	char *qmail_queue;qmail_queue49,925
	char *sendmail;sendmail50,945
	char *mf_script;mf_script51,962
	char *quota_check;quota_check52,980
	char *db_connect_timeout;db_connect_timeout55,1018
	char *aka_db_read_server;aka_db_read_server56,1045
	char *aka_db_read_user;aka_db_read_user57,1072
	char *aka_db_read_pass;aka_db_read_pass58,1097
	char *aka_db_read_name;aka_db_read_name59,1122
	char *aka_db_write_server;aka_db_write_server60,1147
	char *aka_db_write_user;aka_db_write_user61,1175
	char *aka_db_write_pass;aka_db_write_pass62,1201
	char *aka_db_write_name;aka_db_write_name63,1227
	char *bounce_email;bounce_email66,1274
	char *abuse_email;abuse_email67,1295
	char *abuse_phone;abuse_phone68,1315
	char *local_delivery;local_delivery71,1359
	char *delivery_domain;delivery_domain72,1382
struct vars75,1410
	char *configfile;configfile77,1424
	int  debugmode;78,1443
	long forward_count;79,1460
	char *forward_addresses[forward_addresses80,1481
	long pop_count;81,1524
  char *pop_addresses[pop_addresses82,1541
  char *pop_mailboxes[pop_mailboxes83,1577
  long list_count;84,1613
  char *list_addresses[list_addresses85,1632
  long auto_count;86,1670
  char *auto_addresses[auto_addresses87,1689
  long listserve_count;88,1727
  char *listserve_addresses[listserve_addresses89,1751
  char *sender;sender90,1785
	char *messageid;messageid91,1801
  long bounce_count;92,1819
  char *bounce_addresses[bounce_addresses93,1840
  char *bounce_reasons[bounce_reasons94,1871
  MYSQL sock;95,1900
  long message_size;96,1914
  char *arg1;arg197,1935
  char *arg2;arg298,1949
  char *arg3;arg399,1963
  char *arg4;arg4100,1977
  char *arg5;arg5101,1991
  char *arg6;arg6102,2005
	struct conf config;103,2019
int read_env(113,2345
void aka_logger(114,2397
void aka_exit 115,2497
void sortem 116,2561
void add_bounce 118,2693
void add_pop 119,2775
void add_forward 120,2840
void memerror2 122,2921
void mserror2 124,2955
void put_date 126,3060
void qmail_q 131,3403
void exim_q 132,3485
void exim_qq 133,3566
void do_bounce 138,3934
void do_forward 142,4232
int is_special_sender(146,4527

/emcsvn/emc/emcmailer/trunk/courier_deliver/defaults.h,143
#define CONFIG_H2,17
#define MAX_FORWARD 4,35
#define MAX_POP 5,61
#define MAX_LIST 6,82
#define MAX_AUTO 7,103
#define MAX_HEADER 8,125

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/dbobj.h,735
#define	dbobj_h2,16
static const char dbobj_h_rcsid[dbobj_h_rcsid4,33
#define	DbObj	13,257
#define	dbobj	15,280
#define	dbobj_init	16,302
#define	dbobj_open	17,334
#define	dbobj_close	18,366
#define	dbobj_isopen	19,400
#define	dbobj_fetch	20,436
#define	dbobj_exists	21,470
#define	dbobj_delete	22,506
#define	dbobj_store	23,542
#define	dbobj_firstkey	24,576
#define	dbobj_nextkey	25,616
#define	DbObj	30,695
#define	dbobj	32,717
#define	dbobj_init	33,738
#define	dbobj_open	34,769
#define	dbobj_close	35,800
#define	dbobj_isopen	36,833
#define	dbobj_fetch	37,868
#define	dbobj_exists	38,901
#define	dbobj_delete	39,936
#define	dbobj_store	40,971
#define	dbobj_firstkey	41,1004
#define	dbobj_nextkey	42,1043

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmake.c,200
static void usage(31,533
extern FILE *maildir_shared_fopen(maildir_shared_fopen37,621
extern void maildir_shared_fparse(38,684
static void add(40,746
static void del(132,2169
int main(214,3349

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmisc.h,972
#define	maildirmisc_h2,22
static const char maildirmisc_h_rcsid[maildirmisc_h_rcsid17,225
#define	INBOX	27,405
#define	DRAFTS	28,427
#define	SENT	29,451
#define	TRASH	30,471
#define	SHAREDSUBDIR	32,494
char *maildir_folderdir(maildir_folderdir34,533
char *maildir_filename(maildir_filename41,795
int maildir_safeopen(50,1121
int maildir_semisafeopen(66,1744
int maildir_mkdir(76,2022
void maildir_purgetmp(81,2153
void maildir_purge(84,2241
void maildir_getnew(87,2329
int maildir_deletefolder(91,2448
int maildir_mddelete(95,2559
void maildir_list_sharable(97,2634
int maildir_shared_subscribe(102,2821
void maildir_list_shared(106,2947
int maildir_shared_unsubscribe(111,3138
char *maildir_shareddir(maildir_shareddir115,3270
void maildir_shared_sync(122,3471
int maildir_sharedisro(125,3559
int maildir_unlinksharedmsg(128,3657
char *maildir_getlink(maildir_getlink133,3807
int maildir_hasflag(137,3911
#define	MAILDIR_DELETED(139,3961

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirshared.c,1231
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid44,769
#define	YES_WE_CAN_DO_SHARED	52,956
static void list_sharable(62,1056
extern FILE *maildir_shared_fopen(maildir_shared_fopen66,1154
extern void maildir_shared_fparse(67,1217
void maildir_list_sharable(69,1279
static void list_sharable(99,1789
int maildir_shared_subscribe(137,2538
void maildir_list_shared(266,4739
int maildir_shared_unsubscribe(312,5672
char *maildir_shareddir(maildir_shareddir330,5975
static void do_maildir_shared_sync(370,6742
void maildir_shared_sync(372,6807
static int create_db(396,7197
static int build_db(451,8082
static int update_link(510,9050
static int update_cur(523,9379
static int update_link(633,11527
static int newmsgs(704,12663
static void do_maildir_shared_sync(779,13908
int maildir_sharedisro(860,15575
int maildir_unlinksharedmsg(880,15856
void maildir_list_sharable(930,16734
int maildir_shared_subscribe(936,16838
void maildir_list_shared(942,16942
int maildir_shared_unsubscribe(948,17044
char *maildir_shareddir(maildir_shareddir954,17150
void maildir_shared_sync(960,17252
int maildir_sharedisro(964,17303
int maildir_unlinksharedmsg(969,17366

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirpath.c,88
static const char rcsid[rcsid24,371
char *maildir_folderdir(maildir_folderdir26,458

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildiropen.c,148
static const char rcsid[rcsid25,390
char *maildir_getlink(maildir_getlink27,477
int maildir_semisafeopen(64,910
int maildir_safeopen(105,1421

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirquota.c,886
#define NAMLEN(13,207
#define dirent 15,261
#define NAMLEN(16,283
static const char rcsid[rcsid49,855
int maildirsize_read(53,979
static int statcurnew(123,2031
static int statsubdir(124,2078
#define	MDQUOTA_SIZE	126,2140
#define	MDQUOTA_BLOCKS	127,2209
#define	MDQUOTA_COUNT	129,2311
static int qcalc(131,2380
static int	doaddquota(171,3058
static int docheckquota(173,3132
int maildir_checkquota(180,3276
int maildir_readquota(192,3507
static int docheckquota(203,3716
int	maildir_addquota(367,6915
static int doaddquota(375,7190
		char buf[buf380,7354
		struct stat stat_buf;381,7371
char *makenewmaildirsizename(makenewmaildirsizename476,9339
static int statcurnew(509,10009
static int statsubdir(525,10454
static int docount(542,10849
int countcurnew(544,10915
int countsubdir(562,11254
static int docount(580,11687
int maildir_updatequota(649,12847

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirquota.h,328
#define	maildirquota_h2,23
static const char maildirquota_h_rcsid[maildirquota_h_rcsid20,277
int maildir_checkquota(22,383
int maildir_addquota(28,677
int maildir_readquota(34,884
int maildir_parsequota(37,982
int countsubdir(41,1140
char *makenewmaildirsizename(makenewmaildirsizename44,1223
int countcurnew(45,1274

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter2.c,367
static const char rcsid[rcsid25,418
static const char *mf_config(mf_config27,511
static char *mf_config_maildirfilter(mf_config_maildirfilter59,1129
int mf_importmaildirfilter(79,1451
int mf_loadmaildirfilter(181,3140
int mf_savemaildirfilter(199,3500
int mf_exportmaildirfilter(235,4211
int mf_hasmaildirfilter(257,4645
void mf_endmaildirfilter(268,4853

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetquota.c,29
int	maildir_getquota(21,350

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetquota.h,163
#define	maildirgetquota_h2,26
static const char maildirgetquota_h_rcsid[maildirgetquota_h_rcsid20,283
#define	QUOTABUFSIZE	22,392
int maildir_getquota(24,418

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirflags.c,65
static const char rcsid[rcsid9,137
int maildir_hasflag(11,225

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmkdir.c,64
static const char rcsid[rcsid21,315
int maildir_mkdir(23,403

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirparsequota.c,69
static const char rcsid[rcsid13,212
int maildir_parsequota(15,308

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter.c,498
static const char rcsid[rcsid29,524
struct maildirfilterrule *mf_appendrule(mf_appendrule31,616
int mf_ruleupdate(63,1251
void mf_ruledel(322,6315
void mf_ruleup(338,6715
void mf_ruledown(355,7005
static void print_pattern(372,7297
int mf_saverules(390,7608
int mf_loadrules(595,12160
#define	SET(632,12791
int mf_autoresp_info_init(740,14521
int mf_autoresp_info_init_str(752,14740
void mf_autoresp_info_free(779,15209
char *mf_autoresp_info_asstr(mf_autoresp_info_asstr788,15319

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter.h,2034
#define	maildirfilter_h2,24
static const char maildirfilter_h_rcsid[maildirfilter_h_rcsid9,142
enum maildirfiltertype 17,308
	startswith,18,333
	endswith,19,346
	contains,20,357
	hasrecipient,21,368
	mimemultipart,22,383
	textplain,23,399
	islargerthan,24,411
struct maildirfilterrule 27,470
	struct maildirfilterrule *next,next28,497
	struct maildirfilterrule *next, *prev;prev28,497
	char *rulename;rulename29,537
	enum maildirfiltertype type;30,554
	int flags;31,584
#define	MFR_DOESNOT	33,597
#define	MFR_BODY	34,661
#define	MFR_CONTINUE	37,743
#define MFR_PLAINSTRING	38,810
	char *fieldname;fieldname40,882
	char *fieldvalue;fieldvalue41,900
	char *tofolder;tofolder42,919
	char *fromhdr;fromhdr43,936
struct maildirfilter 46,958
	struct maildirfilterrule *first,first47,981
	struct maildirfilterrule *first, *last;last47,981
struct maildirfilterrule *mf_appendrule(mf_appendrule57,1349
int mf_setautoreplyfrom(67,1586
void mf_ruleup(71,1703
void mf_ruledown(72,1771
void mf_ruledel(76,1869
int mf_ruleupdate(80,1970
#define	mf_freerules(90,2180
#define	MF_ERR_BADRULENAME	101,2379
#define	MF_ERR_BADRULETYPE	102,2408
#define	MF_ERR_BADRULEHEADER	103,2437
#define	MF_ERR_BADRULEVALUE	104,2468
#define	MF_ERR_BADRULEFOLDER	105,2498
#define MF_ERR_BADFROMHDR	106,2529
#define MF_ERR_INTERNAL	107,2557
int mf_saverules(111,2630
int mf_loadrules(117,2837
#define	MF_LOADOK	119,2894
#define	MF_LOADNOTFOUND	120,2914
#define	MF_LOADFOREIGN	121,2940
#define	MF_LOADERROR	122,2965
int mf_importmaildirfilter(128,3228
int mf_loadmaildirfilter(129,3299
int mf_savemaildirfilter(130,3363
int mf_exportmaildirfilter(131,3441
int mf_hasmaildirfilter(133,3521
void mf_endmaildirfilter(135,3595
struct mf_autoresp_info 141,3735
	char *name;name142,3761
	int dsnflag;143,3774
	unsigned days;144,3788
int mf_autoresp_info_init_str(147,3809
int mf_autoresp_info_init(148,3881
void mf_autoresp_info_free(149,3949
char *mf_autoresp_info_asstr(mf_autoresp_info_asstr150,4004

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirshared2.c,129
static const char rcsid[rcsid12,192
FILE *maildir_shared_fopen(maildir_shared_fopen14,282
void maildir_shared_fparse(32,571

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirrequota.c,84
static const char rcsid[rcsid14,228
char *maildir_requota(maildir_requota16,321

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirrequota.h,148
#define	maildirrequota_h2,25
static const char maildirrequota_h_rcsid[maildirrequota_h_rcsid17,238
char *maildir_requota(maildir_requota21,415

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilename.c,156
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid41,694
char *maildir_filename(maildir_filename52,1063

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetnew.c,212
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid39,656
static void do_maildir_getnew(41,745
void maildir_getnew(43,805
static void do_maildir_getnew(65,1233

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/autoresponse.c,862
#define NAMLEN(26,448
#define dirent 28,502
#define NAMLEN(29,524
static const char rcsid[rcsid41,711
struct autoresponse_quota 43,802
	unsigned files;44,830
	unsigned long bytes;45,847
struct temp_autoresponse_list 48,874
	struct temp_autoresponse_list *next;next49,906
	char *filename;filename50,944
char **autoresponse_list(autoresponse_list53,966
void autoresponse_list_free(145,2201
static char *afilename(afilename154,2304
int autoresponse_validate(182,3043
static void deletefiles(194,3280
void autoresponse_delete(229,3828
static void read_quota(245,4035
static int get_quota(289,4675
static void add_quota(309,5032
static int calc_quota(319,5240
static int check_quota(361,5955
FILE *autoresponse_create(autoresponse_create371,6235
int autoresponse_create_finish(395,6608
FILE *autoresponse_open(autoresponse_open439,7291

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/autoresponse.h,465
#define	maildir_autoresponse_h2,31
static const char maildir_autoresponse_h_rcsid[maildir_autoresponse_h_rcsid9,156
extern char **autoresponse_list(autoresponse_list20,411
extern void autoresponse_list_free(21,458
extern int autoresponse_validate(25,543
extern void autoresponse_delete(29,651
extern FILE *autoresponse_create(autoresponse_create30,712
extern int autoresponse_create_finish(31,774
extern FILE *autoresponse_open(autoresponse_open33,850

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirdelfolder.c,162
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static int delsubdir(41,694
int maildir_mddelete(70,1158
int maildir_deletefolder(94,1538

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/testmaildirfilter.c,55
static const char rcsid[rcsid12,215
int main(14,308

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreateh.c,78
static const char rcsid[rcsid25,414
int maildir_try_create_hostname(27,507

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircache.c,926
#define NAMLEN(31,537
#define dirent 33,591
#define NAMLEN(34,613
#define	syslog(48,843
static const char rcsid[rcsid51,873
static const char * const *authvars;authvars53,963
static char **authvals;authvals54,1000
static time_t expinterval;55,1024
static time_t lastclean=56,1051
static const char *cachedir;cachedir57,1078
static const char *cacheowner;cacheowner58,1107
int maildir_cache_init(60,1139
static char *create_cache_name(create_cache_name81,1454
static pid_t childproc=151,2808
static int childpipe;152,2836
void maildir_cache_start(154,2859
static int savebuf(289,5275
void maildir_cache_save(302,5424
void maildir_cache_cancel(340,6268
int maildir_cache_search(350,6415
struct purge_list 458,8064
	struct purge_list *next;next459,8084
	char *n;n460,8110
static void add_purge_list(463,8125
static void rmrf(485,8397
void maildir_cache_purge(487,8430
static void rmrf(580,9665

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircache.h,332
#define	logincache_h80,2975
static const char rfc2047_h_rcsid[rfc2047_h_rcsid86,3056
extern int maildir_cache_init(88,3154
extern void maildir_cache_start(90,3252
extern void maildir_cache_save(91,3291
extern void maildir_cache_cancel(93,3383
extern int maildir_cache_search(95,3424
extern void maildir_cache_purge(99,3541

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/deliverquota.c,360
#define	BUFSIZE	31,572
#define	EX_OSERR	35,618
#define	EX_IOERR	39,663
#define EX_TEMPFAIL	43,711
#define	EX_NOPERM	47,760
static const char rcsid[rcsid50,789
static long deliver(52,879
static void do_deliver_warning(55,1014
static void deliver_warning(57,1075
static void do_deliver_warning(87,1639
static long deliver(205,3722
int main(310,5484

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreate.c,100
extern int gethostname(20,308
static const char rcsid[rcsid23,362
int maildir_try_create(25,454

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreate.h,170
#define	maildircreate_h2,24
static const char maildircreate_h_rcsid[maildircreate_h_rcsid17,236
int maildir_try_create(19,341
int maildir_try_create_hostname(28,711

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirpurgetmp.c,156
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static void dopurge(38,637
void maildir_purgetmp(65,1146
void maildir_purge(75,1334

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfiltertypelist.h,219
#define	maildirfiltertypelist_h2,32
static const char maildirfiltertypelist_h_rcsid[maildirfiltertypelist_h_rcsid9,163
	enum maildirfiltertype type;14,321
	const char *name;name15,351
	} typelist[typelist16,370

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj2.c,229
static char *fetchkeyval(fetchkeyval8,123
extern char *gdbm_dofetch(gdbm_dofetch9,199
char	*gdbmobj_firstkey(gdbmobj_firstkey11,277
static char *fetchkeyval(fetchkeyval31,641
char	*gdbmobj_nextkey(gdbmobj_nextkey40,890

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj3.c,26
int	gdbmobj_delete(8,123

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj.c,300
static const char rcsid[rcsid19,277
void gdbmobj_init(21,360
void gdbmobj_close(28,461
int gdbmobj_open(42,641
int gdbmobj_store(82,1297
int	gdbmobj_exists(101,1677
char *gdbm_dofetch(gdbm_dofetch114,1904
char	*gdbmobj_fetch(gdbmobj_fetch116,1975
char *gdbm_dofetch(gdbm_dofetch163,2757

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj.h,1123
#define	gdbmobj_h2,18
static const char gdbmobj_h_rcsid[gdbmobj_h_rcsid9,138
struct gdbmobj 19,311
	GDBM_FILE	dbf;20,328
	int		has_dbf;21,344
	char	*prev_key;prev_key22,359
	size_t	prev_key_len;23,376
void gdbmobj_init(26,404
int gdbmobj_open(28,442
void gdbmobj_close(29,506
#define	gdbmobj_isopen(31,545
char	*gdbmobj_fetch(gdbmobj_fetch33,589
int	gdbmobj_exists(34,674
int	gdbmobj_delete(35,734
int	gdbmobj_store(36,794
char	*gdbmobj_firstkey(gdbmobj_firstkey39,892
char	*gdbmobj_nextkey(gdbmobj_nextkey40,963
class GdbmObj 45,1058
	struct gdbmobj obj;GdbmObj::obj47,1075
	GdbmObj(GdbmObj::GdbmObj49,1097
	GdbmObj	&operator=(GdbmObj::operator=50,1139
	GdbmObj(GdbmObj::GdbmObj53,1200
	~GdbmObj(GdbmObj::~GdbmObj54,1235
	int	Open(GdbmObj::Open55,1272
	int	IsOpen(GdbmObj::IsOpen60,1380
	void	Close(GdbmObj::Close61,1429
	char	*Fetch(GdbmObj::Fetch62,1468
	int	Exists(GdbmObj::Exists69,1628
	int	Delete(GdbmObj::Delete74,1728
	int	Store(GdbmObj::Store79,1828
	char	*FetchFirstKeyVal(GdbmObj::FetchFirstKeyVal87,2013
	char	*FetchNextKeyVal(GdbmObj::FetchNextKeyVal91,2149

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strgidt.c,72
static const char rcsid[rcsid12,186
char *str_gid_t(str_gid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strinot.c,72
static const char rcsid[rcsid12,186
char *str_ino_t(str_ino_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strofft.c,72
static const char rcsid[rcsid12,186
char *str_off_t(str_off_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhinot.c,114
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,270
char *strh_ino_t(strh_ino_t16,320

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strpidt.c,72
static const char rcsid[rcsid12,186
char *str_pid_t(str_pid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strsize.c,100
static const char rcsid[rcsid12,179
static void cat_n(14,262
char *str_sizekb(str_sizekb28,517

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/struidt.c,72
static const char rcsid[rcsid12,186
char *str_uid_t(str_uid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhpidt.c,114
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,270
char *strh_pid_t(strh_pid_t16,320

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strsizet.c,74
static const char rcsid[rcsid12,186
char *str_size_t(str_size_t14,270

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhtimet.c,116
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,271
char *strh_time_t(strh_time_t16,321

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/numlib.h,493
#define	numlib_h2,17
static const char numlib_h_rcsid[numlib_h_rcsid13,175
#define	NUMBUFSIZE	22,354
char	*str_time_t(str_time_t26,424
char	*str_off_t(str_off_t27,458
char	*str_pid_t(str_pid_t28,490
char	*str_ino_t(str_ino_t29,522
char	*str_uid_t(str_uid_t30,554
char	*str_gid_t(str_gid_t31,586
char	*str_size_t(str_size_t32,618
char	*str_sizekb(str_sizekb34,653
char	*strh_time_t(strh_time_t38,758
char	*strh_pid_t(strh_pid_t39,793
char	*strh_ino_t(strh_ino_t40,826

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strtimet.c,74
static const char rcsid[rcsid12,186
char *str_time_t(str_time_t14,270

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822.c,651
static void tokenize(15,260
static void parseaddr(206,2935
static void print_token(419,7014
void rfc822tok_print(456,7647
void rfc822_print(473,7984
void rfc822_print_common(479,8197
void rfc822t_free(577,10264
void rfc822a_free(583,10349
void rfc822_deladdr(589,10432
static void compat_err_func(604,10691
struct rfc822t *rfc822t_alloc(rfc822t_alloc613,10872
struct rfc822t *rfc822t_alloc_new(rfc822t_alloc_new620,11043
struct rfc822a *rfc822a_alloc(rfc822a_alloc640,11572
void rfc822_praddr(659,12036
void rfc822_addrlist(674,12359
void rfc822_prname(683,12543
void rfc822_prname_orlist(696,12844
void rfc822_namelist(744,13748

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822.h,1499
#define	rfc822_h5,78
struct rfc822token 29,531
	struct rfc822token *next;next30,552
	int token;32,633
#define	rfc822_is_atom(42,808
	const char *ptr;ptr44,876
	int len;45,932
struct rfc822addr 71,2077
	struct rfc822token *tokens;tokens72,2097
	struct rfc822token *name;name73,2126
struct rfc822t 82,2336
	struct rfc822token *tokens;tokens83,2353
	int	ntokens;84,2382
struct rfc822t *rfc822t_alloc(rfc822t_alloc87,2401
struct rfc822t *rfc822t_alloc_new(rfc822t_alloc_new90,2508
void rfc822t_free(94,2636
void rfc822tok_print(96,2703
struct rfc822a 105,2996
	struct rfc822addr *addrs;addrs106,3013
	int	naddrs;107,3040
struct rfc822a *rfc822a_alloc(rfc822a_alloc110,3058
void rfc822a_free(111,3107
void rfc822_deladdr(113,3174
void rfc822_print(120,3427
void rfc822_print_common(126,3614
void rfc822_addrlist(135,3958
void rfc822_namelist(139,4116
void rfc822_prname(145,4344
void rfc822_praddr(146,4425
void rfc822_prname_orlist(152,4607
char *rfc822_gettok(rfc822_gettok157,4724
char *rfc822_getaddr(rfc822_getaddr158,4773
char *rfc822_getname(rfc822_getname159,4824
char *rfc822_getname_orlist(rfc822_getname_orlist160,4875
char *rfc822_getaddrs(rfc822_getaddrs161,4933
char *rfc822_getaddrs_wrap(rfc822_getaddrs_wrap162,4980
void rfc822_mkdate_buf(164,5038
const char *rfc822_mkdate(rfc822_mkdate165,5078
time_t rfc822_parsedt(166,5113
char *rfc822_coresubj(rfc822_coresubj168,5151
char *rfc822_coresubj_nouc(rfc822_coresubj_nouc169,5195

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047.c,1383
static const char rcsid[rcsid15,223
static const char xdigit[xdigit17,306
static char *rfc2047_search_quote(rfc2047_search_quote19,354
static int nyb(33,587
static unsigned char decode64tab[decode64tab42,715
static int decode64tab_init=43,754
static size_t decodebase64(45,786
int rfc2047_decode(94,2146
struct simple_info 189,4003
	char *string;string190,4024
	int index;191,4039
	const char *mychset;mychset192,4051
static int count_simple(195,4079
static int save_simple(205,4255
char *rfc2047_decode_simple(rfc2047_decode_simple215,4474
static int do_enhanced(239,4960
static int count_enhanced(264,5471
static int save_enhanced(270,5620
char *rfc2047_decode_enhanced(rfc2047_decode_enhanced276,5767
void rfc2047_print(296,6184
static char *a_rfc2047_encode_str(a_rfc2047_encode_str305,6445
static void rfc2047_encode_header_do(307,6519
static char *a_rfc2047_encode_str(a_rfc2047_encode_str321,6926
static void count(364,7551
static void counts2(365,7587
static void save(366,7632
static void saves2(367,7667
char *rfc2047_encode_header(rfc2047_encode_header369,7712
static void count(384,8012
static void counts2(389,8069
static void save(397,8187
static void saves2(403,8259
int rfc2047_encode_callback(411,8375
static int count_char(532,10439
static int save_char(540,10547
char *rfc2047_encode_str(rfc2047_encode_str549,10671

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047.h,569
#define	rfc2047_h2,18
static const char rfc2047_h_rcsid[rfc2047_h_rcsid14,180
extern int rfc2047_decode(16,273
extern char *rfc2047_decode_simple(rfc2047_decode_simple20,388
extern char *rfc2047_decode_enhanced(rfc2047_decode_enhanced22,443
extern char *rfc2047_decode_unicode(rfc2047_decode_unicode31,664
#define	RFC2047_DECODE_DISCARD	35,771
#define RFC2047_DECODE_ABORT	37,866
void rfc2047_print(50,1100
char *rfc2047_encode_str(rfc2047_encode_str61,1436
int rfc2047_encode_callback(69,1687
char *rfc2047_encode_header(rfc2047_encode_header76,1898

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_getaddr.c,246
static void cntlen(12,210
static void saveaddr(18,286
char *rfc822_getaddr(rfc822_getaddr28,389
char *rfc822_getname(rfc822_getname43,689
char *rfc822_getname_orlist(rfc822_getname_orlist65,1102
char *rfc822_gettok(rfc822_gettok87,1536

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047u.c,327
static const char rcsid[rcsid16,242
struct decode_unicode_s 22,380
	const struct unicode_info *mychset;mychset23,406
	int options;24,443
	char *bufptr;bufptr26,458
	size_t bufsize;27,473
static void save_unicode_text(30,495
static int save_unicode(38,653
char *rfc2047_decode_unicode(rfc2047_decode_unicode78,1388

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imaprefs.c,1244
static void swapmsgdata(20,302
#define swap(27,425
#undef	swap36,647
struct imap_refmsgtable *rfc822_threadalloc(rfc822_threadalloc39,662
void rfc822_threadfree(49,862
static int hashmsgid(81,1441
#define	HMIDS	89,1561
#define	HHMIDSS	90,1619
struct imap_refmsg *rfc822_threadallocmsg(rfc822_threadallocmsg101,1785
struct imap_refmsg *rfc822_threadsearchmsg(rfc822_threadsearchmsg141,2567
static int findsubj(158,2883
static void linkparent(204,3655
static void breakparent(218,3918
static struct imap_refmsg *dorefcreate(dorefcreate230,4190
struct imap_refmsg *rfc822_threadmsg(rfc822_threadmsg376,7677
struct imap_refmsg *rfc822_threadgetroot(rfc822_threadgetroot449,9011
void rfc822_threadprune(481,9651
static int cmp_msgs(534,10671
int rfc822_threadsortsubj(536,10721
int rfc822_threadgathersubj(577,11804
int rfc822_threadmergesubj(684,13961
static int cmp_msgs(850,17736
struct imap_threadsortinfo 880,18237
	struct imap_refmsgtable *mt;mt881,18266
	struct imap_refmsg **sort_table;sort_table882,18296
	size_t sort_table_cnt;883,18330
static int dothreadsort(886,18359
int rfc822_threadsortbydate(889,18440
static int dothreadsort(905,18704
struct imap_refmsg *rfc822_thread(rfc822_thread947,19507

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imaprefs.h,1782
#define	imaprefs_h5,82
struct imap_refmsg 26,351
	struct imap_refmsg *next,next27,372
	struct imap_refmsg *next, *last;last27,372
	struct imap_refmsg *parent;parent28,434
	struct imap_refmsg *firstchild,firstchild29,480
	struct imap_refmsg *firstchild, *lastchild;lastchild29,480
	struct imap_refmsg *prevsib,prevsib30,550
	struct imap_refmsg *prevsib, *nextsib;nextsib30,550
	char isdummy;32,619
	char flag2;33,673
	char *msgid;msgid35,711
	char *subj;subj37,756
	time_t timestamp;38,808
	unsigned long seqnum;39,844
struct imap_refmsgtable 42,895
        struct imap_refmsg *firstmsg,firstmsg43,921
        struct imap_refmsg *firstmsg, *lastmsg;lastmsg43,921
        struct imap_refmsghash *hashtable[hashtable47,1042
        struct imap_subjlookup *subjtable[subjtable49,1091
        struct imap_refmsg *rootptr;rootptr51,1140
struct imap_refmsgtable *rfc822_threadalloc(rfc822_threadalloc54,1208
void rfc822_threadfree(55,1259
struct imap_refmsg *rfc822_threadmsg(rfc822_threadmsg56,1310
struct imap_refmsg *rfc822_thread(rfc822_thread63,1535
struct imap_refmsghash 68,1635
	struct imap_refmsghash *nexthash;nexthash69,1660
	struct imap_refmsg *msg;msg70,1695
struct imap_subjlookup 73,1726
	struct imap_subjlookup *nextsubj;nextsubj74,1751
	char *subj;subj75,1786
	struct imap_refmsg *msg;msg76,1799
	int msgisrefwd;77,1825
struct imap_refmsg *rfc822_threadallocmsg(rfc822_threadallocmsg80,1847
void rfc822_threadprune(82,1945
struct imap_refmsg *rfc822_threadgetroot(rfc822_threadgetroot83,1999
struct imap_refmsg *rfc822_threadsearchmsg(rfc822_threadsearchmsg84,2070
int rfc822_threadsortsubj(86,2170
int rfc822_threadgathersubj(87,2223
int rfc822_threadmergesubj(89,2312
int rfc822_threadsortbydate(91,2401

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822hdr.c,132
static const char rcsid[rcsid12,195
int rfc822hdr_read(18,317
void rfc822hdr_fixname(103,1453
void rfc822hdr_collapse(113,1585

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822hdr.h,368
#define	rfc822hdr_h5,84
static const char rfc822hdr_h_rcsid[rfc822hdr_h_rcsid12,198
struct rfc822hdr 26,464
	char *header;header27,483
	char *value;value28,498
	size_t hdrsize;30,513
	size_t maxsize;31,530
#define rfc822hdr_init(34,552
#define rfc822hdr_free(35,627
int rfc822hdr_read(38,713
void rfc822hdr_fixname(39,777
void rfc822hdr_collapse(40,821

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/testsuite.c,217
static const char rcsid[rcsid10,160
static void print_func(12,247
static void print_separator(18,311
static struct rfc822t *tokenize(tokenize24,392
static struct rfc822a *doaddr(doaddr49,938
int main(62,1225

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imapsubj.c,271
#define	strcasecmp	19,302
#define	strncasecmp	25,365
static char *skipblob(skipblob30,425
static char *skipblobs(skipblobs54,687
static void stripsubj(68,848
char *rfc822_coresubj(rfc822_coresubj228,3458
char *rfc822_coresubj_nouc(rfc822_coresubj_nouc246,3781

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_getaddrs.c,257
static void cntlen(12,211
static void cntlensep(18,276
static void saveaddr(23,360
static void saveaddrsep(28,428
char *rfc822_getaddrs(rfc822_getaddrs33,516
static void saveaddrsep_wrap(48,828
char *rfc822_getaddrs_wrap(rfc822_getaddrs_wrap59,969

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/reftest.c,379
static void test1(29,396
static void prtree(50,912
static void prpc(71,1236
static void test2(84,1441
static void test3(106,1859
static void test4(133,2382
static void test5(155,2828
static void prsubj(173,3177
static void test6(185,3480
static void test7(225,4478
static void test8(246,5033
static void test9(284,5995
static void test10(322,6966
int main(351,7723

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_parsedt.c,475
static unsigned parsedig(22,428
static const char * const weekdays[weekdays34,580
static const char * const mnames[mnames38,675
#define	leap(43,809
static unsigned mlength[mlength47,890
#define	mdays(48,955
static const char * const zonenames[zonenames50,1022
#define	ZH(61,1271
static int zoneoffset[zoneoffset63,1304
static unsigned parsekey(74,1603
static int parsetime(92,1880
time_t rfc822_parsedt(113,2318
const char *rfc822_mkdt(rfc822_mkdt225,4334

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_mkdate.c,175
static const char * const months[months20,316
static const char * const wdays[wdays34,451
void rfc822_mkdate_buf(43,545
const char *rfc822_mkdate(rfc822_mkdate107,1384

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm864convert.c,112
unicode_char *unicode_ibm864_c2u(unicode_ibm864_c2u15,320
char *unicode_ibm864_u2c(unicode_ibm864_u2c48,782

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1250.c,454
static const unicode_char windows1250_unicode 10,183
static const char windows1250_uc 20,766
static const char windows1250_lc 54,3657
static const char windows1250_tc 88,6548
static unicode_char *c2u(c2u124,9441
static char *u2c(u2c129,9556
static char *toupper_func(toupper_func134,9671
static char *tolower_func(tolower_func139,9786
static char *totitle_func(totitle_func144,9901
const struct unicode_info unicode_WINDOWS_1250 149,10016

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1251.c,455
static const unicode_char windows1251_unicode 10,183
static const char windows1251_uc 20,869
static const char windows1251_lc 54,3760
static const char windows1251_tc 88,6651
static unicode_char *c2u(c2u124,9544
static char *u2c(u2c129,9659
static char *toupper_func(toupper_func134,9774
static char *tolower_func(tolower_func139,9889
static char *totitle_func(totitle_func144,10004
const struct unicode_info unicode_WINDOWS_1251 149,10119

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1252.c,454
static const unicode_char windows1252_unicode 10,183
static const char windows1252_uc 20,766
static const char windows1252_lc 54,3657
static const char windows1252_tc 88,6548
static unicode_char *c2u(c2u124,9441
static char *u2c(u2c129,9556
static char *toupper_func(toupper_func134,9671
static char *tolower_func(tolower_func139,9786
static char *totitle_func(totitle_func144,9901
const struct unicode_info unicode_WINDOWS_1252 149,10016

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1253.c,453
static const unicode_char windows1253_unicode 10,183
static const char windows1253_uc 20,743
static const char windows1253_lc 54,3634
static const char windows1253_tc 88,6525
static unicode_char *c2u(c2u124,9418
static char *u2c(u2c129,9533
static char *toupper_func(toupper_func134,9648
static char *tolower_func(tolower_func139,9763
static char *totitle_func(totitle_func144,9878
const struct unicode_info unicode_WINDOWS_1253 149,9993

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1254.c,454
static const unicode_char windows1254_unicode 10,183
static const char windows1254_uc 20,762
static const char windows1254_lc 54,3653
static const char windows1254_tc 88,6544
static unicode_char *c2u(c2u124,9437
static char *u2c(u2c129,9552
static char *toupper_func(toupper_func134,9667
static char *tolower_func(tolower_func139,9782
static char *totitle_func(totitle_func144,9897
const struct unicode_info unicode_WINDOWS_1254 149,10012

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1255.c,454
static const unicode_char windows1255_unicode 10,183
static const char windows1255_uc 20,784
static const char windows1255_lc 54,3675
static const char windows1255_tc 88,6566
static unicode_char *c2u(c2u124,9459
static char *u2c(u2c129,9574
static char *toupper_func(toupper_func134,9689
static char *tolower_func(tolower_func139,9804
static char *totitle_func(totitle_func144,9919
const struct unicode_info unicode_WINDOWS_1255 149,10034

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1256.c,454
static const unicode_char windows1256_unicode 10,183
static const char windows1256_uc 20,840
static const char windows1256_lc 54,3731
static const char windows1256_tc 88,6622
static unicode_char *c2u(c2u124,9515
static char *u2c(u2c129,9630
static char *toupper_func(toupper_func134,9745
static char *tolower_func(tolower_func139,9860
static char *totitle_func(totitle_func144,9975
const struct unicode_info unicode_WINDOWS_1256 149,10090

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1257.c,454
static const unicode_char windows1257_unicode 10,183
static const char windows1257_uc 20,752
static const char windows1257_lc 54,3643
static const char windows1257_tc 88,6534
static unicode_char *c2u(c2u124,9427
static char *u2c(u2c129,9542
static char *toupper_func(toupper_func134,9657
static char *tolower_func(tolower_func139,9772
static char *totitle_func(totitle_func144,9887
const struct unicode_info unicode_WINDOWS_1257 149,10002

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1258.c,454
static const unicode_char windows1258_unicode 10,183
static const char windows1258_uc 20,759
static const char windows1258_lc 54,3650
static const char windows1258_tc 88,6541
static unicode_char *c2u(c2u124,9434
static char *u2c(u2c129,9549
static char *toupper_func(toupper_func134,9664
static char *tolower_func(tolower_func139,9779
static char *totitle_func(totitle_func144,9894
const struct unicode_info unicode_WINDOWS_1258 149,10009

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode_ultcase.c,316
extern const unsigned unicode_case_hash;11,202
extern const unicode_char unicode_case_tab[unicode_case_tab12,243
extern const unsigned unicode_case_offset[unicode_case_offset13,292
static unsigned find_case(15,338
unicode_char unicode_uc(35,616
unicode_char unicode_lc(42,754
unicode_char unicode_tc(49,892

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode2.c,196
char *unicode_toutf8(unicode_toutf814,254
unicode_char *unicode_fromutf8(unicode_fromutf819,339
char *unicode_ctoutf8(unicode_ctoutf824,424
char *unicode_cfromutf8(unicode_cfromutf840,677

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885910.c,443
static const unicode_char iso885910_unicode 10,181
static const char iso885910_uc 20,756
static const char iso885910_lc 54,3645
static const char iso885910_tc 88,6534
static unicode_char *c2u(c2u124,9425
static char *u2c(u2c129,9538
static char *toupper_func(toupper_func134,9651
static char *tolower_func(tolower_func139,9764
static char *totitle_func(totitle_func144,9877
const struct unicode_info unicode_ISO8859_10 149,9990

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885913.c,443
static const unicode_char iso885913_unicode 10,181
static const char iso885913_uc 20,759
static const char iso885913_lc 54,3648
static const char iso885913_tc 88,6537
static unicode_char *c2u(c2u124,9428
static char *u2c(u2c129,9541
static char *toupper_func(toupper_func134,9654
static char *tolower_func(tolower_func139,9767
static char *totitle_func(totitle_func144,9880
const struct unicode_info unicode_ISO8859_13 149,9993

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885914.c,444
static const unicode_char iso885914_unicode 10,181
static const char iso885914_uc 20,777
static const char iso885914_lc 54,3666
static const char iso885914_tc 88,6555
static unicode_char *c2u(c2u124,9446
static char *u2c(u2c129,9559
static char *toupper_func(toupper_func134,9672
static char *tolower_func(tolower_func139,9785
static char *totitle_func(totitle_func144,9898
const struct unicode_info unicode_ISO8859_14 149,10011

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885915.c,443
static const unicode_char iso885915_unicode 10,181
static const char iso885915_uc 20,756
static const char iso885915_lc 54,3645
static const char iso885915_tc 88,6534
static unicode_char *c2u(c2u124,9425
static char *u2c(u2c129,9538
static char *toupper_func(toupper_func134,9651
static char *tolower_func(tolower_func139,9764
static char *totitle_func(totitle_func144,9877
const struct unicode_info unicode_ISO8859_15 149,9990

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm437.c,429
static const unicode_char ibm437_unicode 10,178
static const char ibm437_uc 20,811
static const char ibm437_lc 54,3697
static const char ibm437_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_437 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm775.c,428
static const unicode_char ibm775_unicode 10,178
static const char ibm775_uc 20,785
static const char ibm775_lc 54,3671
static const char ibm775_tc 88,6557
static unicode_char *c2u(c2u124,9445
static char *u2c(u2c129,9555
static char *toupper_func(toupper_func134,9665
static char *tolower_func(tolower_func139,9775
static char *totitle_func(totitle_func144,9885
const struct unicode_info unicode_IBM_775 149,9995

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm850.c,428
static const unicode_char ibm850_unicode 10,178
static const char ibm850_uc 20,779
static const char ibm850_lc 54,3665
static const char ibm850_tc 88,6551
static unicode_char *c2u(c2u124,9439
static char *u2c(u2c129,9549
static char *toupper_func(toupper_func134,9659
static char *tolower_func(tolower_func139,9769
static char *totitle_func(totitle_func144,9879
const struct unicode_info unicode_IBM_850 149,9989

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm852.c,428
static const unicode_char ibm852_unicode 10,178
static const char ibm852_uc 20,778
static const char ibm852_lc 54,3664
static const char ibm852_tc 88,6550
static unicode_char *c2u(c2u124,9438
static char *u2c(u2c129,9548
static char *toupper_func(toupper_func134,9658
static char *tolower_func(tolower_func139,9768
static char *totitle_func(totitle_func144,9878
const struct unicode_info unicode_IBM_852 149,9988

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm855.c,429
static const unicode_char ibm855_unicode 10,178
static const char ibm855_uc 20,871
static const char ibm855_lc 54,3757
static const char ibm855_tc 88,6643
static unicode_char *c2u(c2u124,9531
static char *u2c(u2c129,9641
static char *toupper_func(toupper_func134,9751
static char *tolower_func(tolower_func139,9861
static char *totitle_func(totitle_func144,9971
const struct unicode_info unicode_IBM_855 149,10081

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm857.c,428
static const unicode_char ibm857_unicode 10,178
static const char ibm857_uc 20,772
static const char ibm857_lc 54,3658
static const char ibm857_tc 88,6544
static unicode_char *c2u(c2u124,9432
static char *u2c(u2c129,9542
static char *toupper_func(toupper_func134,9652
static char *tolower_func(tolower_func139,9762
static char *totitle_func(totitle_func144,9872
const struct unicode_info unicode_IBM_857 149,9982

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm860.c,429
static const unicode_char ibm860_unicode 10,178
static const char ibm860_uc 20,810
static const char ibm860_lc 54,3696
static const char ibm860_tc 88,6582
static unicode_char *c2u(c2u124,9470
static char *u2c(u2c129,9580
static char *toupper_func(toupper_func134,9690
static char *tolower_func(tolower_func139,9800
static char *totitle_func(totitle_func144,9910
const struct unicode_info unicode_IBM_860 149,10020

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm861.c,429
static const unicode_char ibm861_unicode 10,178
static const char ibm861_uc 20,811
static const char ibm861_lc 54,3697
static const char ibm861_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_861 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm862.c,429
static const unicode_char ibm862_unicode 10,178
static const char ibm862_uc 20,838
static const char ibm862_lc 54,3724
static const char ibm862_tc 88,6610
static unicode_char *c2u(c2u124,9498
static char *u2c(u2c129,9608
static char *toupper_func(toupper_func134,9718
static char *tolower_func(tolower_func139,9828
static char *totitle_func(totitle_func144,9938
const struct unicode_info unicode_IBM_862 149,10048

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm863.c,429
static const unicode_char ibm863_unicode 10,178
static const char ibm863_uc 20,811
static const char ibm863_lc 54,3697
static const char ibm863_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_863 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm864.c,434
static const unicode_char ibm864_unicode 10,173
static const char ibm864_uc 28,1320
static const char ibm864_lc 62,4206
static const char ibm864_tc 96,7092
static unicode_char *c2u(c2u132,9980
static char *u2c(u2c137,10089
static char *toupper_func(toupper_func142,10198
static char *tolower_func(tolower_func147,10308
static char *totitle_func(totitle_func152,10418
const struct unicode_info unicode_IBM_864 157,10528

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm865.c,429
static const unicode_char ibm865_unicode 10,178
static const char ibm865_uc 20,811
static const char ibm865_lc 54,3697
static const char ibm865_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_865 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm866.c,429
static const unicode_char ibm866_unicode 10,178
static const char ibm866_uc 20,873
static const char ibm866_lc 54,3759
static const char ibm866_tc 88,6645
static unicode_char *c2u(c2u124,9533
static char *u2c(u2c129,9643
static char *toupper_func(toupper_func134,9753
static char *tolower_func(tolower_func139,9863
static char *totitle_func(totitle_func144,9973
const struct unicode_info unicode_IBM_866 149,10083

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm869.c,428
static const unicode_char ibm869_unicode 10,178
static const char ibm869_uc 20,763
static const char ibm869_lc 54,3649
static const char ibm869_tc 88,6535
static unicode_char *c2u(c2u124,9423
static char *u2c(u2c129,9533
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9753
static char *totitle_func(totitle_func144,9863
const struct unicode_info unicode_IBM_869 149,9973

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows874u.c,60
char *unicode_windows874_u2c(unicode_windows874_u2c13,238

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf8_chset.c,189
static char *toupper_func(toupper_func19,392
static char *tolower_func(tolower_func34,628
static char *totitle_func(totitle_func49,864
const struct unicode_info unicode_UTF8 64,1100

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/gb2312.c,378
static const unicode_char * const gb2312[gb231213,231
static unicode_char *c2u(c2u87,1143
static unsigned revlookup(158,2061
static char *u2c(u2c182,2488
static char *toupper_func(toupper_func235,3172
static char *tolower_func(tolower_func259,3467
static char *totitle_func(totitle_func283,3762
const struct unicode_info unicode_GB2312 307,4057
int main(317,4179

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/gb2312.h,4356
static const unicode_char gb2312_b0[gb2312_b010,178
static const unicode_char gb2312_b1[gb2312_b116,790
static const unicode_char gb2312_b2[gb2312_b222,1402
static const unicode_char gb2312_b3[gb2312_b328,2014
static const unicode_char gb2312_b4[gb2312_b434,2626
static const unicode_char gb2312_b5[gb2312_b540,3238
static const unicode_char gb2312_b6[gb2312_b646,3850
static const unicode_char gb2312_b7[gb2312_b752,4462
static const unicode_char gb2312_b8[gb2312_b858,5074
static const unicode_char gb2312_b9[gb2312_b964,5686
static const unicode_char gb2312_ba[gb2312_ba70,6298
static const unicode_char gb2312_bb[gb2312_bb76,6910
static const unicode_char gb2312_bc[gb2312_bc82,7522
static const unicode_char gb2312_bd[gb2312_bd88,8134
static const unicode_char gb2312_be[gb2312_be94,8746
static const unicode_char gb2312_bf[gb2312_bf100,9358
static const unicode_char gb2312_c0[gb2312_c0106,9970
static const unicode_char gb2312_c1[gb2312_c1112,10582
static const unicode_char gb2312_c2[gb2312_c2118,11194
static const unicode_char gb2312_c3[gb2312_c3124,11806
static const unicode_char gb2312_c4[gb2312_c4130,12418
static const unicode_char gb2312_c5[gb2312_c5136,13030
static const unicode_char gb2312_c6[gb2312_c6142,13642
static const unicode_char gb2312_c7[gb2312_c7148,14254
static const unicode_char gb2312_c8[gb2312_c8154,14866
static const unicode_char gb2312_c9[gb2312_c9160,15478
static const unicode_char gb2312_ca[gb2312_ca166,16090
static const unicode_char gb2312_cb[gb2312_cb172,16702
static const unicode_char gb2312_cc[gb2312_cc178,17314
static const unicode_char gb2312_cd[gb2312_cd184,17926
static const unicode_char gb2312_ce[gb2312_ce190,18538
static const unicode_char gb2312_cf[gb2312_cf196,19150
static const unicode_char gb2312_d0[gb2312_d0202,19762
static const unicode_char gb2312_d1[gb2312_d1208,20374
static const unicode_char gb2312_d2[gb2312_d2214,20986
static const unicode_char gb2312_d3[gb2312_d3220,21598
static const unicode_char gb2312_d4[gb2312_d4226,22210
static const unicode_char gb2312_d5[gb2312_d5232,22822
static const unicode_char gb2312_d6[gb2312_d6238,23434
static const unicode_char gb2312_d7[gb2312_d7244,24046
static const unicode_char gb2312_d8[gb2312_d8250,24638
static const unicode_char gb2312_d9[gb2312_d9256,25250
static const unicode_char gb2312_da[gb2312_da262,25862
static const unicode_char gb2312_db[gb2312_db268,26474
static const unicode_char gb2312_dc[gb2312_dc274,27086
static const unicode_char gb2312_dd[gb2312_dd280,27698
static const unicode_char gb2312_de[gb2312_de286,28310
static const unicode_char gb2312_df[gb2312_df292,28922
static const unicode_char gb2312_e0[gb2312_e0298,29534
static const unicode_char gb2312_e1[gb2312_e1304,30146
static const unicode_char gb2312_e2[gb2312_e2310,30758
static const unicode_char gb2312_e3[gb2312_e3316,31370
static const unicode_char gb2312_e4[gb2312_e4322,31982
static const unicode_char gb2312_e5[gb2312_e5328,32594
static const unicode_char gb2312_e6[gb2312_e6334,33206
static const unicode_char gb2312_e7[gb2312_e7340,33818
static const unicode_char gb2312_e8[gb2312_e8346,34430
static const unicode_char gb2312_e9[gb2312_e9352,35042
static const unicode_char gb2312_ea[gb2312_ea358,35654
static const unicode_char gb2312_eb[gb2312_eb364,36266
static const unicode_char gb2312_ec[gb2312_ec370,36878
static const unicode_char gb2312_ed[gb2312_ed376,37490
static const unicode_char gb2312_ee[gb2312_ee382,38102
static const unicode_char gb2312_ef[gb2312_ef388,38714
static const unicode_char gb2312_f0[gb2312_f0394,39326
static const unicode_char gb2312_f1[gb2312_f1400,39938
static const unicode_char gb2312_f2[gb2312_f2406,40550
static const unicode_char gb2312_f3[gb2312_f3412,41162
static const unicode_char gb2312_f4[gb2312_f4418,41774
static const unicode_char gb2312_f5[gb2312_f5424,42386
static const unicode_char gb2312_f6[gb2312_f6430,42998
static const unicode_char gb2312_f7[gb2312_f7436,43610
static const unsigned gb2312_revhash_size=442,44222
static const unicode_char gb2312_revtable_uc[gb2312_revtable_uc443,44270
static const unsigned gb2312_revtable_octets[gb2312_revtable_octets867,85321
static const unsigned gb2312_revtable_index[gb2312_revtable_index1291,126372

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/xtest.c,315
extern const struct unicode_info unicode_ISO8859_1;15,231
static unicode_char *c2u(c2u17,284
static char *u2c(u2c28,497
static char *toupper_func(toupper_func40,703
static char *tolower_func(tolower_func45,813
static char *totitle_func(totitle_func50,923
const struct unicode_info unicode_XTEST 55,1033

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode.c,399
const char *unicode_default_chset(unicode_default_chset15,272
const struct unicode_info *unicode_find(unicode_find25,416
char *unicode_convert(unicode_convert55,923
char *unicode_convert_fromchset(unicode_convert_fromchset84,1344
struct ux_buf 101,1664
	char *buffer;buffer102,1680
	size_t bufsize;103,1695
static int ux_alloc(106,1717
char *unicode_xconvert(unicode_xconvert125,1964

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode.h,1931
#define	unicode_h2,18
typedef wchar_t unicode_char;28,385
struct unicode_info 30,416
	const char *chset;chset31,438
	unicode_char *(*c2u)c2u32,488
	char *(*u2c)u2c35,593
	char *(*toupper_func)toupper_func40,778
	char *(*tolower_func)tolower_func41,823
	char *(*totitle_func)totitle_func42,868
extern const struct unicode_info unicode_ISO8859_1;45,919
extern const struct unicode_info unicode_UTF8;46,971
extern char *unicode_iso8859_u2c(unicode_iso8859_u2c48,1019
extern char *unicode_windows874_u2c(unicode_windows874_u2c51,1106
extern unicode_char *unicode_iso8859_c2u(unicode_iso8859_c2u56,1249
extern char *unicode_iso8859_convert(unicode_iso8859_convert59,1340
unicode_char *unicode_ibm864_c2u(unicode_ibm864_c2u64,1460
char *unicode_ibm864_u2c(unicode_ibm864_u2c67,1543
struct unicode_chsetlist 71,1626
	const char *chsetname;chsetname72,1653
	const struct unicode_info *ptr;ptr73,1677
extern const struct unicode_chsetlist unicode_chsetlist[unicode_chsetlist76,1716
extern const char *unicode_default_chset(unicode_default_chset77,1775
extern const struct unicode_info *unicode_find(unicode_find78,1819
extern char *unicode_toutf8(unicode_toutf886,1945
extern unicode_char *unicode_fromutf8(unicode_fromutf887,1996
extern unicode_char unicode_uc(91,2110
extern unicode_char unicode_lc(92,2156
extern unicode_char unicode_tc(93,2202
extern char *unicode_ctoutf8(unicode_ctoutf897,2288
extern char *unicode_cfromutf8(unicode_cfromutf899,2376
extern unicode_char *unicode_utf8_tou(unicode_utf8_tou104,2497
extern char *unicode_utf8_fromu(unicode_utf8_fromu105,2557
extern char *unicode_convert(unicode_convert109,2669
extern char *unicode_xconvert(unicode_xconvert114,2854
extern char *unicode_convert_fromchset(unicode_convert_fromchset122,3129
unicode_char *unicode_modutf7touc(unicode_modutf7touc135,3514
char *unicode_uctomodutf7(unicode_uctomodutf7140,3717

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/koi8r.c,415
static const unicode_char koi8_tab 10,172
static const char koi8_uc 20,859
static const char koi8_lc 54,3743
static const char koi8_tc 88,6627
static unicode_char *c2u(c2u124,9513
static char *u2c(u2c129,9617
static char *toupper_func(toupper_func134,9721
static char *tolower_func(tolower_func139,9829
static char *totitle_func(totitle_func144,9937
const struct unicode_info unicode_KOI8R 149,10045

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows874.c,449
static const unicode_char windows874_unicode 10,182
static const char windows874_uc 20,791
static const char windows874_lc 54,3681
static const char windows874_tc 88,6571
static unicode_char *c2u(c2u124,9463
static char *u2c(u2c129,9577
static char *toupper_func(toupper_func134,9694
static char *tolower_func(tolower_func139,9808
static char *totitle_func(totitle_func144,9922
const struct unicode_info unicode_WINDOWS_874 149,10036

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf7imap.c,363
static const char rcsid[rcsid12,178
static const char mbase64[mbase6414,262
static char mbase64_lookup[mbase64_lookup16,359
static int mbase64_lookup_init=17,392
unicode_char *unicode_modutf7touc(unicode_modutf7touc19,427
static size_t uctoutf7_pass(106,1765
char *unicode_uctomodutf7(unicode_uctomodutf7108,1825
static size_t uctoutf7_pass(118,1978

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/big5.c,447
static const unicode_char * const big5fwdlo[big5fwdlo13,227
static const unicode_char * const big5fwdhi[big5fwdhi104,1411
static unicode_char *c2u(c2u195,2595
static unsigned revlookup(279,3840
static char *u2c(u2c303,4253
static char *toupper_func(toupper_func356,4937
static char *tolower_func(tolower_func380,5232
static char *totitle_func(totitle_func404,5527
const struct unicode_info unicode_BIG5 428,5822
int main(438,5940

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/big5.h,10271
static const unicode_char big5_a2_lo[big5_a2_lo10,171
static const unicode_char big5_a2_hi[big5_a2_hi15,383
static const unicode_char big5_a4_lo[big5_a4_lo22,625
static const unicode_char big5_a4_hi[big5_a4_hi27,1053
static const unicode_char big5_a5_lo[big5_a5_lo34,1667
static const unicode_char big5_a5_hi[big5_a5_hi39,2095
static const unicode_char big5_a6_lo[big5_a6_lo46,2709
static const unicode_char big5_a6_hi[big5_a6_hi51,3137
static const unicode_char big5_a7_lo[big5_a7_lo58,3751
static const unicode_char big5_a7_hi[big5_a7_hi63,4179
static const unicode_char big5_a8_lo[big5_a8_lo70,4793
static const unicode_char big5_a8_hi[big5_a8_hi75,5221
static const unicode_char big5_a9_lo[big5_a9_lo82,5835
static const unicode_char big5_a9_hi[big5_a9_hi87,6263
static const unicode_char big5_aa_lo[big5_aa_lo94,6877
static const unicode_char big5_aa_hi[big5_aa_hi99,7305
static const unicode_char big5_ab_lo[big5_ab_lo106,7919
static const unicode_char big5_ab_hi[big5_ab_hi111,8347
static const unicode_char big5_ac_lo[big5_ac_lo118,8961
static const unicode_char big5_ac_hi[big5_ac_hi123,9389
static const unicode_char big5_ad_lo[big5_ad_lo130,10003
static const unicode_char big5_ad_hi[big5_ad_hi135,10431
static const unicode_char big5_ae_lo[big5_ae_lo142,11045
static const unicode_char big5_ae_hi[big5_ae_hi147,11473
static const unicode_char big5_af_lo[big5_af_lo154,12087
static const unicode_char big5_af_hi[big5_af_hi159,12515
static const unicode_char big5_b0_lo[big5_b0_lo166,13129
static const unicode_char big5_b0_hi[big5_b0_hi171,13557
static const unicode_char big5_b1_lo[big5_b1_lo178,14171
static const unicode_char big5_b1_hi[big5_b1_hi183,14599
static const unicode_char big5_b2_lo[big5_b2_lo190,15213
static const unicode_char big5_b2_hi[big5_b2_hi195,15641
static const unicode_char big5_b3_lo[big5_b3_lo202,16255
static const unicode_char big5_b3_hi[big5_b3_hi207,16683
static const unicode_char big5_b4_lo[big5_b4_lo214,17297
static const unicode_char big5_b4_hi[big5_b4_hi219,17725
static const unicode_char big5_b5_lo[big5_b5_lo226,18339
static const unicode_char big5_b5_hi[big5_b5_hi231,18767
static const unicode_char big5_b6_lo[big5_b6_lo238,19381
static const unicode_char big5_b6_hi[big5_b6_hi243,19809
static const unicode_char big5_b7_lo[big5_b7_lo250,20423
static const unicode_char big5_b7_hi[big5_b7_hi255,20851
static const unicode_char big5_b8_lo[big5_b8_lo262,21465
static const unicode_char big5_b8_hi[big5_b8_hi267,21893
static const unicode_char big5_b9_lo[big5_b9_lo274,22507
static const unicode_char big5_b9_hi[big5_b9_hi279,22935
static const unicode_char big5_ba_lo[big5_ba_lo286,23549
static const unicode_char big5_ba_hi[big5_ba_hi291,23977
static const unicode_char big5_bb_lo[big5_bb_lo298,24591
static const unicode_char big5_bb_hi[big5_bb_hi303,25019
static const unicode_char big5_bc_lo[big5_bc_lo310,25633
static const unicode_char big5_bc_hi[big5_bc_hi315,26061
static const unicode_char big5_bd_lo[big5_bd_lo322,26675
static const unicode_char big5_bd_hi[big5_bd_hi327,27103
static const unicode_char big5_be_lo[big5_be_lo334,27717
static const unicode_char big5_be_hi[big5_be_hi339,28145
static const unicode_char big5_bf_lo[big5_bf_lo346,28759
static const unicode_char big5_bf_hi[big5_bf_hi351,29187
static const unicode_char big5_c0_lo[big5_c0_lo358,29801
static const unicode_char big5_c0_hi[big5_c0_hi363,30229
static const unicode_char big5_c1_lo[big5_c1_lo370,30843
static const unicode_char big5_c1_hi[big5_c1_hi375,31271
static const unicode_char big5_c2_lo[big5_c2_lo382,31885
static const unicode_char big5_c2_hi[big5_c2_hi387,32313
static const unicode_char big5_c3_lo[big5_c3_lo394,32927
static const unicode_char big5_c3_hi[big5_c3_hi399,33355
static const unicode_char big5_c4_lo[big5_c4_lo406,33969
static const unicode_char big5_c4_hi[big5_c4_hi411,34397
static const unicode_char big5_c5_lo[big5_c5_lo418,35011
static const unicode_char big5_c5_hi[big5_c5_hi423,35439
static const unicode_char big5_c6_lo[big5_c6_lo430,36053
static const unicode_char big5_c6_hi[big5_c6_hi435,36481
static const unicode_char big5_c9_lo[big5_c9_lo442,36719
static const unicode_char big5_c9_hi[big5_c9_hi447,37147
static const unicode_char big5_ca_lo[big5_ca_lo454,37761
static const unicode_char big5_ca_hi[big5_ca_hi459,38189
static const unicode_char big5_cb_lo[big5_cb_lo466,38803
static const unicode_char big5_cb_hi[big5_cb_hi471,39231
static const unicode_char big5_cc_lo[big5_cc_lo478,39845
static const unicode_char big5_cc_hi[big5_cc_hi483,40273
static const unicode_char big5_cd_lo[big5_cd_lo490,40887
static const unicode_char big5_cd_hi[big5_cd_hi495,41315
static const unicode_char big5_ce_lo[big5_ce_lo502,41929
static const unicode_char big5_ce_hi[big5_ce_hi507,42357
static const unicode_char big5_cf_lo[big5_cf_lo514,42971
static const unicode_char big5_cf_hi[big5_cf_hi519,43399
static const unicode_char big5_d0_lo[big5_d0_lo526,44013
static const unicode_char big5_d0_hi[big5_d0_hi531,44441
static const unicode_char big5_d1_lo[big5_d1_lo538,45055
static const unicode_char big5_d1_hi[big5_d1_hi543,45483
static const unicode_char big5_d2_lo[big5_d2_lo550,46097
static const unicode_char big5_d2_hi[big5_d2_hi555,46525
static const unicode_char big5_d3_lo[big5_d3_lo562,47139
static const unicode_char big5_d3_hi[big5_d3_hi567,47567
static const unicode_char big5_d4_lo[big5_d4_lo574,48181
static const unicode_char big5_d4_hi[big5_d4_hi579,48609
static const unicode_char big5_d5_lo[big5_d5_lo586,49223
static const unicode_char big5_d5_hi[big5_d5_hi591,49651
static const unicode_char big5_d6_lo[big5_d6_lo598,50265
static const unicode_char big5_d6_hi[big5_d6_hi603,50693
static const unicode_char big5_d7_lo[big5_d7_lo610,51307
static const unicode_char big5_d7_hi[big5_d7_hi615,51735
static const unicode_char big5_d8_lo[big5_d8_lo622,52349
static const unicode_char big5_d8_hi[big5_d8_hi627,52777
static const unicode_char big5_d9_lo[big5_d9_lo634,53391
static const unicode_char big5_d9_hi[big5_d9_hi639,53819
static const unicode_char big5_da_lo[big5_da_lo646,54433
static const unicode_char big5_da_hi[big5_da_hi651,54861
static const unicode_char big5_db_lo[big5_db_lo658,55475
static const unicode_char big5_db_hi[big5_db_hi663,55903
static const unicode_char big5_dc_lo[big5_dc_lo670,56517
static const unicode_char big5_dc_hi[big5_dc_hi675,56945
static const unicode_char big5_dd_lo[big5_dd_lo682,57559
static const unicode_char big5_dd_hi[big5_dd_hi687,57987
static const unicode_char big5_de_lo[big5_de_lo694,58601
static const unicode_char big5_de_hi[big5_de_hi699,59029
static const unicode_char big5_df_lo[big5_df_lo706,59643
static const unicode_char big5_df_hi[big5_df_hi711,60071
static const unicode_char big5_e0_lo[big5_e0_lo718,60685
static const unicode_char big5_e0_hi[big5_e0_hi723,61113
static const unicode_char big5_e1_lo[big5_e1_lo730,61727
static const unicode_char big5_e1_hi[big5_e1_hi735,62155
static const unicode_char big5_e2_lo[big5_e2_lo742,62769
static const unicode_char big5_e2_hi[big5_e2_hi747,63197
static const unicode_char big5_e3_lo[big5_e3_lo754,63811
static const unicode_char big5_e3_hi[big5_e3_hi759,64239
static const unicode_char big5_e4_lo[big5_e4_lo766,64853
static const unicode_char big5_e4_hi[big5_e4_hi771,65281
static const unicode_char big5_e5_lo[big5_e5_lo778,65895
static const unicode_char big5_e5_hi[big5_e5_hi783,66323
static const unicode_char big5_e6_lo[big5_e6_lo790,66937
static const unicode_char big5_e6_hi[big5_e6_hi795,67365
static const unicode_char big5_e7_lo[big5_e7_lo802,67979
static const unicode_char big5_e7_hi[big5_e7_hi807,68407
static const unicode_char big5_e8_lo[big5_e8_lo814,69021
static const unicode_char big5_e8_hi[big5_e8_hi819,69449
static const unicode_char big5_e9_lo[big5_e9_lo826,70063
static const unicode_char big5_e9_hi[big5_e9_hi831,70491
static const unicode_char big5_ea_lo[big5_ea_lo838,71105
static const unicode_char big5_ea_hi[big5_ea_hi843,71533
static const unicode_char big5_eb_lo[big5_eb_lo850,72147
static const unicode_char big5_eb_hi[big5_eb_hi855,72575
static const unicode_char big5_ec_lo[big5_ec_lo862,73189
static const unicode_char big5_ec_hi[big5_ec_hi867,73617
static const unicode_char big5_ed_lo[big5_ed_lo874,74231
static const unicode_char big5_ed_hi[big5_ed_hi879,74659
static const unicode_char big5_ee_lo[big5_ee_lo886,75273
static const unicode_char big5_ee_hi[big5_ee_hi891,75701
static const unicode_char big5_ef_lo[big5_ef_lo898,76315
static const unicode_char big5_ef_hi[big5_ef_hi903,76743
static const unicode_char big5_f0_lo[big5_f0_lo910,77357
static const unicode_char big5_f0_hi[big5_f0_hi915,77785
static const unicode_char big5_f1_lo[big5_f1_lo922,78399
static const unicode_char big5_f1_hi[big5_f1_hi927,78827
static const unicode_char big5_f2_lo[big5_f2_lo934,79441
static const unicode_char big5_f2_hi[big5_f2_hi939,79869
static const unicode_char big5_f3_lo[big5_f3_lo946,80483
static const unicode_char big5_f3_hi[big5_f3_hi951,80911
static const unicode_char big5_f4_lo[big5_f4_lo958,81525
static const unicode_char big5_f4_hi[big5_f4_hi963,81953
static const unicode_char big5_f5_lo[big5_f5_lo970,82567
static const unicode_char big5_f5_hi[big5_f5_hi975,82995
static const unicode_char big5_f6_lo[big5_f6_lo982,83609
static const unicode_char big5_f6_hi[big5_f6_hi987,84037
static const unicode_char big5_f7_lo[big5_f7_lo994,84651
static const unicode_char big5_f7_hi[big5_f7_hi999,85079
static const unicode_char big5_f8_lo[big5_f8_lo1006,85693
static const unicode_char big5_f8_hi[big5_f8_hi1011,86121
static const unicode_char big5_f9_lo[big5_f9_lo1018,86735
static const unicode_char big5_f9_hi[big5_f9_hi1023,87163
static const unsigned big5_revhash_size=1030,87613
static const unicode_char big5_revtable_uc[big5_revtable_uc1031,87659
static const unsigned big5_revtable_octets[big5_revtable_octets1849,166902
static const unsigned big5_revtable_index[big5_revtable_index2667,246145

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88591.c,438
static const unicode_char iso88591_unicode 10,180
static const char iso88591_uc 20,753
static const char iso88591_lc 54,3641
static const char iso88591_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_1 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88592.c,438
static const unicode_char iso88592_unicode 10,180
static const char iso88592_uc 20,753
static const char iso88592_lc 54,3641
static const char iso88592_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_2 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88593.c,438
static const unicode_char iso88593_unicode 10,180
static const char iso88593_uc 20,739
static const char iso88593_lc 54,3627
static const char iso88593_tc 88,6515
static unicode_char *c2u(c2u124,9405
static char *u2c(u2c129,9517
static char *toupper_func(toupper_func134,9629
static char *tolower_func(tolower_func139,9741
static char *totitle_func(totitle_func144,9853
const struct unicode_info unicode_ISO8859_3 149,9965

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88594.c,438
static const unicode_char iso88594_unicode 10,180
static const char iso88594_uc 20,753
static const char iso88594_lc 54,3641
static const char iso88594_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_4 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88595.c,439
static const unicode_char iso88595_unicode 10,180
static const char iso88595_uc 20,846
static const char iso88595_lc 54,3734
static const char iso88595_tc 88,6622
static unicode_char *c2u(c2u124,9512
static char *u2c(u2c129,9624
static char *toupper_func(toupper_func134,9736
static char *tolower_func(tolower_func139,9848
static char *totitle_func(totitle_func144,9960
const struct unicode_info unicode_ISO8859_5 149,10072

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88596.c,438
static const unicode_char iso88596_unicode 10,180
static const char iso88596_uc 20,711
static const char iso88596_lc 54,3599
static const char iso88596_tc 88,6487
static unicode_char *c2u(c2u124,9377
static char *u2c(u2c129,9489
static char *toupper_func(toupper_func134,9601
static char *tolower_func(tolower_func139,9713
static char *totitle_func(totitle_func144,9825
const struct unicode_info unicode_ISO8859_6 149,9937

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88597.c,438
static const unicode_char iso88597_unicode 10,180
static const char iso88597_uc 20,744
static const char iso88597_lc 54,3632
static const char iso88597_tc 88,6520
static unicode_char *c2u(c2u124,9410
static char *u2c(u2c129,9522
static char *toupper_func(toupper_func134,9634
static char *tolower_func(tolower_func139,9746
static char *totitle_func(totitle_func144,9858
const struct unicode_info unicode_ISO8859_7 149,9970

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88598.c,438
static const unicode_char iso88598_unicode 10,180
static const char iso88598_uc 20,711
static const char iso88598_lc 54,3599
static const char iso88598_tc 88,6487
static unicode_char *c2u(c2u124,9377
static char *u2c(u2c129,9489
static char *toupper_func(toupper_func134,9601
static char *tolower_func(tolower_func139,9713
static char *totitle_func(totitle_func144,9825
const struct unicode_info unicode_ISO8859_8 149,9937

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88599.c,438
static const unicode_char iso88599_unicode 10,180
static const char iso88599_uc 20,753
static const char iso88599_lc 54,3641
static const char iso88599_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_9 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicodeinfo.c,17
int main(14,259

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso8859.c,116
unicode_char *unicode_iso8859_c2u(unicode_iso8859_c2u15,287
char *unicode_iso8859_u2c(unicode_iso8859_u2c49,782

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode_ultcasetab.c,168
const unsigned unicode_case_hash=10,185
const unicode_char unicode_case_tab[unicode_case_tab12,254
const unsigned unicode_case_offset[unicode_case_offset384,45263

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf8.c,110
unicode_char *unicode_utf8_tou(unicode_utf8_tou14,231
char *unicode_utf8_fromu(unicode_utf8_fromu186,3071

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso8859_convert.c,62
char *unicode_iso8859_convert(unicode_iso8859_convert14,243

/emcsvn/emc/emcmailer/trunk/courier_deliver/util.c,289
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
void aka_logger(14,265
sortem 63,1645
add_bounce 82,2034
add_pop 114,3225
add_forward 138,4098
aka_exit 162,4783
memerror2 215,6046
mserror2 222,6119
void put_date 232,6396
int read_env(323,7852

/emcsvn/emc/emcmailer/trunk/courier_deliver/dagent-courier.c,809
static char *rcsid rcsid6,293
static void use_rcsid(7,379
#define MYBUFSIZE 27,760
void usage(29,784
struct delivery *get_delivery_info(get_delivery_info30,802
char *decode_address(decode_address31,865
int make_maildirfolder(32,903
int init_config(34,949
struct delivery 87,3051
	char *mailbox;mailbox88,3069
	char *address;address89,3085
	char *maildir;maildir90,3101
long dodeliver(93,3121
char *get_delivery_maildir(get_delivery_maildir94,3176
char *get_quota(get_quota95,3226
int main 97,3267
char *get_quota(get_quota335,9966
char *get_delivery_maildir(get_delivery_maildir409,12085
void usage(452,12998
int make_maildirfolder(458,13090
long dodeliver(512,14497
struct delivery *get_delivery_info(get_delivery_info580,15656
char *decode_address(decode_address607,16110

/emcsvn/emc/emcmailer/trunk/courier_deliver/archive_deliver.c,444
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define _GNU_SOURCE8,195
char *msgid msgid27,638
int debugmode 28,656
struct delivery 31,693
	char *mailbox;mailbox32,711
	char *address;address33,727
	char *maildir;maildir34,743
static char *decode_address(decode_address37,763
static struct delivery *get_delivery_info(get_delivery_info78,1466
static int crchash(101,1952
int archive_mail(145,2788
int main 316,7736

/emcsvn/emc/emcmailer/trunk/qworker_main.c,275
static char *rcsid rcsid1,0
static void use_rcsid(2,84
qworker_options qe_opts;21,398
#define BUFFER_SIZE 23,424
EmcConfig * config 25,455
char * msgid 28,506
long host_id 29,527
int debugmode 30,546
int pretendmode 31,565
int outboundmode 32,586
int main(34,609

/emcsvn/emc/emcmailer/trunk/libemcqfile/libemcqfile.h,12790
#define LIB_Q_FILE_H2,21
#define _GNU_SOURCE5,63
#define MY_TYPE 18,266
#define CREATE_TRANSACTION_FILE 20,290
#define DELETE_TRANSACTION_FILE 21,334
int read_lock(23,379
int readw_lock(24,429
int write_lock(25,480
int writew_lock(26,531
int unlock_file(27,583
typedef struct QFileImpl_t 30,637
	EmcConfig * config;31,666
	const char * root_dir;32,687
	const char * fdb_dir;33,711
	MYSQL akadb;34,734
} QFileImpl;35,748
typedef struct EmcQEntry_t 37,762
	char * _sender;38,791
	char * _recipient;39,808
	char * _msgid;40,828
	long	 _inode;41,844
	char * _status;42,859
	int	 _lock;43,876
	long	 _time;44,889
	char * _file;45,903
	char * _host;46,918
	int    _outbound;47,933
	char * _qentry_file;48,952
	long   _offset;49,974
	long   _last_retry;50,991
	long   _magic;51,1012
	QFileImpl * _impl;52,1028
} EmcQEntry;53,1048
typedef struct EmcAList_t 55,1062
	long	 _qnum;56,1090
	long	 _alnum;57,1104
	char *  _msgid;58,1119
	long	 _inode;59,1136
	char *  _file;60,1151
	char *  _recipient;61,1167
	char *  _sender;62,1188
	int	  _level;63,1206
	int	  _allow_ext;64,1221
	char *  _data;65,1240
	char *  _status;66,1256
	int	 _lock;67,1274
	long   _last_retry;68,1287
	char * _qentry_file;69,1308
	char * _alist_file;70,1330
	QFileImpl * _impl;71,1351
} EmcAList;72,1371
typedef struct EmcAEntry_t 74,1384
	long	 _qnum;75,1413
	long	 _alnum;76,1427
	char *  _msgid;77,1442
	char *  _recipient;78,1459
	char *  _local;79,1480
	char *  _domain;80,1497
	char *  _sender;81,1515
	int	  _itemnum;82,1533
	char *  _action;83,1550
	char *  _data;84,1568
	char *  _status;85,1584
	int	  _retry_times;86,1602
	long	 _last_retry;87,1623
	char *  _last_error;88,1643
	char * _qentry_file;89,1665
	char * _alist_file;90,1687
	char * _aentry_file;91,1708
	QFileImpl * _impl;92,1730
} EmcAEntry;93,1750
typedef struct EmcHeader_t 96,1765
	long	 _qnum;97,1794
	long	 _alnum;98,1808
	long   _inode;99,1823
	char * _file;100,1839
	char * _header;101,1854
	char * _qentry_file;102,1871
	char * _alist_file;103,1893
	char * _header_file;104,1914
	QFileImpl * _impl;105,1936
} EmcHeader;106,1956
typedef struct EmcHint_t 108,1970
	char * _msgid;109,1997
	long	 _inode;110,2013
	char * _agent;111,2028
	char * _key;112,2044
	char * _hint;113,2058
	char * _hint_file;114,2073
	QFileImpl * _impl;115,2093
} EmcHint;116,2113
typedef struct EmcHostedEntry_t 118,2125
	long   _qnum;119,2159
	long   _alnum;120,2174
	char * _msgid;121,2190
	char * _recipient;122,2206
	char * _sender;123,2226
	long   _inode;124,2243
	char * _file;125,2259
	char * _data;126,2274
	char * _status;127,2289
	int	  _retry_times;128,2306
	long	 _last_retry;129,2327
	char *  _last_error;130,2347
	char * _qentry_file;131,2369
	char * _alist_file;132,2391
	char * _hosted_file;133,2412
	QFileImpl * _impl;134,2434
} EmcHostedEntry;135,2454
typedef struct EmcExternalEntry_t 137,2473
	long   _qnum;138,2509
	long   _alnum;139,2524
	char * _msgid;140,2540
	char * _recipient;141,2556
	char * _sender;142,2576
	long   _inode;143,2593
	char * _file;144,2609
	char * _data;145,2624
	char * _status;146,2639
	char * _rhost;147,2656
	int	  _retry_times;148,2672
	long	 _last_retry;149,2693
	char * _last_error;150,2713
	char * _qentry_file;151,2734
	char * _alist_file;152,2756
	char * _external_file;153,2777
	QFileImpl * _impl;154,2801
} EmcExternalEntry;155,2821
typedef EmcQEntry *			EmcQEntryArray;157,2842
typedef EmcAList *			EmcAListArray;158,2880
typedef EmcAEntry *			EmcAEntryArray;159,2916
typedef EmcHeader *			EmcHeaderArray;160,2954
typedef EmcHostedEntry* 	EmcHostedEntryArray;161,2992
typedef EmcExternalEntry* 	EmcExternalEntryArray;162,3038
QFileImpl * l_init_impl(166,3116
QFileImpl * l_init_impl2(167,3163
char * mysql_quote(168,3231
void p_qentry_init(172,3303
const char * l_qentry_get_sender(179,3433
const char * l_qentry_get_recipient(180,3489
const char * l_qentry_get_message_id(181,3548
long l_qentry_get_qnum(182,3608
long l_qentry_get_inode(183,3654
const char * l_qentry_get_status(184,3701
int l_qentry_get_lock(185,3757
long l_qentry_get_time(186,3802
long l_qentry_get_last_retry(187,3848
const char * l_qentry_get_filename(188,3900
const char * l_qentry_get_host(189,3958
int l_qentry_is_outbound(190,4012
QFileImpl * l_qentry_get_impl(191,4060
void l_qentry_set_impl(192,4113
void l_qentry_set_error(193,4177
EmcQEntry * l_qentry_dup(194,4244
EmcQEntry * l_qentry_create 195,4285
EmcQEntry * l_qentry_create_with_data 202,4442
EmcQEntry * l_qentry_create_real 211,4638
char * l_qentry_serialize(221,4848
EmcQEntry * l_qentry_deserialize(222,4915
int l_qentry_remove(223,4990
void l_qentry_free_list(224,5032
EmcQEntry * l_qentry_get(225,5091
int l_qentry_unlock(226,5147
int l_qentry_lock(227,5190
int l_qentry_set_status(228,5231
int l_qentry_get_pending(229,5299
int l_qentry_get_locked(230,5384
EmcQEntry * l_qentry_get_at(231,5478
void l_qentry_free(232,5540
int l_qentry_finished(233,5581
int l_qentry_get_processing_status(234,5626
long l_alist_get_qnum(238,5699
long l_alist_get_alnum(239,5743
const char * l_alist_get_message_id(240,5787
long l_alist_get_inode(241,5844
const char * l_alist_get_filename(242,5888
const char * l_alist_get_recipient(243,5943
const char * l_alist_get_sender(244,5999
int l_alist_get_level(245,6052
int l_alist_get_allow_ext(246,6095
const char * l_alist_get_data(247,6142
const char * l_alist_get_status(248,6193
QFileImpl * l_alist_get_impl(249,6246
MYSQL* l_alist_get_akadb(250,6296
void l_alist_set_impl(251,6339
EmcAList * l_alist_create(252,6400
EmcAList * l_alist_clone(260,6555
int l_alist_get_lock(265,6657
char * l_alist_serialize(266,6699
EmcAList * l_alist_deserialize(267,6761
EmcAList * l_alist_get_by_hosted(269,6866
int l_alist_lock(270,6945
int l_alist_unlock(271,6983
int l_alist_set_status(272,7023
int l_alist_set_allow_ext(273,7088
int l_alist_set_lastseen(274,7146
int l_alist_error(275,7199
int l_alist_get_pending(276,7238
int l_alist_finished(277,7307
EmcAList * l_alist_get_at(278,7349
int l_alist_message_modified(279,7405
int l_alist_remove_all_aentries(281,7488
int l_alist_max_itemnum(282,7541
void l_alist_free_list(283,7587
void l_alist_free(284,7641
int l_alist_get_by_status(286,7682
EmcAList * parse_alist_file(288,7794
int l_alist_get_processing_status(289,7858
long l_aentry_get_qnum(293,7925
long l_aentry_get_alnum(294,7972
const char * l_aentry_get_message_id(295,8019
const char * l_aentry_get_recipient(296,8079
const char * l_aentry_get_user(297,8138
const char * l_aentry_get_domain(298,8192
const char * l_aentry_get_sender(299,8248
int l_aentry_get_itemnum(300,8304
const char * l_aentry_get_action(301,8352
const char * l_aentry_get_status(302,8408
const char * l_aentry_get_data(303,8464
int l_aentry_get_retry_times(304,8518
long l_aentry_get_last_retry(305,8570
const char * l_aentry_last_error(306,8622
EmcAEntry * l_aentry_create(308,8679
int l_aentry_get_pending(315,8832
EmcAEntry * l_aentry_get_at(316,8902
void l_aentry_free_list(317,8962
int l_aentry_set_error(318,9019
int l_aentry_set_status(319,9086
int l_qentry_set_lastseen(320,9155
int l_aentry_stop_after(321,9211
int l_aentry_hold_after(322,9259
void l_aentry_free(323,9307
int l_aentry_get_all(325,9350
int l_aentry_get_by_status(326,9413
EmcAEntry *parse_aentry_file(parse_aentry_file328,9528
long l_header_get_qnum(332,9608
long l_header_get_alnum(333,9654
long l_header_get_inode(334,9701
const char * l_header_get_filename(335,9748
const char * l_header_get_header(336,9806
EmcHeader * l_header_create(337,9862
int l_header_get_pending(338,9936
EmcHeader * l_header_get_like 340,10029
EmcHeader * l_header_get_at(342,10128
void l_header_free_list(343,10187
void l_header_free(344,10243
void l_header_remove(345,10285
EmcHeader *parse_header_file(parse_header_file346,10327
const char * l_hint_get_message_id(350,10405
long l_hint_get_inode(351,10460
const char * l_hint_get_agent(352,10502
const char * l_hint_get_key(353,10552
const char * l_hint_get_hint(354,10600
EmcHint * l_hint_create(355,10649
EmcHint * l_hint_get(362,10806
void l_hint_free(364,10906
EmcHint * parse_hint_file(366,10943
int write_hint_file(367,11005
long l_hosted_get_qnum(372,11058
long l_hosted_get_alnum(373,11109
const char * l_hosted_get_message_id(374,11161
const char * l_hosted_get_recipient(375,11226
const char * l_hosted_get_sender(376,11290
long l_hosted_get_inode(377,11351
const char * l_hosted_get_filename(378,11403
const char * l_hosted_get_data(379,11466
const char * l_hosted_get_status(380,11525
int l_hosted_get_retry_times(381,11586
long l_hosted_get_last_retry(382,11643
const char * l_hosted_get_last_error(383,11700
EmcHostedEntry * l_hosted_create(384,11765
int l_hosted_set_error(391,11936
int l_hosted_set_status(392,12007
int l_hosted_get_pending(393,12080
EmcHostedEntry * l_hosted_get_at(394,12156
void l_hosted_free_list(395,12225
void l_hosted_free(396,12286
int l_hosted_get_by_status(398,12334
EmcHostedEntry * parse_hosted_file(400,12453
int l_hosted_touch(401,12524
long l_external_get_qnum(405,12604
long l_external_get_alnum(406,12661
const char * l_external_get_message_id(407,12719
const char * l_external_get_recipient(408,12790
const char * l_external_get_sender(409,12860
long l_external_get_inode(410,12927
const char * l_external_get_filename(411,12985
const char * l_external_get_data(412,13054
const char * l_external_get_status(413,13119
int l_external_get_retry_times(414,13186
long l_external_get_last_retry(415,13249
const char * l_external_get_last_error(416,13312
EmcExternalEntry * l_external_create(417,13383
int l_external_set_error(425,13581
int l_external_set_status(426,13658
int l_external_get_pending(427,13737
EmcExternalEntry * l_external_get_at(428,13817
void l_external_free_list(429,13892
void l_external_free(430,13957
int l_external_get_by_status(432,14011
EmcExternalEntry * parse_external_file(434,14134
int l_message_store(438,14225
int l_message_remove(447,14424
int l_message_merge_headers(450,14491
int l_message_merge_headers_escape(455,14606
char * l_message_merge_headers_as_string(461,14741
char * l_message_create(465,14857
char * l_message_create_with_data(474,15062
char * l_message_create_outbound_with_data(484,15291
char * l_message_create_with_mode_data(494,15529
int l_misc_sender_valid(509,15788
char * l_misc_get_unique_id(510,15836
char * l_misc_get_localname(511,15903
char * l_misc_get_domain(512,15956
char * str_tolower(513,16006
char * l_misc_read_line(514,16047
const char *l_misc_escape_address(l_misc_escape_address516,16086
int l_admin_get_all_entries(534,16787
int l_admin_get_pending_entries(536,16862
int l_admin_get_frozen_entries(538,16941
int l_admin_get_failed_entries(540,17019
int l_admin_lock_qentry(542,17097
int l_admin_unlock_qentry(543,17163
int l_admin_get_locked_entries(544,17230
int l_admin_get_qentry_info(546,17309
int l_admin_get_action_entries(556,17557
int l_admin_reset_failed_qentry(561,17681
int l_admin_thaw_qentry(563,17757
EmcQEntry * l_admin_get_qentry(565,17825
int l_admin_set_qentry_status(566,17896
int l_admin_queue_rebuild(568,17989
#define REC_SIZE 573,18078
#define HEADER_SIZE 574,18100
#define PAYLOAD_SIZE 575,18125
typedef struct db_header_t 577,18152
   long magic;579,18182
   long first_rec;580,18197
   long last_rec;581,18216
   long first_del;582,18234
   long last_del;583,18253
   long session_magic;584,18271
	long total_recs;585,18294
} db_header;587,18313
typedef struct db_record_t 590,18328
   long magic;592,18358
   char payload[payload593,18373
   long prev_rec;594,18404
   long next_rec;595,18422
} db_record;597,18441
typedef union db_entry_t 599,18455
	db_header header;601,18483
	db_record record;602,18502
} db_entry;604,18523
#define OLD_STATE_RECORD 607,18537
#define NEW_STATE_RECORD 608,18566
typedef struct db_jentry_t 610,18596
	long magic;611,18625
	long offset;612,18638
	int state;613,18652
	db_entry entry;614,18664
} db_jentry;615,18681
typedef struct transaction_t 617,18695
	int QDBJ;618,18726
	int QDB;619,18737
	char * journal_path;620,18747
	char * fdb_path;621,18769
} transaction;622,18787
void initdb(625,18804
int fdb_insert_rec(626,18837
int fdb_delete_rec(627,18875
int fdb_update_rec(628,18913
typedef int (*QDBFunc)QDBFunc629,18949
EmcQEntry * fdb_get(630,19005
int fdb_get_num_entries(631,19060
int fdb_foreach(632,19106
int fdb_compact_db(633,19174
EmcQEntry * parse_qentry_file(635,19215
int write_qentry_file(636,19285
void fdb_dump(637,19326
void fdb_dump_journal(638,19358
void fdb_initdb(639,19398

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdelete.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,79
const char * msgid 12,233
int debugmode 13,261
int main(15,281

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdb.c,1335
static char *rcsid rcsid1,0
static void use_rcsid(2,75
#define _GNU_SOURCE8,183
#define HEADER_MAGIC 25,514
#define JOURNAL_MAGIC 26,544
char * QFILE 29,577
char * QFILE_JOURNAL 30,599
void _fdb_initdb_internal(32,635
int _fdb_rebuild(33,696
void _add_qentry_to_fdb(34,756
int _assert_db_integrity(35,836
int _db_begin_read(36,903
int _db_begin_write(37,965
void _db_end_read(38,1028
void _db_close_transaction(39,1071
int _db_rollback(40,1123
int _db_commit(41,1202
int _fdb_insert_rec_internal(42,1279
int read_rec(44,1350
int write_rec(45,1431
int write_rec_notrans 46,1512
void fdb_initdb(49,1604
void _fdb_initdb_internal(57,1883
int _fdb_rebuild(164,4442
void _add_qentry_to_fdb(198,5238
int _assert_db_integrity(228,5908
int _db_begin_read(268,7227
int _db_begin_write(316,8240
void _db_end_read(399,10359
void _db_close_transaction(412,10594
int _db_rollback(436,11010
int _db_commit(499,12513
int fdb_insert_rec(565,14024
int _fdb_insert_rec_internal(590,14621
int fdb_delete_rec(739,18193
int fdb_update_rec(872,21465
EmcQEntry * fdb_get(933,22828
int fdb_foreach(982,24047
int read_rec(1075,25803
int write_rec(1105,26462
int write_rec_notrans 1171,28127
int fdb_get_num_entries(1215,29119
void fdb_dump(1246,29728
void fdb_dump_journal(1372,33588
int fdb_compact_db(1449,35778

/emcsvn/emc/emcmailer/trunk/libemcqfile/libcommon.c,196
static char *rcsid rcsid1,0
static void use_rcsid(2,82
int lock_reg(12,258
int read_lock(23,626
int readw_lock(27,744
int write_lock(31,864
int writew_lock(35,983
int unlock_file(39,1104

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdb.notrans.c,474
static char *rcsid rcsid1,0
static void use_rcsid(2,83
#define HEADER_MAGIC 23,477
#define REC_MAGIC 24,507
char * QFILE 27,536
char * QFILE_JOURNAL 28,558
char * filep 29,593
int read_rec(32,643
int write_rec(33,724
void fdb_initdb(36,807
int fdb_insert_rec(79,1879
int fdb_delete_rec(234,5344
int fdb_foreach(364,8550
void compact_db_callback(491,11877
int fdb_compact_db(513,12306
int read_rec(571,13672
int write_rec(613,14604
void fdb_dump(654,15542

/emcsvn/emc/emcmailer/trunk/libemcqfile/tester.c,136
static char *rcsid rcsid1,0
static void use_rcsid(2,78
char * msgid 17,331
int debugmode 18,353
void func 20,373
int main(46,872

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdumper.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,79
const char * msgid 12,233
int debugmode 13,261
int main(15,281

/emcsvn/emc/emcmailer/trunk/libemcqfile/qentry.c,2211
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int p_init_queue_directory(27,555
void purge_qentry_dir(33,789
void purge_dir(34,835
void P_BEGIN_CREATE_QENTRY(36,873
void P_COMMIT_CREATE_QENTRY(65,1563
void P_ROLLBACK_CREATE_QENTRY(91,2209
int P_IS_QENTRY_BEING_CREATED(96,2368
void P_BEGIN_DELETE_QENTRY(122,2951
int P_IS_QENTRY_BEING_DELETED(150,3698
void p_qentry_init(175,4280
const char * l_qentry_get_sender(207,5052
const char * l_qentry_get_recipient(210,5136
const char * l_qentry_get_message_id(213,5226
long l_qentry_get_qnum(216,5313
long l_qentry_get_inode(219,5387
const char * l_qentry_get_status(222,5461
int l_qentry_get_lock(225,5545
long l_qentry_get_time(228,5616
long l_qentry_get_last_retry(231,5688
const char * l_qentry_get_filename(234,5772
const char * l_qentry_get_host(237,5856
int l_qentry_is_outbound(240,5936
QFileImpl * l_qentry_get_impl(243,6014
void l_qentry_set_impl(246,6093
EmcQEntry * l_qentry_dup(250,6184
EmcQEntry * l_qentry_create 259,6418
EmcQEntry *l_qentry_create_real(l_qentry_create_real271,6684
EmcQEntry * l_qentry_create_with_data 286,7004
int p_init_queue_directory(495,11843
#define EMPTY_TAG 545,12845
char * l_qentry_serialize(547,12876
EmcQEntry * l_qentry_deserialize(587,14080
#define _CHECK_STREAM 589,14160
int l_qentry_remove(659,15923
EmcQEntry * l_qentry_get(774,18567
int l_qentry_lock(782,18721
int l_qentry_unlock(824,19586
int l_qentry_set_status(873,20662
int l_qentry_set_lastseen(922,21804
EmcQEntry * l_qentry_get_at(972,23407
void l_qentry_free_list(976,23503
typedef struct foreach_data_t 992,23831
	EmcQEntryArray * entries;993,23863
	QFileImpl * impl;994,23890
	int len;995,23909
	int limit;996,23919
	int lock;997,23931
	long retry_interval;998,23942
} foreach_data;999,23964
int p_get_pending_callback(1001,23981
int l_qentry_get_pending(1050,24944
int p_get_locked_callback(1087,25751
int l_qentry_get_locked(1129,26596
int l_qentry_finished(1166,27382
int l_qentry_get_processing_status(1215,28230
void l_qentry_free(1310,30577
void purge_qentry_dir(1324,30866
void purge_dir(1341,31145
EmcQEntry * parse_qentry_file(1395,32385
int write_qentry_file(1576,36843

/emcsvn/emc/emcmailer/trunk/libemcqfile/hint.c,398
static char *rcsid rcsid1,0
static void use_rcsid(2,77
const char * l_hint_get_message_id(26,492
long l_hint_get_inode(29,571
const char * l_hint_get_agent(32,637
const char * l_hint_get_key(35,711
const char * l_hint_get_hint(38,781
EmcHint * l_hint_create(42,854
EmcHint * l_hint_get(140,2924
void l_hint_free(229,4627
EmcHint * parse_hint_file(243,4819
int write_hint_file(348,7027

/emcsvn/emc/emcmailer/trunk/libemcqfile/hosted.c,1022
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_hosted_file(25,511
long l_hosted_get_qnum(28,562
long l_hosted_get_alnum(31,637
const char * l_hosted_get_message_id(34,714
const char * l_hosted_get_recipient(37,804
const char * l_hosted_get_sender(40,897
long l_hosted_get_inode(43,984
const char * l_hosted_get_filename(46,1061
const char * l_hosted_get_data(49,1148
const char * l_hosted_get_status(52,1231
int l_hosted_get_retry_times(55,1318
long l_hosted_get_last_retry(58,1406
const char * l_hosted_get_last_error(61,1493
EmcHostedEntry * l_hosted_create(65,1589
int l_hosted_set_error(171,4039
int l_hosted_touch(248,5870
int l_hosted_set_status(291,6797
int l_hosted_get_pending(306,7164
int l_hosted_get_all(336,7686
int l_hosted_get_by_status(361,8190
EmcHostedEntry * l_hosted_get_at(469,10327
void l_hosted_free_list(473,10435
void l_hosted_free(485,10658
void l_hosted_remove 499,11015
EmcHostedEntry * parse_hosted_file(507,11161
int write_hosted_file(688,15169

/emcsvn/emc/emcmailer/trunk/libemcqfile/main.c,348
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
#define MY_TYPE 24,487
extern int connect_to_aka_db(30,653
static MYSQL * akadb 32,717
static int inited_akadb 33,746
QFileImpl * l_init_impl(36,777
QFileImpl * l_init_impl2(41,864
MYSQL * l_impl_get_akadb(104,2457
void _fini(109,2532
void _init(114,2603

/emcsvn/emc/emcmailer/trunk/libemcqfile/misc.c,430
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define UNIQUE_ID_SIZE 18,365
extern int is_sender_valid(24,535
const char *l_misc_escape_address(l_misc_escape_address26,585
int l_misc_sender_valid(57,1151
char * l_misc_get_localname(61,1238
char * l_misc_get_domain(86,1537
char * string_base62(112,1837
char * l_misc_get_unique_id(127,2146
#define LINE_BUFFER_SIZE 164,3011
char * l_misc_read_line(166,3046

/emcsvn/emc/emcmailer/trunk/libemcqfile/hinter.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,78
const char * msgid 12,232
int debugmode 13,260
int main(15,280

/emcsvn/emc/emcmailer/trunk/libemcqfile/admin.c,1377
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define ALLOCATION_BATCH 27,558
int p_admin_get_all_callback(31,606
int p_admin_get_failed_callback(32,669
int p_admin_get_frozen_callback(33,735
int p_admin_get_pending_callback(34,801
int p_admin_get_entries(35,867
typedef struct p_admin_foreach_data_t 40,962
	EmcQEntryArray * entries;41,1002
	QFileImpl * impl;42,1029
	int len;43,1048
	int lock;44,1058
	int allocated;45,1069
} p_admin_foreach_data;46,1085
int l_admin_get_all_entries(48,1110
int l_admin_get_pending_entries(54,1263
int l_admin_get_frozen_entries(60,1425
int l_admin_get_failed_entries(67,1585
int p_admin_get_all_callback(73,1744
int p_admin_get_failed_callback(101,2319
int p_admin_get_frozen_callback(133,2965
int p_admin_get_pending_callback(165,3611
int p_admin_get_locked_callback(197,4257
int p_admin_get_unlocked_callback(229,4879
int p_admin_get_entries(261,5502
int l_admin_lock_qentry 290,6144
int l_admin_unlock_qentry 318,6703
int l_admin_get_locked_entries 346,7266
int l_admin_get_qentry_info(352,7426
int l_admin_set_action_status(383,8176
int l_admin_get_action_entries(419,8962
int l_admin_queue_rebuild(454,9804
int l_admin_reset_failed_qentry(460,9926
int l_admin_thaw_qentry(549,12068
int l_admin_set_qentry_status(608,13497
EmcQEntry * l_admin_get_qentry(636,14096

/emcsvn/emc/emcmailer/trunk/libemcqfile/alist.c,1725
static char *rcsid rcsid1,0
static void use_rcsid(2,77
int write_alist_file(26,552
int l_alist_get_by_status_internal 27,595
long l_alist_get_qnum(35,922
long l_alist_get_alnum(38,990
const char * l_alist_get_message_id(41,1060
long l_alist_get_inode(44,1143
const char * l_alist_get_filename(47,1213
const char * l_alist_get_recipient(50,1293
const char * l_alist_get_sender(53,1379
int l_alist_get_level(56,1459
int l_alist_get_allow_ext(59,1528
const char * l_alist_get_data(62,1605
const char * l_alist_get_status(65,1681
int l_alist_get_lock(68,1761
QFileImpl * l_alist_get_impl(71,1828
void l_alist_set_impl(74,1903
int l_build_expand_forward(78,1990
int l_build_expand_forward_bounce(83,2102
EmcAList * l_alist_create(87,2226
EmcAList * l_alist_clone(186,4638
EmcAList * l_alist_get_by_hosted(294,7365
int l_alist_lock(309,7728
int l_alist_unlock(344,8396
void l_alist_set_filename(378,9064
int l_alist_set_status(384,9195
int l_alist_set_allow_ext(420,9937
int l_alist_set_lastseen(454,10603
MYSQL * l_alist_get_akadb(487,11264
int l_alist_get_processing_status(491,11345
int l_alist_finished(536,12226
int l_alist_get_pending(551,12552
int l_alist_get_all(574,13043
int l_alist_get_by_status 597,13504
int l_alist_get_by_status_internal 605,13727
EmcAList * l_alist_get_at(725,16280
void l_alist_free_list(729,16373
int l_alist_message_modified(744,16677
int l_alist_remove_all_aentries(840,19176
int l_alist_max_itemnum(875,19960
#define EMPTY_TAG 908,20552
char * l_alist_serialize(910,20583
EmcAList * l_alist_deserialize(951,21711
#define _CHECK_STREAM 953,21789
void l_alist_free(1001,23399
EmcAList * parse_alist_file(1016,23706
int write_alist_file(1198,27920

/emcsvn/emc/emcmailer/trunk/libemcqfile/qe_tester.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * msgid 12,235
int debugmode 13,263
int main(15,283

/emcsvn/emc/emcmailer/trunk/libemcqfile/external.c,1092
static char *rcsid rcsid1,0
static void use_rcsid(2,80
int write_external_file(25,513
long l_external_get_qnum(28,572
long l_external_get_alnum(31,657
const char * l_external_get_message_id(34,744
const char * l_external_get_recipient(37,844
const char * l_external_get_sender(40,947
long l_external_get_inode(43,1044
const char * l_external_get_filename(46,1131
const char * l_external_get_data(49,1228
const char * l_external_get_status(52,1321
const char * l_external_get_rhost(55,1418
int l_external_get_retry_times(58,1513
long l_external_get_last_retry(61,1611
const char * l_external_get_last_error(64,1708
EmcExternalEntry * l_external_create(68,1814
int l_external_set_error(170,4456
int l_external_set_status(240,6346
int l_external_get_pending(255,6749
int l_external_get_all(280,7308
int l_external_get_by_status(305,7854
EmcExternalEntry * l_external_get_at(401,9897
void l_external_free_list(405,10015
void l_external_free(416,10269
void l_external_remove 431,10703
EmcExternalEntry * parse_external_file(439,10863
int write_external_file(624,15246

/emcsvn/emc/emcmailer/trunk/libemcqfile/message.c,700
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
#define MY_TYPE 31,643
#define BUFFER_SIZE 33,667
extern const char * config_get_filename(39,838
int l_message_store(45,1065
int l_message_remove(133,3044
char *l_message_create(l_message_create154,3481
char *l_message_create_with_data(l_message_create_with_data170,3806
char *l_message_create_outbound_with_data(l_message_create_outbound_with_data186,4161
char *l_message_create_with_mode_data(l_message_create_with_mode_data202,4525
int l_message_merge_headers(440,9502
int l_message_merge_headers_escape 450,9703
char *l_message_merge_headers_as_string(l_message_merge_headers_as_string656,14146

/emcsvn/emc/emcmailer/trunk/libemcqfile/header.c,583
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_header_file(26,512
long l_header_get_qnum(28,557
long l_header_get_alnum(31,627
long l_header_get_inode(34,699
const char * l_header_get_filename(37,771
const char * l_header_get_header(40,853
EmcHeader * l_header_create(44,936
int l_header_get_pending(171,3758
EmcHeader * l_header_get_like 302,6282
EmcHeader * l_header_get_at(344,7437
void l_header_free_list(348,7530
void l_header_remove(360,7748
void l_header_free(366,7876
EmcHeader * parse_header_file(377,8093
int write_header_file(488,10451

/emcsvn/emc/emcmailer/trunk/libemcqfile/aentry.c,1259
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_aentry_file(26,512
EmcAList * parse_alist_file(27,558
long l_aentry_get_qnum(29,627
long l_aentry_get_alnum(32,701
const char * l_aentry_get_message_id(35,777
const char * l_aentry_get_recipient(38,866
const char * l_aentry_get_user(41,958
const char * l_aentry_get_domain(44,1041
const char * l_aentry_get_sender(47,1127
int l_aentry_get_itemnum(50,1213
const char * l_aentry_get_action(53,1292
const char * l_aentry_get_status(56,1378
const char * l_aentry_get_data(59,1464
int l_aentry_get_retry_times(62,1546
long l_aentry_get_last_retry(65,1633
const char * l_aentry_last_error(68,1719
int l_aentry_internal_set_status(72,1810
EmcAEntry *l_aentry_create(l_aentry_create74,1898
int l_aentry_get_pending(158,3988
int l_aentry_get_all(179,4499
int l_aentry_get_by_status(200,4997
EmcAEntry * l_aentry_get_at(289,6756
void l_aentry_free_list(293,6853
int l_aentry_set_error(306,7102
int l_aentry_touch(404,9637
int l_aentry_set_status(462,10898
int l_aentry_stop_after(468,11032
int l_aentry_hold_after(473,11143
int l_aentry_internal_set_status(479,11255
void l_aentry_free(626,14902
EmcAEntry * parse_aentry_file(643,15322
int write_aentry_file(843,19957

/emcsvn/emc/emcmailer/trunk/libemcqfile/initdb.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,78
const char * msgid 12,232
int debugmode 13,260
int main(15,280

/emcsvn/emc/emcmailer/trunk/libemcqfile/sherlock.c,118
static char *rcsid rcsid1,0
static void use_rcsid(2,81
char * msgid 17,353
int debugmode 18,375
int main(20,395

/emcsvn/emc/emcmailer/trunk/libemcqfile/compactdb.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * msgid 11,234
int debugmode 12,262
int main(14,282

/emcsvn/emc/emcmailer/trunk/libemcqfile/build.c,648
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
int p_build_do_special_addresses(26,553
int p_build_check_alias(27,604
int l_build_is_external_domain(28,646
int resp_active(30,717
reassemble_address(81,1951
int l_build_expand_alist(112,2537
int l_build_expand_outbound_alist(917,22465
int l_build_expand_relay(1259,31028
int l_build_expand_hosted(1311,32223
int l_build_expand_external(1332,32735
int l_build_expand_shcal(1362,33361
int l_build_is_external_domain(1462,35855
int l_build_is_external_address(1509,36811
int p_build_check_alias(1531,37183
int p_build_do_special_addresses(1609,38776

/emcsvn/emc/emcmailer/trunk/exim_q.c,130
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define BUFSIZE 22,437
int exim_q(29,742
int exim_q_headers(167,4016

/emcsvn/emc/emcmailer/trunk/exim_q.h,114
#define EXIM_Q_H2,17
#define QUEUE_FILE 4,35
#define QUEUE_MEM 5,56
int exim_q(7,78
int exim_q_headers(8,167

/emcsvn/emc/emcmailer/trunk/ldeliver.c,1202
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define ELE_LDELIVER_USE_COURIER37,755
extern int debugmode;39,789
extern int pretendmode;40,811
extern const char *msgid;msgid41,835
extern ldeliver_options ldeliver_opts;43,862
#define LOCAL_DELIVERY 45,902
#define REMOTE_DELIVERY 46,927
#define AUTO_DELIVERY 47,953
#define ERR_CONTAINS 49,978
#define BUFFER_SIZE 51,1003
EmcHash *l_recipients;l_recipients53,1032
EmcHash *l_inodes;l_inodes54,1055
EmcHash *l_extra_data;l_extra_data55,1074
int deliverymode 57,1098
void do_lfilenames(60,1160
off_t get_quota(61,1215
int do_quota(62,1276
void do_quota_notify(63,1341
char *remote_delivery_addr(remote_delivery_addr64,1391
int do_mb_filters(65,1475
char *get_header_data(get_header_data67,1592
int do_contains(68,1659
char *mailboxvars(mailboxvars70,1763
int do_ldeliver(73,1844
void do_lfilenames(154,3609
off_t get_quota(726,19400
int do_quota(801,21167
void do_quota_notify(877,23512
int do_mb_filters(960,25710
char *get_header_data(get_header_data1213,32182
char *quote_with_QE(quote_with_QE1261,33265
int do_contains(1329,34927
char *mailboxvars(mailboxvars1443,37373

/emcsvn/emc/emcmailer/trunk/ldeliver.h,643
#define L_DELIVER_H2,20
#define OVECSIZE 9,128
#define WEBFILTER_AND 11,149
#define WEBFILTER_OR 12,173
#define WEBFILTER_CONTAINS 13,196
#define WEBFILTER_NOT_CONTAINS 14,225
typedef struct ldeliver_options_t 16,259
	EmcQImpl * impl;17,295
	EmcConfig * config;18,313
	int batch_num;19,334
	const char * sender;20,350
} ldeliver_options;21,372
typedef struct ldeliver_quota_t 23,393
	const char * recipient;24,427
	off_t quota;25,452
	off_t on_disk_quota;26,466
	int quota_action;27,488
	int quota_notify;28,507
	char * notify_address;29,526
	char * redirect_address;30,550
} ldeliver_quota;31,576
int do_ldeliver(33,595

/emcsvn/emc/emcmailer/trunk/memcache/mailer.c,129
static char *rcsid rcsid1,0
static void use_rcsid(2,79
em_memcache_t *emcmailer_memcache_init(emcmailer_memcache_init18,357

/emcsvn/emc/emcmailer/trunk/memcache/mailer.h,100
#define MEMCACHE_MAILER_H2,26
em_memcache_t *emcmailer_memcache_init(emcmailer_memcache_init7,99

/emcsvn/emc/emcmailer/trunk/memcache/main.c,762
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
MYSQL mysql_sock;22,430
struct virus_options_t 24,449
	int providers;25,474
	int notify;26,490
	int notify_local_only;27,503
	int daily_digest;28,527
	int monthly_digest;29,546
	int trigger_action;30,567
	int new_virus_action;31,588
	int parse_fail_action;32,611
	int block_encrypted;33,635
	char *admin;admin34,657
	char *notify_text;notify_text35,671
	char *notify_footer;notify_footer36,691
	char *new_virus_notify_address;new_virus_notify_address37,713
	char *parse_fail_admin;parse_fail_admin38,746
	char *admin2;admin239,771
	char *admin3;admin340,786
void init_db(43,805
void init_virus_options(45,822
void init_db(200,5124
int main(230,5789

/emcsvn/emc/emcmailer/trunk/memcache/virus.h,1439
#define EMC_VIRUS_H2,20
#define NOTIFY_SENDER 4,41
#define NOTIFY_RECIPIENT 5,65
#define NOTIFY_ADMINISTRATOR 6,92
#define DELETE_MESSAGE 8,124
#define STRIP_ATTACHMENT 9,149
#define NEW_VIRUS_FREEZE 11,177
#define NEW_VIRUS_DELIVER 12,204
#define PARSE_FAIL_NOTIFY_ADMIN 14,233
#define PARSE_FAIL_DELIVER_ANYWAY 15,267
#define SUBJ_LEN 17,304
#define SUBJ_LEN_ENC 18,324
struct virus_summary_report_t 21,385
	char * msg_filename;22,417
	char * ip;23,439
	char * subject;24,451
} virus_summary_report;25,468
struct virus_options_t 27,493
	int providers;28,518
	int notify;29,534
	int notify_local_only;30,547
	int daily_digest;31,571
	int monthly_digest;32,590
	int trigger_action;33,611
	int new_virus_action;34,632
	int parse_fail_action;35,655
	int block_encrypted;36,679
	char *admin;admin37,701
	char *notify_text;notify_text38,715
	char *notify_footer;notify_footer39,735
	char *new_virus_notify_address;new_virus_notify_address40,757
	char *parse_fail_admin;parse_fail_admin41,790
	char *admin2;admin242,815
	char *admin3;admin343,830
struct provider_t 46,849
	char * name;47,869
	int code;48,883
	char * host;49,894
	int port;50,908
	char * scan_dir;51,919
	int sock;52,937
	int header_added;53,948
	int fallback;54,967
	int was_used;55,982
	int was_clean;56,997
struct virus_t 59,1017
	char * virus_name;60,1034
	char * attachment_name;61,1054
	char * provider_name;62,1079

/emcsvn/emc/emcmailer/trunk/memcache/cache.c,1117
static char *rcsid rcsid1,0
static void use_rcsid(2,78
em_memcache_t *em_memcache_init(em_memcache_init20,392
GString *em_serialize_row(em_serialize_row88,1848
#define EMDELIM 109,2274
#define DELIMLEN 110,2301
void em_result_set_free(112,2321
EmResultSet *em_result_set_new(em_result_set_new140,2891
void em_db_row_free(157,3191
EmDbRow *em_db_row_new(em_db_row_new187,3660
void em_result_set_add_row(202,3976
EmDbRow *em_mysql_row_to_em_row(em_mysql_row_to_em_row208,4095
EmResultSet *em_mysql_result_to_em_result(em_mysql_result_to_em_result233,4631
EmDbRow *em_result_fetch_row(em_result_fetch_row255,5114
ConstGString *em_serialize_result(em_serialize_result266,5317
EmResultSet *em_deserialize_result_set(em_deserialize_result_set308,6386
EmDbRow *em_deserialize_row(em_deserialize_row335,6921
char **em_char_from_row(em_char_from_row376,7720
void em_dump_row(381,7784
void em_dump_result(392,7985
void em_dump_string(407,8301
EmResultSet *em_cache_get(em_cache_get424,8606
EmResultSet *em_cache_sql(em_cache_sql450,9098
EmResultSet *em_cache_query(em_cache_query492,9892

/emcsvn/emc/emcmailer/trunk/memcache/cache.h,1391
#define EM_CACHE_H2,19
typedef struct const_g_string 13,317
	char *str;str14,349
	unsigned int len;15,361
} ConstGString;16,380
typedef struct em_cached_results 21,481
	int num_rows;25,602
	GArray *rows;rows30,676
	char *data;data36,810
	int at_row;42,959
	apr_pool_t *sp;sp47,1042
} EmResultSet;48,1059
typedef struct em_row 54,1198
	int columns;58,1267
	unsigned long *lengths;lengths63,1332
	char **fields;fields68,1405
} EmDbRow;69,1421
char **em_char_from_row(em_char_from_row75,1547
EmDbRow *em_deserialize_row(em_deserialize_row80,1671
EmResultSet *em_deserialize_result_set(em_deserialize_result_set85,1818
EmResultSet *em_mysql_result_to_em_result(em_mysql_result_to_em_result90,1957
void em_dump_result(95,2085
void em_dump_row(100,2187
GString *em_serialize_row(em_serialize_row105,2318
EmDbRow *em_result_fetch_row(em_result_fetch_row110,2435
ConstGString *em_serialize_result(em_serialize_result116,2626
void em_dump_string(121,2734
typedef struct em_memcache_s 126,2852
	apr_memcache_t *cache;cache127,2883
	apr_pool_t *p;p128,2907
} em_memcache_t;129,2923
EmResultSet *em_cache_query(em_cache_query136,3209
em_memcache_t *em_memcache_init(em_memcache_init148,3478
EmResultSet *em_cache_get(em_cache_get150,3565
EmResultSet *em_cache_sql(em_cache_sql152,3650
void em_result_set_free(160,3773
void em_db_row_free(161,3820

/emcsvn/emc/emcmailer/trunk/bcastbnc/bcastbnc.c,516
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
char *filename filename23,469
char *sender sender24,492
char *recip recip25,513
int debugmode 26,533
int unlink_msgfile 27,552
char *configfile configfile28,576
int sock 29,601
char *msgid msgid30,615
char *refdomain refdomain31,635
char *data data32,659
char *local local34,679
char *domain domain35,699
#define BUFFER_SIZE 37,721
int leave(39,750
int leave(41,802
void init_args(46,840
int main(145,2907

/emcsvn/emc/emcmailer/trunk/exdeliver_main.c,326
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define BUFFER_SIZE 20,401
char * msgid 23,455
int debugmode 24,476
int pretendmode 25,495
const char * sender;27,517
long batch_num 28,538
const char * queue_type 29,558
const char * configfile 30,590
exdeliver_options exdeliver_opts;32,623
int main(34,658

/emcsvn/emc/emcmailer/trunk/forwarding/forwarding.c,433
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
void do_dynamic_recip(31,642
int p_expand_dynamic_forwarding(32,702
int forwarding_expand_bounce(34,789
int forwarding_expand 108,2605
int p_expand_dynamic_forwarding(384,10560
void do_dynamic_recip(539,14090
GArray *forwarding_get_members forwarding_get_members557,14617
char *get_boxfulladdress_by_rid get_boxfulladdress_by_rid600,15650

/emcsvn/emc/emcmailer/trunk/forwarding/forwarding.h,218
#define EMC_FORWARDING2,23
int forwarding_expand_bounce(4,47
int forwarding_expand(5,113
GArray *forwarding_get_members forwarding_get_members6,172
char *get_boxfulladdress_by_rid get_boxfulladdress_by_rid7,239

/emcsvn/emc/emcmailer/trunk/constants.h,1655
#define EMC_CONSTANTS_H2,24
#define ASSERT(5,64
#define START_BREAK_FRAME 8,203
#define END_BREAK_FRAME 11,264
#define SAFE_FREE(14,329
#define DUPLICATE_RECIPIENT_ERROR 17,397
#define OP_FAIL 19,436
#define OP_OK 20,458
#define SPAM_ACTION 22,478
#define VIRUS_ACTION 23,510
#define EIC_ACTION 24,543
#define RELAY_ACTION 25,574
#define BOUNCE_ACTION 26,607
#define MF_ACTION 27,641
#define LIST_ACTION 28,676
#define AUTO_ACTION 29,712
#define BCAST_BOUNCE_ACTION 30,748
#define LIST_BOUNCE_ACTION 31,788
#define LISTSERVE_ACTION 32,825
#define OUT_BCS_ACTION	33,861
#define OUT_VIRUS_ACTION 34,893
#define OUT_MF_ACTION 35,933
#define OUT_BOUNCE_ACTION 36,970
#define OUT_TAGLINE	37,1007
#define J2_STORAGE_ACTION 38,1042
#define ARCHIVER_ACTION 39,1081
#define OUT_ARCHIVER_ACTION 40,1120
#define CONFILTER_ACTION 41,1162
#define OUT_CONFILTER_ACTION 42,1199
#define SPOOL_ACTION	43,1243
#define OUT_SPOOL_ACTION	44,1272
#define POLICYSMART_ACTION	45,1308
#define OUT_POLICYSMART_ACTION	46,1345
#define I_RELAY_ACTION 48,1390
#define I_FORWARD_ACTION 49,1424
#define I_SHRDCAL_ACTION 50,1460
#define I_FWD_BOUNCE_ACTION 51,1496
#define I_HOSTED_ACTION 52,1534
#define I_EXTERNAL_ACTION 53,1568
#define QE_PND 55,1605
#define QE_FAIL 56,1624
#define QE_DONE 57,1643
#define QE_STOP 58,1662
#define QE_FRZE 59,1681
#define AL_PND 61,1701
#define AL_FAIL 62,1720
#define AL_DONE 63,1739
#define AL_STOP 64,1758
#define AL_FRZE 65,1777
#define EMC_FAIL 67,1797
#define DEFAULT_RETRY_TIMES 69,1818
#define DEFAULT_RETRY_INTERVAL 70,1848
#define DEFAULT_ON_FAIL 71,1881
#define DEFAULT_ON_FATAL 72,1912

/emcsvn/emc/emcmailer/trunk/listserv/listserv.c,917
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
EmcQImpl * impl;27,548
EmcConfig * config;28,565
MYSQL mysql;29,585
MYSQL_ROW row;30,598
MYSQL_RES * rs;31,613
char * filename 33,630
char * sender 34,654
char * recip 35,676
int debugmode 36,697
int unlink_msgfile 37,716
char * configfile 38,740
int sock 39,766
char * msgid 40,780
char * refdomain 41,801
char * data 42,826
char * local 44,847
char * domain 45,868
#define BUFFER_SIZE 47,891
int leave(49,921
void do_help(53,959
int check_password(110,2737
int member_exists(156,3711
void send_to_owner(187,4328
void send_auth_token(264,5981
int subscribe_member(353,8584
int unsubscribe_member(404,9879
void admin_subscribe(455,11189
void admin_unsubscribe(507,12876
void user_subscribe(555,14380
void user_unsubscribe(673,17996
void sub_conf(758,20615
void init_args(836,22927
int main(931,25007

/emcsvn/emc/emcmailer/trunk/libemcqmysql/libemcqmysql.h,10239
#define LIB_Q_MYSQL_H2,22
#define _GNU_SOURCE4,45
#define MY_TYPE 12,164
extern char *_mysql_quote(_mysql_quote14,189
typedef struct QMysqlImpl_t 16,250
	EmcConfig *config;config17,280
	MYSQL *queue;queue18,300
	MYSQL *aka;aka19,315
} QMysqlImpl;20,328
typedef struct EmcQEntry_t 22,343
	char * _sender;23,372
	char * _recipient;24,389
	char * _msgid;25,409
	long	_inode;26,425
	char * _status;27,439
	int	 _lock;28,456
	long	_time;29,469
	long	_last_retry;30,482
	char * _file;31,501
	char * _host;32,516
	int    _outbound;33,531
	QMysqlImpl * _impl;34,550
} EmcQEntry;35,571
typedef struct EmcAList_t 37,585
	long	 _qnum;38,613
	long	 _alnum;39,627
	char *  _msgid;40,642
	long	 _inode;41,659
	char *  _file;42,674
	char *  _recipient;43,690
	char *  _sender;44,711
	int	  _level;45,729
	int	  _allow_ext;46,744
	char *  _data;47,763
	char *  _status;48,779
	int	 _lock;49,797
	QMysqlImpl * _impl;50,810
} EmcAList;51,831
typedef struct EmcAEntry_t 53,844
	long	 _qnum;54,873
	long	 _alnum;55,887
	char *  _msgid;56,902
	char *  _recipient;57,919
	char *  _local;58,940
	char *  _domain;59,957
	char *  _sender;60,975
	int	  _itemnum;61,993
	char *  _action;62,1010
	char *  _data;63,1028
	char *  _status;64,1044
	int	  _retry_times;65,1062
	long	 _last_retry;66,1083
	char *  _last_error;67,1103
	QMysqlImpl * _impl;68,1125
} EmcAEntry;69,1146
typedef struct EmcHeader_t 72,1161
	long	 _qnum;73,1190
	long	 _alnum;74,1204
	long   _inode;75,1219
	char * _file;76,1235
	char * _header;77,1250
	QMysqlImpl * _impl;78,1267
} EmcHeader;79,1288
typedef struct EmcHint_t 81,1302
	char * _msgid;82,1329
	long	 _inode;83,1345
	char * _agent;84,1360
	char * _key;85,1376
	char * _hint;86,1390
	QMysqlImpl * _impl;87,1405
} EmcHint;88,1426
typedef struct EmcHostedEntry_t 90,1438
	long   _qnum;91,1472
	long   _alnum;92,1487
	char * _msgid;93,1503
	char * _recipient;94,1519
	char * _sender;95,1539
	long   _inode;96,1556
	char * _file;97,1572
	char * _data;98,1587
	char * _status;99,1602
	int	  _retry_times;100,1619
	long	 _last_retry;101,1640
	char *  _last_error;102,1660
	QMysqlImpl * _impl;103,1682
} EmcHostedEntry;104,1703
typedef struct EmcExternalEntry_t 106,1722
	long   _qnum;107,1758
	long   _alnum;108,1773
	char * _msgid;109,1789
	char * _recipient;110,1805
	char * _sender;111,1825
	long   _inode;112,1842
	char * _file;113,1858
	char * _data;114,1873
	char * _status;115,1888
	char * _rhost;116,1905
	int	  _retry_times;117,1921
	long	 _last_retry;118,1942
	char *  _last_error;119,1962
	QMysqlImpl * _impl;120,1984
} EmcExternalEntry;121,2005
typedef EmcQEntry *			EmcQEntryArray;123,2026
typedef EmcAList *			EmcAListArray;124,2064
typedef EmcAEntry *			EmcAEntryArray;125,2100
typedef EmcHeader *			EmcHeaderArray;126,2138
typedef EmcHostedEntry* 	EmcHostedEntryArray;127,2176
typedef EmcExternalEntry* 	EmcExternalEntryArray;128,2222
QMysqlImpl * l_init_impl(132,2300
QMysqlImpl * l_init_impl2(133,2348
MYSQL * l_impl_get_akadb(134,2417
void _reinit(135,2464
void _fini(136,2497
char * mysql_quote(137,2511
void p_qentry_init(141,2583
const char * l_qentry_get_sender(150,2751
const char * l_qentry_get_recipient(151,2807
const char * l_qentry_get_message_id(152,2866
long l_qentry_get_qnum(153,2926
long l_qentry_get_inode(154,2972
const char * l_qentry_get_status(155,3019
int l_qentry_get_lock(156,3075
long l_qentry_get_time(157,3120
long l_qentry_get_last_retry(158,3166
const char * l_qentry_get_filename(159,3218
const char * l_qentry_get_host(160,3276
int l_qentry_is_outbound(161,3330
QMysqlImpl * l_qentry_get_impl(162,3378
void l_qentry_set_impl(163,3432
EmcQEntry * l_qentry_dup(164,3497
EmcQEntry * l_qentry_create 165,3538
EmcQEntry * l_qentry_create_with_data 172,3696
EmcQEntry * l_qentry_create_real 181,3893
char * l_qentry_serialize(191,4104
EmcQEntry * l_qentry_deserialize(192,4172
int l_qentry_remove(193,4248
EmcQEntry * l_qentry_get(194,4290
int l_qentry_lock(195,4347
int l_qentry_unlock(196,4388
int l_qentry_set_status(197,4431
int l_qentry_get_pending(198,4499
int l_qentry_get_locked(199,4585
int l_qentry_finished(200,4680
EmcQEntry * l_qentry_get_at(201,4725
void l_qentry_free_list(202,4787
int l_qentry_get_processing_status(203,4846
void l_qentry_free(204,4905
long l_alist_get_qnum(207,4959
long l_alist_get_alnum(208,5003
const char * l_alist_get_message_id(209,5047
long l_alist_get_inode(210,5104
const char * l_alist_get_filename(211,5148
const char * l_alist_get_recipient(212,5203
const char * l_alist_get_sender(213,5259
int l_alist_get_level(214,5312
int l_alist_get_allow_ext(215,5355
const char * l_alist_get_data(216,5402
const char * l_alist_get_status(217,5453
QMysqlImpl * l_alist_get_impl(218,5506
MYSQL* l_alist_get_akadb(219,5558
void l_alist_set_impl(220,5601
EmcAList * l_alist_create(221,5663
EmcAList * l_alist_clone(229,5818
int l_alist_get_lock(234,5915
char * l_alist_serialize(235,5957
EmcAList * l_alist_deserialize(236,6020
EmcAList * l_alist_get_by_hosted(237,6097
int l_alist_lock(238,6176
int l_alist_unlock(239,6214
int l_alist_set_status(240,6254
int l_alist_set_allow_ext(241,6319
int l_alist_error(242,6377
int l_alist_get_pending(243,6416
int l_alist_finished(244,6485
EmcAList * l_alist_get_at(245,6527
int l_alist_message_modified(246,6583
int l_alist_remove_all_aentries(248,6666
int l_alist_max_itemnum(249,6719
void l_alist_free_list(250,6765
void l_alist_free(251,6819
long l_aentry_get_qnum(255,6874
long l_aentry_get_alnum(256,6921
const char * l_aentry_get_message_id(257,6968
const char * l_aentry_get_recipient(258,7028
const char * l_aentry_get_user(259,7087
const char * l_aentry_get_domain(260,7141
const char * l_aentry_get_sender(261,7197
int l_aentry_get_itemnum(262,7253
const char * l_aentry_get_action(263,7301
const char * l_aentry_get_status(264,7357
const char * l_aentry_get_data(265,7413
int l_aentry_get_retry_times(266,7467
long l_aentry_get_last_retry(267,7519
const char * l_aentry_last_error(268,7571
EmcAEntry * l_aentry_create(270,7628
int l_aentry_get_pending(277,7781
EmcAEntry * l_aentry_get_at(278,7851
void l_aentry_free_list(279,7911
int l_aentry_set_error(280,7968
int l_aentry_set_status(281,8035
int l_aentry_stop_after(282,8104
int l_aentry_hold_after(283,8152
void l_aentry_free(284,8200
long l_header_get_qnum(288,8257
long l_header_get_alnum(289,8303
long l_header_get_inode(290,8350
const char * l_header_get_filename(291,8397
const char * l_header_get_header(292,8455
EmcHeader * l_header_create(293,8511
int l_header_get_pending(294,8585
EmcHeader * l_header_get_like 296,8679
EmcHeader * l_header_get_at(298,8779
void l_header_free_list(299,8838
void l_header_free(300,8894
const char * l_hint_get_message_id(303,8948
long l_hint_get_inode(304,9003
const char * l_hint_get_agent(305,9045
const char * l_hint_get_key(306,9095
const char * l_hint_get_hint(307,9143
EmcHint * l_hint_create(308,9192
EmcHint * l_hint_get(315,9350
long l_hosted_get_qnum(321,9467
long l_hosted_get_alnum(322,9518
const char * l_hosted_get_message_id(323,9570
const char * l_hosted_get_recipient(324,9635
const char * l_hosted_get_sender(325,9699
long l_hosted_get_inode(326,9760
const char * l_hosted_get_filename(327,9812
const char * l_hosted_get_data(328,9875
const char * l_hosted_get_status(329,9934
int l_hosted_get_retry_times(330,9995
long l_hosted_get_last_retry(331,10052
const char * l_hosted_get_last_error(332,10109
EmcHostedEntry * l_hosted_create(333,10174
int l_hosted_set_error(340,10345
int l_hosted_touch(341,10416
int l_hosted_set_status(342,10483
int l_hosted_get_pending(343,10556
EmcHostedEntry * l_hosted_get_at(344,10632
void l_hosted_free_list(345,10701
void l_hosted_free(346,10762
long l_external_get_qnum(350,10826
long l_external_get_alnum(351,10883
const char * l_external_get_message_id(352,10941
const char * l_external_get_recipient(353,11012
const char * l_external_get_sender(354,11082
long l_external_get_inode(355,11149
const char * l_external_get_filename(356,11207
const char * l_external_get_data(357,11276
const char * l_external_get_status(358,11341
int l_external_get_retry_times(359,11408
long l_external_get_last_retry(360,11471
const char * l_external_get_last_error(361,11534
EmcExternalEntry * l_external_create(362,11605
int l_external_set_error(370,11803
int l_external_set_status(371,11880
int l_external_get_pending(372,11959
EmcExternalEntry * l_external_get_at(373,12039
void l_external_free_list(374,12114
void l_external_free(375,12179
int l_message_store(380,12249
int l_message_remove(388,12429
int l_message_merge_headers(391,12497
int l_message_merge_headers_escape(396,12613
char * l_message_merge_headers_as_string(402,12749
char * l_message_create(406,12866
char * l_message_create_with_data(415,13072
char * l_message_create_outbound_with_data(425,13302
char * l_message_create_with_mode_data(435,13541
int l_misc_sender_valid(450,13801
char * l_misc_get_unique_id(451,13849
char * l_misc_get_localname(452,13916
char * l_misc_get_domain(453,13969
char * str_tolower(454,14019
int l_build_expand_alist(457,14073
int l_build_expand_outbound_alist(458,14120
int l_build_expand_forward(459,14176
int l_build_expand_forward_bounce(460,14245
int l_build_expand_shcal(461,14321
int l_build_expand_hosted(462,14388
int l_build_expand_external(463,14456
int l_build_is_external_domain(464,14526
int l_build_is_external_address(465,14600
int p_build_do_special_addresses(466,14677
int p_expand_dynamic_forwarding(467,14746
int l_admin_get_all_entries(471,14852
int l_admin_get_pending_entries(473,14928
int l_admin_get_frozen_entries(475,15008
int l_admin_get_failed_entries(477,15087
int l_admin_lock_qentry(479,15166
int l_admin_unlock_qentry(480,15233
int l_admin_get_locked_entries(481,15301
int l_admin_get_qentry_info(483,15381
int l_admin_get_action_entries(493,15630
int l_admin_reset_failed_qentry(498,15755
int l_admin_thaw_qentry(500,15832
EmcQEntry * l_admin_get_qentry(502,15901
int l_admin_set_qentry_status(503,15973
int l_admin_queue_rebuild(505,16067

/emcsvn/emc/emcmailer/trunk/libemcqmysql/qentry.c,1472
#define _GNU_SOURCE2,20
extern MYSQL * mysql_sock;18,355
extern char *_mysql_quote(_mysql_quote19,382
void p_qentry_init(25,614
const char * l_qentry_get_sender(48,1181
const char * l_qentry_get_recipient(51,1263
const char * l_qentry_get_message_id(54,1351
long l_qentry_get_qnum(57,1436
long l_qentry_get_inode(60,1507
const char * l_qentry_get_status(63,1579
int l_qentry_get_lock(66,1661
long l_qentry_get_time(69,1730
long l_qentry_get_last_retry(72,1800
const char * l_qentry_get_filename(75,1881
const char * l_qentry_get_host(78,1963
int l_qentry_is_outbound(81,2041
QMysqlImpl * l_qentry_get_impl(84,2117
void l_qentry_set_impl(87,2195
EmcQEntry * l_qentry_dup(91,2285
EmcQEntry *l_qentry_create l_qentry_create105,2540
void p_qentry_create_fail_cleanup(118,2799
EmcQEntry *l_qentry_create_with_data l_qentry_create_with_data141,3368
EmcQEntry *l_qentry_create_real(l_qentry_create_real163,3704
char * l_qentry_serialize(329,7349
EmcQEntry * l_qentry_deserialize(359,7934
#define _CHECK_STREAM 361,8013
int l_qentry_remove(423,9426
EmcQEntry *l_qentry_get(l_qentry_get581,14011
int l_qentry_lock(656,15500
int l_qentry_unlock(684,16088
int l_qentry_set_status(712,16656
int l_qentry_get_pending(746,17408
int l_qentry_get_locked(878,20474
EmcQEntry * l_qentry_get_at(985,22924
void l_qentry_free_list(989,23018
int l_qentry_finished(1001,23230
int l_qentry_get_processing_status(1048,24241
void l_qentry_free(1113,26143

/emcsvn/emc/emcmailer/trunk/libemcqmysql/hint.c,416
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
#define HINT_SELECT 24,441
#define HINT_DB_POPULATE 32,533
const char * l_hint_get_message_id(39,722
long l_hint_get_inode(42,801
const char * l_hint_get_agent(45,867
const char * l_hint_get_key(48,941
const char * l_hint_get_hint(51,1011
EmcHint * l_hint_create(55,1084
EmcHint * l_hint_get(118,2367

/emcsvn/emc/emcmailer/trunk/libemcqmysql/hosted.c,902
#define _GNU_SOURCE3,21
extern MYSQL *mysql_sock;mysql_sock21,353
extern char *_mysql_quote(_mysql_quote22,379
long l_hosted_get_qnum(24,440
long l_hosted_get_alnum(27,517
const char * l_hosted_get_message_id(30,596
const char * l_hosted_get_recipient(33,688
const char * l_hosted_get_sender(36,783
long l_hosted_get_inode(39,872
const char * l_hosted_get_filename(42,951
const char * l_hosted_get_data(45,1040
const char * l_hosted_get_status(48,1125
int l_hosted_get_retry_times(51,1214
long l_hosted_get_last_retry(54,1304
const char * l_hosted_get_last_error(57,1393
EmcHostedEntry * l_hosted_create(61,1491
int l_hosted_set_error(158,3904
int l_hosted_touch(248,6199
int l_hosted_set_status(306,7573
int l_hosted_get_pending(340,8385
EmcHostedEntry * l_hosted_get_at(425,10602
void l_hosted_free_list(429,10712
void l_hosted_free(441,10946
void l_hosted_remove 459,11344

/emcsvn/emc/emcmailer/trunk/libemcqmysql/main.c,361
#define MY_TYPE 17,287
static MYSQL *mysql_sock mysql_sock19,312
static MYSQL *akadb akadb20,345
static int inited_mysql 21,373
static int inited_akadb 22,402
QMysqlImpl * l_init_impl(24,432
QMysqlImpl *l_init_impl2(l_init_impl228,515
MYSQL *l_impl_get_akadb(l_impl_get_akadb123,2703
void _reinit(128,2771
void _fini(155,3541
void _init(174,3937

/emcsvn/emc/emcmailer/trunk/libemcqmysql/misc.c,262
#define _GNU_SOURCE1,0
#define UNIQUE_ID_SIZE 12,195
extern int is_sender_valid(14,223
int l_misc_sender_valid(16,273
char * l_misc_get_localname(66,1046
char * l_misc_get_domain(98,1540
char * string_base62(131,2028
char * l_misc_get_unique_id(146,2337

/emcsvn/emc/emcmailer/trunk/libemcqmysql/admin.c,855
#define _GNU_SOURCE3,21
#define ALIST_SELECT 25,434
#define ALIST_DB_POPULATE 40,630
#define AENTRY_SELECT 54,1069
#define AENTRY_DB_POPULATE 71,1308
int p_admin_get_entries(87,1850
int l_admin_get_all_entries(89,1933
int l_admin_get_pending_entries(95,2063
int l_admin_get_frozen_entries(101,2198
int l_admin_get_failed_entries(107,2333
int l_admin_lock_qentry(113,2468
int l_admin_unlock_qentry(136,2817
int l_admin_get_locked_entries(159,3169
int l_admin_get_qentry_info(228,4441
int l_admin_get_action_entries(458,9108
int p_admin_queue_read_envelope(522,10143
int l_admin_queue_rebuild(596,12208
int l_admin_set_action_status 717,15910
int l_admin_reset_failed_qentry(752,16550
int l_admin_thaw_qentry(832,18048
int l_admin_set_qentry_status(905,19259
EmcQEntry * l_admin_get_qentry(918,19507
int p_admin_get_entries(983,20642

/emcsvn/emc/emcmailer/trunk/libemcqmysql/alist.c,1471
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;23,412
#define ALIST_SELECT 25,440
#define ALIST_DB_POPULATE 40,636
long l_alist_get_qnum(59,1249
long l_alist_get_alnum(62,1315
const char * l_alist_get_message_id(65,1383
long l_alist_get_inode(68,1464
const char * l_alist_get_filename(71,1532
const char * l_alist_get_recipient(74,1610
const char * l_alist_get_sender(77,1694
int l_alist_get_level(80,1772
int l_alist_get_allow_ext(83,1839
const char * l_alist_get_data(86,1914
const char * l_alist_get_status(89,1988
int l_alist_get_lock(92,2066
QMysqlImpl * l_alist_get_impl(95,2131
MYSQL * l_alist_get_akadb(98,2205
void l_alist_set_impl(101,2280
int l_build_expand_forward(105,2366
int l_build_expand_forward_bounce(110,2478
EmcAList * l_alist_create(115,2603
EmcAList * l_alist_clone(223,5183
char * l_alist_serialize(320,7425
EmcAList * l_alist_deserialize(358,8182
#define _CHECK_STREAM 360,8259
EmcAList * l_alist_get_by_hosted(413,9769
int l_alist_lock(470,10851
int l_alist_unlock(501,11530
void l_alist_set_filename(532,12206
int l_alist_set_status(537,12336
int l_alist_set_allow_ext(564,12944
int l_alist_get_processing_status(591,13529
int l_alist_finished(648,14951
int l_alist_get_pending(687,15742
EmcAList * l_alist_get_at(756,17408
void l_alist_free_list(760,17497
int l_alist_message_modified(772,17701
int l_alist_remove_all_aentries(826,18950
int l_alist_max_itemnum(845,19376
void l_alist_free(887,20268

/emcsvn/emc/emcmailer/trunk/libemcqmysql/external.c,950
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
long l_external_get_qnum(24,441
long l_external_get_alnum(27,526
const char * l_external_get_message_id(30,613
const char * l_external_get_recipient(33,713
const char * l_external_get_sender(36,816
long l_external_get_inode(39,913
const char * l_external_get_filename(42,1000
const char * l_external_get_data(45,1097
const char * l_external_get_status(48,1190
const char * l_external_get_rhost(51,1287
int l_external_get_retry_times(54,1382
long l_external_get_last_retry(57,1480
const char * l_external_get_last_error(60,1577
EmcExternalEntry * l_external_create(64,1683
int l_external_set_error(168,4238
int l_external_set_status(258,6698
int l_external_get_pending(292,7539
EmcExternalEntry * l_external_get_at(378,9904
void l_external_free_list(382,10022
void l_external_free(393,10271
void l_external_remove 413,10755

/emcsvn/emc/emcmailer/trunk/libemcqmysql/message.c,552
#define _GNU_SOURCE2,20
#define MY_TYPE 23,434
#define BUFFER_SIZE 25,459
extern MYSQL * mysql_sock;27,489
extern const char *config_get_filename(config_get_filename28,516
int l_message_store(34,743
int l_message_remove(138,3002
char * l_message_create(161,3463
char * l_message_create_with_data(177,3798
char * l_message_create_outbound_with_data(193,4163
char * l_message_create_with_mode_data(210,4538
int l_message_merge_headers(431,9188
int l_message_merge_headers_escape 441,9392
char * l_message_merge_headers_as_string(602,13060

/emcsvn/emc/emcmailer/trunk/libemcqmysql/header.c,564
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
extern char *_mysql_quote(_mysql_quote22,380
#define HEADER_SELECT 24,441
#define HEADER_DB_POPULATE 32,538
long l_header_get_qnum(39,739
long l_header_get_alnum(42,811
long l_header_get_inode(45,885
const char * l_header_get_filename(48,959
const char * l_header_get_header(51,1043
EmcHeader * l_header_create(55,1128
int l_header_get_pending(109,2366
EmcHeader * l_header_get_like 166,3532
EmcHeader * l_header_get_at(230,5073
void l_header_free_list(234,5168
void l_header_free(246,5391

/emcsvn/emc/emcmailer/trunk/libemcqmysql/aentry.c,1021
#define _GNU_SOURCE3,21
extern MYSQL * mysql_sock;21,353
#define AENTRY_SELECT 23,381
#define AENTRY_DB_POPULATE 40,620
long l_aentry_get_qnum(56,1162
long l_aentry_get_alnum(59,1234
const char * l_aentry_get_message_id(62,1308
const char * l_aentry_get_recipient(65,1395
const char * l_aentry_get_user(68,1485
const char * l_aentry_get_domain(71,1566
const char * l_aentry_get_sender(74,1650
int l_aentry_get_itemnum(77,1734
const char * l_aentry_get_action(80,1811
const char * l_aentry_get_status(83,1895
const char * l_aentry_get_data(86,1979
int l_aentry_get_retry_times(89,2059
long l_aentry_get_last_retry(92,2144
const char * l_aentry_last_error(95,2228
EmcAEntry * l_aentry_create(99,2317
int l_aentry_get_pending(227,5484
EmcAEntry * l_aentry_get_at(288,6933
void l_aentry_free_list(292,7028
int l_aentry_set_error(303,7250
int l_aentry_touch(407,9929
int l_aentry_set_status(466,11269
int l_aentry_stop_after(544,13210
int l_aentry_hold_after(598,14555
void l_aentry_free(652,15900

/emcsvn/emc/emcmailer/trunk/libemcqmysql/build.c,649
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
int p_build_do_special_addresses(27,574
int p_build_check_alias(28,639
int l_build_is_external_domain(29,681
int resp_active(31,752
reassemble_address(82,1992
int l_build_expand_alist(113,2578
int l_build_expand_outbound_alist(1008,25585
int l_build_expand_relay(1350,34137
int l_build_expand_hosted(1402,35332
int l_build_expand_external(1423,35844
int l_build_expand_shcal(1453,36470
int l_build_is_external_domain(1553,38949
int l_build_is_external_address(1600,39895
int p_build_check_alias(1622,40268
int p_build_do_special_addresses(1700,41846

/emcsvn/emc/emcmailer/trunk/sqlitecache/query.c,1135
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
void cache_free_results(31,668
char *tables_from_query(tables_from_query88,1953
void cache_free(196,3749
void sqlite_free_close(259,5193
int cache_prepare_query(276,5482
int db_do_query(561,12821
int cache_begin_transaction(661,15062
int cache_commit(673,15316
int cache_delete_result(685,15548
int cache_rollback(705,15937
void cache_result_data(717,16173
void cache_set_error(857,19480
int cache_create(870,19727
int cache_row(893,20230
int sqlite_simple(920,20723
DbRow *cache_data_to_row(cache_data_to_row967,21548
DbRow *cache_fetch_row(cache_fetch_row1063,23154
void cache_add_result_row(1078,23414
sqlite *cache_lookup_cache(cache_lookup_cache1099,23740
#define CACHE_NON_RESPONSE 1150,24839
#define CACHE_EXPIRED 1151,24870
int cache_do_query(1157,24982
int main(1266,26877
void cache_add_db(1391,29499
int cache_init(1403,29784
int cache_init_master(1466,31072
int cache_init_db(1489,31556
int cache_open_db(1518,32054
void db_init(1534,32345
void db_connect(1552,32751
char *hashquery(hashquery1573,33195

/emcsvn/emc/emcmailer/trunk/sqlitecache/query.h,2161
#define _CACHE_QUERY_H2,23
#define DB_ERROR 4,47
#define DB_OK 5,72
#define DB_NO_CONNECT 6,96
#define true 8,121
#define false 9,136
#define READ_ONLY 11,153
#define READ_WRITE 12,173
typedef struct db_info 14,195
	MYSQL sock;15,220
	int readonly;16,233
	char *server;server17,248
	char *username;username18,263
	char *password;password19,280
	char *db_name;db_name20,297
	int  timeout;21,313
	char *errmsg;errmsg22,328
	int  connected;23,343
} DbServerData;24,360
typedef struct db_row 26,377
	int columns;27,401
	int *lengths;lengths28,415
	char **data;data29,430
} DbRow;30,444
typedef struct query_cache_struct 32,454
	GArray *results;results33,490
	sqlite *master;master35,509
	char *master_db;master_db37,527
	char *dir;dir38,545
	sqlite *cache;cache40,558
	int ok;42,575
	int ttl;43,584
	char *errmsg;errmsg45,595
	char *query_hash;query_hash47,611
	char *tables;tables48,630
	char *sql_query;sql_query50,646
	char *cache_delete;cache_delete52,665
	char *cache_delete_template;cache_delete_template53,686
	char *table_query;table_query55,717
	char *table_master_query;table_master_query56,737
	char *cache_query;cache_query58,765
	char *cache_query_template;cache_query_template59,785
	char *cache_insert;cache_insert61,815
	char *cache_insert_template;cache_insert_template62,836
	GArray *db_servers;db_servers64,867
	int writequery;66,889
	int row;68,907
	int rows;69,917
	GHashTable *query_bin;query_bin71,929
	int from_cache;73,954
} QueryCache;75,972
#define EMCSAFEFREE(77,987
char *hashquery(hashquery79,1041
void cache_add_db(80,1086
void cache_set_error(81,1142
int cache_init(82,1197
void db_init(83,1254
void db_connect(84,1328
int sqlite_simple(85,1363
int cache_row(86,1429
void cache_add_result_row(87,1488
void cache_result_data(88,1546
DbRow *cache_fetch_row(cache_fetch_row89,1589
int cache_init_master(90,1632
int cache_open_master(91,1674
int cache_init_db(92,1716
int cache_open_db(93,1783
sqlite *cache_lookup_cache(cache_lookup_cache94,1854
void sqlite_free_close(95,1901
int cache_prepare_query(96,1974
int cache_do_query(97,2046

/emcsvn/emc/emcmailer/trunk/sqlitecache/encode.c,147
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int sqlite_encode_binary(125,5768
int sqlite_decode_binary(177,6981
int main(205,7563

/emcsvn/emc/emcmailer/trunk/sqlitecache/sqlite_encode.h,93
#define _SQLITE_ENCODE_H2,25
int sqlite_encode_binary(4,51
int sqlite_decode_binary(5,129

/emcsvn/emc/emcmailer/trunk/alworker.c,836
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
extern int debugmode;29,583
extern int pretendmode;30,605
extern int outboundmode;31,629
extern const char *msgid;msgid32,654
extern long host_id;33,680
extern EmcConfig *config;config35,702
int agentpid 36,728
extern alworker_options al_opts;37,746
EmcAEntry *g_aentry g_aentry39,780
long altimeout 40,808
void al_alarmer(43,854
void check_retries(44,881
int do_agent(45,945
int process_inline_action(46,1022
int process_agent_commands(47,1068
#define BUFFER_SIZE 49,1160
int dont_set_ae_status 51,1189
int stop_processing 52,1217
int pid 54,1243
int do_alworker(56,1257
int do_agent(323,8575
void check_retries(649,17282
int process_agent_commands(695,18442
int process_inline_action(1020,25818
void al_alarmer(1065,26971

/emcsvn/emc/emcmailer/trunk/alworker.h,265
#define EMC_ALWORKER2,21
typedef struct alworker_options_t 6,64
	char * configfile;8,121
	long alnum;9,141
	char * alstream;10,154
	EmcAList * alist;11,172
	EmcQImpl * impl;13,222
	char * queue_type;14,240
} alworker_options;15,260
int do_alworker(17,281

/emcsvn/emc/emcmailer/trunk/admin/emcqueue.c,1352
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define BUFFER_SIZE 25,501
const char *configfile configfile27,532
const char *queue_type queue_type28,563
EmcConfig *config config29,594
EmcQImpl *impl impl30,620
const char *msg_id msg_id32,644
const char *msgid msgid33,671
int debugmode 36,721
int list 38,741
int view 39,755
int count 40,769
int reset 41,784
int thaw 42,799
int show_alists 43,813
int show_hosted 44,834
int show_external 45,855
int show_aentries 46,878
int batch 47,901
int summary_only 48,916
const char * status 49,938
int lock 50,966
int unlock 51,980
int rebuild 52,996
int delete 53,1013
const char * recip 54,1029
const char * sender 55,1056
const char * host 56,1084
int set_action_status 58,1111
const char * action 59,1138
const char * action_status 60,1166
void view_file(63,1219
void show_qentries(64,1237
void show_qentries_exim(65,1293
void show_qentry_info(66,1354
void show_actions(74,1538
void do_single_message(75,1590
void do_batch(76,1616
int main(80,1636
void view_file(334,7336
void do_batch(351,7659
void do_single_message(429,9536
void show_actions(544,11572
void show_qentry_info(591,12775
char *get_age(get_age699,16473
char *get_size(get_size723,16865
void show_qentries(746,17297
void show_qentries_exim(800,18369

/emcsvn/emc/emcmailer/trunk/smtpc/smtp.c,302
static char *rcsid rcsid1,0
static void use_rcsid(2,77
const char *readlinefp_cb(readlinefp_cb20,385
void print_recipient_status(21,445
int smtpsend(23,535
void print_recipient_status 102,2461
#define BUFLEN	111,2694
const char *readlinefp_cb readlinefp_cb113,2715
void monitor_cb 141,3159

/emcsvn/emc/emcmailer/trunk/smtpc/test.c,75
static char *rcsid rcsid1,0
static void use_rcsid(2,77
int main(14,288

/emcsvn/emc/emcmailer/trunk/virus/zerohour_filter.c,217
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define _GNU_SOURCE8,205
#define MAX_BUFFER_SIZE 16,329
int zerohour_filter_request(20,406
char *zerohour_filter_response(zerohour_filter_response60,1378

/emcsvn/emc/emcmailer/trunk/virus/filters.h,457
typedef int (*scan_filter_request)scan_filter_request1,0
typedef char * (*scan_filter_response)scan_filter_response2,62
int default_filter_request(3,112
char * default_filter_response(4,168
int norton_filter_request(5,211
char * norton_filter_response(6,266
int clamav_filter_request(7,308
char *clamav_filter_response(clamav_filter_response8,359
int zerohour_filter_request(9,397
char *zerohour_filter_response(zerohour_filter_response10,450

/emcsvn/emc/emcmailer/trunk/virus/clamav_filter.c,210
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,204
#define MAX_BUFFER_SIZE 16,328
int clamav_filter_request(25,456
char *clamav_filter_response(clamav_filter_response41,685

/emcsvn/emc/emcmailer/trunk/virus/main.c,5219
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
#define TMPBUF 52,1037
#define HINT_BUFFER_SIZE 53,1057
#define MAX_PROVIDERS 55,1092
#define MAX_VIRUSES_FOUND 56,1117
#define SKIP_RFC822_PARSE_SIZE 58,1148
int scanned_parts 60,1188
char *decompose_dir decompose_dir61,1211
char *innoculated_dir innoculated_dir62,1239
char *parse_jail_dir parse_jail_dir63,1269
char *virus_jail_dir virus_jail_dir64,1298
char *virus_lib_dir virus_lib_dir65,1327
int virus_jail 66,1394
int new_virus 67,1414
char *new_virus_file new_virus_file68,1433
char *inject_agent inject_agent69,1462
char *tmp_dir tmp_dir70,1489
const char *msg_subject msg_subject71,1511
int NUM_PROVIDERS 75,1608
long inode 77,1632
char *msgid msgid78,1648
char *configfile configfile79,1668
char *recip recip80,1693
char *sender sender81,1713
char *local local82,1734
char *domain domain83,1754
char *refdomain refdomain84,1775
int stand_alone 85,1799
int pretend 86,1820
int no_hints 87,1837
int nocleanup 88,1855
EmcConfig *config config89,1874
EmcQImpl *impl impl90,1900
char *aka_db_host aka_db_host92,1924
char *aka_db_name aka_db_name93,1950
char *aka_db_user aka_db_user94,1976
char *aka_db_pass aka_db_pass95,2002
int aka_db_timeout 96,2028
char *cursec;cursec97,2052
char *hint_buffer hint_buffer98,2066
size_t hint_buffer_size 99,2092
char *data data100,2121
int outboundmode 102,2141
int virus_found 104,2164
MYSQL mysql_sock;106,2186
struct provider_t providers[providers108,2205
struct virus_options_t *virus_options;virus_options109,2282
const char *current_provider current_provider111,2322
char *filename filename113,2360
int debugmode 114,2383
int unlink_msgfile 115,2402
int sock 116,2426
int in_rfc822 120,2560
GMimeMessage *message message122,2580
int fd;123,2610
struct virus_t viruses_found[viruses_found124,2618
EmcHash *scan_request_filters;scan_request_filters126,2668
EmcHash *scan_response_filters;scan_response_filters127,2699
regex_t regex_tnef;129,2732
struct virus_summary_report_t virus_rep;134,2853
X509 *encryptCert encryptCert137,2916
EVP_PKEY *pkey pkey138,2942
gboolean attemptDecryption 139,2965
void init_args(142,3026
char *stdin_to_tmp(stdin_to_tmp143,3065
void deconstruct(144,3088
void part_scanner(145,3123
void handle_inline_virus(146,3189
void cleanup(149,3306
int leave(150,3331
char *virus_safe_malloc(virus_safe_malloc151,3382
int uudecode(152,3417
void process_config(153,3501
static int makepath(154,3525
void init_virus_options(155,3615
void init_db(156,3643
void record_virus(157,3660
char *quarantine_message(quarantine_message158,3746
void virus_notify(159,3802
void parse_notify(160,3839
void scan_file(161,3861
int scan_file_with_provider(162,3937
char *create_message(create_message164,4067
char *create_message_with_data(create_message_with_data171,4191
char *randid(randid179,4345
void  my_log_handler(181,4363
char *get_rawheader(get_rawheader186,4485
char *escape_percents(escape_percents187,4536
char *quarantine_virus_to_bucket(quarantine_virus_to_bucket188,4579
extern int parse_tnef(190,4654
void connect_alarm(192,4721
typedef struct SMimeKeys_t194,4754
	int keyID;196,4783
	char *name;name197,4795
	char* owner;198,4808
	char* privateKey;199,4822
	char* certificate;200,4841
	char* password;201,4861
}SMimeKeys;SMimeKeys202,4878
GMimeObject *extract_signed_content extract_signed_content204,4891
GMimeObject *decrypt_mime_part(decrypt_mime_part205,4952
SMimeKeys *db_get_smime_keys db_get_smime_keys206,5003
void  my_log_handler(208,5065
void adjust_hint_buffer(216,5234
void connect_alarm(228,5519
void init_args(237,5688
char *stdin_to_tmp(stdin_to_tmp374,9112
void deconstruct(413,9903
void part_scanner(555,13076
void scan_file(820,20347
void init_virus_report(876,21649
void free_virus_report(883,21815
void get_rest_of_data_for_virus_report(895,22109
int scan_file_with_provider(928,22971
int insert_virus_status(1270,33406
int check_virus_status(1337,35265
void record_virus(1375,36122
void handle_inline_virus(1410,36994
void cleanup(1458,38288
int leave(1504,39100
char *virus_safe_malloc(virus_safe_malloc1533,39510
void process_config(1547,39695
void init_virus_options(1746,45280
void init_db(1930,50715
char *quarantine_message(quarantine_message1955,51238
void send_parse_notify(2015,52334
void parse_notify(2050,53332
const char *send_virus_notify(send_virus_notify2054,53410
void virus_notify(2164,55629
char *create_message(create_message2283,59485
char *create_message_with_data(create_message_with_data2294,59713
char *randid(randid2452,62944
int process_hints(2468,63535
int main(2624,67143
#define UUDECODE_BUFFER_LEN 2894,74477
int uudecode(2897,74510
static int makepath(3093,79163
char *get_rawheader(get_rawheader3141,80129
char *escape_percents(escape_percents3168,80627
char *quarantine_virus_to_bucket(quarantine_virus_to_bucket3192,81038
GMimeObject *extract_signed_content extract_signed_content3292,83510
GMimeObject *decrypt_mime_part(decrypt_mime_part3342,84976
SMimeKeys *db_get_smime_keys db_get_smime_keys3436,87603

/emcsvn/emc/emcmailer/trunk/virus/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1007

/emcsvn/emc/emcmailer/trunk/virus/tnef.c,393
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,195
extern EmcQImpl  *impl;impl28,571
extern EmcConfig *config;config29,595
extern regex_t regex_tnef;31,622
extern int leave(33,650
#define BUFFER_SIZE 35,710
static int parse_out_file_names 37,741
static int parse_out_file_names 40,833
void test_parse_out_file_names 100,2038
int parse_tnef(116,2437

/emcsvn/emc/emcmailer/trunk/virus/virus.h,1664
#define EMC_VIRUS_H2,20
#define NOTIFY_SENDER 4,41
#define NOTIFY_RECIPIENT 5,72
#define NOTIFY_ADMINISTRATOR 6,103
#define NOTIFY_OUTBOUND_SENDER 8,135
#define NOTIFY_OUTBOUND_ADMIN 9,168
#define DELETE_MESSAGE 11,202
#define STRIP_ATTACHMENT 12,227
#define NEW_VIRUS_FREEZE 14,255
#define NEW_VIRUS_DELIVER 15,282
#define PARSE_FAIL_NOTIFY_ADMIN 17,311
#define PARSE_FAIL_DELIVER_ANYWAY 18,345
#define SUBJ_LEN 20,382
#define SUBJ_LEN_ENC 21,402
#define SCANNER_TYPE_PARTS_SCAN 23,437
#define SCANNER_TYPE_FULL_MESSAGE_SCAN 24,471
struct virus_summary_report_t 27,539
	char * msg_filename;28,571
	char * ip;29,593
	char * subject;30,605
} virus_summary_report;31,622
struct virus_options_t 33,647
	int providers;34,672
	int notify;35,688
	int notify_outbound;36,701
	int notify_local_only;37,723
	int daily_digest;38,747
	int monthly_digest;39,766
	int trigger_action;40,787
	int new_virus_action;41,808
	int parse_fail_action;42,831
	int block_encrypted;43,855
	char *admin;admin44,877
	char *notify_text;notify_text45,891
	char *notify_footer;notify_footer46,911
	char *new_virus_notify_address;new_virus_notify_address47,933
	char *parse_fail_admin;parse_fail_admin48,966
	char *admin2;admin249,991
	char *admin3;admin350,1006
struct provider_t 53,1025
	char * name;54,1045
	int code;55,1059
	char * host;56,1070
	int port;57,1084
	char * scan_dir;58,1095
	int sock;59,1113
	int header_added;60,1124
	int fallback;61,1143
	int was_used;62,1158
	int was_clean;63,1173
	int type;64,1189
struct virus_t 67,1204
	char * virus_name;68,1221
	char * attachment_name;69,1241
	char * provider_name;70,1266

/emcsvn/emc/emcmailer/trunk/virus/default_filter.c,164
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define MAX_BUFFER_SIZE 12,265
int default_filter_request(14,299
char * default_filter_response(21,438

/emcsvn/emc/emcmailer/trunk/virus/norton_filter.c,189
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,204
#define MAX_BUFFER_SIZE 16,328
int norton_filter_request(38,840
char * norton_filter_response(54,1096

/emcsvn/emc/emcmailer/trunk/autoresp/autoresp.c,651
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
char * filename 26,534
const char * configfile;27,558
int debugmode 28,583
char * msgid 29,602
char * sender 30,623
char * refdomain 31,645
char * data 32,670
char * recip 33,690
char * local 34,711
char * domain 35,732
int leave(40,818
void  my_log_handler(44,856
void init_args(53,1083
void autoresp_init_read_db(148,3280
void autoresp_init_write_db(204,4711
GMimeMessage *build_message(build_message261,6180
int headers_contain_address(504,13639
int headers_contain_aliases(565,15075
int should_respond_to_message(622,16397
int main(732,19948

/emcsvn/emc/emcmailer/trunk/listbnc/listbnc.c,440
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char * filename 24,486
char * sender 25,510
char * recip 26,532
int debugmode 27,553
int unlink_msgfile 28,572
char * configfile 29,596
int sock 30,622
char * msgid 31,636
char * refdomain 32,657
char * data 33,682
char * local 35,703
char * domain 36,724
#define BUFFER_SIZE 38,747
int leave(40,777
void init_args(44,819
int main(139,2923

/emcsvn/emc/emcmailer/trunk/qrunner.c,814
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
qworker_options qe_opts;28,537
#define BUFFER_SIZE 30,563
EmcConfig * config 32,594
int reconfig 33,621
int stop 34,639
char * msgid 37,677
long host_id 38,698
int debugmode 39,717
int pretendmode 40,736
int ownmode 41,757
EmcHash * qworkers 43,775
int concurrent_qworkers 44,802
long qentry_retry_interval 45,831
long timeout 47,864
void do_qrunner(50,909
void qr_reaper(51,928
void qr_hupper(52,953
void release_qworker(53,978
void qr_alarmer(54,1021
void init(55,1047
void cleanup(56,1060
void qr_reaper(58,1077
void qr_hupper(63,1135
void qr_stopper(68,1179
int main(74,1256
void init(158,3246
void cleanup(225,4814
void do_qrunner(236,4986
void qr_alarmer(410,9186
void release_qworker(416,9302

/emcsvn/emc/emcmailer/trunk/maillist/maillist.c,1803
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define PASSWORD_BODY 37,810
#define PASSWORD_SUBJECT 38,837
#define MODERATED_OPEN 43,1055
#define MODERATED_CLOSED 44,1082
#define MODERATED_MEMBER 45,1109
char *filename filename47,1137
char *sender sender48,1160
char *recip recip49,1181
int debugmode 50,1201
int unlink_msgfile 51,1220
char *configfile configfile52,1244
int sock 53,1269
char *msgid msgid54,1283
char *refdomain refdomain55,1303
char *data data56,1327
long inode 57,1346
long max_archive_size 58,1363
char *local local60,1391
char *domain domain61,1411
EmcConfig *config;config63,1433
EmcQImpl *impl;impl64,1452
int attempt 66,1469
char *tmp_dir tmp_dir67,1486
char *tmp_file tmp_file68,1508
char *tmp_file_stripped tmp_file_stripped70,1576
char *newmsgid newmsgid71,1608
char *password password72,1631
char *password_line password_line73,1654
char *msg_prefix msg_prefix75,1683
char *msg_suffix msg_suffix76,1708
char *msg_subject msg_subject77,1733
int msg_archive 78,1759
int list_moderated 79,1780
int password_type 80,1804
char *list_moderator list_moderator81,1839
char *list_modpass list_modpass82,1868
int list_useverps 83,1895
int set_replyto 84,1918
#define BUFFER_SIZE 87,1941
#define DEFAULT_MAX_ARCHIVE_SIZE 89,1976
int leave(91,2018
void  my_log_handler(95,2056
void process_hints(102,2228
void init_args(122,2597
void init_list_options(225,4715
void notify_bad_password(316,6583
void check_moderated_subject(380,7880
void check_moderated(485,10307
int check_is_list_member(622,13332
void check_member(673,14387
void format_manually(777,16652
void format_message(896,19728
long pipe_recipients(1061,24236
void archive_message(1155,26432
int main(1213,27614

/emcsvn/emc/emcmailer/trunk/confdnet.c,199
char *read_confd_net(read_confd_net11,166
int match_ips(53,952
int main(70,1259
GSList *parse_confd_net(parse_confd_net96,1747
const char *extract_quoted_string(extract_quoted_string172,3459

/emcsvn/emc/emcmailer/trunk/confdnet.h,199
#define __CONFDNET_H2,21
GSList *parse_confd_net(parse_confd_net6,62
const char *extract_quoted_string(extract_quoted_string7,114
int match_ips(8,200
char *read_confd_net(read_confd_net9,238

/emcsvn/emc/emcmailer/trunk/mfilter/mfilter.c,2421
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char *msgid msgid47,888
char *configfile configfile48,908
char *recip recip49,933
char *sender sender50,953
char *local local51,974
char *domain domain52,994
char *refdomain refdomain53,1015
int stand_alone 54,1039
int pretend 55,1060
char *data data56,1077
MYSQL mysql_sock;58,1097
char *filename filename60,1116
int debugmode 61,1139
GMimeMessage *message message63,1159
GMimeStream *stream stream64,1189
GMimeParser *parser parser65,1217
EmcConfig * config;67,1246
int redirect 69,1267
char * redirect_to 70,1285
int action_type 71,1312
char * action_option 72,1333
quarantine_violation_report quarantine_report;74,1363
EmcArray *mime_list;mime_list76,1411
#define NOTIFY_SENDER 79,1453
#define NOTIFY_RECIP 80,1477
#define NOTIFY_ADMIN 81,1500
#define RULE_ATTACH_TYPE 84,1541
#define RULE_ATTACH_SIZE 85,1568
#define RULE_SUBJECT 86,1595
#define RULE_SENDER 87,1618
#define RULE_DOMAIN 88,1640
#define MATCH_CONTAIN 92,1690
#define MATCH_NOTCONTAIN 93,1714
#define MATCH_EQUAL 94,1741
#define MATCH_NOTEQUAL 95,1763
#define MATCH_ISBIGGER 96,1789
#define ACTION_NONE 99,1829
#define ACTION_BOUNCE 100,1851
#define ACTION_DELETE 101,1875
#define ACTION_REDIRECT 102,1899
#define ACTION_STRIP 103,1925
char *escape_percents(escape_percents106,1966
void do_quar_and_log(107,2009
void do_quarantine_report(108,2033
void free_quarantine_data(109,2094
char *setActionTaken(setActionTaken110,2155
int process_new_msg 111,2194
int get_notif_data(113,2236
int send_notification(167,3500
int create_notification(284,6441
void log_report(341,7583
void execute_action(357,8116
int generic_match(445,10545
int create_list(541,13179
int do_rule(577,14014
void get_mf_profile 648,15715
void init_args(731,17974
void fudo(835,20127
char *get_attach_type(get_attach_type861,20769
int attachment_type 880,21139
int do_profile(1049,26500
int strip_attach(1397,35848
int process_new_msg 1420,36667
void init_quar_mfilter_report(1466,37692
void free_string(1481,38029
char *setActionTaken(setActionTaken1490,38157
void free_quarantine_data(1520,38587
void do_quarantine_report(1528,38777
char *escape_percents(escape_percents1549,39517
char *quarantine_message_to_bucket(quarantine_message_to_bucket1572,39866
void do_quar_and_log(1666,42064
int main(1680,42588

/emcsvn/emc/emcmailer/trunk/mfilter/mfilter.h,1141
#define SUBJ_LEN 2,1
#define SUBJ_LEN_ENC 3,21
#define QUAR_REP_MAX_SIZE 4,55
typedef struct quarantine_violation_report_t 9,211
	char * quar_filename;10,258
	const char * sender;11,281
	const char * recip;12,303
	const char * ip;13,324
	char * subject;14,342
	char * attach_name;15,359
	const char * profile_name;16,380
	int profile_number;17,408
	char * violation_type;18,429
	char * action_taken;19,453
	char * other_data;20,475
	int force_default;21,495
} quarantine_violation_report;22,515
typedef struct mf_profile_t 24,547
	int mf_num;25,577
	char * mf_desc;26,590
	char * aka_domain;27,607
	int ByAttachSize;28,627
	int ByAttachType;29,646
	int BySubject;30,665
	int BySender;31,681
	int ByDomain;32,696
	int default_apply;33,711
	int pre_apply;34,731
	char *send_as_name;send_as_name35,747
	char *send_as_email;send_as_email36,768
} mf_prof;37,790
typedef struct notif_t 39,802
	int notification_type;40,827
	char * notification_option;41,851
	char * sender_msg;42,880
	char * recip_msg;43,900
	char * admin_msg;44,919
} notif;45,938
int create_notification(47,948
int strip_attach(57,1132

/emcsvn/emc/emcmailer/trunk/remote_deliver/remote_deliver.c,515
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,194
#define BUFFER_SIZE 26,535
const char * msgid 28,565
int debugmode 29,592
char *remote_delivery_addr(remote_delivery_addr31,612
const char * recip 33,721
const char * folder 34,748
const char * maildir 35,779
const char * cdomain 36,808
const char * filename 37,856
const char * sender 38,886
const char * tmpdir 40,915
void init_args(42,946
int main(90,1773
char *remote_delivery_addr(remote_delivery_addr180,3673

/emcsvn/emc/emcmailer/trunk/quarantine/quarantine.c,264
#define _GNU_SOURCE5,49
quarantine_file *quarantine_file_new quarantine_file_new30,598
const char* quarantine_file_get_qfilename(52,1137
int quarantine_file_save 58,1249
char *escape_percents(escape_percents173,4161
int quarantine_file_logsummary(196,4576

/emcsvn/emc/emcmailer/trunk/quarantine/quarantine.h,1498
#define QUARANTINE_H_2,22
#define DEFAULT_BUCKET_DIR	4,45
#define MAX_MEGA_SUMMARY_LEN	5,93
#define SPAM_MEGA_SUMMARY_HEADER 6,128
#define SPAM_REP_SEP 8,183
#define BOX_FA_LEN 9,206
#define RULES_SUMMARY_HEADER_LEN 10,229
#define IP_LEN 11,266
#define SUBJ_LEN 12,284
#define SUBJ_LEN_ENC 13,304
#define BODY_LEN 14,338
#define QUARANTINE_CATEGORY_SPAM 16,408
#define QUARANTINE_CATEGORY_VIRUS 17,449
#define QUARANTINE_CATEGORY_MFILTER 18,492
#define QUARANTINE_CATEGORY_POLICY 19,538
#define QUARANTINE_CATEGORY_FILES 20,583
#define QUARANTINE_CATEGORY_MAIL 21,626
#define QUARANTINE_CATEGORY_VAULTSMART	22,667
typedef struct quarantine_file_t24,717
	const char *baseDir;baseDir26,752
	int bucketMinutes;27,774
	const char* originalFilename;28,794
	char* qfilename;29,825
	off_t filesize;30,843
	char* checksum;31,883
	int storageDays;32,916
	time_t time;33,934
	char server[server34,948
	const char *category;category35,967
	const char *sender;sender37,1031
	const char *recip;recip38,1052
	double total_score;39,1072
	const char *summary_header;summary_header40,1093
	const char *body;body41,1122
	const char *subject;subject42,1141
	const char *ip;ip43,1163
	EmcHash *details;details45,1181
} quarantine_file;47,1201
quarantine_file *quarantine_file_new(quarantine_file_new49,1221
const char* quarantine_file_get_qfilename(51,1282
int quarantine_file_save 53,1346
int quarantine_file_to_dir 54,1393
int quarantine_file_logsummary(55,1461

/emcsvn/emc/emcmailer/trunk/j2storage/encrypt.c,244
static char *rcsid rcsid16,495
static void use_rcsid(17,575
extern int all_ok;26,765
EMC_BOOL ENCRYPT_mime_part(35,1055
void ENCRYPTER_look_partwalker(138,4742
void DECRYPTER_look_partwalker(191,6206
EMC_BOOL DECRYPT_mime_part(244,7651

/emcsvn/emc/emcmailer/trunk/j2storage/encrypt.h,260
#define _EMC_CRYPT_H 11,203
#define GPG_PATH	19,323
#define GPG_USERID	20,356
#define GPG_PASSPHRASE	21,408
EMC_BOOL ENCRYPT_mime_part(23,484
void ENCRYPTER_look_partwalker(24,549
EMC_BOOL DECRYPT_mime_part(31,836
void DECRYPTER_look_partwalker(32,901

/emcsvn/emc/emcmailer/trunk/j2storage/util.c,808
static char *rcsid rcsid45,1688
static void use_rcsid(46,1764
#undef  VERSION 54,1927
void *util_mutex util_mutex58,2026
extern int errno;67,2076
extern emc_config_t confg;68,2094
void _pprintf_dbg(88,2540
void _printf_dbg(166,4223
void _dummy_debug(247,5911
void _dummy_pdebug(265,6261
char *UTIL_get_date(UTIL_get_date284,6661
char *UTIL_strndup(UTIL_strndup318,7544
char *UTIL_strdup(UTIL_strdup366,8518
void *UTIL_malloc(UTIL_malloc401,9175
void *UTIL_realloc(UTIL_realloc442,10208
void UTIL_free(479,10934
char *UTIL_get_rawheader(UTIL_get_rawheader514,11744
int UTIL_get_skey(573,12903
int UTIL_get_ckey(620,14120
int UTIL_nuke_imap_account(667,15303
EMC_BOOL UTIL_validate_skey(772,18180
long UTIL_get_maildir_size(822,19648
char * UTIL_get_imap_host_for_user(938,22474

/emcsvn/emc/emcmailer/trunk/j2storage/util.h,2003
#define _UTIL_H 47,1752
#define _GNU_SOURCE 50,1791
#define __USE_BSD 54,1866
#define FL_A 99,3150
#define FL_B 100,3193
#define FL_C 101,3237
#define FL_D 102,3292
#define FL_E 103,3349
#define FL_F 104,3406
#define FL_G 105,3464
#define EMC_MAX_DATETIME 108,3575
#define IMAP_BUF_SIZE 111,3627
#define BUFFER_SIZE 114,3684
#define EX_TEMPFAIL 117,3740
#define EX_OK 118,3763
typedef struct emc_config_s126,3830
  int level;128,3860
} emc_config_t;129,3898
typedef enum EMC_BOOL147,4390
  EMC_FALSE 149,4414
  EMC_TRUE150,4431
} EMC_BOOL;151,4442
#define EMC_MAX_DEBUG 153,4455
#define SIZEOF(163,4910
#  define __FUNCTION__ 168,5010
#  define __FUNCTION__ 170,5050
#define xmalloc(180,5207
#define xrealloc(181,5280
#define xfree(182,5357
#define xstrdup(183,5428
#define xstrndup(184,5467
#define xprintf(193,5583
#define xvprintf(197,5735
#define xpprintf(201,5909
#define xeprintf(205,6029
#define xepprintf(209,6178
#define xpthread_mutex_lock(218,6301
#define xpthread_mutex_unlock(219,6367
#define f_bit_set(223,6466
#define DEBUG_LOG_FILE 231,6619
#define OUTPUT_LOG_FILE 234,6719
#define dbg_printf 237,6804
#define dbg_pprintf 238,6835
#define dbg_printf 242,6895
#define dbg_pprintf 243,6927
void _printf_dbg(258,7032
void _pprintf_dbg(261,7130
void _dummy_debug(264,7224
void _dummy_pdebug(267,7323
void *UTIL_malloc(UTIL_malloc276,7466
void *UTIL_realloc(UTIL_realloc277,7543
void  UTIL_free(278,7629
char *UTIL_get_date(UTIL_get_date286,7767
char *UTIL_strndup(UTIL_strndup287,7794
char *UTIL_strdup(UTIL_strdup288,7842
char    *UTIL_get_rawheader(UTIL_get_rawheader296,7910
int      UTIL_get_skey(297,7967
int UTIL_get_ckey(298,8005
int      UTIL_nuke_imap_account(299,8038
EMC_BOOL UTIL_validate_skey(300,8104
long     UTIL_get_maildir_size(301,8182
char * UTIL_get_imap_host_for_user(302,8259
void _UTIL_pthread_mutex(309,8374
extern pthread_mutex_t util_mutex;315,8506
extern void *util_mutex;util_mutex320,8592

/emcsvn/emc/emcmailer/trunk/j2storage/j2storage.c,4066
static char *rcsid rcsid16,307
static void use_rcsid(17,388
#define _GNU_SOURCE 23,496
#define BUFFER_SIZE 59,1659
#define MAX_RETRIES 61,1691
u_int16_t quota_port 64,1791
int sock 66,1852
int debugmode 67,1897
int unlink_msgfile 68,1947
int imapport 69,1985
int all_ok 70,2033
int action_encrypt 71,2123
int uid_mail 74,2311
int gid_mail 75,2329
int perms_dir 76,2347
const char *MAIL_FOLDER MAIL_FOLDER78,2441
char *sender sender80,2544
char *recipient recipient81,2609
char *msgid msgid82,2677
char *data data83,2746
char *local local84,2784
char *domain domain85,2861
char *tmp_dir tmp_dir86,2934
char *filename filename87,2991
char *refdomain refdomain88,3058
char *queue_type queue_type89,3133
char *quota_host quota_host90,3182
char *imapserv imapserv91,3239
char *valid_domains valid_domains92,3297
char *pg_quota pg_quota93,3362
char *j2senders j2senders94,3406
char *j2billingsenders j2billingsenders95,3472
char *forcesf_domains forcesf_domains96,3552
char *send_domains_pgname_free send_domains_pgname_free97,3617
char *send_domains_pgname_paid send_domains_pgname_paid98,3703
char *urlDeliverTarget urlDeliverTarget101,3865
int aret 103,3897
int chret 104,3944
char *gpg_home gpg_home106,4018
const char *configfile configfile108,4042
emc_config_t confg;110,4103
MYSQL mysql_ro;113,4159
MYSQL mysql_rw;114,4229
MYSQL mysql_local;115,4295
EmcConfig *config;config116,4369
EmcQImpl *impl;impl117,4429
static char *J2STORAGE_http_post(J2STORAGE_http_post121,4505
static GType test_session_get_type(135,4872
static void test_session_class_init(168,5476
static char *request_passwd(request_passwd188,5932
int leave(209,6400
void J2STORAGE_fini(226,6629
void J2STORAGE_init(255,7109
EMC_BOOL J2STORAGE_decrypt_message(578,16517
EMC_BOOL J2STORAGE_encrypt_message(686,19377
int create_people_entry(825,24096
int create_hosted_mailbox(888,25977
void J2STORAGE_remove_stale_lock_file(958,28176
void J2STORAGE_free_key_value_mem(983,29046
int J2STORAGE_is_migrated(1016,29798
char * J2STORAGE_read_file_contents(1052,30794
static unsigned long int J2STORAGE_copy_file(1085,31771
int J2STORAGE_set_skey_NEW(1128,32877
int J2STORAGE_set_skey_OLD(1156,34040
int J2STORAGE_get_skey_db_NEW(1182,35009
int J2STORAGE_get_skey_db_OLD(1223,36185
char *J2STORAGE_get_box_maildir(J2STORAGE_get_box_maildir1264,37237
int J2STORAGE_get_mailbox_pg_num(1306,38436
int J2STORAGE_get_pg_num_by_name(1344,39299
int J2STORAGE_extra_send_logic(1428,41669
int J2STORAGE_connect_mysql_local(1474,43896
static int J2STORAGE_write_ocr_queue(1547,45861
static int J2STORAGE_get_mobile_notification_pref(1590,47169
static long int J2STORAGE_get_last_rowid(1625,48441
static long int J2STORAGE_get_folder_id(1647,49000
static int J2STORAGE_create_folder(1671,49595
static char *J2STORAGE_get_hostname(J2STORAGE_get_hostname1687,49900
int J2STORAGE_mark_corruption(1727,50771
static int J2STORAGE_sqlite_fix2(1757,52077
static int J2STORAGE_sql_retry(1827,55481
static int J2STORAGE_check_and_create(1883,57659
static char *J2STORAGE_get_bucket_and_filename(J2STORAGE_get_bucket_and_filename1939,59448
static char *J2STORAGE_generate_bucket(J2STORAGE_generate_bucket1965,59953
int J2STORAGE_tables_exist(1982,60348
static int J2STORAGE_maildir_deliver(2027,61769
static char* J2STORAGE_compose_json_nuke_mailbox(2135,65311
static char* J2STORAGE_compose_json_delivery(2167,66428
static uint http_write_to_string(2325,72829
static char *J2STORAGE_http_post(J2STORAGE_http_post2339,73167
static int J2STORAGE_nuke_mailbox(2416,76633
static long int J2STORAGE_api_delivery(2469,79132
static long int J2STORAGE_local_delivery(2572,84210
void parse_folder(2944,99887
void space_to_dash(2985,100932
char *J2STORAGE_get_DOC_rootfolder(J2STORAGE_get_DOC_rootfolder3002,101183
int J2STORAGE_set_DOC_rootfolder(3039,102075
int J2STORAGE_is_remote_user(3068,103086
EMC_BOOL J2STORAGE_does_string_contain(3113,104209
int mainDataOnCall(3135,104874
int main(3406,116876

/emcsvn/emc/emcmailer/trunk/j2storage/j2storage.h,571
#define _J2STORAGE_H 11,205
typedef struct _TestSession TestSession;22,341
typedef struct _TestSessionClass TestSessionClass;23,382
struct _TestSession25,434
  GMimeSession parent_object;27,456
struct _TestSessionClass30,490
  GMimeSessionClass parent_class;32,517
void test_session_finalize(36,583
static GMimeSessionClass *parent_class parent_class38,623
static void test_session_class_init(39,670
static char *request_passwd request_passwd40,727
void     J2STORAGE_init(44,853
void     J2STORAGE_fini(45,905
EMC_BOOL J2STORAGE_encrypt_mime_part(47,982

/emcsvn/emc/emcmailer/trunk/j2storage/email_encrypter.c,839
static char *rcsid rcsid14,254
static void use_rcsid(15,337
#define _GNU_SOURCE 21,445
#define BUFFER_SIZE 46,1344
int debugmode 51,1401
char *filename filename52,1448
char *outfile outfile53,1511
char *action action54,1534
int all_ok 55,1558
char *msgid msgid57,1575
emc_config_t confg;58,1595
static GType test_session_get_type(73,1924
static void test_session_class_init(106,2556
static char *request_passwd(request_passwd126,3018
int leave(147,3489
void initParams(153,3529
EMC_BOOL encrypt_mime_part(234,5083
EMC_BOOL decrypt_mime_part(335,8335
void look_partwalker_encrypter(439,11686
EMC_BOOL J2STORAGE_encrypt_message(502,13444
void look_partwalker_decrypter(602,16151
EMC_BOOL J2STORAGE_decrypt_message(658,17685
char *get_rawheader(get_rawheader754,20243
int get_skey(797,21112
int main(835,21991

/emcsvn/emc/emcmailer/trunk/emcmailer.h,1088
#define EMC_MAILER_H2,21
typedef GArray EmcArray;7,83
EmcArray * emc_array_new(8,108
int emc_array_append_val(9,185
int emc_array_append_vals(10,244
int emc_array_insert_val(11,322
int emc_array_insert_vals(12,392
int emc_array_prepend_val(13,472
int emc_array_prepend_vals(14,532
int emc_array_remove_index(15,611
void * emc_array_index(16,671
int emc_array_set_size(17,726
void emc_array_free(18,784
void * emc_array_get_data(19,843
typedef void (*user_hash_func)user_hash_func21,891
typedef GHashTable EmcHash;22,958
typedef GHashFunc EmcHashFunc;23,986
typedef GCompareFunc EmcHashCompareFunc;24,1017
EmcHash * emc_hash_new(25,1058
EmcHash * emc_hash_new_full(26,1084
void emc_hash_insert(27,1159
int emc_hash_size(28,1223
void * emc_hash_lookup(29,1260
void emc_hash_remove(30,1320
void emc_hash_foreach(31,1378
void emc_hash_destroy(32,1453
char * str_tolower(34,1495
#define EMC_MAXLINE 36,1537
typedef struct EmFd 38,1597
	int   fd;39,1619
	char *read_ptr;read_ptr40,1630
	int   read_cnt;41,1647
	char  read_buf[read_buf42,1664
} EmFd;43,1694

/emcsvn/emc/emcmailer/trunk/alworker_main.c,276
static char *rcsid rcsid1,0
static void use_rcsid(2,85
alworker_options al_opts;21,400
#define BUFFER_SIZE 23,427
EmcConfig * config 25,458
char * msgid 28,509
long host_id 29,530
int debugmode 30,549
int pretendmode 31,568
int outboundmode 32,589
int main(34,612

/emcsvn/emc/emcmailer/trunk/bounce/bounce.c,461
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
char * filename 21,424
char * sender 22,448
char * recip 23,470
int debugmode 24,491
int unlink_msgfile 25,510
char * configfile 26,534
int sock 27,560
char * msgid 28,574
char * refdomain 29,595
char * data 30,620
char * local 32,641
char * domain 33,662
int outbound 35,685
#define BUFFER_SIZE 37,704
int leave(39,734
void init_args(44,777
int main(138,2875

/emcsvn/emc/emcmailer/trunk/cidr.c,405
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
unsigned long int endian_swap(11,223
gboolean ip_in_cidr 13,276
unsigned long int endian_swap(43,1078
gboolean ip_in_range 53,1253
void cidr_free(68,1665
cidr_s *cidr_new cidr_new73,1712
char *cidr_to_str cidr_to_str80,1818
int cidr_parse_str 89,1975
int ip_range_parse_str 112,2661
int octets_to_ip 169,4118

/emcsvn/emc/emcmailer/trunk/cidr.h,484
#define __CIDR_H__2,19
typedef struct cidr_t 12,188
    struct in_addr network;13,212
    int masklen;14,240
} cidr_s;15,257
typedef struct ip_range_t 17,268
	struct in_addr start_ip;18,296
	struct in_addr end_ip;19,322
} ip_range_s;20,346
gboolean ip_in_cidr 22,361
gboolean ip_in_range 23,417
cidr_s *cidr_new cidr_new25,493
void cidr_free 26,514
char *cidr_to_str cidr_to_str27,545
int cidr_parse_str 28,579
int ip_range_parse_str 29,639
int octets_to_ip 30,715

/emcsvn/emc/emcmailer/trunk/qworker.c,1141
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
extern int debugmode;33,671
extern int pretendmode;34,693
int outboundmode;35,717
extern const char * msgid;36,735
extern long host_id;37,762
extern int agentpid;39,784
extern EmcConfig * config;40,805
extern qworker_options qe_opts;41,832
#define BUFFER_SIZE 43,865
EmcHash * alworkers 45,895
long qwtimeout 46,923
int bail 47,943
void process_alists(50,984
void qw_leave_well(51,1007
int process_externals(52,1067
int process_hosted(53,1092
void release_alworker(54,1114
void qw_reaper(55,1158
void qw_alarmer(56,1183
void ex_fail_setter(57,1209
void l_fail_setter(58,1266
alworker_options al_opts;61,1390
ldeliver_options ldeliver_opts;62,1416
exdeliver_options exdeliver_opts;63,1448
int ex_retries 64,1482
int l_retries 65,1502
void do_qworker(67,1522
void process_alists(222,5463
void qw_leave_well(313,7728
int process_externals(396,9831
int process_hosted(697,17226
void release_alworker(1068,25811
void qw_reaper(1132,27208
void qw_alarmer(1136,27266
void ex_fail_setter(1142,27447
void l_fail_setter(1152,27853

/emcsvn/emc/emcmailer/trunk/qworker.h,261
#define EMC_QWORKER2,20
typedef struct qworker_options_t 6,62
	char * configfile;7,97
	long qnum;8,117
	char * qestream;9,129
	EmcQEntry * qentry;10,147
	EmcQImpl * impl;11,168
	char * queue_type;12,186
} qworker_options;13,206
void do_qworker(15,226

/emcsvn/emc/emcmailer/trunk/common.c,1150
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define _CHECK_BAD_SYMBOL 23,452
int install_impl(27,539
void fatal(454,16691
int is_sender_valid(459,16783
int connect_to_aka_db_rw(505,17505
int connect_to_aka_db(575,18963
char *_mysql_quote(_mysql_quote651,20590
char *mysql_quote(mysql_quote669,20925
int emc_query(674,21018
char * str_tolower(688,21375
void md5hash(712,21668
void hmacHash 735,22065
EmcArray * emc_array_new(766,22690
int emc_array_append_val(771,22842
int emc_array_append_vals(775,22953
int emc_array_insert_val(779,23080
int emc_array_insert_vals(783,23209
int emc_array_prepend_val(787,23354
int emc_array_prepend_vals(791,23467
int emc_array_remove_index(795,23596
void * emc_array_index(799,23711
int emc_array_set_size(805,23863
void emc_array_free(809,23975
void * emc_array_get_data(813,24076
EmcHash * emc_hash_new_full(820,24178
EmcHash * emc_hash_new(825,24322
void emc_hash_insert(830,24427
int emc_hash_size(834,24535
void * emc_hash_lookup(838,24611
void emc_hash_remove(842,24717
void emc_hash_foreach(846,24808
void emc_hash_destroy(850,24937

/emcsvn/emc/emcmailer/trunk/common.h,12643
#define EMC_COMMON_H2,21
typedef void * EmcQImpl;13,199
typedef void * EmcQueue;14,224
typedef void * EmcQEntry;15,249
typedef void * EmcAList;16,275
typedef void * EmcAEntry;17,300
typedef void * EmcHeader;18,326
typedef void * EmcHint;19,352
typedef void * EmcHostedEntry;20,376
typedef void * EmcExternalEntry;21,407
typedef EmcQEntry        EmcQEntryArray;23,441
typedef EmcAList         EmcAListArray;24,482
typedef EmcAEntry        EmcAEntryArray;25,522
typedef EmcHeader        EmcHeaderArray;26,563
typedef EmcHostedEntry   EmcHostedEntryArray;27,604
typedef EmcExternalEntry EmcExternalEntryArray;28,650
EmcQImpl *   (*init_impl)init_impl31,734
EmcQImpl *   (*init_impl2)init_impl232,797
MYSQL *      (*impl_get_akadb)impl_get_akadb33,879
EmcQEntry  * (*qentry_dup)qentry_dup37,950
const char * (*qentry_get_sender)qentry_get_sender38,1006
const char * (*qentry_get_recipient)qentry_get_recipient39,1062
const char * (*qentry_get_message_id)qentry_get_message_id40,1118
long         (*qentry_get_qnum)qentry_get_qnum41,1174
long         (*qentry_get_inode)qentry_get_inode42,1230
const char * (*qentry_get_status)qentry_get_status43,1286
int          (*qentry_get_lock)qentry_get_lock44,1342
int          (*qentry_is_outbound)qentry_is_outbound45,1398
long         (*qentry_get_time)qentry_get_time46,1454
long         (*qentry_get_last_retry)qentry_get_last_retry47,1510
const char * (*qentry_get_filename)qentry_get_filename48,1566
const char * (*qentry_get_host)qentry_get_host49,1622
void         (*qentry_set_impl)qentry_set_impl50,1678
int          (*qentry_remove)qentry_remove51,1746
char *       (*qentry_serialize)qentry_serialize52,1802
EmcQEntry*   (*qentry_deserialize)qentry_deserialize53,1868
EmcQEntry*   (*qentry_create)qentry_create55,1936
EmcQEntry*   (*qentry_create_with_data)qentry_create_with_data61,2126
EmcQEntry*   (*qentry_create_real)qentry_create_real67,2329
EmcQEntry*   (*qentry_get)qentry_get73,2532
int          (*qentry_lock)qentry_lock74,2594
int          (*qentry_unlock)qentry_unlock75,2650
int          (*qentry_set_status)qentry_set_status76,2706
int          (*qentry_get_pending)qentry_get_pending77,2776
int          (*qentry_get_locked)qentry_get_locked78,2864
int          (*qentry_finished)qentry_finished79,2957
EmcQEntry *  (*qentry_get_at)qentry_get_at80,3021
void         (*qentry_free_list)qentry_free_list81,3085
void         (*qentry_free)qentry_free82,3150
int          (*qentry_get_processing_status)qentry_get_processing_status83,3207
long         (*alist_get_qnum)alist_get_qnum88,3297
long         (*alist_get_alnum)alist_get_alnum89,3359
const char * (*alist_get_message_id)alist_get_message_id90,3421
long         (*alist_get_inode)alist_get_inode91,3483
const char * (*alist_get_filename)alist_get_filename92,3545
const char * (*alist_get_recipient)alist_get_recipient93,3607
const char * (*alist_get_sender)alist_get_sender94,3669
int          (*alist_get_level)alist_get_level95,3731
int          (*alist_get_allow_ext)alist_get_allow_ext96,3793
const char * (*alist_get_data)alist_get_data97,3855
const char * (*alist_get_status)alist_get_status98,3917
int          (*alist_get_lock)alist_get_lock99,3979
MYSQL*       (*alist_get_akadb)alist_get_akadb100,4041
void         (*alist_set_impl)alist_set_impl101,4103
EmcAList *   (*alist_create)alist_create102,4170
EmcAList *   (*alist_clone)alist_clone109,4416
char *       (*alist_serialize)alist_serialize113,4567
EmcAList *   (*alist_deserialize)alist_deserialize114,4644
EmcAList *   (*alist_get_by_hosted)alist_get_by_hosted115,4727
int          (*alist_lock)alist_lock117,4828
int          (*alist_unlock)alist_unlock118,4890
void         (*alist_set_filename)alist_set_filename119,4952
int          (*alist_set_status)alist_set_status120,5036
int          (*alist_set_allow_ext)alist_set_allow_ext121,5119
int          (*alist_get_processing_status)alist_get_processing_status122,5192
int          (*alist_get_pending)alist_get_pending123,5256
int          (*alist_finished)alist_finished124,5342
EmcAList *   (*alist_get_at)alist_get_at125,5405
int          (*alist_message_modified)alist_message_modified126,5476
int          (*alist_remove_all_aentries)alist_remove_all_aentries129,5600
int          (*alist_max_itemnum)alist_max_itemnum130,5662
void         (*alist_free_list)alist_free_list131,5724
void         (*alist_free)alist_free132,5796
long         (*aentry_get_qnum)aentry_get_qnum137,5874
long         (*aentry_get_alnum)aentry_get_alnum138,5938
const char * (*aentry_get_message_id)aentry_get_message_id139,6002
const char * (*aentry_get_recipient)aentry_get_recipient140,6066
const char * (*aentry_get_user)aentry_get_user141,6130
const char * (*aentry_get_domain)aentry_get_domain142,6194
const char * (*aentry_get_sender)aentry_get_sender143,6258
int          (*aentry_get_itemnum)aentry_get_itemnum144,6322
const char * (*aentry_get_action)aentry_get_action145,6386
const char * (*aentry_get_data)aentry_get_data146,6450
const char * (*aentry_get_status)aentry_get_status147,6514
int          (*aentry_get_retry_times)aentry_get_retry_times148,6578
long         (*aentry_get_last_retry)aentry_get_last_retry149,6642
const char * (*aentry_last_error)aentry_last_error150,6706
EmcAEntry *  (*aentry_create)aentry_create152,6771
int          (*aentry_get_pending)aentry_get_pending158,7001
EmcAEntry *  (*aentry_get_at)aentry_get_at159,7076
void         (*aentry_free_list)aentry_free_list160,7148
int          (*aentry_set_error)aentry_set_error161,7221
int          (*aentry_touch)aentry_touch162,7292
int          (*aentry_set_status)aentry_set_status163,7349
int          (*aentry_stop_after)aentry_stop_after164,7420
int          (*aentry_hold_after)aentry_hold_after165,7484
void         (*aentry_free)aentry_free166,7548
long         (*header_get_qnum)header_get_qnum170,7627
long         (*header_get_alnum)header_get_alnum171,7692
long         (*header_get_inode)header_get_inode172,7757
const char * (*header_get_filename)header_get_filename173,7822
const char * (*header_get_header)header_get_header174,7887
EmcHeader *  (*header_create)header_create175,7952
int          (*header_get_pending)header_get_pending177,8055
EmcHeader *  (*header_get_like)header_get_like180,8191
EmcHeader *  (*header_get_at)header_get_at183,8327
void         (*header_free_list)header_free_list184,8400
void         (*header_free)header_free185,8474
const char * (*hint_get_message_id)hint_get_message_id189,8552
long         (*hint_get_inode)hint_get_inode190,8612
const char * (*hint_get_agent)hint_get_agent191,8672
const char * (*hint_get_key)hint_get_key192,8732
const char * (*hint_get_hint)hint_get_hint193,8792
EmcHint *    (*hint_create)hint_create194,8852
EmcHint *    (*hint_get)hint_get200,9076
long         (*hosted_get_qnum)hosted_get_qnum207,9253
long         (*hosted_get_alnum)hosted_get_alnum208,9322
const char * (*hosted_get_message_id)hosted_get_message_id209,9391
const char * (*hosted_get_recipient)hosted_get_recipient210,9460
const char * (*hosted_get_sender)hosted_get_sender211,9529
long         (*hosted_get_inode)hosted_get_inode212,9598
const char * (*hosted_get_filename)hosted_get_filename213,9667
const char * (*hosted_get_data)hosted_get_data214,9736
const char * (*hosted_get_status)hosted_get_status215,9805
int          (*hosted_get_retry_times)hosted_get_retry_times216,9874
long         (*hosted_get_last_retry)hosted_get_last_retry217,9943
const char * (*hosted_get_last_error)hosted_get_last_error218,10012
EmcHostedEntry * (*hosted_create)hosted_create219,10081
int          (*hosted_set_error)hosted_set_error225,10312
int          (*hosted_touch)hosted_touch226,10387
int          (*hosted_set_status)hosted_set_status227,10462
int          (*hosted_get_pending)hosted_get_pending228,10537
EmcHostedEntry * (*hosted_get_at)hosted_get_at229,10615
void         (*hosted_free_list)hosted_free_list230,10692
void         (*hosted_free)hosted_free231,10770
void         (*hosted_remove)hosted_remove232,10839
long         (*external_get_qnum)external_get_qnum236,10925
long         (*external_get_alnum)external_get_alnum237,10998
const char * (*external_get_message_id)external_get_message_id238,11071
const char * (*external_get_recipient)external_get_recipient239,11144
const char * (*external_get_sender)external_get_sender240,11217
long         (*external_get_inode)external_get_inode241,11290
const char * (*external_get_filename)external_get_filename242,11363
const char * (*external_get_data)external_get_data243,11436
const char * (*external_get_status)external_get_status244,11509
const char * (*external_get_rhost)external_get_rhost245,11582
int          (*external_get_retry_times)external_get_retry_times246,11655
long         (*external_get_last_retry)external_get_last_retry247,11728
const char * (*external_get_last_error)external_get_last_error248,11801
EmcExternalEntry * (*external_create)external_create249,11874
int          (*external_set_error)external_set_error256,12139
int          (*external_set_status)external_set_status257,12216
int          (*external_get_pending)external_get_pending258,12293
EmcExternalEntry * (*external_get_at)external_get_at259,12373
void         (*external_free_list)external_free_list260,12452
void         (*external_free)external_free261,12532
void         (*external_remove)external_remove262,12605
int          (*message_store)message_store266,12694
int          (*message_remove)message_remove273,12921
int          (*message_merge_headers)message_merge_headers275,13006
int          (*message_merge_headers_escape)message_merge_headers_escape279,13170
char *       (*message_merge_headers_as_string)message_merge_headers_as_string284,13367
char *       (*message_create)message_create287,13512
char *       (*message_create_with_data)message_create_with_data295,13823
char *       (*message_create_outbound_with_data)message_create_outbound_with_data304,14161
int          (*misc_sender_valid)misc_sender_valid318,14523
char *       (*misc_get_unique_id)misc_get_unique_id319,14588
char *       (*misc_get_localname)misc_get_localname320,14666
char *       (*misc_get_domain)misc_get_domain321,14732
int          (*build_expand_alist)build_expand_alist325,14812
int          (*build_expand_outbound_alist)build_expand_outbound_alist326,14874
int          (*build_expand_forward)build_expand_forward327,14939
int          (*build_expand_forward_bounce)build_expand_forward_bounce328,15020
int          (*build_expand_shcal)build_expand_shcal329,15103
int          (*build_expand_hosted)build_expand_hosted330,15184
int          (*build_expand_external)build_expand_external331,15265
int          (*build_expand_relay)build_expand_relay332,15346
int          (*build_is_external_domain)build_is_external_domain333,15427
int          (*build_is_external_address)build_is_external_address334,15502
int          (*build_do_special_addresses)build_do_special_addresses335,15577
int          (*admin_get_all_entries)admin_get_all_entries339,15653
int          (*admin_get_pending_entries)admin_get_pending_entries341,15754
int          (*admin_get_frozen_entries)admin_get_frozen_entries343,15855
int          (*admin_get_failed_entries)admin_get_failed_entries345,15956
int          (*admin_lock_qentry)admin_lock_qentry347,16057
int          (*admin_unlock_qentry)admin_unlock_qentry349,16153
int          (*admin_get_locked_entries)admin_get_locked_entries350,16234
int          (*admin_get_qentry_info)admin_get_qentry_info352,16336
int          (*admin_set_action_status)admin_set_action_status361,16699
int          (*admin_get_action_entries)admin_get_action_entries366,16902
int          (*admin_reset_failed_qentry)admin_reset_failed_qentry370,17072
int          (*admin_thaw_qentry)admin_thaw_qentry371,17152
EmcQEntry *  (*admin_get_qentry)admin_get_qentry372,17232
int          (*admin_set_qentry_status)admin_set_qentry_status373,17312
int          (*admin_queue_rebuild)admin_queue_rebuild376,17443
int connect_to_aka_db(382,17516
int connect_to_aka_db_rw(383,17575
char *mysql_quote(mysql_quote384,17637
char *_mysql_quote(_mysql_quote385,17689
int emc_query(386,17742
void md5hash(387,17790
void hmacHash 388,17853
int install_impl(389,17943
void fatal(390,17998
int is_sender_valid(391,18028

/emcsvn/emc/emcmailer/trunk/config.c,705
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define DEFAULT_HASH_SIZE 19,368
static int do_config_section(21,400
static int do_config_param(22,449
EmcConfig *config_init_internal(config_init_internal23,516
static char *cursec cursec26,605
static hash *curhash curhash27,630
static EmcConfig *dynamic dynamic28,659
int is_sane(30,694
EmcConfig *config_init(config_init139,3727
EmcConfig *config_init_internal(config_init_internal148,3880
const char *config_get_filename(config_get_filename179,4551
char *config_getopt(config_getopt184,4633
void config_destroy(195,4855
static int do_config_section(205,5003
static int do_config_param(212,5108

/emcsvn/emc/emcmailer/trunk/emclib/realmtree.c,244
static char *rcsid rcsid1,0
static void use_rcsid(2,31
#define _GNU_SOURCE7,94
char *realm_get_parent(realm_get_parent22,371
char **realmpath_get_parents(realmpath_get_parents88,1580
char **realm_get_parents(realm_get_parents172,3024

/emcsvn/emc/emcmailer/trunk/emclib/realmtree.h,127
#define _EMC_REALMTREE_H_2,26
char *realm_get_parent(realm_get_parent6,78
char **realm_get_parents(realm_get_parents8,122

/emcsvn/emc/emcmailer/trunk/emclib/emc_services.c,267
static char *rcsid rcsid6,86
static void use_rcsid(8,170
#define _GNU_SOURCE18,282
GArray* db_load_services(36,768
gboolean realm_is_subscribed(38,814
GArray* get_emc_services(111,2118
gboolean emcservice_is_active(139,2707
GArray* db_load_services(143,2799

/emcsvn/emc/emcmailer/trunk/emclib/emc_services.h,858
#define _EMC_SERVICES_H_7,111
typedef struct emcService_t9,137
	int serviceNum;11,167
	char *name;name12,184
	char *shortname;shortname13,197
	char *desc;desc14,215
    gboolean active;15,228
    gboolean cascade;16,249
} EmcService;17,271
#define SERVICE_FORWARDING 19,286
#define SERVICE_AUTORESPONDER 20,317
#define SERVICE_HOSTED 21,350
#define SERVICE_FILTERING	22,378
#define SERVICE_VIRUS	23,407
#define SERVICE_SPAM	24,433
#define SERVICE_OUTBOUND_RELAY 25,458
#define SERVICE_HBF 26,493
#define SERVICE_VAULTSMART 27,519
#define SERVICE_POLICYSMART	28,551
#define SERVICE_CYPHERSMART	29,583
#define SERVICE_SPOOL	30,615
#define SERVICE_FUSEMAIL	31,642
#define SERVICE_EXCHANGE	33,672
gboolean is_subscribed(35,703
gboolean emcservice_is_active(36,762
GArray* get_emc_services(37,814
gboolean realm_is_subscribed(38,859

/emcsvn/emc/emcmailer/trunk/emclib/edate.c,66
GDate *e_parse_date(e_parse_date1,0
time_t e_parse_time(45,967

/emcsvn/emc/emcmailer/trunk/emclib/emclib.h,64
#define _EMC_LIB_H_2,20
#define FALSE 5,55
#define TRUE 6,71

/emcsvn/emc/emcmailer/trunk/emclib/emime.c,489
#define _GNU_SOURCE5,49
const char* demime_header_get_value(20,343
MsgHeader *demime_get_msg_header_file(demime_get_msg_header_file25,416
GArray* headersArray 54,966
GArray* demime_get_headers_file(56,996
const char *demime_get_header_file(demime_get_header_file66,1239
void demime_header_set_value(88,1670
void demime_save_with_new_headers 94,1786
char *demime_get_raw_headers(demime_get_raw_headers144,2721
GArray *demime_parse_raw_headers(demime_parse_raw_headers170,3181

/emcsvn/emc/emcmailer/trunk/emclib/emime.h,556
#define _EMC_MIME2,18
typedef struct MsgHeader_t4,37
	char* name;6,66
	char* value;7,79
	char* raw;8,93
} MsgHeader;9,105
GArray* demime_get_headers_file(11,119
const char *demime_get_header_file(demime_get_header_file12,174
char *demime_get_raw_headers(demime_get_raw_headers13,252
GArray *demime_parse_raw_headers(demime_parse_raw_headers14,304
const char* demime_header_get_value(15,362
void demime_header_set_value(16,413
MsgHeader *demime_get_msg_header_file(demime_get_msg_header_file18,480
void demime_save_with_new_headers 19,561

/emcsvn/emc/emcmailer/trunk/emclib/echecksum.c,237
#define _GNU_SOURCE5,49
#define FILE_READ_BUFFER_SIZE 15,219
char* e_file_checksum(17,269
char *e_md5_checksum_file(e_md5_checksum_file19,344
char *e_sha256_checksum_file(e_sha256_checksum_file24,448
char* e_file_checksum(29,558

/emcsvn/emc/emcmailer/trunk/emclib/echecksum.h,137
#define _EMC_CHECKSUM2,22
char *e_md5_checksum_file(e_md5_checksum_file4,45
char *e_sha256_checksum_file(e_sha256_checksum_file5,94

/emcsvn/emc/emcmailer/trunk/emclib/epcre.c,142
pcre *parse_pcre(parse_pcre1,0
regex_t *parse_regex(parse_regex71,1371
char* e_pcre_replace_with 87,1674
char * e_pcre_replace 138,2716

/emcsvn/emc/emcmailer/trunk/emclib/epcre.h,152
#define _EMC_PCRE2,18
pcre *parse_pcre(parse_pcre4,37
char *e_pcre_replace_with e_pcre_replace_with5,97
char *e_pcre_replace e_pcre_replace6,196

/emcsvn/emc/emcmailer/trunk/emclib/estdio.c,69
#define _GNU_SOURCE5,49
int e_mkdir 24,403
int e_file_copy 42,769

/emcsvn/emc/emcmailer/trunk/emclib/estdio.h,64
#define _EMC_STDIO2,19
int e_mkdir 4,39
int e_file_copy 5,74

/emcsvn/emc/emcmailer/trunk/emclib/elog.c,757
#define _GNU_SOURCE5,49
#define REPORT_ERROR 21,361
#define REPORT_DEBUG 22,384
#define REPORT_AGENT 23,407
#define REPORT_STATS 24,430
#define REPORT_INFO 25,453
#define DEBUG_SYSLOG 27,477
#define DEBUG_STDOUT 28,506
#define DEBUG_RULE 29,535
#define DEBUG_FINGERPRINT 30,564
#define DEBUG_CONFIG 31,593
#define DEBUG_WARN 32,623
#define DEBUG_FAIL 33,653
#define DEBUG_INFO 34,683
#define DEBUG_RESULT 35,714
#define DEBUG_PARSE_DOM 36,745
#define DEBUG_MAX 37,776
extern const char *msgid;msgid39,808
extern int debugmode;40,834
void e_log_message(41,856
void e_log_error(43,909
void e_log_warn(56,1181
void e_log_info(69,1452
void e_log_debug(83,1722
void e_log_trace(97,1994
void e_log_message(110,2265
void e_log(123,2672

/emcsvn/emc/emcmailer/trunk/emclib/elog.h,267
	EMC_LOG_ERROR,3,16
	EMC_LOG_WARN,4,32
	EMC_LOG_INFO,5,47
	EMC_LOG_DEBUG,6,62
	EMC_LOG_TRACE,7,78
} EMC_LOG_LEVEL;8,94
void e_log 10,112
void e_log_error(12,178
void e_log_warn(13,227
void e_log_info(14,275
void e_log_debug(15,323
void e_log_trace(16,372

/emcsvn/emc/emcmailer/trunk/emclib/estring.c,281
static char *rcsid rcsid1,0
static void use_rcsid(2,31
char *e_strdup(e_strdup14,266
void *e_malloc(e_malloc22,444
int e_asprintf(34,681
void e_chomp(49,974
int e_strpos(68,1224
int e_strrpos(79,1389
char *e_str_replace(e_str_replace89,1524
int e_is_numeric(119,2067

/emcsvn/emc/emcmailer/trunk/emclib/estring.h,245
#define _EMC_STRING_H_2,23
char *e_str_replace(e_str_replace8,129
int e_strpos(10,209
int e_strrpos(11,260
int e_asprintf(13,306
char *e_strdup(e_strdup14,362
void *e_malloc(e_malloc15,398
void e_chomp(16,441
int e_is_numeric(17,472

/emcsvn/emc/emcmailer/trunk/espamc/espamc.c,3067
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
typedef enum ComMode_t 38,768
	COM_SOCKET_MODE 39,793
	COM_FILE_MODE 40,815
} ComMode;41,835
#define ESPAMC_VERSION 43,847
#define DEFAULT_TMP_DIR 45,877
#define DEFAULT_PORT 46,908
char *get_rawheader(get_rawheader48,936
int get_mysql_socket(49,987
int process_hints(50,1102
int has_custom_spam_settings(51,1134
const char *get_last2_dirs(get_last2_dirs52,1203
void show_usage(53,1247
int do_args(54,1287
char *stdin_to_tmp(stdin_to_tmp55,1325
char *socket_to_tmp(socket_to_tmp56,1387
void init_spam_report(61,1490
void do_one_line_spam_report(62,1542
void free_key_value_mem(63,1601
int process_response(64,1669
void process_config(66,1764
AllowDenyList allow_list;68,1792
AllowDenyList deny_list;69,1818
EmcConfig * gConfig;71,1844
EmcQImpl *	gImpl;72,1865
char *gFilename gFilename74,1884
char *gCfgFilename gCfgFilename75,1908
char *gRecip gRecip76,1935
char *gDomain gDomain77,1956
const char *hintRealm hintRealm78,1978
char *gSender gSender79,2008
char *fromAddr fromAddr80,2030
char *gPolicyRealm gPolicyRealm82,2102
char *gData gData83,2129
char *msgid msgid84,2149
BOOL gNoHints 85,2169
int  debugmode 86,2192
char *gTmpDir gTmpDir87,2212
BOOL gPretend 88,2234
long gMaxSize 89,2257
char *gPort gPort91,2295
char *gHost gHost92,2315
char *escape_percents(escape_percents94,2336
int get_storage_days(95,2379
char *get_spam_folder get_spam_folder96,2421
ComMode	gComMode 98,2466
#define DEFAULT_CONFIG_FILENAME 100,2503
#define CONTENT_LENGTH_HEADER	102,2559
#define RECIPIENT_HEADER	104,2609
#define SENDER_HEADER	105,2649
#define MESSAGE_ID_HEADER	106,2684
#define FILENAME_HEADER	107,2726
#define ADD_HEADER_HEADER	109,2766
#define STOP_MESSAGE_HEADER	110,2808
#define ADD_RECIPIENT_HEADER	111,2854
#define MODIFIED_MESSAGE_HEADER	112,2901
#define SCORE_HEADER 114,2955
#define THRESHOLD_HEADER 115,3002
#define IP_HEADER 117,3054
#define QUARANTINE_HEADER 119,3101
#define QUARANTINE_SUM_HEADER 120,3148
#define SPAM_REPORT_HEADER 122,3204
#define POLICY_REALM_HEADER 124,3253
#define STATUS_HEADER	125,3299
#define SUBJECT_HEADER 126,3334
#define CRLF 128,3372
#define CRLF_LEN 129,3392
#define LINE_BUFFER_SIZE	131,3423
char gLineBuffer[gLineBuffer132,3468
void show_usage(135,3506
int do_args(148,3788
#define TMPBUF 237,5541
char *stdin_to_tmp(stdin_to_tmp239,5566
char *socket_to_tmp(socket_to_tmp274,6325
void init_spam_report(313,7137
void do_one_line_spam_report(324,7366
const char *get_last2_dirs(get_last2_dirs410,9618
int process_response(449,10294
char *escape_percents(escape_percents876,20605
void process_config(899,20956
int process_hints(963,22463
int get_mysql_socket(1109,25559
int main(1134,26037
int has_custom_spam_settings(1668,41538
#define LONG_REPORT_LINE 1704,42660
#define SHORT_REPORT_LINE 1705,42716
char *get_rawheader(get_rawheader1707,42760
int get_storage_days 1734,43258
char *get_spam_folder get_spam_folder1790,44364

/emcsvn/emc/emcmailer/trunk/espamc/misc.c,412
static char *rcsid rcsid1,0
static void use_rcsid(2,76
int espamc_tcp_connect(17,416
int espamc_Tcp_connect(61,1527
ssize_t espamc_Readline(66,1632
ssize_t espamc_Readn(77,1835
void espamc_Writen(88,2030
void espamc_Write(96,2205
inline const char *find_next_rn(find_next_rn107,2431
inline const char * find_end_header(135,2832
#define CURRENT_BUFFER_SIZE 176,3521
char * Get_header_value(178,3575

/emcsvn/emc/emcmailer/trunk/espamc/misc.h,324
#define __espamc_misc_h2,24
#define BOOL 26,445
#define TRUE 30,483
#define FALSE 31,498
char *mysql_quote(mysql_quote34,522
int espamc_Tcp_connect(35,574
ssize_t espamc_Readline(36,634
ssize_t espamc_Readn(37,693
void espamc_Writen(38,750
void espamc_Write(39,811
char *Get_header_value(Get_header_value40,871

/emcsvn/emc/emcmailer/trunk/espamc/whitelist.c,777
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE8,190
#define D(16,321
#define D(18,342
extern int debugmode;21,363
void free_key_value_mem(26,451
int init_ad_list_struct(28,520
void free_key_value_mem(46,923
void destroy_ad_list_struct(65,1279
const char *getDomain(getDomain90,1911
int get_list_sql_filter(103,2127
int load_allow_lists(269,6856
int load_deny_list(461,13231
int whitelisted(644,19558
int blacklisted(665,19866
int check_lists(673,20048
char *get_customer_by_domain(get_customer_by_domain919,26674
int load_forwarding_alias_reverse(971,27929
char *get_forwarding_alias(get_forwarding_alias1050,29959
int load_customer_allow_domains(1104,31291
char *get_customer_wide_allow(get_customer_wide_allow1227,34472

/emcsvn/emc/emcmailer/trunk/espamc/whitelist.h,829
#define EMC_ESPAMC_WHITELIST_H2,31
typedef struct AllowDenyList_t 10,157
	GHashTable *global;global11,190
	GHashTable *domain;domain12,211
	GHashTable *user;user13,232
} AllowDenyList;14,251
#define WL_ERROR 16,269
#define WL_NO_HITS 17,294
#define WL_HIT_ALLOW 18,318
#define WL_HIT_DENY 19,342
#define WL_HIT_DOMAIN 20,366
#define WL_HIT_USER 21,390
char *get_customer_by_domain(get_customer_by_domain23,415
char *get_forwarding_alias(get_forwarding_alias27,479
int load_customer_allow_domains(31,539
char *get_customer_wide_allow(get_customer_wide_allow40,699
int load_forwarding_alias_reverse(44,764
int load_allow_lists(53,927
int load_deny_list(62,1100
int check_lists(71,1270
int init_ad_list_struct(80,1439
void destroy_ad_list_struct(82,1483
int whitelisted(84,1531
int blacklisted(88,1589

/emcsvn/emc/emcmailer/trunk/espamc/whitetest.c,173
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define DEBUG 15,298
char *msgid msgid17,315
int debugmode 18,337
void printHashEntry(20,357
int main(25,488

/emcsvn/emc/emcmailer/trunk/espamc/spam_central.c,356
static char *rcsid rcsid1,0
static void use_rcsid(2,84
const char * root_dir 31,614
#define BUFFER_SIZE 33,645
extern char * msgid;35,675
extern int debugmode;36,696
void extract_msg_info(38,719
char *quarantine_spam_to_bucket(quarantine_spam_to_bucket102,2133
int quarantine_spam_to_dir(205,4581
int quarantine_spam_from_hints_to_dir(378,8850

/emcsvn/emc/emcmailer/trunk/espamc/spam_central.h,1130
#define ESPAMC_SPAM_CENTRAL_H2,30
#define MEGA_SUMMARY_LEN 12,195
#define MEGA_SUMMARY_HEADER 13,225
#define X_SPAM_SUMMARY_HEADER 14,273
#define SPAM_REP_SEP 15,320
#define BOX_FA_LEN 16,343
#define RULES_SUMMARY_HEADER_LEN 17,366
#define IP_LEN 18,403
#define SUBJ_LEN 19,421
#define SUBJ_LEN_ENC 20,442
#define BODY_LEN 21,476
typedef struct quarantine_spam_report_t 24,547
	const char * quar_filename;25,589
	double total_score;26,618
	const char * sender;27,639
	const char * recip;28,661
	const char * summary_header;29,682
	const char * ip;30,712
	const char * subject;31,730
	char * body;32,753
} quarantine_spam_report;33,767
typedef struct quarantine_params_t 36,795
	EmcQImpl * impl;37,832
	EmcConfig * config;38,850
	const char * recip;39,871
	const char * sender;40,892
	const char * msgfile;41,914
	const char * preview;42,937
	const char * score_text;43,960
	double score;44,986
	int storage_days;45,1001
} quarantine_params;46,1020
int quarantine_spam_to_dir(48,1042
int quarantine_spam_from_hints_to_dir(49,1097
char *quarantine_spam_to_bucket(quarantine_spam_to_bucket55,1252

/emcsvn/emc/emcmailer/trunk/espamc/strip_html.c,773
static char *rcsid rcsid1,0
static void use_rcsid(2,82
typedef struct HtmlBuffer_t 21,419
	const char * buffer;22,449
	const char * pos;23,471
	size_t len;24,490
} HtmlBuffer;25,503
#define OPENTAG 27,518
#define ENDTAG 28,538
#define TOKEN_DELIM 30,558
typedef enum TagType_t 32,583
	UNKNOWN_TAG,33,608
	IMG_TAG,34,622
	A_TAG,35,632
	FONT_TAG,36,640
	COMMENT_TAG,37,651
} TagType;38,665
#define BUFLEN1 40,677
#define BUFLEN2 41,725
#define SECURE_BUFFER 42,776
void append_html_token(44,832
void append_text_token(60,1242
void eat_space(76,1586
TagType get_tag_type(86,1718
int parse_tag_contents(129,2812
int parse_tag_property(146,3170
int parse_comment_tag(194,4191
int parse_tag(214,4655
int parse_text(301,6617
int strip_html(357,7704

/emcsvn/emc/emcmailer/trunk/espamc/strip_html.h,456
#define __strip_html2,21
typedef struct HtmlOptions_t 6,62
	BOOL delete_spaces;7,93
	BOOL save_img;8,114
	BOOL save_href;9,130
	BOOL save_comments;10,147
	BOOL save_img_contents;11,168
	BOOL save_anchor_contents;12,193
	BOOL save_font_contents;13,221
	int num_imgs;15,249
	int num_anchors;16,264
	int num_comments;17,282
	int num_fonts;18,301
	int num_tags;19,317
	long total_html_tag_len;20,332
} HtmlOptions;21,358
int strip_html(23,374

/emcsvn/emc/emcmailer/trunk/hash.c,569
static char *rcsid rcsid1,0
static void use_rcsid(2,76
enum { ht_num_primes 18,311
static unsigned long ht_prime_list[ht_prime_list20,341
inline void * ht_val(30,724
inline char *ht_key(ht_key36,827
inline int ht_hashcode(42,929
struct ht_node *ht_node_create(ht_node_create48,1081
hash *hash_create(hash_create70,1607
void hash_destroy(87,2012
inline void *hash_find(hash_find129,2947
inline void hash_insert(139,3213
inline struct ht_node *ht_next(ht_next169,3841
inline struct ht_node *ht_first(ht_first187,4245
inline int hash_count(193,4387

/emcsvn/emc/emcmailer/trunk/hash.h,522
#define EMC_HASH2,17
typedef struct ht_node 8,153
	char * key;9,178
	void * val;10,191
	struct ht_node *next;next11,204
} hash_node;12,227
typedef struct ht_ht 14,241
	int size;15,264
	struct ht_node **tbl;tbl16,275
	int iter_index;17,298
	struct ht_node *iter_next;iter_next18,315
	int items;19,343
	 int collisions;21,371
} hash;23,411
hash *hash_create(hash_create25,420
inline void *hash_find(hash_find26,459
inline void hash_insert(27,512
void hash_destroy(28,589
inline int hash_count(29,626

/emcsvn/emc/emcmailer/trunk/mcfg.c,900
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define BUFR_INC 13,263
static char *bufr=bufr15,289
static int  bsize=16,328
static char *cursec=cursec17,355
static FILE   *openConfFile  _Declare 22,430
static int    Parse          _Declare 23,488
static int    Section        _Declare 26,687
static int    Continuation   _Declare 27,760
static char   *loc_realloc   _Declare 28,822
static int    eatWhitespace  _Declare 29,882
static int    Parameter      _Declare 30,934
static int Parameter 78,2627
static FILE *openConfFile(openConfFile259,7033
int paramProcess(332,9114
static int eatComment(386,10078
static int eatWhitespace(399,10236
static int Continuation(411,10389
static int Parse(463,11772
static int Section(546,13589
static char *loc_realloc(loc_realloc646,15882
static void regSection(699,16837
char *getCurrentSection(getCurrentSection733,17303

/emcsvn/emc/emcmailer/trunk/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1007

/emcsvn/emc/emcmailer/trunk/archiver/archiver.c,743
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define MAX_CF_GROUPS 25,585
char *filename filename27,611
char *msgid msgid28,671
char *configfile configfile29,733
char *recip recip30,758
char *sender sender31,819
char *domain domain32,877
char *data data33,935
char *refdomain refdomain34,960
char *local local35,1028
int debugmode 37,1054
int outbound	38,1095
int init_args(40,1151
static void sig_alrm(132,3282
	const char *host;host137,3327
	const char *sender;sender138,3346
	const char *final_addr;final_addr139,3367
}smtp_deliver_info;smtp_deliver_info140,3392
int smtp_deliver(142,3413
int archive_remotely(185,4280
int archive_locally(242,5753
int main(324,7830

/emcsvn/emc/emcmailer/trunk/vaultsmart/vaultsmart.c,199
#define _GNU_SOURCE5,49
VaultsmartMsg *vaultsmart_msg_new vaultsmart_msg_new31,646
int vaultsmart_save_msg 49,1011
int vaultsmart_msg_log_line(141,3514
int vaultsmart_msg_get_log_line(150,3783

/emcsvn/emc/emcmailer/trunk/vaultsmart/vaultsmart.h,652
#define VAULTSMART_H_2,22
typedef struct vaultsmart_msg_t4,45
	long unsigned cusNum;6,79
	long unsigned userRid;7,103
	long unsigned policyID;8,140
	int outbound;9,165
	const char *originalFilename;originalFilename10,180
	const char *domain;domain11,211
	const char *sender;sender12,232
	const char *recip;recip13,253
	char* qfilename;15,274
	off_t filesize;16,292
	char* sha256;17,332
	time_t receiveTime;18,361
	char server[server19,382
} VaultsmartMsg;20,401
VaultsmartMsg *vaultsmart_msg_new vaultsmart_msg_new22,419
int vaultsmart_save_msg 23,457
int vaultsmart_msg_log_line(24,501
int vaultsmart_msg_get_log_line(25,551

/emcsvn/emc/emcmailer/trunk/tagliner/message_body.c,151
static char *rcsid rcsid1,0
static void use_rcsid(2,85
GMimeObject *multi_get_body(multi_get_body40,1388
GMimeObject *get_body(get_body120,3625

/emcsvn/emc/emcmailer/trunk/tagliner/message_body.h,115
#define MESSAGE_BODY_H2,23
GMimeObject *multi_get_body multi_get_body4,47
GMimeObject *get_body get_body5,115

/emcsvn/emc/emcmailer/trunk/tagliner/sql.c,105
static char *rcsid rcsid1,0
static void use_rcsid(2,75
int init_sql(15,312
int sql_fill_hash(41,825

/emcsvn/emc/emcmailer/trunk/tagliner/sql.h,42
int init_sql(1,0
int sql_fill_hash(2,23

/emcsvn/emc/emcmailer/trunk/tagliner/tagger.c,1255
static char *rcsid rcsid11,219
static void use_rcsid(12,297
#define _GNU_SOURCE18,405
#define TMPBUF 42,855
char *copy_to_file(copy_to_file44,876
void hashprint(45,917
void fill_template(46,963
char *nl2br(nl2br47,1020
int message_has_type(48,1047
void print_mime_struct(49,1107
char *stdin_to_tmp(stdin_to_tmp50,1161
void my_log_handler(51,1183
int process_hints(55,1303
char *configfile configfile58,1358
char *filename filename59,1410
char *sender sender60,1435
char *recip recip61,1460
char *recip_domain recip_domain62,1485
char *msgid msgid63,1512
char *tmp_dir tmp_dir64,1537
char *refdomain refdomain65,1564
char *data data66,1589
char *local local67,1614
char *domain domain68,1639
int  do_plain 69,1664
int	no_hints 70,1686
EmcQImpl * impl;71,1704
int debugmode 73,1722
int unlink_msgfile 74,1741
EmcConfig *config;config76,1766
void init_args(88,1917
#define BUFLEN 186,4011
int main(200,4360
int message_has_type(779,18786
void print_mime_struct(834,19873
char *nl2br(nl2br891,21032
void hashprint(935,21923
void fill_template(957,22675
char *stdin_to_tmp(stdin_to_tmp1023,23731
void  my_log_handler(1077,24715
char *copy_to_file(copy_to_file1085,24906
int process_hints(1127,25843

/emcsvn/emc/emcmailer/trunk/tagliner/hyperlink.c,177
static char *rcsid rcsid11,214
static void use_rcsid(12,296
#define MATCH_COUNT 21,442
#define PCRE_OPT 22,465
#define PRE_FETCH 23,497
char *hyperlink(hyperlink41,1011

/emcsvn/emc/emcmailer/trunk/tagliner/hyperlink.h,79
#define HYPERLINK_H2,20
char *hyperlink(hyperlink4,41
int check_space(5,90

/emcsvn/emc/emcmailer/trunk/contentfilter/mail_security.c,1627
static char *rcsid rcsid1,0
static void use_rcsid(3,87
#define _GNU_SOURCE13,199
X509 *smime_get_emc_ca(smime_get_emc_ca35,678
EVP_PKEY *smime_get_emc_pkey(smime_get_emc_pkey36,704
int rand_serial(37,736
RSA *gen_rsa_key(gen_rsa_key38,782
X509 *ca_generate_certificate(ca_generate_certificate39,812
X509 *ca_sign_certificate(ca_sign_certificate40,858
gboolean smime_inited=43,896
void smime_init(45,927
int rand_serial(72,1452
X509 *emcCA=emcCA99,1785
EVP_PKEY *CApkey=CApkey100,1804
X509 *smime_get_emc_ca(smime_get_emc_ca102,1829
EVP_PKEY *smime_get_emc_pkey(smime_get_emc_pkey135,2446
RSA *gen_rsa_key(gen_rsa_key169,3128
X509_NAME *user_get_x509_subject(user_get_x509_subject195,3493
X509 *ca_generate_certificate(ca_generate_certificate275,6011
X509 *ca_sign_certificate(ca_sign_certificate329,6950
char *ca_update_certificate ca_update_certificate376,7950
SMimeKeys *auto_gen_smime_keys(auto_gen_smime_keys493,10520
char *send_newkey_notification(send_newkey_notification656,13684
GMimeObject *smime_encrypt_g_mime_object smime_encrypt_g_mime_object805,18455
GMimeObject *smime_decrypt_g_mime_object(smime_decrypt_g_mime_object844,20055
GMimeObject *smime_get_signed_g_mime_object(smime_get_signed_g_mime_object881,21282
GMimeObject *smime_sign_g_mime_object smime_sign_g_mime_object919,22664
int smime_encrypt 1028,27047
int smime_decrypt(1061,27656
int smime_verify_signature(1103,28544
int smime_sign 1153,29728
EVP_PKEY *smime_key_get_pkey(smime_key_get_pkey1208,30977
X509 *smime_key_get_x509(smime_key_get_x5091237,31503
gboolean smime_key_is_new 1267,32021

/emcsvn/emc/emcmailer/trunk/contentfilter/mail_security.h,971
#define MAIL_SECURITY_H_2,25
#define RSA_BITS	12,231
#define SERIAL_RAND_BITS 13,254
#define LHASH 15,283
int rand_serial(17,305
void smime_init(18,351
SMimeKeys *auto_gen_smime_keys(auto_gen_smime_keys19,370
char *send_newkey_notification(send_newkey_notification20,451
GMimeObject *smime_encrypt_g_mime_object smime_encrypt_g_mime_object22,583
GMimeObject *smime_decrypt_g_mime_object smime_decrypt_g_mime_object23,675
GMimeObject *smime_sign_g_mime_object smime_sign_g_mime_object24,775
GMimeObject *smime_get_signed_g_mime_object smime_get_signed_g_mime_object25,914
int smime_encrypt 27,1017
int smime_decrypt 28,1083
int smime_sign 30,1158
int smime_verify_signature 31,1285
EVP_PKEY *smime_key_get_pkey(smime_key_get_pkey33,1380
X509 *smime_key_get_x509(smime_key_get_x50934,1431
char *ca_update_certificate ca_update_certificate36,1479
X509_NAME *user_get_x509_subject(user_get_x509_subject37,1551
gboolean smime_key_is_new 38,1627

/emcsvn/emc/emcmailer/trunk/contentfilter/msg_template.c,1440
		*rcsid rcsid2,12
static void use_rcsid(3,87
#define _GNU_SOURCE13,199
char *template_user template_user23,407
void msg_template_set_user 25,436
msg_template *msg_template_new(msg_template_new30,518
void msg_template_clear(39,669
const char* msg_template_get_name(52,923
const char* msg_template_get_subject(57,1002
const char* msg_template_get_body(62,1087
const char* msg_template_get_html_body(67,1166
const char* msg_template_get_sender(72,1255
const char* msg_template_get_sender_name(77,1338
const char* msg_template_get_type(82,1431
const char* msg_template_get_id(87,1510
const char* msg_template_get_recipient(92,1585
void msg_template_set_name(97,1674
void msg_template_set_subject(102,1776
void msg_template_set_body(107,1884
void msg_template_set_html_body(112,1986
void msg_template_set_sender(117,2098
void msg_template_set_sender_name(122,2204
void msg_template_set_type(127,2320
void msg_template_set_id(135,2514
void msg_template_set_recipient(140,2612
void msg_template_print(145,2724
void hashprint(152,2940
GMimeMessage *msg_template_parse(msg_template_parse158,3078
char *get_message_body_string(get_message_body_string444,10920
void msg_template_free(519,12473
void msg_template_apply(550,12913
void parse_data(558,13121
const char *get_token_value(get_token_value563,13206
char *tagger_fill_template(tagger_fill_template606,14207
char *fill_template(fill_template690,15743

/emcsvn/emc/emcmailer/trunk/contentfilter/msg_template.h,2245
#define MSG_TEMPLATE_H_2,24
#define MSG_TEMPLATE_DEFAULT_REPLY 6,70
#define MSG_TEMPLATE_DEFAULT_REJECT 7,112
#define MSG_TEMPLATE_DEFAULT_NOTIFY	8,171
#define MSG_TEMPLATE_ENCRYPT_KEY_NOTIFY	9,213
#define MSG_TEMPLATE_SIGN_KEY_NOTIFY	10,264
#define MSG_TEMPLATE_ENC_RECIP	11,312
#define MSG_TEMPLATE_ENC_SIGN_SENDER	12,390
#define MSG_TEMPLATE_SIGN_RECIP	13,478
#define MSG_TEMPLATE_SIGN_SENDER	14,554
#define MSG_TEMPLATE_PASSWORD_PROTECT 15,627
#define MSG_TEMPLATE_MANUAL_CERT_NOTIFY	16,698
#define SECURE_MESSAGE_WELCOME	18,778
#define SECURE_MESSAGE_NOTIFICATION 19,860
#define SECURE_MESSAGE_WELCOME_SENDER 20,933
#define MSG_TEMPLATE_ATTACHMENT_PASSWORD	22,1030
#define AUTOREPLY	24,1106
#define NOTIFICATION	25,1137
typedef struct msg_template_t27,1174
	char* name;29,1206
	char* id;30,1235
	char* sender;31,1246
	char* sender_name;32,1261
	char* subject;33,1281
	char* body;34,1297
	char* html_body;35,1310
	char* recipient;36,1328
	char* type;37,1346
}msg_template;msg_template38,1359
msg_template *msg_template_new(msg_template_new46,1488
void msg_template_clear(47,1522
void msg_template_free(48,1567
void msg_template_print(49,1611
void msg_template_set_user 51,1657
const char* msg_template_get_name(52,1704
const char* msg_template_get_subject(53,1759
const char* msg_template_get_body(54,1817
const char* msg_template_get_html_body(55,1872
const char* msg_template_get_sender(56,1932
const char* msg_template_get_sender_name(57,1989
const char* msg_template_get_id(58,2051
const char* msg_template_get_recipient(59,2104
const char* msg_template_get_type(60,2164
void msg_template_set_name(62,2220
void msg_template_set_subject(63,2288
void msg_template_set_body(64,2359
void msg_template_set_html_body(65,2427
void msg_template_set_sender(66,2500
void msg_template_set_sender_name(67,2570
void msg_template_set_id(68,2645
void msg_template_set_recipient(69,2711
void msg_template_set_type(70,2784
char *get_message_body_string(get_message_body_string72,2851
const char *get_token_value(get_token_value74,2941
GMimeMessage *msg_template_parse(msg_template_parse75,2989
char *tagger_fill_template(tagger_fill_template77,3044
char *fill_template(fill_template78,3107

/emcsvn/emc/emcmailer/trunk/contentfilter/rule_set.c,1086
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define _GNU_SOURCE12,193
CF_HASH_NODE RULE_SET_MATCH_OP_STR 16,256
char *ruleset_get_header(ruleset_get_header25,538
int ruleset_get_count(27,583
float ruleset_get_points(35,718
char *ruleset_get_match_op(ruleset_get_match_op40,791
Rule *ruleset_get_rule(ruleset_get_rule45,867
RuleSet *ruleset_new(ruleset_new53,1064
void ruleset_set_points(71,1398
void ruleset_set_match_op(76,1486
void ruleset_set_id(92,2085
gboolean ruleset_set_matched(97,2186
gboolean ruleset_get_matched(103,2302
void ruleset_set_total_points(108,2380
float ruleset_get_total_points(112,2478
void ruleset_append_rule(117,2562
void ruleset_free(149,3244
char* ruleset_get_string(171,3566
char *ruleset_get_header(ruleset_get_header216,4243
gboolean ruleset_apply(250,5110
gboolean ruleset_has_attachment_rules(353,7347
gboolean ruleset_contains_criteria(369,7679
char *ruleset_get_status_headers(ruleset_get_status_headers385,7963
void ruleset_log_status(416,8472
RuleSet *ruleset_scan_string(ruleset_scan_string511,10927

/emcsvn/emc/emcmailer/trunk/contentfilter/rule_set.h,1017
#define RULESET_H_2,19
#define RULESET_ALWAYS	7,88
#define RULESET_ALL	8,123
#define RULESET_ANY	9,153
#define RULESET_POINTS_MORE_THAN	10,183
#define RULESET_POINTS_LESS_THAN	11,235
RuleSet *ruleset_new(ruleset_new13,288
void ruleset_set_points(14,312
void ruleset_set_match_op(15,369
void ruleset_set_id(16,435
gboolean ruleset_set_matched(18,500
void ruleset_set_total_points(19,566
gboolean ruleset_get_matched(21,630
float ruleset_get_total_points(22,678
int ruleset_get_count(24,729
float ruleset_get_points(25,770
char *ruleset_get_match_op(ruleset_get_match_op26,814
Rule *ruleset_get_rule(ruleset_get_rule27,860
char* ruleset_get_string(28,916
void ruleset_free(29,960
gboolean ruleset_apply(30,997
void ruleset_append_rule(32,1040
void ruleset_log_status(34,1097
gboolean ruleset_has_attachment_rules(36,1141
gboolean ruleset_contains_criteria(37,1198
RuleSet *ruleset_scan_string(ruleset_scan_string39,1267
char *ruleset_get_status_headers(ruleset_get_status_headers40,1311

/emcsvn/emc/emcmailer/trunk/contentfilter/data_match.c,1709
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
#define OVECSIZE 29,531
#define MAX_TOKENS	30,556
#define ENCRYPTED_TYPE_LIST_ID 31,583
extern GArray* g_matches;33,620
list_db_s DB_DATA_LIST 35,647
list_db_s DB_IP_LIST 39,760
magic_t magicCookie=43,871
DataList *encryptedTypeList=encryptedTypeList44,898
const char *encyTypes[encyTypes46,934
int file_match_rule(52,1184
int str_match_list(155,3368
int tokens_match_str(197,4446
int tokens_match_list(215,4883
int tokens_match_db_list(244,5657
int str_match_db_list(273,6140
int text_match_db_list(310,6912
int text_match_list(377,8441
DataList *datalist_new(datalist_new385,8581
DataList *datalist_parse(datalist_parse397,8794
DataList *datalist_new_db(datalist_new_db421,9273
DataList *get_encrypted_type_list(get_encrypted_type_list459,10071
int db_get_list_count(476,10426
void print_datalist(515,11118
void datalist_free(527,11314
const char *datalist_get_item(datalist_get_item532,11341
int text_match(540,11463
int str_count_str(564,11976
int str_count_token(592,12477
gboolean str_match(650,13569
gboolean ip_address_match(758,15901
gboolean scaler_match(818,17224
gboolean date_match(847,17780
gboolean time_match(878,18440
unsigned long int parse_list_id(907,18978
int parse_priority_value(919,19173
GDate *parse_date(parse_date952,19885
time_t parse_time(996,20852
off_t parse_size(1030,21429
pcre *parse_pcre(parse_pcre1080,22226
regex_t *parse_regex(parse_regex1153,23618
MATCH_OP match_op_negate(1169,23926
gboolean get_match_op_default(1200,24411
const char* get_file_type_desc(1219,24730
char* pcre_replace 1239,25239
char * g_pcre_replace 1290,26267

/emcsvn/emc/emcmailer/trunk/contentfilter/data_match.h,2869
#define RULE_DATA_H_2,21
#define MAX_MATCHES 8,104
typedef enum MATCH_OP10,129
	MATCH_NONE,12,153
	MATCH_IS,13,166
	MATCH_IS_NOT,14,177
	MATCH_CONTAINS,15,192
	MATCH_DOES_NOT_CONTAIN,16,209
	MATCH_CONTAINS_WORD,17,234
	MATCH_DOES_NOT_CONTAIN_WORD,18,256
	MATCH_BEGINS_WITH,19,286
	MATCH_END_WITH,20,306
	MATCH_LESS_THAN,21,323
	MATCH_EQUALS,22,341
	MATCH_GREATER_THAN,23,356
	MATCH_HIGHER_THAN,24,377
	MATCH_LOWER_THAN,25,397
	MATCH_DATE_NEWER,26,416
	MATCH_DATE_OLDER,27,435
	MATCH_REG_EXP,28,454
	MATCH_REG_EXP_LIST,29,470
	MATCH_PCRE,30,491
	MATCH_PCRE_LIST,31,504
	MATCH_IN_LIST,32,522
	MATCH_NOT_IN_LIST,33,538
	MATCH_IN_CIDR,34,558
	MATCH_NOT_IN_CIDR,35,574
	MATCH_IN_RANGE,36,594
	MATCH_NOT_IN_RANGE,37,611
	MATCH_CONTAINS_ITEM,38,632
	MATCH_DOES_NOT_CONTAIN_ITEM,39,654
	MATCH_CONTAINS_TOKEN,40,684
	MATCH_DOES_NOT_CONTAIN_TOKEN,41,707
	MATCH_CONTAINS_IGNORE_SPACE42,738
} MATCH_OP;43,767
typedef enum MSG_PRIORITY45,780
	PRIORITY_NONE,47,808
	PRIORITY_HIGHEST,48,824
	PRIORITY_HIGH,49,847
	PRIORITY_NORMAL,50,867
	PRIORITY_LOW,51,889
	PRIORITY_LOWEST 52,908
} MSG_PRIORITY;53,929
#define MAX_DB_LOAD_ITEMS	55,946
typedef struct list_db_t57,979
	const char* DB_LIST_TABLE_NAME;59,1006
	const char* DB_TABLE_NAME;60,1039
	const char* DB_LIST_ID;61,1067
	const char* DB_OWNER;62,1092
	const char* DB_DATA;63,1115
}list_db_s;list_db_s64,1137
typedef struct DataList_t66,1150
	const char** items;68,1178
	int totalItems;69,1199
	int nItems;70,1216
	int startOffset;71,1229
	unsigned long listID;72,1247
	list_db_s *dbInfo;dbInfo73,1270
}DataList;DataList74,1290
int file_match_rule(76,1302
int str_match_list(78,1362
int str_match_db_list(81,1460
int str_count_str(84,1561
int str_count_token(85,1638
int tokens_match_str(87,1717
int tokens_match_list(90,1820
int tokens_match_db_list(93,1920
MATCH_OP match_op_negate(96,2023
gboolean get_match_op_default(97,2067
int text_match(99,2117
		str_match(103,2223
		scaler_match(106,2309
gboolean date_match(107,2385
gboolean time_match(109,2470
gboolean ip_address_match(111,2549
int parse_priority_value(114,2639
pcre *parse_pcre(parse_pcre116,2694
regex_t *parse_regex(parse_regex117,2754
char* pcre_replace 118,2801
off_t parse_size(120,2894
GDate *parse_date(parse_date121,2936
time_t parse_time(122,2979
unsigned long int parse_list_id(124,3021
DataList *datalist_new(datalist_new126,3072
DataList *datalist_parse(datalist_parse127,3098
DataList *datalist_new_db(datalist_new_db128,3155
void datalist_free(130,3221
int db_get_list_count(132,3244
const char *datalist_get_item(datalist_get_item134,3309
int datalist_match(136,3368
void print_datalist(139,3460
const char* get_file_type_desc(141,3498
DataList *get_encrypted_type_list(get_encrypted_type_list142,3552
char *g_pcre_replace g_pcre_replace144,3590

/emcsvn/emc/emcmailer/trunk/contentfilter/parser.c,2187
		*rcsid rcsid2,12
static void use_rcsid(4,87
#define _GNU_SOURCE14,199
demime_handle *dh=dh36,859
gboolean demimedMessage=38,885
gboolean dearchivedMessage=39,917
gboolean msgModifiedFlag=40,952
gboolean initialized=41,985
GHashTable *newHeaders newHeaders42,1014
char* newRawHeaders 43,1045
unsigned long matchedPolicyIDs[matchedPolicyIDs45,1074
int nMatchedPolicies 46,1111
char* domainKeySignature 47,1137
char *get_file_name(get_file_name49,1171
char *get_file_name(get_file_name55,1413
void setDomainKeySignature(77,1796
void parser_init(82,1866
void parser_cleanup(96,2059
void close_demime_handle(101,2110
demime_handle* get_demime_handle(124,2515
char *get_spooldir(get_spooldir182,3556
GMimeMessage *parser_get_message(parser_get_message208,4058
const char *parser_get_from_address(parser_get_from_address297,5987
const char *parser_get_header(parser_get_header323,6589
void parser_add_header(378,7786
void parser_set_header(397,8239
void parser_remove_header(455,9499
void g_mime_remove_header(479,9948
void parser_remove_header_recursive 534,11286
void parser_append_policy_id(546,11615
char *parser_get_policy_ids(parser_get_policy_ids554,11764
off_t parser_get_file_size(573,12136
GList *parser_get_attachment_parts(parser_get_attachment_parts585,12340
GMimeObject *get_text_body_part(get_text_body_part626,13171
GMimeObject *get_html_body_part(get_html_body_part650,13695
GMimeObject *parser_get_text_body_part(parser_get_text_body_part674,14220
GMimeObject *parser_get_html_body_part(parser_get_html_body_part700,14777
GMimeObject *parser_get_body_part(parser_get_body_part727,15336
gboolean g_mime_object_has_attachment 738,15497
gboolean message_has_attachments(786,16490
char *strip_html_tags(strip_html_tags811,16948
int parser_dearchive_parts(887,18468
void message_add_hash_header(921,19101
void mailer_add_hash_header(926,19282
char *save_message_to_disk(save_message_to_disk931,19434
ssize_t write_message_to_stream 1041,21975
char* parser_commit_changes(1073,22822
void set_message_modified_flag(1092,23119
gboolean get_message_modified_flag(1097,23189
int write_mime_part_to_spool(1102,23256

/emcsvn/emc/emcmailer/trunk/contentfilter/parser.h,1722
#define PARSER_H_2,18
#define RAW_HEADERS 6,58
demime_handle* get_demime_handle(15,181
void close_demime_handle(16,217
GMimeMessage *parser_get_message(parser_get_message18,246
GMimeObject *get_text_body_part(get_text_body_part20,283
GMimeObject *get_html_body_part(get_html_body_part21,339
GMimeObject *parser_get_text_body_part(parser_get_text_body_part23,396
GMimeObject *parser_get_html_body_part(parser_get_html_body_part24,438
GMimeObject *parser_get_body_part(parser_get_body_part26,481
const char *parser_get_header(parser_get_header27,518
const char *parser_get_from_address(parser_get_from_address28,569
gboolean g_mime_object_has_attachment 29,608
off_t parser_get_file_size(31,668
GList *parser_get_attachment_parts(parser_get_attachment_parts33,699
gboolean message_has_attachments(35,738
char *strip_html_tags(strip_html_tags37,775
int parser_dearchive_parts(38,816
char *save_message_to_disk(save_message_to_disk40,847
GMimeObject *parser_message_get_body(parser_message_get_body43,943
void parser_add_header(46,1053
void parser_set_header(47,1116
void parser_remove_header(48,1179
void parser_remove_header_recursive 49,1226
void set_message_modified_flag(51,1289
gboolean get_message_modified_flag(52,1333
char* parser_commit_changes(54,1372
char *get_spooldir(get_spooldir55,1403
void parser_init(57,1426
void parser_cleanup(58,1446
void parser_append_policy_id(60,1470
char *parser_get_policy_ids(parser_get_policy_ids61,1524
ssize_t write_message_to_stream 63,1556
void setDomainKeySignature(64,1633
char *get_message_raw_headers(get_message_raw_headers65,1672
GArray *parse_raw_headers(parse_raw_headers66,1725
int write_mime_part_to_spool(68,1777

/emcsvn/emc/emcmailer/trunk/contentfilter/database.c,3228
static char *rcsid rcsid11,151
static void use_rcsid(12,232
#define _GNU_SOURCE22,344
#define MAX_ROWS	38,828
void db_init_rule(39,849
void db_init_action(40,895
int sql_fill_hash(41,947
MYSQL mysql_ro,43,1015
MYSQL mysql_ro, *mysql_sock=mysql_sock43,1015
MYSQL mysql_rw,44,1080
MYSQL mysql_rw, *mysql_sock_rw mysql_sock_rw44,1080
MYSQL wl_mysql_ro,45,1150
MYSQL wl_mysql_ro, *wl_mysql_sock=wl_mysql_sock45,1150
MYSQL qcdb_mysql_rw,47,1232
MYSQL qcdb_mysql_rw, *qcdb_mysql_sock_rw qcdb_mysql_sock_rw47,1232
GHashTable *users_hash=users_hash49,1313
int cus_num 51,1344
int db_connect(53,1362
int db_connect_rw(59,1473
MYSQL *db_get_connection(db_get_connection65,1596
MYSQL *db_get_connection_rw(db_get_connection_rw76,1763
MYSQL *db_connect_qcdb_rw(db_connect_qcdb_rw87,1945
MYSQL *db_get_qcdb_connection(db_get_qcdb_connection112,2562
MYSQL *db_get_wl_connection(db_get_wl_connection122,2758
void db_disconnect(142,3269
MYSQL_RES *_db_query _db_query162,3596
gboolean _db_query_w 197,4184
gboolean db_query_w 221,4643
MYSQL_RES *db_query db_query227,4769
char* db_mysql_quote(232,4857
int get_customer_number(245,5116
FilterList *get_customer_filters(get_customer_filters317,6186
char *db_get_realm_parent(db_get_realm_parent331,6490
FilterList *get_domain_filters(get_domain_filters390,7375
FilterList *get_group_filters(get_group_filters401,7596
FilterList *get_user_filters(get_user_filters406,7716
FilterList *db_load_filters(db_load_filters421,8130
Filter *db_load_policy(db_load_policy498,9892
RuleSet *db_load_ruleset(db_load_ruleset568,11509
Rule *db_load_rule(db_load_rule684,13503
void db_init_action(742,14412
void db_init_rule(752,14603
ActionSet *db_load_actionset(db_load_actionset772,15206
Action *db_load_action(db_load_action836,16359
gboolean db_item_in_list(894,17358
char* db_get_match_from_list(938,18321
gboolean db_in_whitelist 1001,20234
gboolean db_item_regexp_list(1076,22088
gboolean db_in_blacklist(1119,23010
int db_count_items_in_text(1182,24332
int db_count_tokens_in_list(1251,25624
int db_get_list_items(1325,27017
msg_template *db_load_msg_template(db_load_msg_template1371,27911
char *db_load_text(db_load_text1420,29047
GHashTable *db_load_people_hash(db_load_people_hash1454,29549
int sql_fill_hash(1497,30411
AkaDomain *db_get_aka_domain(db_get_aka_domain1549,31302
gboolean db_mailbox_exists 1599,32511
gboolean db_mailbox_exists_in 1604,32655
Mailbox* db_get_aka_mailbox 1637,33285
unsigned long long db_get_new_rid 1681,34251
unsigned long long db_last_insert_id 1690,34427
char *db_get_rand_word db_get_rand_word1695,34521
gboolean db_save_spamcentral_mailbox(1711,34891
gboolean db_save_mailbox(1744,35687
int db_get_auto_log_entry(1796,37487
void db_update_auto_log(1835,38298
DomainKeys *db_get_domainkeys db_get_domainkeys1870,39170
SMimeKeys **_db_get_smime_key_list _db_get_smime_key_list1930,40313
SMimeKeys *db_get_smime_keys db_get_smime_keys2016,42187
SMimeKeys *db_get_smime_keys_by_owner db_get_smime_keys_by_owner2026,42394
int db_save_smime_keys 2036,42611
GHashTable *db_get_prefs db_get_prefs2101,44402
unsigned long long db_insert_quarantine_report 2148,45359

/emcsvn/emc/emcmailer/trunk/contentfilter/database.h,2838
#define DATABASE_H_7,97
#define 	MAX_SQL_LEN	9,118
#define FILTER_DB_TABLE_NAME 18,328
#define FILTER_DB_FILTER_ID 19,380
#define FILTER_DB_POLICY_ID 20,422
#define FILTER_DB_OWNER 21,464
#define FILTER_DB_NAME 22,499
#define FILTER_DB_DESC 23,532
#define FILTER_DB_POSITION 24,572
#define FILTER_DB_TYPE 25,612
#define FILTER_DB_RULE_SET_ID 26,645
#define FILTER_DB_ACTION_SET_ID 27,691
#define FILTER_DB_APPLY_LIST_ID 28,739
#define FILTER_DB_EXCEPTION_LIST_ID 29,787
#define FILTER_DB_ACTIVE_FLAG 30,843
#define FILTER_DB_CREATED_ON 31,889
#define FILTER_DB_CREATED_BY 32,933
#define FILTER_DB_MODIFIED_ON 33,977
#define FILTER_DB_MODIFIED_BY 34,1022
int get_customer_number(36,1069
FilterList *get_customer_filters(get_customer_filters38,1115
FilterList *get_domain_filters(get_domain_filters39,1191
FilterList *get_group_filters(get_group_filters40,1265
FilterList *get_user_filters(get_user_filters41,1338
gboolean db_item_regexp_list(43,1411
FilterList *db_load_filters(db_load_filters45,1501
Filter *db_load_policy(db_load_policy46,1573
int db_connect(48,1646
int db_connect_rw(49,1681
void db_disconnect(50,1719
MYSQL *db_get_connection(db_get_connection51,1741
MYSQL *db_get_connection_rw(db_get_connection_rw52,1769
MYSQL_RES *db_query db_query53,1800
gboolean db_query_w 54,1839
Action *db_load_action(db_load_action57,1880
Rule *db_load_rule(db_load_rule58,1928
RuleSet *db_load_ruleset(db_load_ruleset59,1970
ActionSet *db_load_actionset(db_load_actionset60,2021
Filter *db_load_filter(db_load_filter61,2078
int db_get_list_items(63,2127
gboolean db_item_in_list(66,2249
char* db_get_match_from_list(69,2337
int db_count_items_in_text(71,2440
int db_count_tokens_in_list(74,2535
gboolean db_in_whitelist(77,2646
gboolean db_in_whitelist_for(78,2704
gboolean db_in_blacklist(79,2787
msg_template *db_load_msg_template(db_load_msg_template81,2846
char *db_load_text(db_load_text82,2908
int db_get_auto_log_entry(84,2951
void db_update_auto_log(85,3041
GHashTable *db_load_people_hash(db_load_people_hash88,3131
DomainKeys *db_get_domainkeys db_get_domainkeys90,3183
SMimeKeys *db_get_smime_keys db_get_smime_keys91,3226
SMimeKeys *db_get_smime_keys_by_owner db_get_smime_keys_by_owner92,3268
SMimeKeys** _db_get_smime_key_list 93,3327
int db_save_smime_keys 94,3394
gboolean db_mailbox_exists 95,3434
gboolean db_mailbox_exists_in 96,3481
gboolean db_save_spamcentral_mailbox(97,3553
unsigned long long db_last_insert_id 98,3605
char *db_get_rand_word db_get_rand_word100,3647
gboolean db_save_mailbox(101,3674
AkaDomain *db_get_aka_domain(db_get_aka_domain102,3714
Mailbox* db_get_aka_mailbox 103,3764
GHashTable *db_get_prefs db_get_prefs105,3813
unsigned long long db_insert_quarantine_report 106,3859
char* db_mysql_quote(108,3932

/emcsvn/emc/emcmailer/trunk/contentfilter/file_aparser.c,504
		*rcsid rcsid2,12
static void use_rcsid(3,86
#define _GNU_SOURCE13,198
#define EX_TEMPFAIL 28,502
#define PARSER_HEADER 33,590
#define PARSER_STRINGS 34,623
#define PARSER_TEXT 35,657
#define PARSER_HTML 36,688
static int parse_flags(38,720
GList *parserConfig=parserConfig40,780
char* file2text(42,808
const char* guess_file_type(131,2708
static int parse_flags(156,3231
GList *read_config(read_config173,3572
void print_config(263,5295
config_node *find_parser(find_parser282,5749

/emcsvn/emc/emcmailer/trunk/contentfilter/file_aparser.h,500
#define TEXT_PARSER_H_2,23
typedef struct config4,47
	const char *type,type6,71
	const char *type, *subtype,subtype6,71
	const char *type, *subtype, *ext;ext6,71
	const char *parser;parser7,106
	int use_stdin;8,127
}config_node;config_node9,196
config_node *find_parser(find_parser11,211
GList *read_config(read_config14,309
char* file2text(16,384
char* file2text2(18,481
char* pdf2text(19,543
char* msword2text(20,581
char* html2text(21,622
const char* guess_file_type(23,662

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_action.c,3703
		*rcsid rcsid2,12
static void use_rcsid(3,88
#define _GNU_SOURCE13,200
#define	ZIP_PATH	35,697
#define	P7ZIP_PATH	36,729
#define	MAX_ATTACHMENTS	37,763
extern GArray* g_matches;39,792
		ACTION_STR 43,878
extern EmcQImpl *impl;impl136,4369
void spool_report 138,4393
quarantine_report *qr qr139,4436
const char* prefRealm 140,4466
int stoppedActions[stoppedActions142,4497
int nStoppedActions 143,4522
void stopAction(145,4548
gboolean isActionStopped(149,4634
ActionStatus action_apply(163,5010
ActionStatus smarthost 459,11841
ActionStatus spool_message 474,12399
char *get_quarantine_url_params get_quarantine_url_params778,20886
quarantine_report *quarantine_report_new(quarantine_report_new813,21973
void spool_report 862,23132
ActionStatus do_tag(982,25704
ActionStatus do_discard_msg_changes(1014,26599
ActionStatus do_add_footer(1039,27212
ActionStatus do_add_html_footer(1206,31492
ActionStatus do_add_header(1520,39344
ActionStatus do_set_header(1574,41090
ActionStatus do_remove_header(1655,43096
ActionStatus do_forward_copy(1707,44375
ActionStatus do_forward_current_copy(1774,46231
char *get_cluster_by_hostname(get_cluster_by_hostname1883,49086
int attachmentNo 1919,49876
int randPassword 1920,49898
const char *attachPassword attachPassword1921,49920
unsigned long long detachSizeList[detachSizeList1922,49955
char *detachNameList[detachNameList1923,50013
char *detachTextReplacement[detachTextReplacement1924,50061
char *detachHtmlReplacement[detachHtmlReplacement1925,50116
GHashTable *attachTokenHt attachTokenHt1926,50171
char *detachHtmlMessageTemplate detachHtmlMessageTemplate1927,50205
char *detachTextMessageTemplate detachTextMessageTemplate1928,50245
void mime_part_detach_attachment(1930,50286
void mime_part_strip_attachment(2282,61035
ActionStatus do_strip_attachment(2349,62901
int p7zip_files 2530,69004
int zip_files 2596,70633
ActionStatus zip_attachments 2658,71997
ActionStatus do_delete(2881,78891
ActionStatus do_bounce(2888,79088
ActionStatus do_archive(2918,79917
ActionStatus vaultsmart_archive_action(2945,80676
ActionStatus add_delayed_action(2987,81885
ActionStatus do_redirect(3011,82684
ActionStatus do_commit_modified_msg(3103,84971
ActionStatus set_spam_options(3139,85568
ActionStatus do_bypass_spam(3170,86323
ActionStatus do_notify(3206,87279
ActionStatus do_reply(3338,90809
char* send_new_message(3456,93949
char* send_new_message_with_data(3461,94138
void do_stop_message(3508,95294
ActionStatus do_quarantine(3518,95435
ActionStatus do_set_deliver_folder(3668,99853
ActionStatus do_run_agent(3695,100566
ActionStatus do_domain_key_sign(3717,101120
void send_cyphersmart_notification(3984,106825
gboolean secure_message_done 4085,109588
ActionStatus secure_message 4086,109626
ActionStatus do_smime_encrypt_with_key 4424,120498
ActionStatus do_smime_encrypt 4459,121536
ActionStatus do_smime_decrypt 4521,123228
GMimeObject *get_smime_decrypted_part get_smime_decrypted_part4561,124472
ActionStatus do_smime_sign_with_key 4608,125796
ActionStatus do_smime_sign 4677,127723
void cf_report(4744,129564
Action* action_new(4855,131700
void action_clear(4871,131927
void action_free(4883,132133
char *action_get_string(action_get_string4894,132260
const char *action_get_data(action_get_data4983,134407
void action_set_data(4991,134508
void action_set_type(4999,134648
const char *get_action_type_string(get_action_type_string5016,134997
void action_set_id(5030,135187
ActionStatus action_set_status(5035,135281
ActionStatus action_get_status(5041,135396
int action_get_type(5046,135472
Action *action_scan_string(action_scan_string5051,135535

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_action.h,4124
#define FILTER_ACTION_H_2,25
typedef enum FILTER_ACTION6,75
	ACTION_NONE,8,104
	ACTION_TAG,9,118
	ACTION_ADD_FOOTER,10,145
	ACTION_ADD_HTML_FOOTER,11,190
	ACTION_ADD_HEADER,12,244
	ACTION_SET_HEADER,13,288
	ACTION_REMOVE_HEADER,14,327
	ACTION_DELIVER,15,374
	ACTION_BYPASS_SPAM,16,391
	ACTION_DELETE,17,412
	ACTION_BOUNCE,18,428
	ACTION_REDIRECT,19,444
	ACTION_BCC,20,462
	ACTION_NEW_COPY,21,475
	ACTION_REPLY,22,493
	ACTION_NOTIFY,23,508
	ACTION_NOTIFY_RECIPIENT,24,524
	ACTION_NOTIFY_SENDER,25,550
	ACTION_NOTIFY_ADMIN,26,573
	ACTION_DELIVER_AND_QUARANTINE,27,595
	ACTION_QUARANTINE,28,627
	ACTION_ARCHIVE,29,647
	ACTION_STRIP_ATTACHMENT,30,664
	ACTION_STRIP_ALL_ATTACHMENTS,31,690
	ACTION_SET_DELIVER_FOLDER,32,721
	ACTION_RUN_AGENT,33,749
	ACTION_DISCARD_MSG_CHANGES,34,768
	ACTION_DOMAIN_KEY_SIGN,35,797
	ACTION_SMIME_SIGN,36,822
	ACTION_SMIME_CLEAR_SIGN,37,842
	ACTION_SMIME_OPAQUE_SIGN,38,868
	ACTION_SMIME_ENCRYPT,39,895
	ACTION_SMIME_DECRYPT,40,918
	ACTION_GPG_SIGN,41,941
	ACTION_SPOOL,42,959
	ACTION_SMARTHOST,43,974
	ACTION_ENFORCE_TLS,44,993
	ACTION_DETACH_ATTACHMENT,45,1014
	ACTION_SPAM_OPTIONS,46,1041
	ACTION_ZIP_ATTACHMENTS,47,1063
	ACTION_PASSWORD_PROTECT_MESSAGE,48,1088
	ACTION_PASSWORD_PROTECT_ATTACHMENTS,49,1122
	ACTION_ENCRYPT_MESSAGE,50,1160
	ACTION_STOP_MESSAGE51,1185
} FILTER_ACTION;52,1206
#define  ACTION_SET_DB_TABLE_NAME	55,1270
#define  ACTION_SET_DB_ACTION_SET_ID 56,1331
#define  ACTION_SET_DB_OWNER	57,1386
#define  ACTION_SET_DB_NAME	58,1425
#define  ACTION_SET_DB_DESCRIPTION 59,1463
#define  ACTION_SET_DB_CREATED_ON 60,1515
#define  ACTION_SET_DB_CREATED_BY 61,1565
#define  ACTION_SET_DB_MODIFIED_ON 62,1615
#define  ACTION_SET_DB_MODIFIED_BY 63,1667
#define POLICY_OWNER_QUARANTINE	65,1720
#define DOMAIN_QUARANTINE	66,1757
#define USER_QUARANTINE	67,1789
Action* action_new(69,1821
void action_clear(70,1843
void action_free(71,1878
char *action_get_string(action_get_string73,1913
int action_get_type(74,1954
const char *action_get_data(action_get_data75,1991
void action_set_id(76,2036
void action_set_type(77,2096
void action_set_data(78,2152
ActionStatus action_set_status(80,2209
ActionStatus action_get_status(81,2278
ActionStatus action_apply(83,2327
ActionStatus do_tag(85,2393
ActionStatus do_add_header(86,2430
ActionStatus do_set_header(87,2474
ActionStatus do_remove_header(88,2518
ActionStatus do_add_footer(89,2565
ActionStatus do_add_html_footer(90,2632
ActionStatus do_strip_attachment(91,2704
ActionStatus do_notify(92,2754
ActionStatus do_reply(93,2794
ActionStatus do_forward_copy(94,2833
ActionStatus do_forward_current_copy(95,2879
ActionStatus do_redirect(96,2933
ActionStatus do_delete(97,2975
ActionStatus do_quarantine(98,3015
ActionStatus do_archive(99,3059
ActionStatus vaultsmart_archive_action(100,3100
ActionStatus do_bounce(101,3172
ActionStatus do_bypass_spam(102,3212
ActionStatus set_spam_options(103,3257
ActionStatus do_set_deliver_folder(104,3304
ActionStatus do_run_agent(105,3356
ActionStatus do_discard_msg_changes(106,3399
ActionStatus do_domain_key_sign(107,3452
ActionStatus do_smime_sign(108,3501
ActionStatus do_smime_encrypt 109,3545
ActionStatus do_smime_decrypt 110,3593
ActionStatus do_smime_sign_with_key 111,3641
ActionStatus do_smime_encrypt_with_key 112,3717
ActionStatus do_gpg_sign(113,3796
ActionStatus spool_message 114,3838
ActionStatus smarthost 115,3883
ActionStatus add_delayed_action(116,3924
ActionStatus zip_attachments 117,3973
int zip_files 118,4020
int p7zip_files 119,4108
ActionStatus secure_message 120,4198
GMimeObject *get_smime_decrypted_part get_smime_decrypted_part121,4244
char* send_new_message(123,4332
char* send_new_message_with_data(124,4419
void do_stop_message(126,4535
ActionStatus do_commit_modified_msg(127,4559
char *get_quarantine_url_params get_quarantine_url_params129,4599
quarantine_report *quarantine_report_new(quarantine_report_new130,4656
void cf_report(131,4700
const char* get_action_type_string(133,4765
Action *action_scan_string(action_scan_string134,4818

/emcsvn/emc/emcmailer/trunk/contentfilter/action_set.c,734
static char*rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
int smime_footer_position 21,384
int is_signed 22,416
int is_encrypted 23,436
const char *smime_text_footer_id smime_text_footer_id24,459
const char *smime_html_footer_id smime_html_footer_id25,501
ActionStatus actionset_apply(27,544
void actionset_secure_apply(185,5001
char* actionset_get_string(345,9506
ActionSet *actionset_new(actionset_new378,10092
void actionset_append(383,10177
void actionset_prepend(391,10314
Action* actionset_get_action(399,10453
int actionset_get_count(407,10633
gboolean actionset_contains_type(415,10745
void actionset_free(430,11055
ActionSet *actionset_scan_string(actionset_scan_string447,11352

/emcsvn/emc/emcmailer/trunk/contentfilter/action_set.h,439
#define ACTIONSET_H_2,21
int actionset_get_count(7,94
char* actionset_get_string(8,141
Action* actionset_get_action(9,191
ActionStatus actionset_apply(11,258
void actionset_secure_apply(12,310
void actionset_free(14,384
ActionSet *actionset_new(actionset_new16,428
void actionset_append(17,456
void actionset_prepend(18,517
ActionSet *actionset_scan_string(actionset_scan_string20,580
gboolean actionset_contains_type(21,628

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_rule.c,2507
		*rcsid rcsid2,12
static void use_rcsid(3,86
#define _GNU_SOURCE13,198
#define	WHITELIST	35,688
#define	BLACKLIST	36,708
#define STR_CHECKSUM_MD5 38,729
#define STR_CHECKSUM_SHA1 39,764
#define STR_CHECKSUM_SHA256 40,801
		MATCH_OP_STR 44,901
		RULE_CRITERIA_STR 97,3075
list_db_s DB_DOMAIN_LIST 164,5987
list_db_s DB_LIST_INFO 168,6102
const char *ipAddress=ipAddress182,6446
const char *outIpAddress outIpAddress183,6475
const char *inIpAddress inIpAddress184,6508
DataList *encTypeList encTypeList186,6542
const char *encTypes[encTypes187,6572
gboolean gmime_part_is_encrypted 190,6704
RuleStatus rule_apply(243,7920
DataList *rule_get_data_list(rule_get_data_list985,29332
RuleStatus rule_match(1018,29890
AttachmentStatus *attachment_status_new(attachment_status_new1108,32072
RuleStatus rule_attachment_match(1120,32303
gboolean rule_get_default(1715,47765
Rule *rule_new(rule_new1720,47866
Rule *rule_new_simple(rule_new_simple1734,48107
Rule *rule_copy(rule_copy1745,48318
void rule_clear(1752,48426
void rule_free(1778,49007
void rule_set_ruleID(1795,49295
void rule_set_listID(1800,49379
void rule_set_count(1805,49463
void rule_set_points(1821,49704
void rule_set_criteria(1826,49780
void rule_set_case_sensitive(1865,50623
void rule_set_reverse_op(1870,50707
void rule_set_matchOp(1875,50783
void rule_set_data(1892,51109
void rule_set_countOp(1897,51193
unsigned long rule_get_list_id(1921,51722
DATA_TYPE rule_get_data_type(1933,51920
DATA_TYPE rule_set_data_type(1938,51990
RuleStatus rule_set_matched(1944,52108
RuleStatus rule_set_status(1954,52296
void rule_set_repeat_points(1960,52399
void rule_set_n_matches(1965,52498
int rule_get_n_matches(1970,52581
gboolean rule_is_valid(1975,52645
unsigned long rule_get_ruleID(1984,52784
int rule_get_criteria(1989,52853
char* rule_get_criteria_str(1994,52916
gboolean is_attachment_criteria(1999,52988
int rule_get_match_op(2011,53425
char* rule_get_match_op_str(2016,53487
int rule_get_count_op(2021,53558
char* rule_get_count_op_str(2026,53620
const char* rule_get_data(2031,53691
gboolean rule_has_count(2036,53754
int rule_get_count(2047,54265
gboolean rule_get_matched(2052,54322
RuleStatus rule_get_status(2057,54405
float rule_get_points(2062,54471
float rule_get_total_points(2067,54532
int rule_get_repeat_points(2076,54692
int rule_get_priority(2081,54764
Rule * rule_scan_string(2086,54845
void showRuleFormat(2189,57001
char* rule_get_string(2228,57929

/emcsvn/emc/emcmailer/trunk/contentfilter/filter_rule.h,3486
#define FILTER_RULE_H_2,23
#define OVECSIZE 10,196
#define MAX_TOKENS	11,221
#define COUNT_AT_LEAST	13,249
#define COUNT_AT_MOST	14,277
#define COUNT_EXACTLY	15,304
#define COUNT_AT_LEAST_STR	17,332
#define COUNT_AT_MOST_STR	18,372
#define COUNT_EXACTLY_STR	19,410
typedef enum CRITERIA26,638
	CRITERIA_NONE,28,662
	CRITERIA_ENV_TO,29,678
	CRITERIA_ENV_FROM,30,696
	CRITERIA_SENDER_DOMAIN,31,716
	CRITERIA_RECIPIENT_DOMAIN,32,741
	CRITERIA_SENDER,33,769
	CRITERIA_RECIPIENT,34,787
	CRITERIA_TIME,35,808
	CRITERIA_DATE,36,824
	CRITERIA_SIZE,37,840
	CRITERIA_IP_ADDRESS,38,856
	CRITERIA_FROM,39,878
	CRITERIA_FROM_ALL,40,894
	CRITERIA_FROM_NAME,41,914
	CRITERIA_FROM_ADDR,42,935
	CRITERIA_TO,43,956
	CRITERIA_TO_ALL,44,970
	CRITERIA_TO_NAME,45,988
	CRITERIA_TO_ADDR,46,1007
	CRITERIA_CC,47,1026
	CRITERIA_CC_ALL,48,1040
	CRITERIA_CC_NAME,49,1058
	CRITERIA_CC_ADDR,50,1077
	CRITERIA_BCC,51,1096
	CRITERIA_BCC_ALL,52,1111
	CRITERIA_BCC_NAME,53,1130
	CRITERIA_BCC_ADDR,54,1150
	CRITERIA_SUBJECT,55,1170
	CRITERIA_CUSTOM_HEADER,56,1189
	CRITERIA_HEADERS,57,1214
    CRITERIA_MAILBOX_SERVICE,58,1233
	CRITERIA_PEOPLE_DIRECTORY,59,1263
	CRITERIA_PRIORITY,60,1291
	CRITERIA_STATUS,61,1311
	CRITERIA_MESSAGE,62,1329
	CRITERIA_MESSAGE_DATE,63,1348
	CRITERIA_MESSAGE_TIME,64,1372
	CRITERIA_TEXT_BODY_SIZE,65,1396
	CRITERIA_HTML_BODY_SIZE,66,1422
	CRITERIA_BODY_SIZE,67,1448
	CRITERIA_BODY,68,1469
	CRITERIA_ATTACHMENT_COUNT,69,1485
	CRITERIA_ATTACHMENT_NAME,70,1513
	CRITERIA_ATTACHMENT_SIZE,71,1540
	CRITERIA_ATTACHMENT_CHECKSUM,72,1567
	CRITERIA_ATTACHMENT_TOTAL_SIZE,73,1598
	CRITERIA_ATTACHMENT_EXT,74,1631
	CRITERIA_ATTACHMENT_TYPE,75,1657
	CRITERIA_ATTACHMENT76,1684
} CRITERIA;77,1705
RuleStatus rule_apply(79,1718
Rule* rule_new(81,1754
void rule_clear(82,1772
void rule_free(83,1801
Rule *rule_new_simple(rule_new_simple85,1830
unsigned long rule_get_ruleID(87,1899
const char* rule_get_data(88,1942
int rule_get_count(89,1981
int rule_get_criteria(91,2014
char* rule_get_criteria_str(92,2049
gboolean is_attachment_criteria(93,2090
int rule_get_match_op(95,2146
char* rule_get_match_op_str(96,2181
int rule_get_count_op(97,2222
char* rule_get_count_op_str(98,2257
int rule_get_priority(100,2299
char* rule_get_string(101,2334
gboolean rule_get_matched(102,2369
RuleStatus rule_get_status(103,2408
void rule_set_n_matches(104,2448
int rule_get_n_matches(105,2499
float rule_get_points(106,2535
float rule_get_total_points(107,2570
int rule_get_repeat_points(108,2611
DATA_TYPE rule_get_data_type(109,2651
void rule_set_ruleID(111,2694
void rule_set_count(112,2750
void rule_set_points(113,2794
void rule_set_repeat_points(114,2842
DATA_TYPE rule_set_data_type(115,2901
void rule_set_criteria(117,2964
void rule_set_matchOp(118,3025
void rule_set_data(119,3084
void rule_set_countOp(120,3134
RuleStatus rule_set_matched(121,3193
RuleStatus rule_set_status(122,3252
unsigned long rule_get_list_id(123,3311
DataList *rule_get_data_list(rule_get_data_list124,3355
void rule_set_case_sensitive(125,3397
void rule_set_reverse_op(126,3451
void rule_set_listID(127,3501
gboolean rule_get_default(129,3558
gboolean rule_is_valid(130,3597
Rule *rule_copy(rule_copy131,3633
gboolean rule_has_count(133,3663
RuleStatus rule_match(135,3701
RuleStatus rule_attachment_match(136,3754
int rule_file_match(137,3813
Rule *rule_scan_string(rule_scan_string139,3873
void showRuleFormat(140,3918

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_debugging.c,432
		*rcsid rcsid13,212
static void use_rcsid(14,287
#define _GNU_SOURCE24,399
void debug_show_filter_data(38,821
void debug_show_filters(70,1394
void print_mime_message(93,1886
void print_mime_struct(137,2986
int write_attachment(232,4971
void debug_print_dh(280,5765
void debug_print_attach_parts(298,6413
void glist_test(344,7684
GList *debug_glist_create(debug_glist_create353,7864
void debug_glist_destroy(368,8072

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_debugging.h,336
void debug_show_filters(13,204
void debug_show_filter_data(14,242
void print_mime_message(17,343
void print_mime_struct(18,405
int write_attachment(19,474
void debug_print_dh(22,591
void debug_print_attach_parts(23,631
void glist_test(26,755
GList *debug_glist_create(debug_glist_create27,774
void debug_glist_destroy(28,803

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_common.c,1771
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE12,194
EmcConfig *config=config30,558
gboolean process_all_attachments=31,583
gboolean process_all_rules=32,624
Filter* current_filter=33,659
GHashTable *global_pref_hash global_pref_hash35,690
const char* realm_get_pref(37,728
void set_current_filter(72,1495
Filter *get_current_filter(get_current_filter77,1566
void set_process_all_attachments(82,1624
gboolean get_process_all_attachments(87,1710
void set_process_all_rules(92,1787
gboolean get_process_all_rules(97,1861
const char *get_domain(get_domain102,1971
const char *get_global_token_value(get_global_token_value115,2160
char *replace_tokens replace_tokens221,4390
cf_options *cf_options_new(cf_options_new306,5821
void cf_options_clear(314,5977
void cf_options_free(336,6523
void cf_options_init(377,7307
gboolean cf_log(890,19047
#define MEGA_SUMMARY_LEN 1045,22883
void do_one_line_cf_report(1047,22916
typedef struct attachment_report_t1153,25056
	Rule *rule;rule1155,25093
	char *attachment_name;attachment_name1156,25106
	gboolean matched;1157,25130
}attachment_report_s;attachment_report_s1158,25149
GArray *attachment_report_list=attachment_report_list1160,25172
void attachment_report_new(1162,25211
gboolean attachment_matched(1209,26746
void attachment_report_free(1231,27220
int hash_get_val(1257,27689
const char *hash_get_desc(hash_get_desc1271,27871
CF_HASH_NODE *hash_get_node(hash_get_node1284,28064
const char *to_string(to_string1298,28256
unsigned char* urlencode(1311,28417
char *str_replace(str_replace1345,28947
char *get_rand_word(get_rand_word1375,29410
gboolean dir_check_and_create 1393,29773
int copy_file(1412,30195
char* file_checksum(1446,31033

/emcsvn/emc/emcmailer/trunk/contentfilter/cf_common.h,9118
#define CF_COMMON_H_2,21
#define	DEMIME_TEST	13,224
#define	PROCESS_ALL_RULES	14,254
#define	REORDER_RULES	15,288
#define	SIMULATE_ACTIONS	16,319
#define	SKIP_CUSTOMER_FILTERS	17,352
#define	SKIP_DOMAIN_FILTERS	18,389
#define	SKIP_USER_FILTERS	19,425
#define	QC_POLICY_TEST	20,459
#define	STAND_ALONE_TEST	21,491
#define CF_FATAL 24,539
#define CF_ERROR 25,566
#define CF_DEBUG 26,593
#define ACTION_DONE_INFO 27,620
#define CF_INFO 28,653
#define STATS_INFO 29,679
#define AGENT_ACTION_INFO 30,708
#define SQL_INFO 31,743
#define FILTER_INFO 32,770
#define RULESET_INFO 33,799
#define ACTIONSET_INFO 34,829
#define EXCEPTIONLIST_INFO 35,862
#define APPLYLIST_INFO 36,898
#define HEADER_DATA_INFO 37,931
#define MSG_DATA_INFO 38,965
#define MATCHED_INFO 39,997
#define NOT_MATCHED_INFO 40,1028
#define MIME_STRUCT_INFO	41,1062
#define DEMIME_OUTPUT_INFO	42,1095
#define DEMIME_DUMP_INFO	43,1130
#define CF_EXTINFO 44,1163
#define LOG_MATCHED_ITEMS 46,1194
typedef enum AgentName48,1225
	POLICYSMART,50,1250
	OUTPOLICYSMART,51,1264
	SPOOL,52,1281
	OUTSPOOL,53,1290
	PACTION,54,1301
	OUTPACTION,55,1311
	SMIME,56,1324
	OUTSMIME57,1332
} AgentName;58,1342
typedef enum CypherActionStatus60,1356
	DECRYPTION_OK,62,1390
	SIGNATURE_OK,63,1406
	CERTIFICATE_NOT_FOUND,64,1421
	INVALID_CERTIFICATE,65,1445
	INVALID_PRIVATE_KEY,66,1467
	INVALID_CERTIFICATE_PASSWORD,67,1489
	DECRYPTION_FAILED,68,1520
	INVALID_SIGNATURE,69,1540
	NOT_SIGNED,70,1560
	NOT_ENCRYPTED71,1573
} CypherActionStatus;72,1588
typedef enum ActionStatus74,1611
	ACTION_SKIPPED,76,1639
	SOFT_ACTION_FAILED,77,1656
	HARD_ACTION_FAILED,78,1677
	SOFT_ACTION_DONE,79,1698
	HARD_ACTION_DONE,80,1717
	ACTION_DELAYED,81,1736
	HARD_ACTION_DELAYED82,1753
} ActionStatus;83,1774
typedef enum RuleStatus85,1791
	RULE_NOT_CHECKED,87,1817
	RULE_MATCHED,88,1836
	RULE_NOT_MATCHED,89,1851
	RULE_SKIPPED90,1870
} RuleStatus;91,1884
typedef enum FilterStatus93,1899
	FILTER_NOT_CHECKED,95,1927
	APPLY_LIST_MATCHED,96,1948
	APPLY_LIST_NOT_MATCHED,97,1969
	EXCEPTION_LIST_MATCHED,98,1994
	EXCEPTION_LIST_NOT_MATCHED,99,2019
	FILTER_SKIPPED,100,2048
	FILTER_APPLIED,101,2065
	HARD_FILTER_APPLIED102,2082
} FilterStatus;103,2103
#define MAX_LOG_MSG_LEN 105,2120
#define MAX_ATTACHMENT_SIZE	108,2270
#define EMC_READ_BUFFER_SIZE	109,2320
typedef struct action_t111,2356
	unsigned long actionID;113,2382
	int type;116,2444
	char *actionStr;actionStr117,2455
	char *data;data118,2473
	ActionStatus status;119,2486
}Action;Action120,2508
typedef enum DATA_TYPE122,2518
	GENERAL_LIST,124,2543
	EMAIL,125,2558
	EMAIL_LIST,126,2566
	DOMAIN,127,2579
	DOMAIN_LIST,128,2588
	IP_ADDRESS,129,2602
	IP_LIST,130,2615
	STRING,131,2625
	TEXT,132,2634
	SCALAR,133,2641
	SIZE,134,2650
	DATE135,2657
} DATA_TYPE;136,2663
typedef struct AttachmentStatus_t138,2677
	struct demime_part *demimePart;demimePart140,2713
	RuleStatus status;141,2746
	int nMatches;142,2766
	char *summary;summary143,2781
} AttachmentStatus;144,2797
typedef struct rule_t146,2818
	unsigned long ruleID;148,2842
	char *criteriaStr;criteriaStr151,2900
	int criteria;152,2920
	char *matchOpStr;matchOpStr153,2935
	int matchOp;154,2954
	gboolean caseSensitive;155,2968
	gboolean reverseOp;156,2994
	unsigned long listID;157,3015
	char *data;data158,3038
	DATA_TYPE dataType;159,3052
	char *countOpStr;countOpStr160,3073
	int countOp;161,3092
	int count;162,3106
	int repeatPoints;163,3118
	float points;164,3181
	char *joinOp;joinOp165,3196
	RuleStatus status;166,3211
	int nMatches;167,3231
	GArray *attachmentStatusArray;attachmentStatusArray168,3246
}Rule;Rule173,3364
typedef struct RuleSet_t175,3372
	unsigned long ruleSetID;177,3399
	char *matchOp;matchOp178,3425
	float points;179,3441
	GArray *rules;rules180,3456
	gboolean matched;181,3472
	int totalPoints;182,3491
}RuleSet;RuleSet183,3509
typedef GArray ActionSet;185,3520
typedef struct filter_t187,3547
	unsigned long filterID;189,3573
	unsigned long policyID;190,3598
	unsigned long ruleSetID;192,3642
	unsigned long actionSetID;193,3668
	long applyListID;194,3696
	long exceptionListID;195,3715
	char *type;type196,3738
	gboolean activeFlag;197,3751
	char *owner;owner198,3773
	char *name;name199,3787
	RuleSet *ruleSet;ruleSet201,3823
	ActionSet *actionSet;actionSet202,3842
	FilterStatus status;203,3865
}Filter;Filter204,3887
typedef struct CF_HASH_NODE_t206,3897
	char *key;key208,3929
	int val;209,3941
	char *desc;desc210,3951
}CF_HASH_NODE, *CF_HASH;CF_HASH211,3964
int hash_get_val(213,3990
const char *hash_get_desc(hash_get_desc214,4039
CF_HASH_NODE *hash_get_node(hash_get_node215,4097
typedef struct cf_options_t217,4158
	unsigned int reportmode;219,4188
	unsigned int runOptions;220,4239
	int outboundmode;221,4291
	const char *user;user222,4310
	char *sender;sender223,4329
	char *from_address;from_address224,4344
	char *recipient;recipient225,4365
	char *msgid;msgid226,4383
	char *data;data227,4397
	char *short_msgid;short_msgid228,4410
	char *domain;domain229,4430
	char *filename;filename230,4445
	char *modified_filename;modified_filename231,4462
	char *spooldir;spooldir232,4488
	char *configfile;configfile233,4505
	char *smime_action;smime_action234,4524
	long int inode;235,4545
	Filter *filter;filter236,4562
	AgentName agent_name;237,4579
}cf_options;cf_options238,4602
#define SPAM_REP_SEP 240,4616
#define BOX_FA_LEN 241,4641
#define RULES_SUMMARY_HEADER_LEN 242,4664
#define IP_LEN 243,4701
#define SUBJ_LEN 244,4719
#define SUBJ_LEN_ENC 245,4739
#define BODY_LEN 246,4773
#define BODY_LEN_ENC 247,4834
typedef struct quarantine_report_t248,4916
	char* filename;250,4953
	const char* user;251,4970
	const char* sender;252,4989
	const char* recip;253,5010
	unsigned long filter_id;254,5030
	const char* policy_owner;255,5056
	unsigned long policy_id;256,5083
	const char* policy_name;257,5109
	const char* ip;258,5135
	const char* subject;259,5152
	const char* body;260,5174
	const char* access_type;261,5193
	unsigned long long filesize;262,5219
	int spool_days;263,5249
	const char *uid;uid264,5266
	char server[server265,5284
	time_t time;266,5303
	const char *table;table267,5317
	gboolean outbound;268,5365
}quarantine_report;quarantine_report269,5385
typedef struct DomainKeys_t271,5406
	int keyID;273,5436
	char *name;name274,5448
	char *owner;owner275,5461
	char* type;276,5475
	char* selector;277,5505
	char* privateKey;278,5548
	char* publicKey;279,5567
	char* password;280,5585
}DomainKeys;DomainKeys281,5602
typedef struct SMimeKeys_t283,5616
	int keyID;285,5645
	char* name;286,5657
	char* owner;287,5670
	char* privateKey;288,5684
	char* certificate;289,5703
	char* password;290,5723
	char* status;291,5740
    gboolean deleted;292,5755
}SMimeKeys;SMimeKeys293,5777
typedef struct AkaDomain_t295,5790
	char *aka_default;aka_default297,5819
	char* primary_service;298,5839
	char* preferred_mailstore;299,5863
	char* preferred_maildir;300,5891
	unsigned long cus_num;301,5917
	char* aka_nomb_action;302,5941
	char* aka_nomb_server;303,5965
	char* aka_nomb_address;304,5989
	char* aka_nomb_server_type;305,6014
}AkaDomain;AkaDomain306,6043
typedef struct Mailbox_t308,6056
	unsigned long long rid;310,6083
	char* aka_domain;311,6108
	char* box_id;312,6127
	char* box_fulladdress;313,6142
	char* box_pass;314,6166
	char* password;315,6183
	unsigned long box_num;316,6200
	int mc_num;317,6224
	int pg_num;318,6237
	int wp_num;319,6250
	char* box_mailstore;320,6263
	char* box_maildir;321,6285
	char* primary_service;322,6305
	char* created_by;323,6329
	char* modified_by;324,6348
	char* realm;325,6368
}Mailbox;Mailbox326,6382
cf_options *cf_options_new(cf_options_new328,6393
void cf_options_init(329,6423
void cf_options_clear(330,6490
void cf_options_free(331,6534
void attachment_report_new(333,6578
gboolean attachment_matched(335,6697
void attachment_report_free(336,6755
char *escape_percents(escape_percents338,6787
gboolean cf_log(339,6830
void do_one_line_cf_report(340,6902
void set_process_all_attachments(342,6954
gboolean get_process_all_attachments(343,7003
void set_process_all_rules(345,7044
gboolean get_process_all_rules(346,7087
const char *get_domain(get_domain348,7122
void set_current_filter(350,7173
Filter *get_current_filter(get_current_filter351,7214
const char* realm_get_pref(353,7245
const char *to_string(to_string355,7315
unsigned char *urlencode(urlencode356,7355
char *str_replace(str_replace358,7397
char *get_rand_word(get_rand_word360,7470
gboolean dir_check_and_create 361,7503
char *replace_tokens replace_tokens363,7557
const char *get_global_token_value(get_global_token_value364,7615
char* agent_data_get_value(365,7670
int copy_file(367,7734
char* file_checksum(368,7790
extern cf_options *cf_args;cf_args370,7863
extern EmcConfig *config;config371,7891
extern int debugmode;372,7917
extern char policyIDs[policyIDs373,7939

/emcsvn/emc/emcmailer/trunk/contentfilter/contentfilter.c,1792
		*rcsid rcsid11,148
static void use_rcsid(12,224
#define _GNU_SOURCE22,336
#define	MAX_ARCHIVES	45,1043
EmcQImpl *impl=impl46,1067
const unsigned char *archiveHints[archiveHints48,1090
int nArchiveHints 50,1148
int debugmode 52,1172
char *msgid=msgid55,1342
int inbound 61,1643
int verify_signature 64,1782
int decrypt_message 65,1856
int apply_all_policies 66,1935
int apply_realm_policies(67,2025
int set_archive_hint(69,2095
cf_options *cf_args=cf_args71,2120
list_db_s DB_EXCEPTION_LIST 73,2148
list_db_s DB_APPLY_LIST 77,2271
GArray* g_matches 81,2386
int main(88,2459
int apply_all_policies 489,13422
int apply_realm_policies(507,13834
char* agent_data_get_value(554,14842
int verify_signature 605,15496
int decrypt_message 675,17302
void cf_exit(786,20604
FilterStatus filterlist_apply(818,21080
void filterlist_free(843,21588
int filterlist_count(863,21956
FilterList *filterlist_new(filterlist_new868,22036
FilterList * filterlist_append(875,22122
void filter_add_archive_hint(881,22267
int set_archive_hint(914,23039
FilterStatus filter_apply(941,23596
Filter * filter_new(1173,29972
void filter_clear(1188,30194
void filter_set_type(1207,30569
void filter_free(1222,30925
RuleSet *filter_get_ruleset(filter_get_ruleset1240,31198
ActionSet *filter_get_actionset(filter_get_actionset1251,31538
unsigned long filter_get_id(1260,31738
const char* filter_get_name(1265,31813
const char* filter_get_type(1270,31884
const char* filter_get_owner(1275,31955
unsigned long filter_get_policy_id(1280,32028
FilterStatus filter_get_status(1285,32110
FilterStatus filter_set_status(1290,32186
const char *filter_get_short_desc(filter_get_short_desc1296,32301
gboolean is_customer_filter 1311,32594
gboolean is_domain_filter 1320,32736

/emcsvn/emc/emcmailer/trunk/contentfilter/contentfilter.h,1024
#define CONTENT_FILTER_H_8,111
#define FILTER_TYPE_INBOUND	15,225
#define FILTER_TYPE_OUTBOUND	16,264
#define FILTER_TYPE_BOTH	17,304
typedef GList FilterList;19,338
Filter* filter_new(21,365
void filter_clear(22,387
void filter_free(23,422
void filter_set_type(24,451
FilterStatus filter_set_status(25,507
FilterStatus filter_get_status(26,576
gboolean is_customer_filter 28,625
gboolean is_domain_filter 29,666
unsigned long filter_get_id(31,706
unsigned long filter_get_policy_id(32,751
const char* filter_get_name(33,803
const char* filter_get_type(34,848
const char* filter_get_owner(35,893
const char *filter_get_short_desc(filter_get_short_desc36,939
int filterlist_count(38,986
FilterList* filterlist_new(39,1032
FilterList* filterlist_append(40,1062
FilterStatus filterlist_apply(41,1133
void filterlist_free(42,1188
FilterStatus filter_apply(44,1235
RuleSet* filter_get_ruleset(46,1279
ActionSet* filter_get_actionset(47,1324
void filter_add_archive_hint(49,1374
void cf_exit(51,1421

/emcsvn/emc/emcmailer/trunk/exdeliver.c,774
static char *rcsid rcsid1,0
static void use_rcsid(2,81
#define _GNU_SOURCE8,189
extern int debugmode;29,583
extern int pretendmode;30,605
extern const char *msgid;msgid31,629
extern exdeliver_options exdeliver_opts;33,656
#define BUFFER_SIZE 35,698
#define MAX_BATCH 36,727
#define EXIM_QUEUE_MODE_THRESHOLD 37,748
EmcHash * ex_recipients;39,787
void do_exfilenames(43,862
void do_exhosts(44,920
int do_retail(45,974
int do_ex_recipient(46,1047
int do_batch(47,1127
int rcomp(48,1199
long queue_threshold 51,1243
int queue_override 52,1293
long total_recipients 53,1317
int do_exdeliver(55,1345
void do_exfilenames(214,4901
void do_exhosts(222,5098
int do_batch(341,7501
int do_retail(580,12986
int do_ex_recipient(594,13218
int rcomp(823,18908

/emcsvn/emc/emcmailer/trunk/exdeliver.h,226
#define EX_DELIVER_H2,21
typedef struct exdeliver_options_t 8,109
	EmcQImpl * impl;10,148
	EmcConfig * config;11,166
	int batch_num;12,187
	const char * sender;13,203
} exdeliver_options;15,226
int do_exdeliver(17,248

/emcsvn/emc/emcmailer/trunk/smtp.c,334
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
const char *readlinefp_cb(readlinefp_cb21,405
void print_recipient_status(22,465
int smtpsendsingle(24,555
void print_recipient_status 118,3046
#define BUFLEN	127,3279
const char *readlinefp_cb readlinefp_cb129,3300
void monitor_cb 157,3744

/emcsvn/emc/emcmailer/trunk/smtp.h,46
#define _SMTP_H2,16
int smtpsendsingle(4,33

/emcsvn/emc/emcmailer/trunk/utils.c,227
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define FALSE 18,362
#define TRUE 19,378
char * safe_strdup(22,401
void * safe_malloc(30,589
int safe_asprintf(42,838
void chomp(57,1142

/emcsvn/emc/emcmailer/trunk/utils.h,118
#define _EMC_UTILS2,19
int safe_asprintf(6,60
char * safe_strdup(7,119
void * safe_malloc(8,159
void chomp(9,206

/emcsvn/emc/emcmailer/trunk/qcleaner.c,279
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
int debugmode 27,516
int ownmode 28,535
char * msgid 29,552
char * configfile 30,572
EmcConfig * config 31,598
EmcQImpl * impl 32,625
void init(34,650
int main(36,664
void init(124,2423

/emcsvn/emc/emcmailer/trunk/qinject.c,871
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
char *recipient recipient24,476
EmcArray *recips recips25,500
char *sender sender26,525
char *msgid msgid27,546
char *data data28,566
int debugmode 29,585
int allow_ext 30,604
int lmtp 31,623
int outboundmode=33,638
FILE *tmp_msg tmp_msg35,660
char *tmp_dir tmp_dir36,682
char *tmp_file tmp_file37,704
long host_id 39,728
const char *configfile configfile41,748
EmcConfig *config config42,779
#define CINLINE 44,806
#define BUFFER_SIZE 45,829
CINLINE int em_readline(47,860
CINLINE int _em_read(48,915
EmFd *em_new_fd(em_new_fd49,958
void do_args(51,981
int do_inject(136,2671
void transfer_recips(216,4478
void do_lmtp(223,4619
int main(429,9858
EmFd *em_new_fd(em_new_fd556,12316
CINLINE int _em_read(573,12547
CINLINE int em_readline(598,12978

/emcsvn/emc/emcmailer/trunk/logger.c,236
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
extern const char *msgid;msgid16,327
extern int debugmode;17,353
void virus_logger(19,376
void mailer_log_simple(76,1861
void mailer_log(103,2533

/emcsvn/emc/emcmailer/trunk/logger.h,556
#define LOGGER_H4,38
#define REPORT_ERROR 6,56
#define REPORT_DEBUG 7,79
#define REPORT_AGENT 8,102
#define REPORT_STATS 9,125
#define REPORT_INFO 10,148
#define DEBUG_SYSLOG 13,173
#define DEBUG_STDOUT 14,202
#define DEBUG_RULE 15,231
#define DEBUG_FINGERPRINT 16,260
#define DEBUG_CONFIG 17,289
#define DEBUG_WARN 18,319
#define DEBUG_FAIL 19,349
#define DEBUG_INFO 20,379
#define DEBUG_RESULT 21,410
#define DEBUG_PARSE_DOM 22,441
#define DEBUG_MAX 23,472
void spam_logger(25,504
void mailer_log(26,557
void mailer_log_simple(27,617

/emcsvn/emc/emcmailer/trunk/parse.c,138
static char *rcsid rcsid1,0
static void use_rcsid(2,78
void print_mime_struct(15,315
int main(17,370
void print_mime_struct(50,1027

/emcsvn/emc/emcmailer/trunk/ldeliver_main.c,324
static char *rcsid rcsid1,0
static void use_rcsid(2,85
#define BUFFER_SIZE 20,399
char * msgid 23,453
int debugmode 24,474
int pretendmode 25,493
const char * sender;27,515
long batch_num 28,536
const char * queue_type 29,556
const char * configfile 30,588
ldeliver_options ldeliver_opts;32,621
int main(34,654

/emcsvn/emc/emcmailer/trunk/courier_deliver/private.h,190
#define SENDMAIL 1,0
#define BMC_DELIVER_EXE 2,61
#define CORRUPT_MAILBOX_TO_ADDRESS 3,120
#define CORRUPT_MAILBOX_FROM_ADDRESS 4,185
void do_deliver(7,301
void corrupt_mailbox 14,650

/emcsvn/emc/emcmailer/trunk/courier_deliver/dagent-dovecot.c,740
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define _GNU_SOURCE8,194
#define MYBUFSIZE 21,428
#define MAX_ADDRESS_LEN 22,451
void usage(24,480
struct delivery *get_delivery_info(get_delivery_info25,498
char *decode_address(decode_address26,561
int make_maildirfolder(27,599
struct delivery 29,645
	char mailbox[mailbox30,663
	char address[address31,690
	char maildir[maildir32,724
long dodeliver(35,755
char *get_delivery_maildir(get_delivery_maildir36,810
char *get_quota(get_quota37,860
char *get_quota(get_quota39,901
int make_maildirfolder(113,3019
char *decode_address(decode_address167,4426
struct delivery *get_delivery_info(get_delivery_info204,5050
void usage(238,5793
int main 244,5885

/emcsvn/emc/emcmailer/trunk/courier_deliver/common.h,2637
#define EMC_MAILER_COMMIN2,26
#define DEBUG_SYSLOG 31,553
#define DEBUG_INFO 32,578
#define DEBUG_INFO2 33,603
#define DEBUG_DB_QUERY 34,628
#define DEBUG_DB_OUT 35,653
#define DEBUG_STDOUT 36,679
#define DEBUG_FAIL 37,705
#define DEBUG_WARN 38,731
#define DEBUG_CONFIG 39,758
#define DEBUG_MAX 40,785
struct conf 42,813
	char *emc_bin_dir;emc_bin_dir44,846
	char *qmail_bin_dir;qmail_bin_dir45,866
	char *aka_tmp_dir;aka_tmp_dir46,888
	char *qmail_queue;qmail_queue49,925
	char *sendmail;sendmail50,945
	char *mf_script;mf_script51,962
	char *quota_check;quota_check52,980
	char *db_connect_timeout;db_connect_timeout55,1018
	char *aka_db_read_server;aka_db_read_server56,1045
	char *aka_db_read_user;aka_db_read_user57,1072
	char *aka_db_read_pass;aka_db_read_pass58,1097
	char *aka_db_read_name;aka_db_read_name59,1122
	char *aka_db_write_server;aka_db_write_server60,1147
	char *aka_db_write_user;aka_db_write_user61,1175
	char *aka_db_write_pass;aka_db_write_pass62,1201
	char *aka_db_write_name;aka_db_write_name63,1227
	char *bounce_email;bounce_email66,1274
	char *abuse_email;abuse_email67,1295
	char *abuse_phone;abuse_phone68,1315
	char *local_delivery;local_delivery71,1359
	char *delivery_domain;delivery_domain72,1382
struct vars75,1410
	char *configfile;configfile77,1424
	int  debugmode;78,1443
	long forward_count;79,1460
	char *forward_addresses[forward_addresses80,1481
	long pop_count;81,1524
  char *pop_addresses[pop_addresses82,1541
  char *pop_mailboxes[pop_mailboxes83,1577
  long list_count;84,1613
  char *list_addresses[list_addresses85,1632
  long auto_count;86,1670
  char *auto_addresses[auto_addresses87,1689
  long listserve_count;88,1727
  char *listserve_addresses[listserve_addresses89,1751
  char *sender;sender90,1785
	char *messageid;messageid91,1801
  long bounce_count;92,1819
  char *bounce_addresses[bounce_addresses93,1840
  char *bounce_reasons[bounce_reasons94,1871
  MYSQL sock;95,1900
  long message_size;96,1914
  char *arg1;arg197,1935
  char *arg2;arg298,1949
  char *arg3;arg399,1963
  char *arg4;arg4100,1977
  char *arg5;arg5101,1991
  char *arg6;arg6102,2005
	struct conf config;103,2019
int read_env(113,2345
void aka_logger(114,2397
void aka_exit 115,2497
void sortem 116,2561
void add_bounce 118,2693
void add_pop 119,2775
void add_forward 120,2840
void memerror2 122,2921
void mserror2 124,2955
void put_date 126,3060
void qmail_q 131,3403
void exim_q 132,3485
void exim_qq 133,3566
void do_bounce 138,3934
void do_forward 142,4232
int is_special_sender(146,4527

/emcsvn/emc/emcmailer/trunk/courier_deliver/defaults.h,143
#define CONFIG_H2,17
#define MAX_FORWARD 4,35
#define MAX_POP 5,61
#define MAX_LIST 6,82
#define MAX_AUTO 7,103
#define MAX_HEADER 8,125

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/dbobj.h,735
#define	dbobj_h2,16
static const char dbobj_h_rcsid[dbobj_h_rcsid4,33
#define	DbObj	13,257
#define	dbobj	15,280
#define	dbobj_init	16,302
#define	dbobj_open	17,334
#define	dbobj_close	18,366
#define	dbobj_isopen	19,400
#define	dbobj_fetch	20,436
#define	dbobj_exists	21,470
#define	dbobj_delete	22,506
#define	dbobj_store	23,542
#define	dbobj_firstkey	24,576
#define	dbobj_nextkey	25,616
#define	DbObj	30,695
#define	dbobj	32,717
#define	dbobj_init	33,738
#define	dbobj_open	34,769
#define	dbobj_close	35,800
#define	dbobj_isopen	36,833
#define	dbobj_fetch	37,868
#define	dbobj_exists	38,901
#define	dbobj_delete	39,936
#define	dbobj_store	40,971
#define	dbobj_firstkey	41,1004
#define	dbobj_nextkey	42,1043

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmake.c,200
static void usage(31,533
extern FILE *maildir_shared_fopen(maildir_shared_fopen37,621
extern void maildir_shared_fparse(38,684
static void add(40,746
static void del(132,2169
int main(214,3349

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmisc.h,972
#define	maildirmisc_h2,22
static const char maildirmisc_h_rcsid[maildirmisc_h_rcsid17,225
#define	INBOX	27,405
#define	DRAFTS	28,427
#define	SENT	29,451
#define	TRASH	30,471
#define	SHAREDSUBDIR	32,494
char *maildir_folderdir(maildir_folderdir34,533
char *maildir_filename(maildir_filename41,795
int maildir_safeopen(50,1121
int maildir_semisafeopen(66,1744
int maildir_mkdir(76,2022
void maildir_purgetmp(81,2153
void maildir_purge(84,2241
void maildir_getnew(87,2329
int maildir_deletefolder(91,2448
int maildir_mddelete(95,2559
void maildir_list_sharable(97,2634
int maildir_shared_subscribe(102,2821
void maildir_list_shared(106,2947
int maildir_shared_unsubscribe(111,3138
char *maildir_shareddir(maildir_shareddir115,3270
void maildir_shared_sync(122,3471
int maildir_sharedisro(125,3559
int maildir_unlinksharedmsg(128,3657
char *maildir_getlink(maildir_getlink133,3807
int maildir_hasflag(137,3911
#define	MAILDIR_DELETED(139,3961

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirshared.c,1231
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid44,769
#define	YES_WE_CAN_DO_SHARED	52,956
static void list_sharable(62,1056
extern FILE *maildir_shared_fopen(maildir_shared_fopen66,1154
extern void maildir_shared_fparse(67,1217
void maildir_list_sharable(69,1279
static void list_sharable(99,1789
int maildir_shared_subscribe(137,2538
void maildir_list_shared(266,4739
int maildir_shared_unsubscribe(312,5672
char *maildir_shareddir(maildir_shareddir330,5975
static void do_maildir_shared_sync(370,6742
void maildir_shared_sync(372,6807
static int create_db(396,7197
static int build_db(451,8082
static int update_link(510,9050
static int update_cur(523,9379
static int update_link(633,11527
static int newmsgs(704,12663
static void do_maildir_shared_sync(779,13908
int maildir_sharedisro(860,15575
int maildir_unlinksharedmsg(880,15856
void maildir_list_sharable(930,16734
int maildir_shared_subscribe(936,16838
void maildir_list_shared(942,16942
int maildir_shared_unsubscribe(948,17044
char *maildir_shareddir(maildir_shareddir954,17150
void maildir_shared_sync(960,17252
int maildir_sharedisro(964,17303
int maildir_unlinksharedmsg(969,17366

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirpath.c,88
static const char rcsid[rcsid24,371
char *maildir_folderdir(maildir_folderdir26,458

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildiropen.c,148
static const char rcsid[rcsid25,390
char *maildir_getlink(maildir_getlink27,477
int maildir_semisafeopen(64,910
int maildir_safeopen(105,1421

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirquota.c,886
#define NAMLEN(13,207
#define dirent 15,261
#define NAMLEN(16,283
static const char rcsid[rcsid49,855
int maildirsize_read(53,979
static int statcurnew(123,2031
static int statsubdir(124,2078
#define	MDQUOTA_SIZE	126,2140
#define	MDQUOTA_BLOCKS	127,2209
#define	MDQUOTA_COUNT	129,2311
static int qcalc(131,2380
static int	doaddquota(171,3058
static int docheckquota(173,3132
int maildir_checkquota(180,3276
int maildir_readquota(192,3507
static int docheckquota(203,3716
int	maildir_addquota(367,6915
static int doaddquota(375,7190
		char buf[buf380,7354
		struct stat stat_buf;381,7371
char *makenewmaildirsizename(makenewmaildirsizename476,9339
static int statcurnew(509,10009
static int statsubdir(525,10454
static int docount(542,10849
int countcurnew(544,10915
int countsubdir(562,11254
static int docount(580,11687
int maildir_updatequota(649,12847

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirquota.h,328
#define	maildirquota_h2,23
static const char maildirquota_h_rcsid[maildirquota_h_rcsid20,277
int maildir_checkquota(22,383
int maildir_addquota(28,677
int maildir_readquota(34,884
int maildir_parsequota(37,982
int countsubdir(41,1140
char *makenewmaildirsizename(makenewmaildirsizename44,1223
int countcurnew(45,1274

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter2.c,367
static const char rcsid[rcsid25,418
static const char *mf_config(mf_config27,511
static char *mf_config_maildirfilter(mf_config_maildirfilter59,1129
int mf_importmaildirfilter(79,1451
int mf_loadmaildirfilter(181,3140
int mf_savemaildirfilter(199,3500
int mf_exportmaildirfilter(235,4211
int mf_hasmaildirfilter(257,4645
void mf_endmaildirfilter(268,4853

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetquota.c,29
int	maildir_getquota(21,350

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetquota.h,163
#define	maildirgetquota_h2,26
static const char maildirgetquota_h_rcsid[maildirgetquota_h_rcsid20,283
#define	QUOTABUFSIZE	22,392
int maildir_getquota(24,418

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirflags.c,65
static const char rcsid[rcsid9,137
int maildir_hasflag(11,225

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirmkdir.c,64
static const char rcsid[rcsid21,315
int maildir_mkdir(23,403

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirparsequota.c,69
static const char rcsid[rcsid13,212
int maildir_parsequota(15,308

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter.c,498
static const char rcsid[rcsid29,524
struct maildirfilterrule *mf_appendrule(mf_appendrule31,616
int mf_ruleupdate(63,1251
void mf_ruledel(322,6315
void mf_ruleup(338,6715
void mf_ruledown(355,7005
static void print_pattern(372,7297
int mf_saverules(390,7608
int mf_loadrules(595,12160
#define	SET(632,12791
int mf_autoresp_info_init(740,14521
int mf_autoresp_info_init_str(752,14740
void mf_autoresp_info_free(779,15209
char *mf_autoresp_info_asstr(mf_autoresp_info_asstr788,15319

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilter.h,2034
#define	maildirfilter_h2,24
static const char maildirfilter_h_rcsid[maildirfilter_h_rcsid9,142
enum maildirfiltertype 17,308
	startswith,18,333
	endswith,19,346
	contains,20,357
	hasrecipient,21,368
	mimemultipart,22,383
	textplain,23,399
	islargerthan,24,411
struct maildirfilterrule 27,470
	struct maildirfilterrule *next,next28,497
	struct maildirfilterrule *next, *prev;prev28,497
	char *rulename;rulename29,537
	enum maildirfiltertype type;30,554
	int flags;31,584
#define	MFR_DOESNOT	33,597
#define	MFR_BODY	34,661
#define	MFR_CONTINUE	37,743
#define MFR_PLAINSTRING	38,810
	char *fieldname;fieldname40,882
	char *fieldvalue;fieldvalue41,900
	char *tofolder;tofolder42,919
	char *fromhdr;fromhdr43,936
struct maildirfilter 46,958
	struct maildirfilterrule *first,first47,981
	struct maildirfilterrule *first, *last;last47,981
struct maildirfilterrule *mf_appendrule(mf_appendrule57,1349
int mf_setautoreplyfrom(67,1586
void mf_ruleup(71,1703
void mf_ruledown(72,1771
void mf_ruledel(76,1869
int mf_ruleupdate(80,1970
#define	mf_freerules(90,2180
#define	MF_ERR_BADRULENAME	101,2379
#define	MF_ERR_BADRULETYPE	102,2408
#define	MF_ERR_BADRULEHEADER	103,2437
#define	MF_ERR_BADRULEVALUE	104,2468
#define	MF_ERR_BADRULEFOLDER	105,2498
#define MF_ERR_BADFROMHDR	106,2529
#define MF_ERR_INTERNAL	107,2557
int mf_saverules(111,2630
int mf_loadrules(117,2837
#define	MF_LOADOK	119,2894
#define	MF_LOADNOTFOUND	120,2914
#define	MF_LOADFOREIGN	121,2940
#define	MF_LOADERROR	122,2965
int mf_importmaildirfilter(128,3228
int mf_loadmaildirfilter(129,3299
int mf_savemaildirfilter(130,3363
int mf_exportmaildirfilter(131,3441
int mf_hasmaildirfilter(133,3521
void mf_endmaildirfilter(135,3595
struct mf_autoresp_info 141,3735
	char *name;name142,3761
	int dsnflag;143,3774
	unsigned days;144,3788
int mf_autoresp_info_init_str(147,3809
int mf_autoresp_info_init(148,3881
void mf_autoresp_info_free(149,3949
char *mf_autoresp_info_asstr(mf_autoresp_info_asstr150,4004

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirshared2.c,129
static const char rcsid[rcsid12,192
FILE *maildir_shared_fopen(maildir_shared_fopen14,282
void maildir_shared_fparse(32,571

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirrequota.c,84
static const char rcsid[rcsid14,228
char *maildir_requota(maildir_requota16,321

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirrequota.h,148
#define	maildirrequota_h2,25
static const char maildirrequota_h_rcsid[maildirrequota_h_rcsid17,238
char *maildir_requota(maildir_requota21,415

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfilename.c,156
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid41,694
char *maildir_filename(maildir_filename52,1063

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirgetnew.c,212
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static const char rcsid[rcsid39,656
static void do_maildir_getnew(41,745
void maildir_getnew(43,805
static void do_maildir_getnew(65,1233

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/autoresponse.c,862
#define NAMLEN(26,448
#define dirent 28,502
#define NAMLEN(29,524
static const char rcsid[rcsid41,711
struct autoresponse_quota 43,802
	unsigned files;44,830
	unsigned long bytes;45,847
struct temp_autoresponse_list 48,874
	struct temp_autoresponse_list *next;next49,906
	char *filename;filename50,944
char **autoresponse_list(autoresponse_list53,966
void autoresponse_list_free(145,2201
static char *afilename(afilename154,2304
int autoresponse_validate(182,3043
static void deletefiles(194,3280
void autoresponse_delete(229,3828
static void read_quota(245,4035
static int get_quota(289,4675
static void add_quota(309,5032
static int calc_quota(319,5240
static int check_quota(361,5955
FILE *autoresponse_create(autoresponse_create371,6235
int autoresponse_create_finish(395,6608
FILE *autoresponse_open(autoresponse_open439,7291

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/autoresponse.h,465
#define	maildir_autoresponse_h2,31
static const char maildir_autoresponse_h_rcsid[maildir_autoresponse_h_rcsid9,156
extern char **autoresponse_list(autoresponse_list20,411
extern void autoresponse_list_free(21,458
extern int autoresponse_validate(25,543
extern void autoresponse_delete(29,651
extern FILE *autoresponse_create(autoresponse_create30,712
extern int autoresponse_create_finish(31,774
extern FILE *autoresponse_open(autoresponse_open33,850

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirdelfolder.c,162
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static int delsubdir(41,694
int maildir_mddelete(70,1158
int maildir_deletefolder(94,1538

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/testmaildirfilter.c,55
static const char rcsid[rcsid12,215
int main(14,308

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreateh.c,78
static const char rcsid[rcsid25,414
int maildir_try_create_hostname(27,507

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircache.c,926
#define NAMLEN(31,537
#define dirent 33,591
#define NAMLEN(34,613
#define	syslog(48,843
static const char rcsid[rcsid51,873
static const char * const *authvars;authvars53,963
static char **authvals;authvals54,1000
static time_t expinterval;55,1024
static time_t lastclean=56,1051
static const char *cachedir;cachedir57,1078
static const char *cacheowner;cacheowner58,1107
int maildir_cache_init(60,1139
static char *create_cache_name(create_cache_name81,1454
static pid_t childproc=151,2808
static int childpipe;152,2836
void maildir_cache_start(154,2859
static int savebuf(289,5275
void maildir_cache_save(302,5424
void maildir_cache_cancel(340,6268
int maildir_cache_search(350,6415
struct purge_list 458,8064
	struct purge_list *next;next459,8084
	char *n;n460,8110
static void add_purge_list(463,8125
static void rmrf(485,8397
void maildir_cache_purge(487,8430
static void rmrf(580,9665

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircache.h,332
#define	logincache_h80,2975
static const char rfc2047_h_rcsid[rfc2047_h_rcsid86,3056
extern int maildir_cache_init(88,3154
extern void maildir_cache_start(90,3252
extern void maildir_cache_save(91,3291
extern void maildir_cache_cancel(93,3383
extern int maildir_cache_search(95,3424
extern void maildir_cache_purge(99,3541

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/deliverquota.c,360
#define	BUFSIZE	31,572
#define	EX_OSERR	35,618
#define	EX_IOERR	39,663
#define EX_TEMPFAIL	43,711
#define	EX_NOPERM	47,760
static const char rcsid[rcsid50,789
static long deliver(52,879
static void do_deliver_warning(55,1014
static void deliver_warning(57,1075
static void do_deliver_warning(87,1639
static long deliver(205,3722
int main(310,5484

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreate.c,100
extern int gethostname(20,308
static const char rcsid[rcsid23,362
int maildir_try_create(25,454

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildircreate.h,170
#define	maildircreate_h2,24
static const char maildircreate_h_rcsid[maildircreate_h_rcsid17,236
int maildir_try_create(19,341
int maildir_try_create_hostname(28,711

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirpurgetmp.c,156
#define NAMLEN(13,200
#define dirent 15,254
#define NAMLEN(16,276
static void dopurge(38,637
void maildir_purgetmp(65,1146
void maildir_purge(75,1334

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/maildir/maildirfiltertypelist.h,219
#define	maildirfiltertypelist_h2,32
static const char maildirfiltertypelist_h_rcsid[maildirfiltertypelist_h_rcsid9,163
	enum maildirfiltertype type;14,321
	const char *name;name15,351
	} typelist[typelist16,370

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj2.c,229
static char *fetchkeyval(fetchkeyval8,123
extern char *gdbm_dofetch(gdbm_dofetch9,199
char	*gdbmobj_firstkey(gdbmobj_firstkey11,277
static char *fetchkeyval(fetchkeyval31,641
char	*gdbmobj_nextkey(gdbmobj_nextkey40,890

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj3.c,26
int	gdbmobj_delete(8,123

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj.c,300
static const char rcsid[rcsid19,277
void gdbmobj_init(21,360
void gdbmobj_close(28,461
int gdbmobj_open(42,641
int gdbmobj_store(82,1297
int	gdbmobj_exists(101,1677
char *gdbm_dofetch(gdbm_dofetch114,1904
char	*gdbmobj_fetch(gdbmobj_fetch116,1975
char *gdbm_dofetch(gdbm_dofetch163,2757

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/gdbmobj/gdbmobj.h,1123
#define	gdbmobj_h2,18
static const char gdbmobj_h_rcsid[gdbmobj_h_rcsid9,138
struct gdbmobj 19,311
	GDBM_FILE	dbf;20,328
	int		has_dbf;21,344
	char	*prev_key;prev_key22,359
	size_t	prev_key_len;23,376
void gdbmobj_init(26,404
int gdbmobj_open(28,442
void gdbmobj_close(29,506
#define	gdbmobj_isopen(31,545
char	*gdbmobj_fetch(gdbmobj_fetch33,589
int	gdbmobj_exists(34,674
int	gdbmobj_delete(35,734
int	gdbmobj_store(36,794
char	*gdbmobj_firstkey(gdbmobj_firstkey39,892
char	*gdbmobj_nextkey(gdbmobj_nextkey40,963
class GdbmObj 45,1058
	struct gdbmobj obj;GdbmObj::obj47,1075
	GdbmObj(GdbmObj::GdbmObj49,1097
	GdbmObj	&operator=(GdbmObj::operator=50,1139
	GdbmObj(GdbmObj::GdbmObj53,1200
	~GdbmObj(GdbmObj::~GdbmObj54,1235
	int	Open(GdbmObj::Open55,1272
	int	IsOpen(GdbmObj::IsOpen60,1380
	void	Close(GdbmObj::Close61,1429
	char	*Fetch(GdbmObj::Fetch62,1468
	int	Exists(GdbmObj::Exists69,1628
	int	Delete(GdbmObj::Delete74,1728
	int	Store(GdbmObj::Store79,1828
	char	*FetchFirstKeyVal(GdbmObj::FetchFirstKeyVal87,2013
	char	*FetchNextKeyVal(GdbmObj::FetchNextKeyVal91,2149

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strgidt.c,72
static const char rcsid[rcsid12,186
char *str_gid_t(str_gid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strinot.c,72
static const char rcsid[rcsid12,186
char *str_ino_t(str_ino_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strofft.c,72
static const char rcsid[rcsid12,186
char *str_off_t(str_off_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhinot.c,114
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,270
char *strh_ino_t(strh_ino_t16,320

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strpidt.c,72
static const char rcsid[rcsid12,186
char *str_pid_t(str_pid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strsize.c,100
static const char rcsid[rcsid12,179
static void cat_n(14,262
char *str_sizekb(str_sizekb28,517

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/struidt.c,72
static const char rcsid[rcsid12,186
char *str_uid_t(str_uid_t14,269

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhpidt.c,114
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,270
char *strh_pid_t(strh_pid_t16,320

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strsizet.c,74
static const char rcsid[rcsid12,186
char *str_size_t(str_size_t14,270

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strhtimet.c,116
static const char rcsid[rcsid12,186
static const char xdigit[xdigit14,271
char *strh_time_t(strh_time_t16,321

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/numlib.h,493
#define	numlib_h2,17
static const char numlib_h_rcsid[numlib_h_rcsid13,175
#define	NUMBUFSIZE	22,354
char	*str_time_t(str_time_t26,424
char	*str_off_t(str_off_t27,458
char	*str_pid_t(str_pid_t28,490
char	*str_ino_t(str_ino_t29,522
char	*str_uid_t(str_uid_t30,554
char	*str_gid_t(str_gid_t31,586
char	*str_size_t(str_size_t32,618
char	*str_sizekb(str_sizekb34,653
char	*strh_time_t(strh_time_t38,758
char	*strh_pid_t(strh_pid_t39,793
char	*strh_ino_t(strh_ino_t40,826

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/numlib/strtimet.c,74
static const char rcsid[rcsid12,186
char *str_time_t(str_time_t14,270

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822.c,651
static void tokenize(15,260
static void parseaddr(206,2935
static void print_token(419,7014
void rfc822tok_print(456,7647
void rfc822_print(473,7984
void rfc822_print_common(479,8197
void rfc822t_free(577,10264
void rfc822a_free(583,10349
void rfc822_deladdr(589,10432
static void compat_err_func(604,10691
struct rfc822t *rfc822t_alloc(rfc822t_alloc613,10872
struct rfc822t *rfc822t_alloc_new(rfc822t_alloc_new620,11043
struct rfc822a *rfc822a_alloc(rfc822a_alloc640,11572
void rfc822_praddr(659,12036
void rfc822_addrlist(674,12359
void rfc822_prname(683,12543
void rfc822_prname_orlist(696,12844
void rfc822_namelist(744,13748

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822.h,1499
#define	rfc822_h5,78
struct rfc822token 29,531
	struct rfc822token *next;next30,552
	int token;32,633
#define	rfc822_is_atom(42,808
	const char *ptr;ptr44,876
	int len;45,932
struct rfc822addr 71,2077
	struct rfc822token *tokens;tokens72,2097
	struct rfc822token *name;name73,2126
struct rfc822t 82,2336
	struct rfc822token *tokens;tokens83,2353
	int	ntokens;84,2382
struct rfc822t *rfc822t_alloc(rfc822t_alloc87,2401
struct rfc822t *rfc822t_alloc_new(rfc822t_alloc_new90,2508
void rfc822t_free(94,2636
void rfc822tok_print(96,2703
struct rfc822a 105,2996
	struct rfc822addr *addrs;addrs106,3013
	int	naddrs;107,3040
struct rfc822a *rfc822a_alloc(rfc822a_alloc110,3058
void rfc822a_free(111,3107
void rfc822_deladdr(113,3174
void rfc822_print(120,3427
void rfc822_print_common(126,3614
void rfc822_addrlist(135,3958
void rfc822_namelist(139,4116
void rfc822_prname(145,4344
void rfc822_praddr(146,4425
void rfc822_prname_orlist(152,4607
char *rfc822_gettok(rfc822_gettok157,4724
char *rfc822_getaddr(rfc822_getaddr158,4773
char *rfc822_getname(rfc822_getname159,4824
char *rfc822_getname_orlist(rfc822_getname_orlist160,4875
char *rfc822_getaddrs(rfc822_getaddrs161,4933
char *rfc822_getaddrs_wrap(rfc822_getaddrs_wrap162,4980
void rfc822_mkdate_buf(164,5038
const char *rfc822_mkdate(rfc822_mkdate165,5078
time_t rfc822_parsedt(166,5113
char *rfc822_coresubj(rfc822_coresubj168,5151
char *rfc822_coresubj_nouc(rfc822_coresubj_nouc169,5195

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047.c,1383
static const char rcsid[rcsid15,223
static const char xdigit[xdigit17,306
static char *rfc2047_search_quote(rfc2047_search_quote19,354
static int nyb(33,587
static unsigned char decode64tab[decode64tab42,715
static int decode64tab_init=43,754
static size_t decodebase64(45,786
int rfc2047_decode(94,2146
struct simple_info 189,4003
	char *string;string190,4024
	int index;191,4039
	const char *mychset;mychset192,4051
static int count_simple(195,4079
static int save_simple(205,4255
char *rfc2047_decode_simple(rfc2047_decode_simple215,4474
static int do_enhanced(239,4960
static int count_enhanced(264,5471
static int save_enhanced(270,5620
char *rfc2047_decode_enhanced(rfc2047_decode_enhanced276,5767
void rfc2047_print(296,6184
static char *a_rfc2047_encode_str(a_rfc2047_encode_str305,6445
static void rfc2047_encode_header_do(307,6519
static char *a_rfc2047_encode_str(a_rfc2047_encode_str321,6926
static void count(364,7551
static void counts2(365,7587
static void save(366,7632
static void saves2(367,7667
char *rfc2047_encode_header(rfc2047_encode_header369,7712
static void count(384,8012
static void counts2(389,8069
static void save(397,8187
static void saves2(403,8259
int rfc2047_encode_callback(411,8375
static int count_char(532,10439
static int save_char(540,10547
char *rfc2047_encode_str(rfc2047_encode_str549,10671

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047.h,569
#define	rfc2047_h2,18
static const char rfc2047_h_rcsid[rfc2047_h_rcsid14,180
extern int rfc2047_decode(16,273
extern char *rfc2047_decode_simple(rfc2047_decode_simple20,388
extern char *rfc2047_decode_enhanced(rfc2047_decode_enhanced22,443
extern char *rfc2047_decode_unicode(rfc2047_decode_unicode31,664
#define	RFC2047_DECODE_DISCARD	35,771
#define RFC2047_DECODE_ABORT	37,866
void rfc2047_print(50,1100
char *rfc2047_encode_str(rfc2047_encode_str61,1436
int rfc2047_encode_callback(69,1687
char *rfc2047_encode_header(rfc2047_encode_header76,1898

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_getaddr.c,246
static void cntlen(12,210
static void saveaddr(18,286
char *rfc822_getaddr(rfc822_getaddr28,389
char *rfc822_getname(rfc822_getname43,689
char *rfc822_getname_orlist(rfc822_getname_orlist65,1102
char *rfc822_gettok(rfc822_gettok87,1536

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc2047u.c,327
static const char rcsid[rcsid16,242
struct decode_unicode_s 22,380
	const struct unicode_info *mychset;mychset23,406
	int options;24,443
	char *bufptr;bufptr26,458
	size_t bufsize;27,473
static void save_unicode_text(30,495
static int save_unicode(38,653
char *rfc2047_decode_unicode(rfc2047_decode_unicode78,1388

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imaprefs.c,1244
static void swapmsgdata(20,302
#define swap(27,425
#undef	swap36,647
struct imap_refmsgtable *rfc822_threadalloc(rfc822_threadalloc39,662
void rfc822_threadfree(49,862
static int hashmsgid(81,1441
#define	HMIDS	89,1561
#define	HHMIDSS	90,1619
struct imap_refmsg *rfc822_threadallocmsg(rfc822_threadallocmsg101,1785
struct imap_refmsg *rfc822_threadsearchmsg(rfc822_threadsearchmsg141,2567
static int findsubj(158,2883
static void linkparent(204,3655
static void breakparent(218,3918
static struct imap_refmsg *dorefcreate(dorefcreate230,4190
struct imap_refmsg *rfc822_threadmsg(rfc822_threadmsg376,7677
struct imap_refmsg *rfc822_threadgetroot(rfc822_threadgetroot449,9011
void rfc822_threadprune(481,9651
static int cmp_msgs(534,10671
int rfc822_threadsortsubj(536,10721
int rfc822_threadgathersubj(577,11804
int rfc822_threadmergesubj(684,13961
static int cmp_msgs(850,17736
struct imap_threadsortinfo 880,18237
	struct imap_refmsgtable *mt;mt881,18266
	struct imap_refmsg **sort_table;sort_table882,18296
	size_t sort_table_cnt;883,18330
static int dothreadsort(886,18359
int rfc822_threadsortbydate(889,18440
static int dothreadsort(905,18704
struct imap_refmsg *rfc822_thread(rfc822_thread947,19507

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imaprefs.h,1782
#define	imaprefs_h5,82
struct imap_refmsg 26,351
	struct imap_refmsg *next,next27,372
	struct imap_refmsg *next, *last;last27,372
	struct imap_refmsg *parent;parent28,434
	struct imap_refmsg *firstchild,firstchild29,480
	struct imap_refmsg *firstchild, *lastchild;lastchild29,480
	struct imap_refmsg *prevsib,prevsib30,550
	struct imap_refmsg *prevsib, *nextsib;nextsib30,550
	char isdummy;32,619
	char flag2;33,673
	char *msgid;msgid35,711
	char *subj;subj37,756
	time_t timestamp;38,808
	unsigned long seqnum;39,844
struct imap_refmsgtable 42,895
        struct imap_refmsg *firstmsg,firstmsg43,921
        struct imap_refmsg *firstmsg, *lastmsg;lastmsg43,921
        struct imap_refmsghash *hashtable[hashtable47,1042
        struct imap_subjlookup *subjtable[subjtable49,1091
        struct imap_refmsg *rootptr;rootptr51,1140
struct imap_refmsgtable *rfc822_threadalloc(rfc822_threadalloc54,1208
void rfc822_threadfree(55,1259
struct imap_refmsg *rfc822_threadmsg(rfc822_threadmsg56,1310
struct imap_refmsg *rfc822_thread(rfc822_thread63,1535
struct imap_refmsghash 68,1635
	struct imap_refmsghash *nexthash;nexthash69,1660
	struct imap_refmsg *msg;msg70,1695
struct imap_subjlookup 73,1726
	struct imap_subjlookup *nextsubj;nextsubj74,1751
	char *subj;subj75,1786
	struct imap_refmsg *msg;msg76,1799
	int msgisrefwd;77,1825
struct imap_refmsg *rfc822_threadallocmsg(rfc822_threadallocmsg80,1847
void rfc822_threadprune(82,1945
struct imap_refmsg *rfc822_threadgetroot(rfc822_threadgetroot83,1999
struct imap_refmsg *rfc822_threadsearchmsg(rfc822_threadsearchmsg84,2070
int rfc822_threadsortsubj(86,2170
int rfc822_threadgathersubj(87,2223
int rfc822_threadmergesubj(89,2312
int rfc822_threadsortbydate(91,2401

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822hdr.c,132
static const char rcsid[rcsid12,195
int rfc822hdr_read(18,317
void rfc822hdr_fixname(103,1453
void rfc822hdr_collapse(113,1585

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822hdr.h,368
#define	rfc822hdr_h5,84
static const char rfc822hdr_h_rcsid[rfc822hdr_h_rcsid12,198
struct rfc822hdr 26,464
	char *header;header27,483
	char *value;value28,498
	size_t hdrsize;30,513
	size_t maxsize;31,530
#define rfc822hdr_init(34,552
#define rfc822hdr_free(35,627
int rfc822hdr_read(38,713
void rfc822hdr_fixname(39,777
void rfc822hdr_collapse(40,821

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/testsuite.c,217
static const char rcsid[rcsid10,160
static void print_func(12,247
static void print_separator(18,311
static struct rfc822t *tokenize(tokenize24,392
static struct rfc822a *doaddr(doaddr49,938
int main(62,1225

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/imapsubj.c,271
#define	strcasecmp	19,302
#define	strncasecmp	25,365
static char *skipblob(skipblob30,425
static char *skipblobs(skipblobs54,687
static void stripsubj(68,848
char *rfc822_coresubj(rfc822_coresubj228,3458
char *rfc822_coresubj_nouc(rfc822_coresubj_nouc246,3781

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_getaddrs.c,257
static void cntlen(12,211
static void cntlensep(18,276
static void saveaddr(23,360
static void saveaddrsep(28,428
char *rfc822_getaddrs(rfc822_getaddrs33,516
static void saveaddrsep_wrap(48,828
char *rfc822_getaddrs_wrap(rfc822_getaddrs_wrap59,969

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/reftest.c,379
static void test1(29,396
static void prtree(50,912
static void prpc(71,1236
static void test2(84,1441
static void test3(106,1859
static void test4(133,2382
static void test5(155,2828
static void prsubj(173,3177
static void test6(185,3480
static void test7(225,4478
static void test8(246,5033
static void test9(284,5995
static void test10(322,6966
int main(351,7723

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_parsedt.c,475
static unsigned parsedig(22,428
static const char * const weekdays[weekdays34,580
static const char * const mnames[mnames38,675
#define	leap(43,809
static unsigned mlength[mlength47,890
#define	mdays(48,955
static const char * const zonenames[zonenames50,1022
#define	ZH(61,1271
static int zoneoffset[zoneoffset63,1304
static unsigned parsekey(74,1603
static int parsetime(92,1880
time_t rfc822_parsedt(113,2318
const char *rfc822_mkdt(rfc822_mkdt225,4334

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/rfc822/rfc822_mkdate.c,175
static const char * const months[months20,316
static const char * const wdays[wdays34,451
void rfc822_mkdate_buf(43,545
const char *rfc822_mkdate(rfc822_mkdate107,1384

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm864convert.c,112
unicode_char *unicode_ibm864_c2u(unicode_ibm864_c2u15,320
char *unicode_ibm864_u2c(unicode_ibm864_u2c48,782

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1250.c,454
static const unicode_char windows1250_unicode 10,183
static const char windows1250_uc 20,766
static const char windows1250_lc 54,3657
static const char windows1250_tc 88,6548
static unicode_char *c2u(c2u124,9441
static char *u2c(u2c129,9556
static char *toupper_func(toupper_func134,9671
static char *tolower_func(tolower_func139,9786
static char *totitle_func(totitle_func144,9901
const struct unicode_info unicode_WINDOWS_1250 149,10016

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1251.c,455
static const unicode_char windows1251_unicode 10,183
static const char windows1251_uc 20,869
static const char windows1251_lc 54,3760
static const char windows1251_tc 88,6651
static unicode_char *c2u(c2u124,9544
static char *u2c(u2c129,9659
static char *toupper_func(toupper_func134,9774
static char *tolower_func(tolower_func139,9889
static char *totitle_func(totitle_func144,10004
const struct unicode_info unicode_WINDOWS_1251 149,10119

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1252.c,454
static const unicode_char windows1252_unicode 10,183
static const char windows1252_uc 20,766
static const char windows1252_lc 54,3657
static const char windows1252_tc 88,6548
static unicode_char *c2u(c2u124,9441
static char *u2c(u2c129,9556
static char *toupper_func(toupper_func134,9671
static char *tolower_func(tolower_func139,9786
static char *totitle_func(totitle_func144,9901
const struct unicode_info unicode_WINDOWS_1252 149,10016

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1253.c,453
static const unicode_char windows1253_unicode 10,183
static const char windows1253_uc 20,743
static const char windows1253_lc 54,3634
static const char windows1253_tc 88,6525
static unicode_char *c2u(c2u124,9418
static char *u2c(u2c129,9533
static char *toupper_func(toupper_func134,9648
static char *tolower_func(tolower_func139,9763
static char *totitle_func(totitle_func144,9878
const struct unicode_info unicode_WINDOWS_1253 149,9993

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1254.c,454
static const unicode_char windows1254_unicode 10,183
static const char windows1254_uc 20,762
static const char windows1254_lc 54,3653
static const char windows1254_tc 88,6544
static unicode_char *c2u(c2u124,9437
static char *u2c(u2c129,9552
static char *toupper_func(toupper_func134,9667
static char *tolower_func(tolower_func139,9782
static char *totitle_func(totitle_func144,9897
const struct unicode_info unicode_WINDOWS_1254 149,10012

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1255.c,454
static const unicode_char windows1255_unicode 10,183
static const char windows1255_uc 20,784
static const char windows1255_lc 54,3675
static const char windows1255_tc 88,6566
static unicode_char *c2u(c2u124,9459
static char *u2c(u2c129,9574
static char *toupper_func(toupper_func134,9689
static char *tolower_func(tolower_func139,9804
static char *totitle_func(totitle_func144,9919
const struct unicode_info unicode_WINDOWS_1255 149,10034

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1256.c,454
static const unicode_char windows1256_unicode 10,183
static const char windows1256_uc 20,840
static const char windows1256_lc 54,3731
static const char windows1256_tc 88,6622
static unicode_char *c2u(c2u124,9515
static char *u2c(u2c129,9630
static char *toupper_func(toupper_func134,9745
static char *tolower_func(tolower_func139,9860
static char *totitle_func(totitle_func144,9975
const struct unicode_info unicode_WINDOWS_1256 149,10090

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1257.c,454
static const unicode_char windows1257_unicode 10,183
static const char windows1257_uc 20,752
static const char windows1257_lc 54,3643
static const char windows1257_tc 88,6534
static unicode_char *c2u(c2u124,9427
static char *u2c(u2c129,9542
static char *toupper_func(toupper_func134,9657
static char *tolower_func(tolower_func139,9772
static char *totitle_func(totitle_func144,9887
const struct unicode_info unicode_WINDOWS_1257 149,10002

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows1258.c,454
static const unicode_char windows1258_unicode 10,183
static const char windows1258_uc 20,759
static const char windows1258_lc 54,3650
static const char windows1258_tc 88,6541
static unicode_char *c2u(c2u124,9434
static char *u2c(u2c129,9549
static char *toupper_func(toupper_func134,9664
static char *tolower_func(tolower_func139,9779
static char *totitle_func(totitle_func144,9894
const struct unicode_info unicode_WINDOWS_1258 149,10009

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode_ultcase.c,316
extern const unsigned unicode_case_hash;11,202
extern const unicode_char unicode_case_tab[unicode_case_tab12,243
extern const unsigned unicode_case_offset[unicode_case_offset13,292
static unsigned find_case(15,338
unicode_char unicode_uc(35,616
unicode_char unicode_lc(42,754
unicode_char unicode_tc(49,892

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode2.c,196
char *unicode_toutf8(unicode_toutf814,254
unicode_char *unicode_fromutf8(unicode_fromutf819,339
char *unicode_ctoutf8(unicode_ctoutf824,424
char *unicode_cfromutf8(unicode_cfromutf840,677

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885910.c,443
static const unicode_char iso885910_unicode 10,181
static const char iso885910_uc 20,756
static const char iso885910_lc 54,3645
static const char iso885910_tc 88,6534
static unicode_char *c2u(c2u124,9425
static char *u2c(u2c129,9538
static char *toupper_func(toupper_func134,9651
static char *tolower_func(tolower_func139,9764
static char *totitle_func(totitle_func144,9877
const struct unicode_info unicode_ISO8859_10 149,9990

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885913.c,443
static const unicode_char iso885913_unicode 10,181
static const char iso885913_uc 20,759
static const char iso885913_lc 54,3648
static const char iso885913_tc 88,6537
static unicode_char *c2u(c2u124,9428
static char *u2c(u2c129,9541
static char *toupper_func(toupper_func134,9654
static char *tolower_func(tolower_func139,9767
static char *totitle_func(totitle_func144,9880
const struct unicode_info unicode_ISO8859_13 149,9993

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885914.c,444
static const unicode_char iso885914_unicode 10,181
static const char iso885914_uc 20,777
static const char iso885914_lc 54,3666
static const char iso885914_tc 88,6555
static unicode_char *c2u(c2u124,9446
static char *u2c(u2c129,9559
static char *toupper_func(toupper_func134,9672
static char *tolower_func(tolower_func139,9785
static char *totitle_func(totitle_func144,9898
const struct unicode_info unicode_ISO8859_14 149,10011

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso885915.c,443
static const unicode_char iso885915_unicode 10,181
static const char iso885915_uc 20,756
static const char iso885915_lc 54,3645
static const char iso885915_tc 88,6534
static unicode_char *c2u(c2u124,9425
static char *u2c(u2c129,9538
static char *toupper_func(toupper_func134,9651
static char *tolower_func(tolower_func139,9764
static char *totitle_func(totitle_func144,9877
const struct unicode_info unicode_ISO8859_15 149,9990

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm437.c,429
static const unicode_char ibm437_unicode 10,178
static const char ibm437_uc 20,811
static const char ibm437_lc 54,3697
static const char ibm437_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_437 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm775.c,428
static const unicode_char ibm775_unicode 10,178
static const char ibm775_uc 20,785
static const char ibm775_lc 54,3671
static const char ibm775_tc 88,6557
static unicode_char *c2u(c2u124,9445
static char *u2c(u2c129,9555
static char *toupper_func(toupper_func134,9665
static char *tolower_func(tolower_func139,9775
static char *totitle_func(totitle_func144,9885
const struct unicode_info unicode_IBM_775 149,9995

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm850.c,428
static const unicode_char ibm850_unicode 10,178
static const char ibm850_uc 20,779
static const char ibm850_lc 54,3665
static const char ibm850_tc 88,6551
static unicode_char *c2u(c2u124,9439
static char *u2c(u2c129,9549
static char *toupper_func(toupper_func134,9659
static char *tolower_func(tolower_func139,9769
static char *totitle_func(totitle_func144,9879
const struct unicode_info unicode_IBM_850 149,9989

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm852.c,428
static const unicode_char ibm852_unicode 10,178
static const char ibm852_uc 20,778
static const char ibm852_lc 54,3664
static const char ibm852_tc 88,6550
static unicode_char *c2u(c2u124,9438
static char *u2c(u2c129,9548
static char *toupper_func(toupper_func134,9658
static char *tolower_func(tolower_func139,9768
static char *totitle_func(totitle_func144,9878
const struct unicode_info unicode_IBM_852 149,9988

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm855.c,429
static const unicode_char ibm855_unicode 10,178
static const char ibm855_uc 20,871
static const char ibm855_lc 54,3757
static const char ibm855_tc 88,6643
static unicode_char *c2u(c2u124,9531
static char *u2c(u2c129,9641
static char *toupper_func(toupper_func134,9751
static char *tolower_func(tolower_func139,9861
static char *totitle_func(totitle_func144,9971
const struct unicode_info unicode_IBM_855 149,10081

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm857.c,428
static const unicode_char ibm857_unicode 10,178
static const char ibm857_uc 20,772
static const char ibm857_lc 54,3658
static const char ibm857_tc 88,6544
static unicode_char *c2u(c2u124,9432
static char *u2c(u2c129,9542
static char *toupper_func(toupper_func134,9652
static char *tolower_func(tolower_func139,9762
static char *totitle_func(totitle_func144,9872
const struct unicode_info unicode_IBM_857 149,9982

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm860.c,429
static const unicode_char ibm860_unicode 10,178
static const char ibm860_uc 20,810
static const char ibm860_lc 54,3696
static const char ibm860_tc 88,6582
static unicode_char *c2u(c2u124,9470
static char *u2c(u2c129,9580
static char *toupper_func(toupper_func134,9690
static char *tolower_func(tolower_func139,9800
static char *totitle_func(totitle_func144,9910
const struct unicode_info unicode_IBM_860 149,10020

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm861.c,429
static const unicode_char ibm861_unicode 10,178
static const char ibm861_uc 20,811
static const char ibm861_lc 54,3697
static const char ibm861_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_861 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm862.c,429
static const unicode_char ibm862_unicode 10,178
static const char ibm862_uc 20,838
static const char ibm862_lc 54,3724
static const char ibm862_tc 88,6610
static unicode_char *c2u(c2u124,9498
static char *u2c(u2c129,9608
static char *toupper_func(toupper_func134,9718
static char *tolower_func(tolower_func139,9828
static char *totitle_func(totitle_func144,9938
const struct unicode_info unicode_IBM_862 149,10048

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm863.c,429
static const unicode_char ibm863_unicode 10,178
static const char ibm863_uc 20,811
static const char ibm863_lc 54,3697
static const char ibm863_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_863 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm864.c,434
static const unicode_char ibm864_unicode 10,173
static const char ibm864_uc 28,1320
static const char ibm864_lc 62,4206
static const char ibm864_tc 96,7092
static unicode_char *c2u(c2u132,9980
static char *u2c(u2c137,10089
static char *toupper_func(toupper_func142,10198
static char *tolower_func(tolower_func147,10308
static char *totitle_func(totitle_func152,10418
const struct unicode_info unicode_IBM_864 157,10528

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm865.c,429
static const unicode_char ibm865_unicode 10,178
static const char ibm865_uc 20,811
static const char ibm865_lc 54,3697
static const char ibm865_tc 88,6583
static unicode_char *c2u(c2u124,9471
static char *u2c(u2c129,9581
static char *toupper_func(toupper_func134,9691
static char *tolower_func(tolower_func139,9801
static char *totitle_func(totitle_func144,9911
const struct unicode_info unicode_IBM_865 149,10021

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm866.c,429
static const unicode_char ibm866_unicode 10,178
static const char ibm866_uc 20,873
static const char ibm866_lc 54,3759
static const char ibm866_tc 88,6645
static unicode_char *c2u(c2u124,9533
static char *u2c(u2c129,9643
static char *toupper_func(toupper_func134,9753
static char *tolower_func(tolower_func139,9863
static char *totitle_func(totitle_func144,9973
const struct unicode_info unicode_IBM_866 149,10083

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/ibm869.c,428
static const unicode_char ibm869_unicode 10,178
static const char ibm869_uc 20,763
static const char ibm869_lc 54,3649
static const char ibm869_tc 88,6535
static unicode_char *c2u(c2u124,9423
static char *u2c(u2c129,9533
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9753
static char *totitle_func(totitle_func144,9863
const struct unicode_info unicode_IBM_869 149,9973

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows874u.c,60
char *unicode_windows874_u2c(unicode_windows874_u2c13,238

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf8_chset.c,189
static char *toupper_func(toupper_func19,392
static char *tolower_func(tolower_func34,628
static char *totitle_func(totitle_func49,864
const struct unicode_info unicode_UTF8 64,1100

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/gb2312.c,378
static const unicode_char * const gb2312[gb231213,231
static unicode_char *c2u(c2u87,1143
static unsigned revlookup(158,2061
static char *u2c(u2c182,2488
static char *toupper_func(toupper_func235,3172
static char *tolower_func(tolower_func259,3467
static char *totitle_func(totitle_func283,3762
const struct unicode_info unicode_GB2312 307,4057
int main(317,4179

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/gb2312.h,4356
static const unicode_char gb2312_b0[gb2312_b010,178
static const unicode_char gb2312_b1[gb2312_b116,790
static const unicode_char gb2312_b2[gb2312_b222,1402
static const unicode_char gb2312_b3[gb2312_b328,2014
static const unicode_char gb2312_b4[gb2312_b434,2626
static const unicode_char gb2312_b5[gb2312_b540,3238
static const unicode_char gb2312_b6[gb2312_b646,3850
static const unicode_char gb2312_b7[gb2312_b752,4462
static const unicode_char gb2312_b8[gb2312_b858,5074
static const unicode_char gb2312_b9[gb2312_b964,5686
static const unicode_char gb2312_ba[gb2312_ba70,6298
static const unicode_char gb2312_bb[gb2312_bb76,6910
static const unicode_char gb2312_bc[gb2312_bc82,7522
static const unicode_char gb2312_bd[gb2312_bd88,8134
static const unicode_char gb2312_be[gb2312_be94,8746
static const unicode_char gb2312_bf[gb2312_bf100,9358
static const unicode_char gb2312_c0[gb2312_c0106,9970
static const unicode_char gb2312_c1[gb2312_c1112,10582
static const unicode_char gb2312_c2[gb2312_c2118,11194
static const unicode_char gb2312_c3[gb2312_c3124,11806
static const unicode_char gb2312_c4[gb2312_c4130,12418
static const unicode_char gb2312_c5[gb2312_c5136,13030
static const unicode_char gb2312_c6[gb2312_c6142,13642
static const unicode_char gb2312_c7[gb2312_c7148,14254
static const unicode_char gb2312_c8[gb2312_c8154,14866
static const unicode_char gb2312_c9[gb2312_c9160,15478
static const unicode_char gb2312_ca[gb2312_ca166,16090
static const unicode_char gb2312_cb[gb2312_cb172,16702
static const unicode_char gb2312_cc[gb2312_cc178,17314
static const unicode_char gb2312_cd[gb2312_cd184,17926
static const unicode_char gb2312_ce[gb2312_ce190,18538
static const unicode_char gb2312_cf[gb2312_cf196,19150
static const unicode_char gb2312_d0[gb2312_d0202,19762
static const unicode_char gb2312_d1[gb2312_d1208,20374
static const unicode_char gb2312_d2[gb2312_d2214,20986
static const unicode_char gb2312_d3[gb2312_d3220,21598
static const unicode_char gb2312_d4[gb2312_d4226,22210
static const unicode_char gb2312_d5[gb2312_d5232,22822
static const unicode_char gb2312_d6[gb2312_d6238,23434
static const unicode_char gb2312_d7[gb2312_d7244,24046
static const unicode_char gb2312_d8[gb2312_d8250,24638
static const unicode_char gb2312_d9[gb2312_d9256,25250
static const unicode_char gb2312_da[gb2312_da262,25862
static const unicode_char gb2312_db[gb2312_db268,26474
static const unicode_char gb2312_dc[gb2312_dc274,27086
static const unicode_char gb2312_dd[gb2312_dd280,27698
static const unicode_char gb2312_de[gb2312_de286,28310
static const unicode_char gb2312_df[gb2312_df292,28922
static const unicode_char gb2312_e0[gb2312_e0298,29534
static const unicode_char gb2312_e1[gb2312_e1304,30146
static const unicode_char gb2312_e2[gb2312_e2310,30758
static const unicode_char gb2312_e3[gb2312_e3316,31370
static const unicode_char gb2312_e4[gb2312_e4322,31982
static const unicode_char gb2312_e5[gb2312_e5328,32594
static const unicode_char gb2312_e6[gb2312_e6334,33206
static const unicode_char gb2312_e7[gb2312_e7340,33818
static const unicode_char gb2312_e8[gb2312_e8346,34430
static const unicode_char gb2312_e9[gb2312_e9352,35042
static const unicode_char gb2312_ea[gb2312_ea358,35654
static const unicode_char gb2312_eb[gb2312_eb364,36266
static const unicode_char gb2312_ec[gb2312_ec370,36878
static const unicode_char gb2312_ed[gb2312_ed376,37490
static const unicode_char gb2312_ee[gb2312_ee382,38102
static const unicode_char gb2312_ef[gb2312_ef388,38714
static const unicode_char gb2312_f0[gb2312_f0394,39326
static const unicode_char gb2312_f1[gb2312_f1400,39938
static const unicode_char gb2312_f2[gb2312_f2406,40550
static const unicode_char gb2312_f3[gb2312_f3412,41162
static const unicode_char gb2312_f4[gb2312_f4418,41774
static const unicode_char gb2312_f5[gb2312_f5424,42386
static const unicode_char gb2312_f6[gb2312_f6430,42998
static const unicode_char gb2312_f7[gb2312_f7436,43610
static const unsigned gb2312_revhash_size=442,44222
static const unicode_char gb2312_revtable_uc[gb2312_revtable_uc443,44270
static const unsigned gb2312_revtable_octets[gb2312_revtable_octets867,85321
static const unsigned gb2312_revtable_index[gb2312_revtable_index1291,126372

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/xtest.c,315
extern const struct unicode_info unicode_ISO8859_1;15,231
static unicode_char *c2u(c2u17,284
static char *u2c(u2c28,497
static char *toupper_func(toupper_func40,703
static char *tolower_func(tolower_func45,813
static char *totitle_func(totitle_func50,923
const struct unicode_info unicode_XTEST 55,1033

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode.c,399
const char *unicode_default_chset(unicode_default_chset15,272
const struct unicode_info *unicode_find(unicode_find25,416
char *unicode_convert(unicode_convert55,923
char *unicode_convert_fromchset(unicode_convert_fromchset84,1344
struct ux_buf 101,1664
	char *buffer;buffer102,1680
	size_t bufsize;103,1695
static int ux_alloc(106,1717
char *unicode_xconvert(unicode_xconvert125,1964

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode.h,1931
#define	unicode_h2,18
typedef wchar_t unicode_char;28,385
struct unicode_info 30,416
	const char *chset;chset31,438
	unicode_char *(*c2u)c2u32,488
	char *(*u2c)u2c35,593
	char *(*toupper_func)toupper_func40,778
	char *(*tolower_func)tolower_func41,823
	char *(*totitle_func)totitle_func42,868
extern const struct unicode_info unicode_ISO8859_1;45,919
extern const struct unicode_info unicode_UTF8;46,971
extern char *unicode_iso8859_u2c(unicode_iso8859_u2c48,1019
extern char *unicode_windows874_u2c(unicode_windows874_u2c51,1106
extern unicode_char *unicode_iso8859_c2u(unicode_iso8859_c2u56,1249
extern char *unicode_iso8859_convert(unicode_iso8859_convert59,1340
unicode_char *unicode_ibm864_c2u(unicode_ibm864_c2u64,1460
char *unicode_ibm864_u2c(unicode_ibm864_u2c67,1543
struct unicode_chsetlist 71,1626
	const char *chsetname;chsetname72,1653
	const struct unicode_info *ptr;ptr73,1677
extern const struct unicode_chsetlist unicode_chsetlist[unicode_chsetlist76,1716
extern const char *unicode_default_chset(unicode_default_chset77,1775
extern const struct unicode_info *unicode_find(unicode_find78,1819
extern char *unicode_toutf8(unicode_toutf886,1945
extern unicode_char *unicode_fromutf8(unicode_fromutf887,1996
extern unicode_char unicode_uc(91,2110
extern unicode_char unicode_lc(92,2156
extern unicode_char unicode_tc(93,2202
extern char *unicode_ctoutf8(unicode_ctoutf897,2288
extern char *unicode_cfromutf8(unicode_cfromutf899,2376
extern unicode_char *unicode_utf8_tou(unicode_utf8_tou104,2497
extern char *unicode_utf8_fromu(unicode_utf8_fromu105,2557
extern char *unicode_convert(unicode_convert109,2669
extern char *unicode_xconvert(unicode_xconvert114,2854
extern char *unicode_convert_fromchset(unicode_convert_fromchset122,3129
unicode_char *unicode_modutf7touc(unicode_modutf7touc135,3514
char *unicode_uctomodutf7(unicode_uctomodutf7140,3717

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/koi8r.c,415
static const unicode_char koi8_tab 10,172
static const char koi8_uc 20,859
static const char koi8_lc 54,3743
static const char koi8_tc 88,6627
static unicode_char *c2u(c2u124,9513
static char *u2c(u2c129,9617
static char *toupper_func(toupper_func134,9721
static char *tolower_func(tolower_func139,9829
static char *totitle_func(totitle_func144,9937
const struct unicode_info unicode_KOI8R 149,10045

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/windows874.c,449
static const unicode_char windows874_unicode 10,182
static const char windows874_uc 20,791
static const char windows874_lc 54,3681
static const char windows874_tc 88,6571
static unicode_char *c2u(c2u124,9463
static char *u2c(u2c129,9577
static char *toupper_func(toupper_func134,9694
static char *tolower_func(tolower_func139,9808
static char *totitle_func(totitle_func144,9922
const struct unicode_info unicode_WINDOWS_874 149,10036

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf7imap.c,363
static const char rcsid[rcsid12,178
static const char mbase64[mbase6414,262
static char mbase64_lookup[mbase64_lookup16,359
static int mbase64_lookup_init=17,392
unicode_char *unicode_modutf7touc(unicode_modutf7touc19,427
static size_t uctoutf7_pass(106,1765
char *unicode_uctomodutf7(unicode_uctomodutf7108,1825
static size_t uctoutf7_pass(118,1978

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/big5.c,447
static const unicode_char * const big5fwdlo[big5fwdlo13,227
static const unicode_char * const big5fwdhi[big5fwdhi104,1411
static unicode_char *c2u(c2u195,2595
static unsigned revlookup(279,3840
static char *u2c(u2c303,4253
static char *toupper_func(toupper_func356,4937
static char *tolower_func(tolower_func380,5232
static char *totitle_func(totitle_func404,5527
const struct unicode_info unicode_BIG5 428,5822
int main(438,5940

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/big5.h,10271
static const unicode_char big5_a2_lo[big5_a2_lo10,171
static const unicode_char big5_a2_hi[big5_a2_hi15,383
static const unicode_char big5_a4_lo[big5_a4_lo22,625
static const unicode_char big5_a4_hi[big5_a4_hi27,1053
static const unicode_char big5_a5_lo[big5_a5_lo34,1667
static const unicode_char big5_a5_hi[big5_a5_hi39,2095
static const unicode_char big5_a6_lo[big5_a6_lo46,2709
static const unicode_char big5_a6_hi[big5_a6_hi51,3137
static const unicode_char big5_a7_lo[big5_a7_lo58,3751
static const unicode_char big5_a7_hi[big5_a7_hi63,4179
static const unicode_char big5_a8_lo[big5_a8_lo70,4793
static const unicode_char big5_a8_hi[big5_a8_hi75,5221
static const unicode_char big5_a9_lo[big5_a9_lo82,5835
static const unicode_char big5_a9_hi[big5_a9_hi87,6263
static const unicode_char big5_aa_lo[big5_aa_lo94,6877
static const unicode_char big5_aa_hi[big5_aa_hi99,7305
static const unicode_char big5_ab_lo[big5_ab_lo106,7919
static const unicode_char big5_ab_hi[big5_ab_hi111,8347
static const unicode_char big5_ac_lo[big5_ac_lo118,8961
static const unicode_char big5_ac_hi[big5_ac_hi123,9389
static const unicode_char big5_ad_lo[big5_ad_lo130,10003
static const unicode_char big5_ad_hi[big5_ad_hi135,10431
static const unicode_char big5_ae_lo[big5_ae_lo142,11045
static const unicode_char big5_ae_hi[big5_ae_hi147,11473
static const unicode_char big5_af_lo[big5_af_lo154,12087
static const unicode_char big5_af_hi[big5_af_hi159,12515
static const unicode_char big5_b0_lo[big5_b0_lo166,13129
static const unicode_char big5_b0_hi[big5_b0_hi171,13557
static const unicode_char big5_b1_lo[big5_b1_lo178,14171
static const unicode_char big5_b1_hi[big5_b1_hi183,14599
static const unicode_char big5_b2_lo[big5_b2_lo190,15213
static const unicode_char big5_b2_hi[big5_b2_hi195,15641
static const unicode_char big5_b3_lo[big5_b3_lo202,16255
static const unicode_char big5_b3_hi[big5_b3_hi207,16683
static const unicode_char big5_b4_lo[big5_b4_lo214,17297
static const unicode_char big5_b4_hi[big5_b4_hi219,17725
static const unicode_char big5_b5_lo[big5_b5_lo226,18339
static const unicode_char big5_b5_hi[big5_b5_hi231,18767
static const unicode_char big5_b6_lo[big5_b6_lo238,19381
static const unicode_char big5_b6_hi[big5_b6_hi243,19809
static const unicode_char big5_b7_lo[big5_b7_lo250,20423
static const unicode_char big5_b7_hi[big5_b7_hi255,20851
static const unicode_char big5_b8_lo[big5_b8_lo262,21465
static const unicode_char big5_b8_hi[big5_b8_hi267,21893
static const unicode_char big5_b9_lo[big5_b9_lo274,22507
static const unicode_char big5_b9_hi[big5_b9_hi279,22935
static const unicode_char big5_ba_lo[big5_ba_lo286,23549
static const unicode_char big5_ba_hi[big5_ba_hi291,23977
static const unicode_char big5_bb_lo[big5_bb_lo298,24591
static const unicode_char big5_bb_hi[big5_bb_hi303,25019
static const unicode_char big5_bc_lo[big5_bc_lo310,25633
static const unicode_char big5_bc_hi[big5_bc_hi315,26061
static const unicode_char big5_bd_lo[big5_bd_lo322,26675
static const unicode_char big5_bd_hi[big5_bd_hi327,27103
static const unicode_char big5_be_lo[big5_be_lo334,27717
static const unicode_char big5_be_hi[big5_be_hi339,28145
static const unicode_char big5_bf_lo[big5_bf_lo346,28759
static const unicode_char big5_bf_hi[big5_bf_hi351,29187
static const unicode_char big5_c0_lo[big5_c0_lo358,29801
static const unicode_char big5_c0_hi[big5_c0_hi363,30229
static const unicode_char big5_c1_lo[big5_c1_lo370,30843
static const unicode_char big5_c1_hi[big5_c1_hi375,31271
static const unicode_char big5_c2_lo[big5_c2_lo382,31885
static const unicode_char big5_c2_hi[big5_c2_hi387,32313
static const unicode_char big5_c3_lo[big5_c3_lo394,32927
static const unicode_char big5_c3_hi[big5_c3_hi399,33355
static const unicode_char big5_c4_lo[big5_c4_lo406,33969
static const unicode_char big5_c4_hi[big5_c4_hi411,34397
static const unicode_char big5_c5_lo[big5_c5_lo418,35011
static const unicode_char big5_c5_hi[big5_c5_hi423,35439
static const unicode_char big5_c6_lo[big5_c6_lo430,36053
static const unicode_char big5_c6_hi[big5_c6_hi435,36481
static const unicode_char big5_c9_lo[big5_c9_lo442,36719
static const unicode_char big5_c9_hi[big5_c9_hi447,37147
static const unicode_char big5_ca_lo[big5_ca_lo454,37761
static const unicode_char big5_ca_hi[big5_ca_hi459,38189
static const unicode_char big5_cb_lo[big5_cb_lo466,38803
static const unicode_char big5_cb_hi[big5_cb_hi471,39231
static const unicode_char big5_cc_lo[big5_cc_lo478,39845
static const unicode_char big5_cc_hi[big5_cc_hi483,40273
static const unicode_char big5_cd_lo[big5_cd_lo490,40887
static const unicode_char big5_cd_hi[big5_cd_hi495,41315
static const unicode_char big5_ce_lo[big5_ce_lo502,41929
static const unicode_char big5_ce_hi[big5_ce_hi507,42357
static const unicode_char big5_cf_lo[big5_cf_lo514,42971
static const unicode_char big5_cf_hi[big5_cf_hi519,43399
static const unicode_char big5_d0_lo[big5_d0_lo526,44013
static const unicode_char big5_d0_hi[big5_d0_hi531,44441
static const unicode_char big5_d1_lo[big5_d1_lo538,45055
static const unicode_char big5_d1_hi[big5_d1_hi543,45483
static const unicode_char big5_d2_lo[big5_d2_lo550,46097
static const unicode_char big5_d2_hi[big5_d2_hi555,46525
static const unicode_char big5_d3_lo[big5_d3_lo562,47139
static const unicode_char big5_d3_hi[big5_d3_hi567,47567
static const unicode_char big5_d4_lo[big5_d4_lo574,48181
static const unicode_char big5_d4_hi[big5_d4_hi579,48609
static const unicode_char big5_d5_lo[big5_d5_lo586,49223
static const unicode_char big5_d5_hi[big5_d5_hi591,49651
static const unicode_char big5_d6_lo[big5_d6_lo598,50265
static const unicode_char big5_d6_hi[big5_d6_hi603,50693
static const unicode_char big5_d7_lo[big5_d7_lo610,51307
static const unicode_char big5_d7_hi[big5_d7_hi615,51735
static const unicode_char big5_d8_lo[big5_d8_lo622,52349
static const unicode_char big5_d8_hi[big5_d8_hi627,52777
static const unicode_char big5_d9_lo[big5_d9_lo634,53391
static const unicode_char big5_d9_hi[big5_d9_hi639,53819
static const unicode_char big5_da_lo[big5_da_lo646,54433
static const unicode_char big5_da_hi[big5_da_hi651,54861
static const unicode_char big5_db_lo[big5_db_lo658,55475
static const unicode_char big5_db_hi[big5_db_hi663,55903
static const unicode_char big5_dc_lo[big5_dc_lo670,56517
static const unicode_char big5_dc_hi[big5_dc_hi675,56945
static const unicode_char big5_dd_lo[big5_dd_lo682,57559
static const unicode_char big5_dd_hi[big5_dd_hi687,57987
static const unicode_char big5_de_lo[big5_de_lo694,58601
static const unicode_char big5_de_hi[big5_de_hi699,59029
static const unicode_char big5_df_lo[big5_df_lo706,59643
static const unicode_char big5_df_hi[big5_df_hi711,60071
static const unicode_char big5_e0_lo[big5_e0_lo718,60685
static const unicode_char big5_e0_hi[big5_e0_hi723,61113
static const unicode_char big5_e1_lo[big5_e1_lo730,61727
static const unicode_char big5_e1_hi[big5_e1_hi735,62155
static const unicode_char big5_e2_lo[big5_e2_lo742,62769
static const unicode_char big5_e2_hi[big5_e2_hi747,63197
static const unicode_char big5_e3_lo[big5_e3_lo754,63811
static const unicode_char big5_e3_hi[big5_e3_hi759,64239
static const unicode_char big5_e4_lo[big5_e4_lo766,64853
static const unicode_char big5_e4_hi[big5_e4_hi771,65281
static const unicode_char big5_e5_lo[big5_e5_lo778,65895
static const unicode_char big5_e5_hi[big5_e5_hi783,66323
static const unicode_char big5_e6_lo[big5_e6_lo790,66937
static const unicode_char big5_e6_hi[big5_e6_hi795,67365
static const unicode_char big5_e7_lo[big5_e7_lo802,67979
static const unicode_char big5_e7_hi[big5_e7_hi807,68407
static const unicode_char big5_e8_lo[big5_e8_lo814,69021
static const unicode_char big5_e8_hi[big5_e8_hi819,69449
static const unicode_char big5_e9_lo[big5_e9_lo826,70063
static const unicode_char big5_e9_hi[big5_e9_hi831,70491
static const unicode_char big5_ea_lo[big5_ea_lo838,71105
static const unicode_char big5_ea_hi[big5_ea_hi843,71533
static const unicode_char big5_eb_lo[big5_eb_lo850,72147
static const unicode_char big5_eb_hi[big5_eb_hi855,72575
static const unicode_char big5_ec_lo[big5_ec_lo862,73189
static const unicode_char big5_ec_hi[big5_ec_hi867,73617
static const unicode_char big5_ed_lo[big5_ed_lo874,74231
static const unicode_char big5_ed_hi[big5_ed_hi879,74659
static const unicode_char big5_ee_lo[big5_ee_lo886,75273
static const unicode_char big5_ee_hi[big5_ee_hi891,75701
static const unicode_char big5_ef_lo[big5_ef_lo898,76315
static const unicode_char big5_ef_hi[big5_ef_hi903,76743
static const unicode_char big5_f0_lo[big5_f0_lo910,77357
static const unicode_char big5_f0_hi[big5_f0_hi915,77785
static const unicode_char big5_f1_lo[big5_f1_lo922,78399
static const unicode_char big5_f1_hi[big5_f1_hi927,78827
static const unicode_char big5_f2_lo[big5_f2_lo934,79441
static const unicode_char big5_f2_hi[big5_f2_hi939,79869
static const unicode_char big5_f3_lo[big5_f3_lo946,80483
static const unicode_char big5_f3_hi[big5_f3_hi951,80911
static const unicode_char big5_f4_lo[big5_f4_lo958,81525
static const unicode_char big5_f4_hi[big5_f4_hi963,81953
static const unicode_char big5_f5_lo[big5_f5_lo970,82567
static const unicode_char big5_f5_hi[big5_f5_hi975,82995
static const unicode_char big5_f6_lo[big5_f6_lo982,83609
static const unicode_char big5_f6_hi[big5_f6_hi987,84037
static const unicode_char big5_f7_lo[big5_f7_lo994,84651
static const unicode_char big5_f7_hi[big5_f7_hi999,85079
static const unicode_char big5_f8_lo[big5_f8_lo1006,85693
static const unicode_char big5_f8_hi[big5_f8_hi1011,86121
static const unicode_char big5_f9_lo[big5_f9_lo1018,86735
static const unicode_char big5_f9_hi[big5_f9_hi1023,87163
static const unsigned big5_revhash_size=1030,87613
static const unicode_char big5_revtable_uc[big5_revtable_uc1031,87659
static const unsigned big5_revtable_octets[big5_revtable_octets1849,166902
static const unsigned big5_revtable_index[big5_revtable_index2667,246145

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88591.c,438
static const unicode_char iso88591_unicode 10,180
static const char iso88591_uc 20,753
static const char iso88591_lc 54,3641
static const char iso88591_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_1 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88592.c,438
static const unicode_char iso88592_unicode 10,180
static const char iso88592_uc 20,753
static const char iso88592_lc 54,3641
static const char iso88592_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_2 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88593.c,438
static const unicode_char iso88593_unicode 10,180
static const char iso88593_uc 20,739
static const char iso88593_lc 54,3627
static const char iso88593_tc 88,6515
static unicode_char *c2u(c2u124,9405
static char *u2c(u2c129,9517
static char *toupper_func(toupper_func134,9629
static char *tolower_func(tolower_func139,9741
static char *totitle_func(totitle_func144,9853
const struct unicode_info unicode_ISO8859_3 149,9965

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88594.c,438
static const unicode_char iso88594_unicode 10,180
static const char iso88594_uc 20,753
static const char iso88594_lc 54,3641
static const char iso88594_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_4 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88595.c,439
static const unicode_char iso88595_unicode 10,180
static const char iso88595_uc 20,846
static const char iso88595_lc 54,3734
static const char iso88595_tc 88,6622
static unicode_char *c2u(c2u124,9512
static char *u2c(u2c129,9624
static char *toupper_func(toupper_func134,9736
static char *tolower_func(tolower_func139,9848
static char *totitle_func(totitle_func144,9960
const struct unicode_info unicode_ISO8859_5 149,10072

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88596.c,438
static const unicode_char iso88596_unicode 10,180
static const char iso88596_uc 20,711
static const char iso88596_lc 54,3599
static const char iso88596_tc 88,6487
static unicode_char *c2u(c2u124,9377
static char *u2c(u2c129,9489
static char *toupper_func(toupper_func134,9601
static char *tolower_func(tolower_func139,9713
static char *totitle_func(totitle_func144,9825
const struct unicode_info unicode_ISO8859_6 149,9937

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88597.c,438
static const unicode_char iso88597_unicode 10,180
static const char iso88597_uc 20,744
static const char iso88597_lc 54,3632
static const char iso88597_tc 88,6520
static unicode_char *c2u(c2u124,9410
static char *u2c(u2c129,9522
static char *toupper_func(toupper_func134,9634
static char *tolower_func(tolower_func139,9746
static char *totitle_func(totitle_func144,9858
const struct unicode_info unicode_ISO8859_7 149,9970

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88598.c,438
static const unicode_char iso88598_unicode 10,180
static const char iso88598_uc 20,711
static const char iso88598_lc 54,3599
static const char iso88598_tc 88,6487
static unicode_char *c2u(c2u124,9377
static char *u2c(u2c129,9489
static char *toupper_func(toupper_func134,9601
static char *tolower_func(tolower_func139,9713
static char *totitle_func(totitle_func144,9825
const struct unicode_info unicode_ISO8859_8 149,9937

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso88599.c,438
static const unicode_char iso88599_unicode 10,180
static const char iso88599_uc 20,753
static const char iso88599_lc 54,3641
static const char iso88599_tc 88,6529
static unicode_char *c2u(c2u124,9419
static char *u2c(u2c129,9531
static char *toupper_func(toupper_func134,9643
static char *tolower_func(tolower_func139,9755
static char *totitle_func(totitle_func144,9867
const struct unicode_info unicode_ISO8859_9 149,9979

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicodeinfo.c,17
int main(14,259

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso8859.c,116
unicode_char *unicode_iso8859_c2u(unicode_iso8859_c2u15,287
char *unicode_iso8859_u2c(unicode_iso8859_u2c49,782

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/unicode_ultcasetab.c,168
const unsigned unicode_case_hash=10,185
const unicode_char unicode_case_tab[unicode_case_tab12,254
const unsigned unicode_case_offset[unicode_case_offset384,45263

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/utf8.c,110
unicode_char *unicode_utf8_tou(unicode_utf8_tou14,231
char *unicode_utf8_fromu(unicode_utf8_fromu186,3071

/emcsvn/emc/emcmailer/trunk/courier_deliver/courier_deps/unicode/iso8859_convert.c,62
char *unicode_iso8859_convert(unicode_iso8859_convert14,243

/emcsvn/emc/emcmailer/trunk/courier_deliver/util.c,289
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
void aka_logger(14,265
sortem 63,1645
add_bounce 82,2034
add_pop 114,3225
add_forward 138,4098
aka_exit 162,4783
memerror2 215,6046
mserror2 222,6119
void put_date 232,6396
int read_env(323,7852

/emcsvn/emc/emcmailer/trunk/courier_deliver/dagent-courier.c,809
static char *rcsid rcsid6,293
static void use_rcsid(7,379
#define MYBUFSIZE 27,760
void usage(29,784
struct delivery *get_delivery_info(get_delivery_info30,802
char *decode_address(decode_address31,865
int make_maildirfolder(32,903
int init_config(34,949
struct delivery 87,3051
	char *mailbox;mailbox88,3069
	char *address;address89,3085
	char *maildir;maildir90,3101
long dodeliver(93,3121
char *get_delivery_maildir(get_delivery_maildir94,3176
char *get_quota(get_quota95,3226
int main 97,3267
char *get_quota(get_quota335,9966
char *get_delivery_maildir(get_delivery_maildir409,12085
void usage(452,12998
int make_maildirfolder(458,13090
long dodeliver(512,14497
struct delivery *get_delivery_info(get_delivery_info580,15656
char *decode_address(decode_address607,16110

/emcsvn/emc/emcmailer/trunk/courier_deliver/archive_deliver.c,444
static char *rcsid rcsid1,0
static void use_rcsid(2,87
#define _GNU_SOURCE8,195
char *msgid msgid27,638
int debugmode 28,656
struct delivery 31,693
	char *mailbox;mailbox32,711
	char *address;address33,727
	char *maildir;maildir34,743
static char *decode_address(decode_address37,763
static struct delivery *get_delivery_info(get_delivery_info78,1466
static int crchash(101,1952
int archive_mail(145,2788
int main 316,7736

/emcsvn/emc/emcmailer/trunk/qworker_main.c,275
static char *rcsid rcsid1,0
static void use_rcsid(2,84
qworker_options qe_opts;21,398
#define BUFFER_SIZE 23,424
EmcConfig * config 25,455
char * msgid 28,506
long host_id 29,527
int debugmode 30,546
int pretendmode 31,565
int outboundmode 32,586
int main(34,609

/emcsvn/emc/emcmailer/trunk/libemcqfile/libemcqfile.h,12790
#define LIB_Q_FILE_H2,21
#define _GNU_SOURCE5,63
#define MY_TYPE 18,266
#define CREATE_TRANSACTION_FILE 20,290
#define DELETE_TRANSACTION_FILE 21,334
int read_lock(23,379
int readw_lock(24,429
int write_lock(25,480
int writew_lock(26,531
int unlock_file(27,583
typedef struct QFileImpl_t 30,637
	EmcConfig * config;31,666
	const char * root_dir;32,687
	const char * fdb_dir;33,711
	MYSQL akadb;34,734
} QFileImpl;35,748
typedef struct EmcQEntry_t 37,762
	char * _sender;38,791
	char * _recipient;39,808
	char * _msgid;40,828
	long	 _inode;41,844
	char * _status;42,859
	int	 _lock;43,876
	long	 _time;44,889
	char * _file;45,903
	char * _host;46,918
	int    _outbound;47,933
	char * _qentry_file;48,952
	long   _offset;49,974
	long   _last_retry;50,991
	long   _magic;51,1012
	QFileImpl * _impl;52,1028
} EmcQEntry;53,1048
typedef struct EmcAList_t 55,1062
	long	 _qnum;56,1090
	long	 _alnum;57,1104
	char *  _msgid;58,1119
	long	 _inode;59,1136
	char *  _file;60,1151
	char *  _recipient;61,1167
	char *  _sender;62,1188
	int	  _level;63,1206
	int	  _allow_ext;64,1221
	char *  _data;65,1240
	char *  _status;66,1256
	int	 _lock;67,1274
	long   _last_retry;68,1287
	char * _qentry_file;69,1308
	char * _alist_file;70,1330
	QFileImpl * _impl;71,1351
} EmcAList;72,1371
typedef struct EmcAEntry_t 74,1384
	long	 _qnum;75,1413
	long	 _alnum;76,1427
	char *  _msgid;77,1442
	char *  _recipient;78,1459
	char *  _local;79,1480
	char *  _domain;80,1497
	char *  _sender;81,1515
	int	  _itemnum;82,1533
	char *  _action;83,1550
	char *  _data;84,1568
	char *  _status;85,1584
	int	  _retry_times;86,1602
	long	 _last_retry;87,1623
	char *  _last_error;88,1643
	char * _qentry_file;89,1665
	char * _alist_file;90,1687
	char * _aentry_file;91,1708
	QFileImpl * _impl;92,1730
} EmcAEntry;93,1750
typedef struct EmcHeader_t 96,1765
	long	 _qnum;97,1794
	long	 _alnum;98,1808
	long   _inode;99,1823
	char * _file;100,1839
	char * _header;101,1854
	char * _qentry_file;102,1871
	char * _alist_file;103,1893
	char * _header_file;104,1914
	QFileImpl * _impl;105,1936
} EmcHeader;106,1956
typedef struct EmcHint_t 108,1970
	char * _msgid;109,1997
	long	 _inode;110,2013
	char * _agent;111,2028
	char * _key;112,2044
	char * _hint;113,2058
	char * _hint_file;114,2073
	QFileImpl * _impl;115,2093
} EmcHint;116,2113
typedef struct EmcHostedEntry_t 118,2125
	long   _qnum;119,2159
	long   _alnum;120,2174
	char * _msgid;121,2190
	char * _recipient;122,2206
	char * _sender;123,2226
	long   _inode;124,2243
	char * _file;125,2259
	char * _data;126,2274
	char * _status;127,2289
	int	  _retry_times;128,2306
	long	 _last_retry;129,2327
	char *  _last_error;130,2347
	char * _qentry_file;131,2369
	char * _alist_file;132,2391
	char * _hosted_file;133,2412
	QFileImpl * _impl;134,2434
} EmcHostedEntry;135,2454
typedef struct EmcExternalEntry_t 137,2473
	long   _qnum;138,2509
	long   _alnum;139,2524
	char * _msgid;140,2540
	char * _recipient;141,2556
	char * _sender;142,2576
	long   _inode;143,2593
	char * _file;144,2609
	char * _data;145,2624
	char * _status;146,2639
	char * _rhost;147,2656
	int	  _retry_times;148,2672
	long	 _last_retry;149,2693
	char * _last_error;150,2713
	char * _qentry_file;151,2734
	char * _alist_file;152,2756
	char * _external_file;153,2777
	QFileImpl * _impl;154,2801
} EmcExternalEntry;155,2821
typedef EmcQEntry *			EmcQEntryArray;157,2842
typedef EmcAList *			EmcAListArray;158,2880
typedef EmcAEntry *			EmcAEntryArray;159,2916
typedef EmcHeader *			EmcHeaderArray;160,2954
typedef EmcHostedEntry* 	EmcHostedEntryArray;161,2992
typedef EmcExternalEntry* 	EmcExternalEntryArray;162,3038
QFileImpl * l_init_impl(166,3116
QFileImpl * l_init_impl2(167,3163
char * mysql_quote(168,3231
void p_qentry_init(172,3303
const char * l_qentry_get_sender(179,3433
const char * l_qentry_get_recipient(180,3489
const char * l_qentry_get_message_id(181,3548
long l_qentry_get_qnum(182,3608
long l_qentry_get_inode(183,3654
const char * l_qentry_get_status(184,3701
int l_qentry_get_lock(185,3757
long l_qentry_get_time(186,3802
long l_qentry_get_last_retry(187,3848
const char * l_qentry_get_filename(188,3900
const char * l_qentry_get_host(189,3958
int l_qentry_is_outbound(190,4012
QFileImpl * l_qentry_get_impl(191,4060
void l_qentry_set_impl(192,4113
void l_qentry_set_error(193,4177
EmcQEntry * l_qentry_dup(194,4244
EmcQEntry * l_qentry_create 195,4285
EmcQEntry * l_qentry_create_with_data 202,4442
EmcQEntry * l_qentry_create_real 211,4638
char * l_qentry_serialize(221,4848
EmcQEntry * l_qentry_deserialize(222,4915
int l_qentry_remove(223,4990
void l_qentry_free_list(224,5032
EmcQEntry * l_qentry_get(225,5091
int l_qentry_unlock(226,5147
int l_qentry_lock(227,5190
int l_qentry_set_status(228,5231
int l_qentry_get_pending(229,5299
int l_qentry_get_locked(230,5384
EmcQEntry * l_qentry_get_at(231,5478
void l_qentry_free(232,5540
int l_qentry_finished(233,5581
int l_qentry_get_processing_status(234,5626
long l_alist_get_qnum(238,5699
long l_alist_get_alnum(239,5743
const char * l_alist_get_message_id(240,5787
long l_alist_get_inode(241,5844
const char * l_alist_get_filename(242,5888
const char * l_alist_get_recipient(243,5943
const char * l_alist_get_sender(244,5999
int l_alist_get_level(245,6052
int l_alist_get_allow_ext(246,6095
const char * l_alist_get_data(247,6142
const char * l_alist_get_status(248,6193
QFileImpl * l_alist_get_impl(249,6246
MYSQL* l_alist_get_akadb(250,6296
void l_alist_set_impl(251,6339
EmcAList * l_alist_create(252,6400
EmcAList * l_alist_clone(260,6555
int l_alist_get_lock(265,6657
char * l_alist_serialize(266,6699
EmcAList * l_alist_deserialize(267,6761
EmcAList * l_alist_get_by_hosted(269,6866
int l_alist_lock(270,6945
int l_alist_unlock(271,6983
int l_alist_set_status(272,7023
int l_alist_set_allow_ext(273,7088
int l_alist_set_lastseen(274,7146
int l_alist_error(275,7199
int l_alist_get_pending(276,7238
int l_alist_finished(277,7307
EmcAList * l_alist_get_at(278,7349
int l_alist_message_modified(279,7405
int l_alist_remove_all_aentries(281,7488
int l_alist_max_itemnum(282,7541
void l_alist_free_list(283,7587
void l_alist_free(284,7641
int l_alist_get_by_status(286,7682
EmcAList * parse_alist_file(288,7794
int l_alist_get_processing_status(289,7858
long l_aentry_get_qnum(293,7925
long l_aentry_get_alnum(294,7972
const char * l_aentry_get_message_id(295,8019
const char * l_aentry_get_recipient(296,8079
const char * l_aentry_get_user(297,8138
const char * l_aentry_get_domain(298,8192
const char * l_aentry_get_sender(299,8248
int l_aentry_get_itemnum(300,8304
const char * l_aentry_get_action(301,8352
const char * l_aentry_get_status(302,8408
const char * l_aentry_get_data(303,8464
int l_aentry_get_retry_times(304,8518
long l_aentry_get_last_retry(305,8570
const char * l_aentry_last_error(306,8622
EmcAEntry * l_aentry_create(308,8679
int l_aentry_get_pending(315,8832
EmcAEntry * l_aentry_get_at(316,8902
void l_aentry_free_list(317,8962
int l_aentry_set_error(318,9019
int l_aentry_set_status(319,9086
int l_qentry_set_lastseen(320,9155
int l_aentry_stop_after(321,9211
int l_aentry_hold_after(322,9259
void l_aentry_free(323,9307
int l_aentry_get_all(325,9350
int l_aentry_get_by_status(326,9413
EmcAEntry *parse_aentry_file(parse_aentry_file328,9528
long l_header_get_qnum(332,9608
long l_header_get_alnum(333,9654
long l_header_get_inode(334,9701
const char * l_header_get_filename(335,9748
const char * l_header_get_header(336,9806
EmcHeader * l_header_create(337,9862
int l_header_get_pending(338,9936
EmcHeader * l_header_get_like 340,10029
EmcHeader * l_header_get_at(342,10128
void l_header_free_list(343,10187
void l_header_free(344,10243
void l_header_remove(345,10285
EmcHeader *parse_header_file(parse_header_file346,10327
const char * l_hint_get_message_id(350,10405
long l_hint_get_inode(351,10460
const char * l_hint_get_agent(352,10502
const char * l_hint_get_key(353,10552
const char * l_hint_get_hint(354,10600
EmcHint * l_hint_create(355,10649
EmcHint * l_hint_get(362,10806
void l_hint_free(364,10906
EmcHint * parse_hint_file(366,10943
int write_hint_file(367,11005
long l_hosted_get_qnum(372,11058
long l_hosted_get_alnum(373,11109
const char * l_hosted_get_message_id(374,11161
const char * l_hosted_get_recipient(375,11226
const char * l_hosted_get_sender(376,11290
long l_hosted_get_inode(377,11351
const char * l_hosted_get_filename(378,11403
const char * l_hosted_get_data(379,11466
const char * l_hosted_get_status(380,11525
int l_hosted_get_retry_times(381,11586
long l_hosted_get_last_retry(382,11643
const char * l_hosted_get_last_error(383,11700
EmcHostedEntry * l_hosted_create(384,11765
int l_hosted_set_error(391,11936
int l_hosted_set_status(392,12007
int l_hosted_get_pending(393,12080
EmcHostedEntry * l_hosted_get_at(394,12156
void l_hosted_free_list(395,12225
void l_hosted_free(396,12286
int l_hosted_get_by_status(398,12334
EmcHostedEntry * parse_hosted_file(400,12453
int l_hosted_touch(401,12524
long l_external_get_qnum(405,12604
long l_external_get_alnum(406,12661
const char * l_external_get_message_id(407,12719
const char * l_external_get_recipient(408,12790
const char * l_external_get_sender(409,12860
long l_external_get_inode(410,12927
const char * l_external_get_filename(411,12985
const char * l_external_get_data(412,13054
const char * l_external_get_status(413,13119
int l_external_get_retry_times(414,13186
long l_external_get_last_retry(415,13249
const char * l_external_get_last_error(416,13312
EmcExternalEntry * l_external_create(417,13383
int l_external_set_error(425,13581
int l_external_set_status(426,13658
int l_external_get_pending(427,13737
EmcExternalEntry * l_external_get_at(428,13817
void l_external_free_list(429,13892
void l_external_free(430,13957
int l_external_get_by_status(432,14011
EmcExternalEntry * parse_external_file(434,14134
int l_message_store(438,14225
int l_message_remove(447,14424
int l_message_merge_headers(450,14491
int l_message_merge_headers_escape(455,14606
char * l_message_merge_headers_as_string(461,14741
char * l_message_create(465,14857
char * l_message_create_with_data(474,15062
char * l_message_create_outbound_with_data(484,15291
char * l_message_create_with_mode_data(494,15529
int l_misc_sender_valid(509,15788
char * l_misc_get_unique_id(510,15836
char * l_misc_get_localname(511,15903
char * l_misc_get_domain(512,15956
char * str_tolower(513,16006
char * l_misc_read_line(514,16047
const char *l_misc_escape_address(l_misc_escape_address516,16086
int l_admin_get_all_entries(534,16787
int l_admin_get_pending_entries(536,16862
int l_admin_get_frozen_entries(538,16941
int l_admin_get_failed_entries(540,17019
int l_admin_lock_qentry(542,17097
int l_admin_unlock_qentry(543,17163
int l_admin_get_locked_entries(544,17230
int l_admin_get_qentry_info(546,17309
int l_admin_get_action_entries(556,17557
int l_admin_reset_failed_qentry(561,17681
int l_admin_thaw_qentry(563,17757
EmcQEntry * l_admin_get_qentry(565,17825
int l_admin_set_qentry_status(566,17896
int l_admin_queue_rebuild(568,17989
#define REC_SIZE 573,18078
#define HEADER_SIZE 574,18100
#define PAYLOAD_SIZE 575,18125
typedef struct db_header_t 577,18152
   long magic;579,18182
   long first_rec;580,18197
   long last_rec;581,18216
   long first_del;582,18234
   long last_del;583,18253
   long session_magic;584,18271
	long total_recs;585,18294
} db_header;587,18313
typedef struct db_record_t 590,18328
   long magic;592,18358
   char payload[payload593,18373
   long prev_rec;594,18404
   long next_rec;595,18422
} db_record;597,18441
typedef union db_entry_t 599,18455
	db_header header;601,18483
	db_record record;602,18502
} db_entry;604,18523
#define OLD_STATE_RECORD 607,18537
#define NEW_STATE_RECORD 608,18566
typedef struct db_jentry_t 610,18596
	long magic;611,18625
	long offset;612,18638
	int state;613,18652
	db_entry entry;614,18664
} db_jentry;615,18681
typedef struct transaction_t 617,18695
	int QDBJ;618,18726
	int QDB;619,18737
	char * journal_path;620,18747
	char * fdb_path;621,18769
} transaction;622,18787
void initdb(625,18804
int fdb_insert_rec(626,18837
int fdb_delete_rec(627,18875
int fdb_update_rec(628,18913
typedef int (*QDBFunc)QDBFunc629,18949
EmcQEntry * fdb_get(630,19005
int fdb_get_num_entries(631,19060
int fdb_foreach(632,19106
int fdb_compact_db(633,19174
EmcQEntry * parse_qentry_file(635,19215
int write_qentry_file(636,19285
void fdb_dump(637,19326
void fdb_dump_journal(638,19358
void fdb_initdb(639,19398

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdelete.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,79
const char * msgid 12,233
int debugmode 13,261
int main(15,281

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdb.c,1335
static char *rcsid rcsid1,0
static void use_rcsid(2,75
#define _GNU_SOURCE8,183
#define HEADER_MAGIC 25,514
#define JOURNAL_MAGIC 26,544
char * QFILE 29,577
char * QFILE_JOURNAL 30,599
void _fdb_initdb_internal(32,635
int _fdb_rebuild(33,696
void _add_qentry_to_fdb(34,756
int _assert_db_integrity(35,836
int _db_begin_read(36,903
int _db_begin_write(37,965
void _db_end_read(38,1028
void _db_close_transaction(39,1071
int _db_rollback(40,1123
int _db_commit(41,1202
int _fdb_insert_rec_internal(42,1279
int read_rec(44,1350
int write_rec(45,1431
int write_rec_notrans 46,1512
void fdb_initdb(49,1604
void _fdb_initdb_internal(57,1883
int _fdb_rebuild(164,4442
void _add_qentry_to_fdb(198,5238
int _assert_db_integrity(228,5908
int _db_begin_read(268,7227
int _db_begin_write(316,8240
void _db_end_read(399,10359
void _db_close_transaction(412,10594
int _db_rollback(436,11010
int _db_commit(499,12513
int fdb_insert_rec(565,14024
int _fdb_insert_rec_internal(590,14621
int fdb_delete_rec(739,18193
int fdb_update_rec(872,21465
EmcQEntry * fdb_get(933,22828
int fdb_foreach(982,24047
int read_rec(1075,25803
int write_rec(1105,26462
int write_rec_notrans 1171,28127
int fdb_get_num_entries(1215,29119
void fdb_dump(1246,29728
void fdb_dump_journal(1372,33588
int fdb_compact_db(1449,35778

/emcsvn/emc/emcmailer/trunk/libemcqfile/libcommon.c,196
static char *rcsid rcsid1,0
static void use_rcsid(2,82
int lock_reg(12,258
int read_lock(23,626
int readw_lock(27,744
int write_lock(31,864
int writew_lock(35,983
int unlock_file(39,1104

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdb.notrans.c,474
static char *rcsid rcsid1,0
static void use_rcsid(2,83
#define HEADER_MAGIC 23,477
#define REC_MAGIC 24,507
char * QFILE 27,536
char * QFILE_JOURNAL 28,558
char * filep 29,593
int read_rec(32,643
int write_rec(33,724
void fdb_initdb(36,807
int fdb_insert_rec(79,1879
int fdb_delete_rec(234,5344
int fdb_foreach(364,8550
void compact_db_callback(491,11877
int fdb_compact_db(513,12306
int read_rec(571,13672
int write_rec(613,14604
void fdb_dump(654,15542

/emcsvn/emc/emcmailer/trunk/libemcqfile/tester.c,136
static char *rcsid rcsid1,0
static void use_rcsid(2,78
char * msgid 17,331
int debugmode 18,353
void func 20,373
int main(46,872

/emcsvn/emc/emcmailer/trunk/libemcqfile/fdumper.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,79
const char * msgid 12,233
int debugmode 13,261
int main(15,281

/emcsvn/emc/emcmailer/trunk/libemcqfile/qentry.c,2211
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int p_init_queue_directory(27,555
void purge_qentry_dir(33,789
void purge_dir(34,835
void P_BEGIN_CREATE_QENTRY(36,873
void P_COMMIT_CREATE_QENTRY(65,1563
void P_ROLLBACK_CREATE_QENTRY(91,2209
int P_IS_QENTRY_BEING_CREATED(96,2368
void P_BEGIN_DELETE_QENTRY(122,2951
int P_IS_QENTRY_BEING_DELETED(150,3698
void p_qentry_init(175,4280
const char * l_qentry_get_sender(207,5052
const char * l_qentry_get_recipient(210,5136
const char * l_qentry_get_message_id(213,5226
long l_qentry_get_qnum(216,5313
long l_qentry_get_inode(219,5387
const char * l_qentry_get_status(222,5461
int l_qentry_get_lock(225,5545
long l_qentry_get_time(228,5616
long l_qentry_get_last_retry(231,5688
const char * l_qentry_get_filename(234,5772
const char * l_qentry_get_host(237,5856
int l_qentry_is_outbound(240,5936
QFileImpl * l_qentry_get_impl(243,6014
void l_qentry_set_impl(246,6093
EmcQEntry * l_qentry_dup(250,6184
EmcQEntry * l_qentry_create 259,6418
EmcQEntry *l_qentry_create_real(l_qentry_create_real271,6684
EmcQEntry * l_qentry_create_with_data 286,7004
int p_init_queue_directory(495,11843
#define EMPTY_TAG 545,12845
char * l_qentry_serialize(547,12876
EmcQEntry * l_qentry_deserialize(587,14080
#define _CHECK_STREAM 589,14160
int l_qentry_remove(659,15923
EmcQEntry * l_qentry_get(774,18567
int l_qentry_lock(782,18721
int l_qentry_unlock(824,19586
int l_qentry_set_status(873,20662
int l_qentry_set_lastseen(922,21804
EmcQEntry * l_qentry_get_at(972,23407
void l_qentry_free_list(976,23503
typedef struct foreach_data_t 992,23831
	EmcQEntryArray * entries;993,23863
	QFileImpl * impl;994,23890
	int len;995,23909
	int limit;996,23919
	int lock;997,23931
	long retry_interval;998,23942
} foreach_data;999,23964
int p_get_pending_callback(1001,23981
int l_qentry_get_pending(1050,24944
int p_get_locked_callback(1087,25751
int l_qentry_get_locked(1129,26596
int l_qentry_finished(1166,27382
int l_qentry_get_processing_status(1215,28230
void l_qentry_free(1310,30577
void purge_qentry_dir(1324,30866
void purge_dir(1341,31145
EmcQEntry * parse_qentry_file(1395,32385
int write_qentry_file(1576,36843

/emcsvn/emc/emcmailer/trunk/libemcqfile/hint.c,398
static char *rcsid rcsid1,0
static void use_rcsid(2,77
const char * l_hint_get_message_id(26,492
long l_hint_get_inode(29,571
const char * l_hint_get_agent(32,637
const char * l_hint_get_key(35,711
const char * l_hint_get_hint(38,781
EmcHint * l_hint_create(42,854
EmcHint * l_hint_get(140,2924
void l_hint_free(229,4627
EmcHint * parse_hint_file(243,4819
int write_hint_file(348,7027

/emcsvn/emc/emcmailer/trunk/libemcqfile/hosted.c,1022
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_hosted_file(25,511
long l_hosted_get_qnum(28,562
long l_hosted_get_alnum(31,637
const char * l_hosted_get_message_id(34,714
const char * l_hosted_get_recipient(37,804
const char * l_hosted_get_sender(40,897
long l_hosted_get_inode(43,984
const char * l_hosted_get_filename(46,1061
const char * l_hosted_get_data(49,1148
const char * l_hosted_get_status(52,1231
int l_hosted_get_retry_times(55,1318
long l_hosted_get_last_retry(58,1406
const char * l_hosted_get_last_error(61,1493
EmcHostedEntry * l_hosted_create(65,1589
int l_hosted_set_error(171,4039
int l_hosted_touch(248,5870
int l_hosted_set_status(291,6797
int l_hosted_get_pending(306,7164
int l_hosted_get_all(336,7686
int l_hosted_get_by_status(361,8190
EmcHostedEntry * l_hosted_get_at(469,10327
void l_hosted_free_list(473,10435
void l_hosted_free(485,10658
void l_hosted_remove 499,11015
EmcHostedEntry * parse_hosted_file(507,11161
int write_hosted_file(688,15169

/emcsvn/emc/emcmailer/trunk/libemcqfile/main.c,348
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
#define MY_TYPE 24,487
extern int connect_to_aka_db(30,653
static MYSQL * akadb 32,717
static int inited_akadb 33,746
QFileImpl * l_init_impl(36,777
QFileImpl * l_init_impl2(41,864
MYSQL * l_impl_get_akadb(104,2457
void _fini(109,2532
void _init(114,2603

/emcsvn/emc/emcmailer/trunk/libemcqfile/misc.c,430
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define UNIQUE_ID_SIZE 18,365
extern int is_sender_valid(24,535
const char *l_misc_escape_address(l_misc_escape_address26,585
int l_misc_sender_valid(57,1151
char * l_misc_get_localname(61,1238
char * l_misc_get_domain(86,1537
char * string_base62(112,1837
char * l_misc_get_unique_id(127,2146
#define LINE_BUFFER_SIZE 164,3011
char * l_misc_read_line(166,3046

/emcsvn/emc/emcmailer/trunk/libemcqfile/hinter.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,78
const char * msgid 12,232
int debugmode 13,260
int main(15,280

/emcsvn/emc/emcmailer/trunk/libemcqfile/admin.c,1377
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define _GNU_SOURCE8,186
#define ALLOCATION_BATCH 27,558
int p_admin_get_all_callback(31,606
int p_admin_get_failed_callback(32,669
int p_admin_get_frozen_callback(33,735
int p_admin_get_pending_callback(34,801
int p_admin_get_entries(35,867
typedef struct p_admin_foreach_data_t 40,962
	EmcQEntryArray * entries;41,1002
	QFileImpl * impl;42,1029
	int len;43,1048
	int lock;44,1058
	int allocated;45,1069
} p_admin_foreach_data;46,1085
int l_admin_get_all_entries(48,1110
int l_admin_get_pending_entries(54,1263
int l_admin_get_frozen_entries(60,1425
int l_admin_get_failed_entries(67,1585
int p_admin_get_all_callback(73,1744
int p_admin_get_failed_callback(101,2319
int p_admin_get_frozen_callback(133,2965
int p_admin_get_pending_callback(165,3611
int p_admin_get_locked_callback(197,4257
int p_admin_get_unlocked_callback(229,4879
int p_admin_get_entries(261,5502
int l_admin_lock_qentry 290,6144
int l_admin_unlock_qentry 318,6703
int l_admin_get_locked_entries 346,7266
int l_admin_get_qentry_info(352,7426
int l_admin_set_action_status(383,8176
int l_admin_get_action_entries(419,8962
int l_admin_queue_rebuild(454,9804
int l_admin_reset_failed_qentry(460,9926
int l_admin_thaw_qentry(549,12068
int l_admin_set_qentry_status(608,13497
EmcQEntry * l_admin_get_qentry(636,14096

/emcsvn/emc/emcmailer/trunk/libemcqfile/alist.c,1725
static char *rcsid rcsid1,0
static void use_rcsid(2,77
int write_alist_file(26,552
int l_alist_get_by_status_internal 27,595
long l_alist_get_qnum(35,922
long l_alist_get_alnum(38,990
const char * l_alist_get_message_id(41,1060
long l_alist_get_inode(44,1143
const char * l_alist_get_filename(47,1213
const char * l_alist_get_recipient(50,1293
const char * l_alist_get_sender(53,1379
int l_alist_get_level(56,1459
int l_alist_get_allow_ext(59,1528
const char * l_alist_get_data(62,1605
const char * l_alist_get_status(65,1681
int l_alist_get_lock(68,1761
QFileImpl * l_alist_get_impl(71,1828
void l_alist_set_impl(74,1903
int l_build_expand_forward(78,1990
int l_build_expand_forward_bounce(83,2102
EmcAList * l_alist_create(87,2226
EmcAList * l_alist_clone(186,4638
EmcAList * l_alist_get_by_hosted(294,7365
int l_alist_lock(309,7728
int l_alist_unlock(344,8396
void l_alist_set_filename(378,9064
int l_alist_set_status(384,9195
int l_alist_set_allow_ext(420,9937
int l_alist_set_lastseen(454,10603
MYSQL * l_alist_get_akadb(487,11264
int l_alist_get_processing_status(491,11345
int l_alist_finished(536,12226
int l_alist_get_pending(551,12552
int l_alist_get_all(574,13043
int l_alist_get_by_status 597,13504
int l_alist_get_by_status_internal 605,13727
EmcAList * l_alist_get_at(725,16280
void l_alist_free_list(729,16373
int l_alist_message_modified(744,16677
int l_alist_remove_all_aentries(840,19176
int l_alist_max_itemnum(875,19960
#define EMPTY_TAG 908,20552
char * l_alist_serialize(910,20583
EmcAList * l_alist_deserialize(951,21711
#define _CHECK_STREAM 953,21789
void l_alist_free(1001,23399
EmcAList * parse_alist_file(1016,23706
int write_alist_file(1198,27920

/emcsvn/emc/emcmailer/trunk/libemcqfile/qe_tester.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * msgid 12,235
int debugmode 13,263
int main(15,283

/emcsvn/emc/emcmailer/trunk/libemcqfile/external.c,1092
static char *rcsid rcsid1,0
static void use_rcsid(2,80
int write_external_file(25,513
long l_external_get_qnum(28,572
long l_external_get_alnum(31,657
const char * l_external_get_message_id(34,744
const char * l_external_get_recipient(37,844
const char * l_external_get_sender(40,947
long l_external_get_inode(43,1044
const char * l_external_get_filename(46,1131
const char * l_external_get_data(49,1228
const char * l_external_get_status(52,1321
const char * l_external_get_rhost(55,1418
int l_external_get_retry_times(58,1513
long l_external_get_last_retry(61,1611
const char * l_external_get_last_error(64,1708
EmcExternalEntry * l_external_create(68,1814
int l_external_set_error(170,4456
int l_external_set_status(240,6346
int l_external_get_pending(255,6749
int l_external_get_all(280,7308
int l_external_get_by_status(305,7854
EmcExternalEntry * l_external_get_at(401,9897
void l_external_free_list(405,10015
void l_external_free(416,10269
void l_external_remove 431,10703
EmcExternalEntry * parse_external_file(439,10863
int write_external_file(624,15246

/emcsvn/emc/emcmailer/trunk/libemcqfile/message.c,700
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define _GNU_SOURCE8,187
#define MY_TYPE 31,643
#define BUFFER_SIZE 33,667
extern const char * config_get_filename(39,838
int l_message_store(45,1065
int l_message_remove(133,3044
char *l_message_create(l_message_create154,3481
char *l_message_create_with_data(l_message_create_with_data170,3806
char *l_message_create_outbound_with_data(l_message_create_outbound_with_data186,4161
char *l_message_create_with_mode_data(l_message_create_with_mode_data202,4525
int l_message_merge_headers(440,9502
int l_message_merge_headers_escape 450,9703
char *l_message_merge_headers_as_string(l_message_merge_headers_as_string656,14146

/emcsvn/emc/emcmailer/trunk/libemcqfile/header.c,583
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_header_file(26,512
long l_header_get_qnum(28,557
long l_header_get_alnum(31,627
long l_header_get_inode(34,699
const char * l_header_get_filename(37,771
const char * l_header_get_header(40,853
EmcHeader * l_header_create(44,936
int l_header_get_pending(171,3758
EmcHeader * l_header_get_like 302,6282
EmcHeader * l_header_get_at(344,7437
void l_header_free_list(348,7530
void l_header_remove(360,7748
void l_header_free(366,7876
EmcHeader * parse_header_file(377,8093
int write_header_file(488,10451

/emcsvn/emc/emcmailer/trunk/libemcqfile/aentry.c,1259
static char *rcsid rcsid1,0
static void use_rcsid(2,78
int write_aentry_file(26,512
EmcAList * parse_alist_file(27,558
long l_aentry_get_qnum(29,627
long l_aentry_get_alnum(32,701
const char * l_aentry_get_message_id(35,777
const char * l_aentry_get_recipient(38,866
const char * l_aentry_get_user(41,958
const char * l_aentry_get_domain(44,1041
const char * l_aentry_get_sender(47,1127
int l_aentry_get_itemnum(50,1213
const char * l_aentry_get_action(53,1292
const char * l_aentry_get_status(56,1378
const char * l_aentry_get_data(59,1464
int l_aentry_get_retry_times(62,1546
long l_aentry_get_last_retry(65,1633
const char * l_aentry_last_error(68,1719
int l_aentry_internal_set_status(72,1810
EmcAEntry *l_aentry_create(l_aentry_create74,1898
int l_aentry_get_pending(158,3988
int l_aentry_get_all(179,4499
int l_aentry_get_by_status(200,4997
EmcAEntry * l_aentry_get_at(289,6756
void l_aentry_free_list(293,6853
int l_aentry_set_error(306,7102
int l_aentry_touch(404,9637
int l_aentry_set_status(462,10898
int l_aentry_stop_after(468,11032
int l_aentry_hold_after(473,11143
int l_aentry_internal_set_status(479,11255
void l_aentry_free(626,14902
EmcAEntry * parse_aentry_file(643,15322
int write_aentry_file(843,19957

/emcsvn/emc/emcmailer/trunk/libemcqfile/initdb.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,78
const char * msgid 12,232
int debugmode 13,260
int main(15,280

/emcsvn/emc/emcmailer/trunk/libemcqfile/sherlock.c,118
static char *rcsid rcsid1,0
static void use_rcsid(2,81
char * msgid 17,353
int debugmode 18,375
int main(20,395

/emcsvn/emc/emcmailer/trunk/libemcqfile/compactdb.c,124
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * msgid 11,234
int debugmode 12,262
int main(14,282

/emcsvn/emc/emcmailer/trunk/libemcqfile/build.c,648
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define _GNU_SOURCE8,185
int p_build_do_special_addresses(26,553
int p_build_check_alias(27,604
int l_build_is_external_domain(28,646
int resp_active(30,717
reassemble_address(81,1951
int l_build_expand_alist(112,2537
int l_build_expand_outbound_alist(917,22465
int l_build_expand_relay(1259,31028
int l_build_expand_hosted(1311,32223
int l_build_expand_external(1332,32735
int l_build_expand_shcal(1362,33361
int l_build_is_external_domain(1462,35855
int l_build_is_external_address(1509,36811
int p_build_check_alias(1531,37183
int p_build_do_special_addresses(1609,38776

/emcsvn/emc/emcmailer/trunk/exim_q.c,130
static char *rcsid rcsid1,0
static void use_rcsid(2,78
#define BUFSIZE 22,437
int exim_q(29,742
int exim_q_headers(167,4016

/emcsvn/emc/emcmailer/trunk/exim_q.h,114
#define EXIM_Q_H2,17
#define QUEUE_FILE 4,35
#define QUEUE_MEM 5,56
int exim_q(7,78
int exim_q_headers(8,167

/emcsvn/emc/emcmailer/trunk/ldeliver.c,1202
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
#define ELE_LDELIVER_USE_COURIER37,755
extern int debugmode;39,789
extern int pretendmode;40,811
extern const char *msgid;msgid41,835
extern ldeliver_options ldeliver_opts;43,862
#define LOCAL_DELIVERY 45,902
#define REMOTE_DELIVERY 46,927
#define AUTO_DELIVERY 47,953
#define ERR_CONTAINS 49,978
#define BUFFER_SIZE 51,1003
EmcHash *l_recipients;l_recipients53,1032
EmcHash *l_inodes;l_inodes54,1055
EmcHash *l_extra_data;l_extra_data55,1074
int deliverymode 57,1098
void do_lfilenames(60,1160
off_t get_quota(61,1215
int do_quota(62,1276
void do_quota_notify(63,1341
char *remote_delivery_addr(remote_delivery_addr64,1391
int do_mb_filters(65,1475
char *get_header_data(get_header_data67,1592
int do_contains(68,1659
char *mailboxvars(mailboxvars70,1763
int do_ldeliver(73,1844
void do_lfilenames(154,3609
off_t get_quota(726,19400
int do_quota(801,21167
void do_quota_notify(877,23512
int do_mb_filters(960,25710
char *get_header_data(get_header_data1213,32182
char *quote_with_QE(quote_with_QE1261,33265
int do_contains(1329,34927
char *mailboxvars(mailboxvars1443,37373

/emcsvn/emc/emcmailer/trunk/ldeliver.h,643
#define L_DELIVER_H2,20
#define OVECSIZE 9,128
#define WEBFILTER_AND 11,149
#define WEBFILTER_OR 12,173
#define WEBFILTER_CONTAINS 13,196
#define WEBFILTER_NOT_CONTAINS 14,225
typedef struct ldeliver_options_t 16,259
	EmcQImpl * impl;17,295
	EmcConfig * config;18,313
	int batch_num;19,334
	const char * sender;20,350
} ldeliver_options;21,372
typedef struct ldeliver_quota_t 23,393
	const char * recipient;24,427
	off_t quota;25,452
	off_t on_disk_quota;26,466
	int quota_action;27,488
	int quota_notify;28,507
	char * notify_address;29,526
	char * redirect_address;30,550
} ldeliver_quota;31,576
int do_ldeliver(33,595

/emcsvn/emc/emcmailer/trunk/memcache/mailer.c,129
static char *rcsid rcsid1,0
static void use_rcsid(2,79
em_memcache_t *emcmailer_memcache_init(emcmailer_memcache_init18,357

/emcsvn/emc/emcmailer/trunk/memcache/mailer.h,100
#define MEMCACHE_MAILER_H2,26
em_memcache_t *emcmailer_memcache_init(emcmailer_memcache_init7,99

/emcsvn/emc/emcmailer/trunk/memcache/main.c,762
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
MYSQL mysql_sock;22,430
struct virus_options_t 24,449
	int providers;25,474
	int notify;26,490
	int notify_local_only;27,503
	int daily_digest;28,527
	int monthly_digest;29,546
	int trigger_action;30,567
	int new_virus_action;31,588
	int parse_fail_action;32,611
	int block_encrypted;33,635
	char *admin;admin34,657
	char *notify_text;notify_text35,671
	char *notify_footer;notify_footer36,691
	char *new_virus_notify_address;new_virus_notify_address37,713
	char *parse_fail_admin;parse_fail_admin38,746
	char *admin2;admin239,771
	char *admin3;admin340,786
void init_db(43,805
void init_virus_options(45,822
void init_db(200,5124
int main(230,5789

/emcsvn/emc/emcmailer/trunk/memcache/virus.h,1439
#define EMC_VIRUS_H2,20
#define NOTIFY_SENDER 4,41
#define NOTIFY_RECIPIENT 5,65
#define NOTIFY_ADMINISTRATOR 6,92
#define DELETE_MESSAGE 8,124
#define STRIP_ATTACHMENT 9,149
#define NEW_VIRUS_FREEZE 11,177
#define NEW_VIRUS_DELIVER 12,204
#define PARSE_FAIL_NOTIFY_ADMIN 14,233
#define PARSE_FAIL_DELIVER_ANYWAY 15,267
#define SUBJ_LEN 17,304
#define SUBJ_LEN_ENC 18,324
struct virus_summary_report_t 21,385
	char * msg_filename;22,417
	char * ip;23,439
	char * subject;24,451
} virus_summary_report;25,468
struct virus_options_t 27,493
	int providers;28,518
	int notify;29,534
	int notify_local_only;30,547
	int daily_digest;31,571
	int monthly_digest;32,590
	int trigger_action;33,611
	int new_virus_action;34,632
	int parse_fail_action;35,655
	int block_encrypted;36,679
	char *admin;admin37,701
	char *notify_text;notify_text38,715
	char *notify_footer;notify_footer39,735
	char *new_virus_notify_address;new_virus_notify_address40,757
	char *parse_fail_admin;parse_fail_admin41,790
	char *admin2;admin242,815
	char *admin3;admin343,830
struct provider_t 46,849
	char * name;47,869
	int code;48,883
	char * host;49,894
	int port;50,908
	char * scan_dir;51,919
	int sock;52,937
	int header_added;53,948
	int fallback;54,967
	int was_used;55,982
	int was_clean;56,997
struct virus_t 59,1017
	char * virus_name;60,1034
	char * attachment_name;61,1054
	char * provider_name;62,1079

/emcsvn/emc/emcmailer/trunk/memcache/cache.c,1117
static char *rcsid rcsid1,0
static void use_rcsid(2,78
em_memcache_t *em_memcache_init(em_memcache_init20,392
GString *em_serialize_row(em_serialize_row88,1848
#define EMDELIM 109,2274
#define DELIMLEN 110,2301
void em_result_set_free(112,2321
EmResultSet *em_result_set_new(em_result_set_new140,2891
void em_db_row_free(157,3191
EmDbRow *em_db_row_new(em_db_row_new187,3660
void em_result_set_add_row(202,3976
EmDbRow *em_mysql_row_to_em_row(em_mysql_row_to_em_row208,4095
EmResultSet *em_mysql_result_to_em_result(em_mysql_result_to_em_result233,4631
EmDbRow *em_result_fetch_row(em_result_fetch_row255,5114
ConstGString *em_serialize_result(em_serialize_result266,5317
EmResultSet *em_deserialize_result_set(em_deserialize_result_set308,6386
EmDbRow *em_deserialize_row(em_deserialize_row335,6921
char **em_char_from_row(em_char_from_row376,7720
void em_dump_row(381,7784
void em_dump_result(392,7985
void em_dump_string(407,8301
EmResultSet *em_cache_get(em_cache_get424,8606
EmResultSet *em_cache_sql(em_cache_sql450,9098
EmResultSet *em_cache_query(em_cache_query492,9892

/emcsvn/emc/emcmailer/trunk/memcache/cache.h,1391
#define EM_CACHE_H2,19
typedef struct const_g_string 13,317
	char *str;str14,349
	unsigned int len;15,361
} ConstGString;16,380
typedef struct em_cached_results 21,481
	int num_rows;25,602
	GArray *rows;rows30,676
	char *data;data36,810
	int at_row;42,959
	apr_pool_t *sp;sp47,1042
} EmResultSet;48,1059
typedef struct em_row 54,1198
	int columns;58,1267
	unsigned long *lengths;lengths63,1332
	char **fields;fields68,1405
} EmDbRow;69,1421
char **em_char_from_row(em_char_from_row75,1547
EmDbRow *em_deserialize_row(em_deserialize_row80,1671
EmResultSet *em_deserialize_result_set(em_deserialize_result_set85,1818
EmResultSet *em_mysql_result_to_em_result(em_mysql_result_to_em_result90,1957
void em_dump_result(95,2085
void em_dump_row(100,2187
GString *em_serialize_row(em_serialize_row105,2318
EmDbRow *em_result_fetch_row(em_result_fetch_row110,2435
ConstGString *em_serialize_result(em_serialize_result116,2626
void em_dump_string(121,2734
typedef struct em_memcache_s 126,2852
	apr_memcache_t *cache;cache127,2883
	apr_pool_t *p;p128,2907
} em_memcache_t;129,2923
EmResultSet *em_cache_query(em_cache_query136,3209
em_memcache_t *em_memcache_init(em_memcache_init148,3478
EmResultSet *em_cache_get(em_cache_get150,3565
EmResultSet *em_cache_sql(em_cache_sql152,3650
void em_result_set_free(160,3773
void em_db_row_free(161,3820

/emcsvn/emc/emcmailer/trunk/bcastbnc/bcastbnc.c,516
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
char *filename filename23,469
char *sender sender24,492
char *recip recip25,513
int debugmode 26,533
int unlink_msgfile 27,552
char *configfile configfile28,576
int sock 29,601
char *msgid msgid30,615
char *refdomain refdomain31,635
char *data data32,659
char *local local34,679
char *domain domain35,699
#define BUFFER_SIZE 37,721
int leave(39,750
int leave(41,802
void init_args(46,840
int main(145,2907

/emcsvn/emc/emcmailer/trunk/exdeliver_main.c,326
static char *rcsid rcsid1,0
static void use_rcsid(2,86
#define BUFFER_SIZE 20,401
char * msgid 23,455
int debugmode 24,476
int pretendmode 25,495
const char * sender;27,517
long batch_num 28,538
const char * queue_type 29,558
const char * configfile 30,590
exdeliver_options exdeliver_opts;32,623
int main(34,658

/emcsvn/billing/trunk/lib/Billing/Accpac_temp.pm,650
package Accpac_temp;3,18
sub new Accpac_temp::new9,98
my( $line_monthyear, $line_currency, $line_amount, $account_num)( $line_monthyear, $line_currency, $line_amount, $account_num11,109
	my $r_Accpac_temp r_Accpac_temp12,180
sub delete Accpac_temp::delete25,412
	my $r_Accpac_temp r_Accpac_temp26,425
	my $dbh dbh27,453
	my $res res28,490
sub update Accpac_temp::update33,544
	my $r_Accpac_temp r_Accpac_temp34,557
	my $query query35,585
	my $dbh dbh42,834
	my $res res43,871
sub create Accpac_temp::create48,925
	my $r_Accpac_temp r_Accpac_temp49,938
	my $query query50,966
	my $dbh dbh64,1250
	my $res res65,1287

/emcsvn/billing/trunk/lib/Billing/Aka.pm,716
package Aka;3,18
sub new Aka::new9,90
my( $cus_num, $aka_domain, $aka_server, $aka_relay, $aka_fvirus, $aka_pvirus, $parent_cus_num, $primary_service, $preferred_mailstore)( $cus_num, $aka_domain, $aka_server, $aka_relay, $aka_fvirus, $aka_pvirus, $parent_cus_num, $primary_service, $preferred_mailstore11,101
	my $r_Aka r_Aka12,242
sub delete Aka::delete30,602
	my $r_Aka r_Aka31,615
	my $query query32,635
	my $dbh dbh33,714
	my $res res34,751
sub update Aka::update39,805
	my $r_Aka r_Aka40,818
	my $query query41,838
	my $dbh dbh54,1296
	my $res res55,1333
sub create Aka::create60,1387
	my $r_Aka r_Aka61,1400
	my $query query62,1420
	my $dbh dbh86,1884
	my $res res87,1921

/emcsvn/billing/trunk/lib/Billing/Var_trans.pm,676
package Var_trans;3,17
sub new Var_trans::new9,95
my( $var_num, $cus_num, $var_unixdate, $var_date, $var_amount, $var_currency, $var_desc)( $var_num, $cus_num, $var_unixdate, $var_date, $var_amount, $var_currency, $var_desc11,106
	my $r_Var_trans r_Var_trans12,201
sub delete Var_trans::delete28,485
	my $r_Var_trans r_Var_trans29,498
	my $dbh dbh30,524
	my $res res31,561
sub update Var_trans::update36,615
	my $r_Var_trans r_Var_trans37,628
	my $query query38,654
	my $dbh dbh48,998
	my $res res49,1035
sub create Var_trans::create54,1089
	my $r_Var_trans r_Var_trans55,1102
	my $query query56,1128
	my $dbh dbh76,1516
	my $res res77,1553

/emcsvn/billing/trunk/lib/Billing/BounceCookie.pm,363
package BounceCookie;4,42
my $encodeTable encodeTable12,146
sub bounce_cryptBounceCookie::bounce_crypt24,558
	my $bounceid bounceid26,577
	my ($pacstr, $l, $pac, $pacenc, $format, $pacencstr)($pacstr, $l, $pac, $pacenc, $format, $pacencstr28,601
	my @string string30,657
	my $key key31,693
	my $keylength keylength32,723
	my $encstr encstr34,763

/emcsvn/billing/trunk/lib/Billing/Eic_secondary.pm,652
package Eic_secondary;3,17
sub new Eic_secondary::new9,99
my( $eic_name, $eic_subdomain, $eic_po)( $eic_name, $eic_subdomain, $eic_po11,110
	my $r_Eic_secondary r_Eic_secondary12,156
sub delete Eic_secondary::delete24,342
	my $r_Eic_secondary r_Eic_secondary25,355
	my $query query26,385
	my $dbh dbh27,490
	my $res res28,527
sub update Eic_secondary::update33,581
	my $r_Eic_secondary r_Eic_secondary34,594
	my $query query35,624
	my $dbh dbh42,870
	my $res res43,907
sub create Eic_secondary::create48,961
	my $r_Eic_secondary r_Eic_secondary49,974
	my $query query50,1004
	my $dbh dbh62,1222
	my $res res63,1259

/emcsvn/billing/trunk/lib/Billing/Grpwise_pos.pm,599
package Grpwise_pos;3,17
sub new Grpwise_pos::new9,97
my( $cus_num, $grp_domain)( $cus_num, $grp_domain11,108
	my $r_Grpwise_pos r_Grpwise_pos12,141
sub delete Grpwise_pos::delete23,289
	my $r_Grpwise_pos r_Grpwise_pos24,302
	my $query query25,330
	my $dbh dbh26,425
	my $res res27,462
sub update Grpwise_pos::update32,516
	my $r_Grpwise_pos r_Grpwise_pos33,529
	my $query query34,557
	my $dbh dbh40,740
	my $res res41,777
sub create Grpwise_pos::create46,831
	my $r_Grpwise_pos r_Grpwise_pos47,844
	my $query query48,872
	my $dbh dbh58,1032
	my $res res59,1069

/emcsvn/billing/trunk/lib/Billing/Profile_data.pm,843
package Profile_data;3,17
sub newProfile_data::new9,98
	my ($sql, $dbh, $row, $res)($sql, $dbh, $row, $res12,116
	my ($data_id, $data_start, $data_end, $service_num, $unit_price, $usage_price, $profile_id, $setup, $base)($data_id, $data_start, $data_end, $service_num, $unit_price, $usage_price, $profile_id, $setup, $base13,146
	my $r_Profile_data r_Profile_data35,950
sub deleteProfile_data::delete53,1299
	my $r_Profile_data r_Profile_data55,1312
	my $query query57,1342
	my $dbh dbh58,1433
	my $res res59,1470
sub updateProfile_data::update64,1524
	my $r_Profile_data r_Profile_data66,1537
	my $query query68,1567
	my $dbh dbh80,2020
	my $res res81,2057
sub createProfile_data::create86,2111
	my $r_Profile_data r_Profile_data88,2124
	my $query query90,2154
	my $dbh dbh114,2652
	my $res res115,2689

/emcsvn/billing/trunk/lib/Billing/Ccmail_pos.pm,574
package Ccmail_pos;3,17
sub new Ccmail_pos::new9,96
my( $cus_num, $cc_po)( $cus_num, $cc_po11,107
	my $r_Ccmail_pos r_Ccmail_pos12,135
sub delete Ccmail_pos::delete23,269
	my $r_Ccmail_pos r_Ccmail_pos24,282
	my $query query25,309
	my $dbh dbh26,392
	my $res res27,429
sub update Ccmail_pos::update32,483
	my $r_Ccmail_pos r_Ccmail_pos33,496
	my $query query34,523
	my $dbh dbh40,682
	my $res res41,719
sub create Ccmail_pos::create46,773
	my $r_Ccmail_pos r_Ccmail_pos47,786
	my $query query48,813
	my $dbh dbh58,960
	my $res res59,997

/emcsvn/billing/trunk/lib/Billing/Line_items.pm,745
package Line_items;3,17
sub new Line_items::new9,96
my( $inv_num, $line_unixdate, $line_date, $line_amount, $line_desc, $account_num, $emc_num, $sale_type)( $inv_num, $line_unixdate, $line_date, $line_amount, $line_desc, $account_num, $emc_num, $sale_type11,107
	my $r_Line_items r_Line_items12,217
sub delete Line_items::delete29,539
	my $r_Line_items r_Line_items30,552
	my $query query31,579
	my $dbh dbh32,668
	my $res res33,705
sub update Line_items::update38,759
	my $r_Line_items r_Line_items39,772
	my $query query40,799
	my $dbh dbh52,1248
	my $res res53,1285
sub create Line_items::create58,1339
	my $r_Line_items r_Line_items59,1352
	my $query query60,1379
	my $dbh dbh82,1828
	my $res res83,1865

/emcsvn/billing/trunk/lib/Billing/Services2.pm,1000
package Services2;3,18
sub newServices2::new10,114
	my $emc_dbh emc_dbh14,133
	my ($query, $res, $row)($query, $res, $row16,156
	my ($service_num, $service_name,($service_num, $service_name,17,182
	my ($greatpl_service_num, $greatpl_usage_num)($greatpl_service_num, $greatpl_usage_num22,532
	my $r_Services2 r_Services260,2152
sub deleteServices2::delete89,3114
	my $r_Services2 r_Services291,3127
	my $query query93,3154
	my $emc_dbh emc_dbh94,3247
	my $res res95,3283
sub updateServices2::update104,3474
	my $r_Services2 r_Services2106,3487
	my $emc_dbh emc_dbh108,3514
	my $query query110,3551
	my $stmt stmt111,3611
	my $orig orig113,3696
	my $res res137,4215
		my $h_diff h_diff157,4949
sub createServices2::create168,5214
	my $r_Services2 r_Services2170,5227
	my $query query172,5254
	my $emc_dbh emc_dbh193,5697
	my $res res194,5733
sub diff_hashServices2::diff_hash221,6637
	my ($hr1, $hr2)($hr1, $hr2223,6653
	my %result;result224,6676

/emcsvn/billing/trunk/lib/Billing/Log.pm,314
package Log;1,0
sub logitLog::logit12,120
	my ($emc_dbh, $source, $emc_num, $cus_num, @args)($emc_dbh, $source, $emc_num, $cus_num, @args14,132
	my @now now16,190
	my $remote_addr;remote_addr17,220
	my $ym ym18,238
	my $fmt fmt34,582
	my $now now35,607
	my $msg msg36,655
	my $query query38,689

/emcsvn/billing/trunk/lib/Billing/EMCTypes.pm,143
package EMCTypes;1,0
sub createDataBag EMCTypes::createDataBag7,49
	my ($entity, $hash )($entity, $hash 8,69
	my $databag databag18,347

/emcsvn/billing/trunk/lib/Billing/Subscribed2.pm,1268
package Subscribed2;3,18
sub newSubscribed2::new11,167
	my ($sql, $res, $row)($sql, $res, $row15,186
	my ($sub_num, $cus_num, $service_num, $tied_package_num, $var_num, $sub_varpercent,($sub_num, $cus_num, $service_num, $tied_package_num, $var_num, $sub_varpercent,16,210
	my $dbh dbh24,686
	my $sub sub73,2644
sub deleteSubscribed2::delete110,3778
	my ($sub, $sub_deleted_date)($sub, $sub_deleted_date112,3791
	my $query query114,3828
	my $dbh dbh115,3923
	my $res res116,3947
sub updateSubscribed2::update124,4070
	my $sub sub126,4083
	my $emc_dbh emc_dbh128,4102
	my $query query130,4131
	my $stmt stmt131,4207
	my $orig orig133,4301
	my $res res166,5004
		my $h_diff h_diff195,5761
sub createSubscribed2::create207,6067
	my $sub sub209,6080
	my $dbh dbh211,6099
	my $query query212,6123
	my $res res272,6852
		my @row row303,7555
sub nukeSubscribed2::nuke315,7802
	my $sub sub317,7813
	my $query query319,7832
	my $dbh dbh320,7890
	my $res res321,7914
sub nuke_subSubscribed2::nuke_sub332,8138
	my $sub sub334,8153
	my $query query336,8172
	my $dbh dbh337,8242
	my $res res338,8266
sub diff_hashSubscribed2::diff_hash347,8452
	my ($hr1, $hr2)($hr1, $hr2349,8468
	my %result;result350,8491

/emcsvn/billing/trunk/lib/Billing/Message_addresses.pm,657
package Message_addresses;3,17
sub new Message_addresses::new9,103
my( $ma_address)( $ma_address11,114
	my $r_Message_addresses r_Message_addresses12,137
sub delete Message_addresses::delete22,285
	my $r_Message_addresses r_Message_addresses23,298
	my $query query24,332
	my $dbh dbh25,431
	my $res res26,468
sub update Message_addresses::update31,522
	my $r_Message_addresses r_Message_addresses32,535
	my $query query33,569
	my $dbh dbh38,721
	my $res res39,758
sub create Message_addresses::create44,812
	my $r_Message_addresses r_Message_addresses45,825
	my $query query46,859
	my $dbh dbh54,987
	my $res res55,1024

/emcsvn/billing/trunk/lib/Billing/Revenue_accounts.pm,677
package Revenue_accounts;3,17
sub new Revenue_accounts::new9,102
my( $account_num, $account_desc)( $account_num, $account_desc11,113
	my $r_Revenue_accounts r_Revenue_accounts12,152
sub delete Revenue_accounts::delete23,332
	my $r_Revenue_accounts r_Revenue_accounts24,345
	my $query query25,378
	my $dbh dbh26,485
	my $res res27,522
sub update Revenue_accounts::update32,576
	my $r_Revenue_accounts r_Revenue_accounts33,589
	my $query query34,622
	my $dbh dbh40,839
	my $res res41,876
sub create Revenue_accounts::create46,930
	my $r_Revenue_accounts r_Revenue_accounts47,943
	my $query query48,976
	my $dbh dbh58,1163
	my $res res59,1200

/emcsvn/billing/trunk/lib/Billing/Templates.pm,60
package Billing::Templates;1,0
my $TestTmpl TestTmpl3,29

/emcsvn/billing/trunk/lib/Billing/Usage_reports.pm,825
package Usage_reports;3,17
sub new Usage_reports::new9,99
my( $cus_num, $sub_num, $usage_included, $usage_rate, $usage_used, $usage_minusage, $usage_charged, $usage_type, $ur_unixdate, $ur_date)( $cus_num, $sub_num, $usage_included, $usage_rate, $usage_used, $usage_minusage, $usage_charged, $usage_type, $ur_unixdate, $ur_date11,110
	my $r_Usage_reports r_Usage_reports12,253
sub delete Usage_reports::delete31,661
	my $r_Usage_reports r_Usage_reports32,674
	my $dbh dbh33,704
	my $res res34,741
sub update Usage_reports::update39,795
	my $r_Usage_reports r_Usage_reports40,808
	my $query query41,838
	my $dbh dbh54,1379
	my $res res55,1416
sub create Usage_reports::create60,1470
	my $r_Usage_reports r_Usage_reports61,1483
	my $query query62,1513
	my $dbh dbh88,2107
	my $res res89,2144

/emcsvn/billing/trunk/lib/Billing/Contact.pm,668
package Contact;3,18
sub newContact::new10,112
	my ($emc_dbh, $con_num,($emc_dbh, $con_num,14,131
	my $contact;contact18,323
		my $query query25,430
		my $stmt stmt26,487
sub deleteContact::delete60,1310
	my $contact contact62,1323
	my $now_ts now_ts64,1346
	my $query query66,1411
	my $dbh dbh67,1502
	my $res res68,1530
sub updateContact::update81,1978
	my $contact contact83,1991
	my $ymd ymd85,2014
	my $query query86,2073
	my $dbh dbh101,2375
	my $res res107,2478
sub createContact::create133,3319
	my $contact contact135,3332
	my $query query137,3355
	my $dbh dbh154,3643
	my $res res160,3746
		my @row row173,4177

/emcsvn/billing/trunk/lib/Billing/Pricing_profile.pm,730
package Pricing_profile;3,17
sub newPricing_profile::new9,101
	my($profile_id, $profile_name, $profile_currency, $profile_desc)($profile_id, $profile_name, $profile_currency, $profile_desc13,120
	my $r_Pricing_profile r_Pricing_profile14,192
sub deletePricing_profile::delete26,445
	my $r_Pricing_profile r_Pricing_profile28,458
	my $query query30,491
	my $dbh dbh31,594
	my $res res32,631
sub updatePricing_profile::update36,684
	my $r_Pricing_profile r_Pricing_profile38,697
	my $query query40,730
	my $dbh dbh48,1057
	my $res res49,1094
sub createPricing_profile::create53,1147
	my $r_Pricing_profile r_Pricing_profile55,1160
	my $query query57,1193
	my $dbh dbh71,1499
	my $res res72,1536

/emcsvn/billing/trunk/lib/Billing/Customer.pm,5123
package Customer;3,18
sub SOAP::Transport::HTTP::Client::get_basic_credentials14,194
sub newCustomer::new19,326
	my ($res, $row, $query)($res, $row, $query23,345
	my ($cus_num, $parent_num,($cus_num, $parent_num,24,371
	my $fusemail_integrated;fusemail_integrated33,990
	my $dbh dbh35,1024
	my $customer customer108,3696
sub deleteCustomer::delete164,5281
	my $customer customer166,5294
	my $dbh dbh168,5318
	my %contacts;contacts171,5388
	my $query query172,5403
	my $stmt stmt173,5468
		my $query query186,5766
		my $res res187,5824
		my $query query195,6014
		my $stmt stmt196,6081
		my ($count)($count200,6169
			my $query query204,6246
			my $res res205,6300
	my $res res214,6468
	my $rc rc226,6712
		my $query query230,6791
		my $stmt stmt231,6863
		my ($AccountID)($AccountID235,6963
			my $fm_dbh fm_dbh239,7066
				my $query query246,7297
sub set_deleteCustomer::set_delete266,7766
	my $customer customer268,7783
	my $cus_delete_date cus_delete_date270,7807
	my $query query272,7881
	my $dbh dbh273,7981
	my $res res274,8010
	my $rc rc281,8231
		my $query query285,8310
		my $stmt stmt286,8382
		my ($AccountID)($AccountID288,8458
			my $fm_dbh fm_dbh292,8561
				my $query query299,8795
sub set_undeleteCustomer::set_undelete319,9304
	my $customer customer321,9323
	my $query query323,9347
	my $dbh dbh324,9450
	my $res res325,9479
	my $rc rc332,9685
		my $query query336,9774
		my $stmt stmt337,9846
		my ($AccountID)($AccountID339,9922
			my $fm_dbh fm_dbh343,10025
				my $query query350,10256
				my $stmt stmt351,10319
				my ($Status)($Status353,10392
					my $query query357,10490
sub is_deletedCustomer::is_deleted378,11009
	my $customer customer380,11026
	my $query query382,11050
	my $dbh dbh383,11117
	my $res res384,11146
	my @row row386,11218
sub updateCustomer::update391,11286
	my $customer customer393,11299
	my $emc_dbh emc_dbh395,11323
	my $query query416,11832
	my $stmt stmt417,11887
	my $orig orig419,11965
	my $res res455,12803
		my $h_diff h_diff488,14019
sub createCustomer::create499,14318
	my $customer customer501,14331
	my $dbh dbh508,14568
		my $query query512,14719
		my $stmt stmt513,14775
		my $parent parent515,14854
			my $now_ymdhms now_ymdhms542,15609
	my @row;row551,15807
	my $query query552,15817
	my $res res612,16670
sub checkCustomer::check655,18093
	my $customer customer657,18105
	my $dbh dbh659,18129
	my $query query660,18158
	my $res res661,18223
	my $rows rows663,18296
sub cleanse_dataCustomer::cleanse_data673,18414
	my $customer customer675,18433
sub create_spsCustomer::create_sps695,19515
	my $customer customer697,19532
	my $s s702,19639
	my $hash hash711,19895
	my $sps_num;sps_num726,20560
	my $res res727,20574
sub create_maestro_spsCustomer::create_maestro_sps745,20998
	my $customer customer747,21023
	my $s s749,21047
	my $hash hash757,21283
	my $s_customer s_customer768,21820
	my $rid rid769,21882
sub check_core_serviceCustomer::check_core_service774,21964
	my $customer customer776,21989
	my $query query778,22013
	my $dbh dbh779,22081
	my $res res780,22110
sub has_serviceCustomer::has_service792,22329
	my $customer customer794,22347
	my ($service_num)($service_num795,22370
	my $query query797,22396
	my $dbh dbh798,22472
	my $res res799,22501
	my @cols cols801,22587
sub delete_all_subsCustomer::delete_all_subs809,22695
	my $customer customer811,22717
	my $emc_dbh emc_dbh813,22741
	my $failed failed814,22774
	my $query query816,22792
	my $stmt stmt817,22860
		my $query2 query2820,22982
		my $res res821,23058
my $ele_unit ele_unit839,23410
my $alp_unit alp_unit840,23510
my $rie_unit rie_unit841,23610
my %forced_customer forced_customer846,23769
sub is_alpCustomer::is_alp862,24093
	my $customer customer864,24106
		my $ci ci870,24269
sub is_eleCustomer::is_ele884,24481
	my $customer customer886,24494
sub is_euCustomer::is_eu896,24643
	my $customer customer898,24655
	my $emc_dbh emc_dbh900,24679
	my $query query902,24713
	my $stmt stmt903,24798
	my $row row905,24880
sub get_unitCustomer::get_unit915,25057
	my ($customer, $strict)($customer, $strict917,25072
my %remit remit933,25399
sub remit_to_addressCustomer::remit_to_address979,26556
	my $customer customer981,26579
	my $forced forced983,26603
sub diff_hashCustomer::diff_hash1022,27543
	my ($new, $orig)($new, $orig1024,27559
	my %result;result1025,27583
sub get_deferred_regionCustomer::get_deferred_region1046,27965
  my ($customer)($customer1048,27991
  my $def_region def_region1049,28014
sub set_package_epochCustomer::set_package_epoch1073,28989
	my ($customer, $ymd)($customer, $ymd1075,29013
	my $emc_dbh emc_dbh1077,29042
	my $query query1082,29121
	my $stmt stmt1083,29216
	my $row row1088,29320
sub get_ownerCustomer::get_owner1098,29467
	my $customer customer1100,29483
	my $emc_dbh emc_dbh1106,29572
	my %seen;seen1111,29651
		my $parent parent1121,29814

/emcsvn/billing/trunk/lib/Billing/Dns_domains.pm,1220
package Dns_domains;3,17
sub new Dns_domains::new9,97
my( $cus_num, $dns_domname, $manage_dns, $dns_updated, $www_status, $www_address, $ftp_status, $ftp_address, $dns_type, $dns_arecord, $dns_master, $www_delegate1, $www_delegate2, $www_delegate3, $ftp_delegate1, $ftp_delegate2, $ftp_delegate3, $dns_emmsystem, $relay_type, $auth_type, $inbound, $spam, $primary_service, $imported)( $cus_num, $dns_domname, $manage_dns, $dns_updated, $www_status, $www_address, $ftp_status, $ftp_address, $dns_type, $dns_arecord, $dns_master, $www_delegate1, $www_delegate2, $www_delegate3, $ftp_delegate1, $ftp_delegate2, $ftp_delegate3, $dns_emmsystem, $relay_type, $auth_type, $inbound, $spam, $primary_service, $imported11,108
	my $r_Dns_domains r_Dns_domains12,444
sub delete Dns_domains::delete45,1286
	my $r_Dns_domains r_Dns_domains46,1299
	my $query query47,1327
	my $dbh dbh48,1416
	my $res res49,1453
sub update Dns_domains::update54,1507
	my $r_Dns_domains r_Dns_domains55,1520
	my $query query56,1548
	my $dbh dbh84,2793
	my $res res85,2830
sub create Dns_domains::create90,2884
	my $r_Dns_domains r_Dns_domains91,2897
	my $query query92,2925
	my $dbh dbh146,4219
	my $res res147,4256

/emcsvn/billing/trunk/lib/Billing/Dial_accounts.pm,676
package Dial_accounts;3,17
sub new Dial_accounts::new9,99
my( $provider, $dial_id, $dial_password, $cus_num)( $provider, $dial_id, $dial_password, $cus_num11,110
	my $r_Dial_accounts r_Dial_accounts12,167
sub delete Dial_accounts::delete25,379
	my $r_Dial_accounts r_Dial_accounts26,392
	my $query query27,422
	my $dbh dbh28,517
	my $res res29,554
sub update Dial_accounts::update34,608
	my $r_Dial_accounts r_Dial_accounts35,621
	my $query query36,651
	my $dbh dbh44,932
	my $res res45,969
sub create Dial_accounts::create50,1023
	my $r_Dial_accounts r_Dial_accounts51,1036
	my $query query52,1066
	my $dbh dbh66,1332
	my $res res67,1369

/emcsvn/billing/trunk/lib/Billing/Supervisor.pm,1773
package Supervisor;1,0
my $year;year8,136
my $month;month9,146
sub parse_script_confSupervisor::parse_script_conf17,330
	my ($path, $conf)($path, $conf19,354
	my (@list, @pairs, $rootdir, $line, $errors)(@list, @pairs, $rootdir, $line, $errors20,379
				my ($vars, %script)($vars, %script37,771
					my ($name, $value)($name, $value46,1106
sub get_statusSupervisor::get_status84,1971
	my ($self, $year, $month, $script)($self, $year, $month, $script86,1988
	my ($dbh, $query, $stmt, $row)($dbh, $query, $stmt, $row87,2030
	my ($rc)($rc88,2063
sub put_statusSupervisor::put_status116,2818
	my ($self, $year, $month, $script)($self, $year, $month, $script118,2835
	my ($dbh, $update_query, $insert_query, $stmt, $row)($dbh, $update_query, $insert_query, $stmt, $row119,2877
	my $rc;rc120,2932
sub get_scriptSupervisor::get_script150,4036
	my ($self, $name, $priority)($self, $name, $priority152,4053
	my $matches_found matches_found153,4089
	my $remembered;remembered154,4113
sub newSupervisor::new180,4528
	my ($class)($class182,4538
	my ($sv_db, $sv_db_host, $sv_db_port, $sv_user, $sv_password, $path, $year, $month)($sv_db, $sv_db_host, $sv_db_port, $sv_user, $sv_password, $path, $year, $month183,4560
	my $self self184,4651
sub doSupervisor::do206,5231
	my ($self, $dbh, $script, @args)($self, $dbh, $script, @args208,5240
	my (@argv, $result)(@argv, $result209,5280
	my $try;try210,5302
			my ($package, $filename, $line)($package, $filename, $line219,5463
sub executeSupervisor::execute241,6091
	my ($self, $sth, $script, @args)($self, $sth, $script, @args243,6105
	my (@argv, $result)(@argv, $result244,6145
	my $try;try245,6167
			my ($package, $filename, $line)($package, $filename, $line260,6549

/emcsvn/billing/trunk/lib/Billing/Payment_method.pm,622
package Payment_method;3,17
sub new Payment_method::new9,100
my( $payment_id, $payment_desc)( $payment_id, $payment_desc11,111
	my $r_Payment_method r_Payment_method12,149
sub delete Payment_method::delete23,319
	my $r_Payment_method r_Payment_method24,332
	my $dbh dbh25,363
	my $res res26,400
sub update Payment_method::update31,454
	my $r_Payment_method r_Payment_method32,467
	my $query query33,498
	my $dbh dbh38,648
	my $res res39,685
sub create Payment_method::create44,739
	my $r_Payment_method r_Payment_method45,752
	my $query query46,783
	my $dbh dbh56,962
	my $res res57,999

/emcsvn/billing/trunk/lib/Billing/MakeMIME.pm,1730
package MakeMIME;1,0
sub create_messageMakeMIME::create_message12,300
	my ($header, $body, $parts, $use_old_format, $errstr)($header, $body, $parts, $use_old_format, $errstr14,321
	my $msg;msg16,383
	my $msg_alt;msg_alt17,393
	my $msg_mixed;msg_mixed18,407
			my $html_part html_part68,1859
			my $msg_main msg_main97,2609
			my $msg_alt msg_alt108,2932
			my %params params179,4664
sub create_alternativeMakeMIME::create_alternative202,5206
	my ($header, $body, $use_old_format, $errstr)($header, $body, $use_old_format, $errstr204,5231
sub create_mixedMakeMIME::create_mixed211,5423
	my ($header, $parts, $errstr)($header, $parts, $errstr213,5442
	my $msg;msg215,5480
		my %params params229,5777
sub new_content_idMakeMIME::new_content_id250,6280
	my ($domain)($domain252,6301
	my $id;id254,6322
sub emit_unsignedMakeMIME::emit_unsigned266,6513
	my ($entity, $path, $errstr)($entity, $path, $errstr268,6533
sub emit_openpgp_signedMakeMIME::emit_openpgp_signed281,6725
	my ($entity, $key, $path, $errstr)($entity, $key, $path, $errstr283,6751
	my $gpg gpg287,6813
sub emit_smime_signedMakeMIME::emit_smime_signed309,7261
	my ($entity, $cert, $path, $errstr)($entity, $cert, $path, $errstr311,7285
	my $sm sm315,7349
	my $p p331,7692
	my $q q332,7721
	my $msg_string msg_string341,7888
	my ($prep, $outer)($prep, $outer342,7926
	my $si si344,7988
 my $pgp_key pgp_key393,9272
 my $smime_cert smime_cert394,9366
 my $header header396,9474
 my $body body403,9689
 my $errstr;errstr412,9966
 my $content_id content_id414,9980
 my $rc rc416,10034
 my $rc rc417,10122
 my $rc rc418,10205
 my $rc rc420,10268
 my $rc rc421,10339
 my $rc rc422,10426

/emcsvn/billing/trunk/lib/Billing/Prepaid.pm,1286
package Prepaid;11,418
sub get_prepaids(Prepaid::get_prepaids14,464
  my ($customer,$year,$month)($customer,$year,$month15,488
  my @out out16,524
  my $months months17,540
  my $has_charge has_charge18,559
  my $has_prepaid has_prepaid19,581
    my $transactions transactions23,730
sub get_prepaids_month(Prepaid::get_prepaids_month44,1376
  my ($cusnum,$year,$month)($cusnum,$year,$month45,1406
  my $emc_dbh emc_dbh53,1692
  my $res res54,1868
  my %out out56,2027
  my $prepaid_missing prepaid_missing57,2043
sub fix_prepaid(Prepaid::fix_prepaid82,2940
  my $lineref lineref83,2961
  my @fields fields85,3038
  my @data data86,3215
  my $sql sql90,3304
  my $emc_dbh emc_dbh92,3412
  my $res res93,3588
sub calc_prepaid_months(Prepaid::calc_prepaid_months114,4289
	my ($customer, $year, $month, $months)($customer, $year, $month, $months115,4321
  my $check_init_ym check_init_ym117,4368
	my $multiple multiple129,4634
	my $start_year start_year144,5043
	my $start_month start_month145,5068
	my $end_year end_year147,5125
	my $end_month end_month148,5154
	my $target_ym target_ym158,5322
	my $check_start_ym;check_start_ym160,5377
	my $check_end_ym;check_end_ym161,5398
	my($y,$m)($y,$m192,6239
		my $ym ym194,6303

/emcsvn/billing/trunk/lib/Billing/CCBatchPaymentech.pm,4508
package CCBatchPaymentech;1,0
sub newCCBatchPaymentech::new13,213
	my ($class)($class15,223
	my ($emc_dbh, $merchantID)($emc_dbh, $merchantID16,245
	my $self self24,460
sub set_loginCCBatchPaymentech::set_login53,963
	my ($self, $host, $username, $password)($self, $host, $username, $password55,979
sub set_fileCCBatchPaymentech::set_file62,1116
	my ($self, $batch_dir, $batch_file, $unix_timestamp)($self, $batch_dir, $batch_file, $unix_timestamp64,1131
sub conv_to_centsCCBatchPaymentech::conv_to_cents77,1484
	my ($amount)($amount79,1504
sub emit_headerCCBatchPaymentech::emit_header87,1603
	my ($self, $fp, $fileID, $file_timestamp)($self, $fp, $fileID, $file_timestamp89,1621
sub emit_order_requestCCBatchPaymentech::emit_order_request98,1954
	my ($self, $fp, $request, $sequence)($self, $fp, $request, $sequence100,1979
	my %avs_countries avs_countries102,2024
		my ($year, $month)($year, $month122,2984
sub emit_void_requestCCBatchPaymentech::emit_void_request145,4237
	my ($self, $fp, $request, $sequence)($self, $fp, $request, $sequence147,4261
sub emit_footerCCBatchPaymentech::emit_footer163,4918
	my ($self, $fp, $sequence)($self, $fp, $sequence165,4936
sub emit_batch_fileCCBatchPaymentech::emit_batch_file175,5331
	my ($self, $errstr)($self, $errstr177,5353
	my $request_count request_count179,5381
    my $fp fp187,5641
	my $request_sequence request_sequence212,6441
sub zip_batch_fileCCBatchPaymentech::zip_batch_file231,6916
	my ($self, $fileID, $pwd, $errstr)($self, $fileID, $pwd, $errstr233,6937
	my $rc rc235,6980
sub finalize_batchCCBatchPaymentech::finalize_batch248,7289
	my ($self, $batch_file, $errstr)($self, $batch_file, $errstr250,7310
	my $errors errors251,7350
	my $query query256,7475
sub add_recurring_chargeCCBatchPaymentech::add_recurring_charge286,8085
	my ($self, $request)($self, $request288,8112
sub add_ecommerce_chargeCCBatchPaymentech::add_ecommerce_charge299,8318
	my ($self, $request)($self, $request301,8345
sub add_recurring_refundCCBatchPaymentech::add_recurring_refund312,8551
	my ($self, $request)($self, $request314,8578
sub add_ecommerce_refundCCBatchPaymentech::add_ecommerce_refund325,8783
	my ($self, $request)($self, $request327,8810
sub add_voidCCBatchPaymentech::add_void338,9015
	my ($self, $request)($self, $request340,9030
sub request_countCCBatchPaymentech::request_count348,9167
	my ($self)($self350,9187
sub put_filesCCBatchPaymentech::put_files361,9450
	my ($self, $login, $files, $timeout)($self, $login, $files, $timeout363,9466
sub get_filesCCBatchPaymentech::get_files368,9567
	my ($self, $login, $files, $timeout)($self, $login, $files, $timeout370,9583
sub delete_filesCCBatchPaymentech::delete_files375,9684
	my ($self, $login, $files, $timeout)($self, $login, $files, $timeout377,9703
sub sftp_filesCCBatchPaymentech::sftp_files390,10061
	my ($login, $op, $files, $timeout)($login, $op, $files, $timeout392,10078
	my %sftp_args sftp_args401,10258
	my $sftp sftp413,10588
			my $src;src422,10816
			my $dst;dst423,10828
			my $rc rc437,11111
			my $src;src446,11299
			my $dst;dst447,11311
			my $rc rc461,11594
			my $dst;dst470,11781
			my $rc rc478,11930
sub get_responseCCBatchPaymentech::get_response495,12152
	my ($self, $batchRequestNo, $errstr)($self, $batchRequestNo, $errstr497,12171
sub parse_response_fileCCBatchPaymentech::parse_response_file513,12509
	my ($self, $response_file, $errstr)($self, $response_file, $errstr515,12535
	my $xmlschema xmlschema522,12668
	my $parser parser523,12793
	my $doc doc524,12825
	my $root root538,13107
		my $response response540,13196
		my $batchRequestNo batchRequestNo542,13234
		my $response response559,13977
		my $batchRequestNo batchRequestNo561,14016
		my $response response590,15545
		my $batchRequestNo batchRequestNo592,15586
				my $request request622,17127
				my $request request637,17909
				my $request request644,18370
				my $request request651,18834
sub parse_batch_fileCCBatchPaymentech::parse_batch_file701,20958
	my ($self, $batch_file, $errstr)($self, $batch_file, $errstr703,20981
	my $xmlschema xmlschema710,21105
	my $parser parser711,21229
	my $doc doc712,21261
	my $root root727,21562
			my $request request734,21881
			my $request request759,23115
			my $request request769,23549
			my $request request791,24802
			my $request request813,26061
			my $request request824,26530

/emcsvn/billing/trunk/lib/Billing/Invoice.pm,666
package Invoice;3,17
sub new Invoice::new9,93
my( $cus_num, $batch_num, $inv_subtotal, $inv_gst, $inv_pst, $inv_total, $inv_type)( $cus_num, $batch_num, $inv_subtotal, $inv_gst, $inv_pst, $inv_total, $inv_type11,104
	my $r_Invoice r_Invoice12,194
sub delete Invoice::delete28,460
	my $r_Invoice r_Invoice29,473
	my $query query30,497
	my $dbh dbh31,578
	my $res res32,615
sub update Invoice::update37,669
	my $r_Invoice r_Invoice38,682
	my $query query39,706
	my $dbh dbh50,1066
	my $res res51,1103
sub create Invoice::create56,1157
	my $r_Invoice r_Invoice57,1170
	my $query query58,1194
	my $dbh dbh78,1556
	my $res res79,1593

/emcsvn/billing/trunk/lib/Billing/Bounces.pm,1555
package Bounces;5,107
sub newBounces::new11,187
	my ($class, $box_fulladdress, $password, $timeout)($class, $box_fulladdress, $password, $timeout13,197
	my $this this15,256
	my %monthMapping monthMapping24,378
	my ($localpart, $domain)($localpart, $domain41,633
sub _setTimeoutBounces::_setTimeout53,933
	my ($this, $timeout)($this, $timeout55,951
sub _setMonthBounces::_setMonth60,1015
	my ($this, $months)($this, $months62,1031
sub _setDomainBounces::_setDomain67,1091
	my ($this, $domain)($this, $domain69,1108
sub _setHostnameBounces::_setHostname74,1169
	my ($this, $hostname)($this, $hostname76,1188
sub _setUsernameBounces::_setUsername81,1256
	my ($this, $box_fulladdress)($this, $box_fulladdress83,1275
sub _setPasswordBounces::_setPassword88,1357
	my ($this, $password)($this, $password90,1376
sub _setBounceInfoBounces::_setBounceInfo95,1444
	my ($this, $bounceinfo)($this, $bounceinfo97,1465
sub _getBounceInfoBounces::_getBounceInfo102,1538
	my $this this104,1559
	my $domain domain106,1579
	my $imap imap108,1613
	my @bounceinfo;bounceinfo114,1799
		my @msgs msgs119,1869
			my $msg msg124,2026
      my $mail_from;mail_from125,2067
			my $mail_id_crypt;mail_id_crypt131,2314
			my $mail_id;mail_id132,2336
			my ($mday, $mon, $year, $hh, $mm, $ss)($mday, $mon, $year, $hh, $mm, $ss150,2771
			my $timestamp timestamp152,2902
			my ($client_ip_addr)($client_ip_addr157,3085
			my $data data161,3232
sub getBounceInfoBounces::getBounceInfo190,3839
	my $this this192,3859

/emcsvn/billing/trunk/lib/Billing/Emc_staff.pm,2031
package Emc_staff;3,18
sub newEmc_staff::new13,236
	my $emc_dbh emc_dbh17,255
	my ($emc_fullname, $emc_password, $emc_category, $emc_num, $emc_email, $emc_ldap,($emc_fullname, $emc_password, $emc_category, $emc_num, $emc_email, $emc_ldap,19,278
		my ($emc_search)($emc_search23,471
		my $query;query24,496
		my $stmt stmt34,717
		my $row row36,788
			my $query query41,929
			my $stmt stmt42,988
	my $staff staff67,1791
	my $query query85,2243
	my $stmt stmt86,2342
sub deleteEmc_staff::delete96,2550
	my $staff staff98,2563
	my $emc_dbh emc_dbh100,2584
	my $query query102,2615
	my $res res103,2671
		my $query query106,2743
		my $aka_dbh aka_dbh112,3039
			my $query query115,3284
			my $res res116,3342
sub updateEmc_staff::update127,3486
	my $staff staff129,3499
	my $emc_dbh emc_dbh131,3520
	my $query query133,3551
	my $stmt stmt134,3607
	my $orig orig136,3682
	my $res res156,4050
		my %old_codes;old_codes174,4481
		my $query query175,4498
		my $stmt stmt176,4600
		my %access_codes;access_codes185,4871
				my $query query194,5187
		my $aka_dbh aka_dbh202,5464
			my $query query205,5709
			my $res res220,6005
		my $h_diff h_diff240,6428
sub createEmc_staff::create264,7198
	my $staff staff266,7211
	my $emc_dbh emc_dbh268,7232
	my $query query271,7264
	my $res res291,7578
		my $res res306,7930
		my @row row308,8005
		my $query query312,8087
		my %access_codes;access_codes315,8237
		my $stmt stmt317,8305
				my $query query324,8556
		my $aka_dbh aka_dbh339,9147
			my $query query342,9392
			my $res res361,9708
sub diff_hashEmc_staff::diff_hash386,10232
	my ($hr1, $hr2)($hr1, $hr2388,10248
	my %result;result389,10271
sub has_accessEmc_staff::has_access401,10420
	my ($self, $code_or_tag)($self, $code_or_tag403,10437
sub has_contact_accessEmc_staff::has_contact_access422,10890
	my ($self)($self424,10915
sub has_profile_accessEmc_staff::has_profile_access429,11019
	my ($self)($self431,11044

/emcsvn/billing/trunk/lib/Billing/Mhs_domains.pm,635
package Mhs_domains;3,17
sub new Mhs_domains::new9,97
my( $cus_num, $mhs_shortname, $mhs_password)( $cus_num, $mhs_shortname, $mhs_password11,108
	my $r_Mhs_domains r_Mhs_domains12,159
sub delete Mhs_domains::delete24,347
	my $r_Mhs_domains r_Mhs_domains25,360
	my $query query26,388
	my $dbh dbh27,489
	my $res res28,526
sub update Mhs_domains::update33,580
	my $r_Mhs_domains r_Mhs_domains34,593
	my $query query35,621
	my $dbh dbh42,867
	my $res res43,904
sub create Mhs_domains::create48,958
	my $r_Mhs_domains r_Mhs_domains49,971
	my $query query50,999
	my $dbh dbh62,1219
	my $res res63,1256

/emcsvn/billing/trunk/lib/Billing/Spam_usage.pm,555
package Spam_usage;3,17
sub new Spam_usage::new9,96
my( $spam_num, $cus_num)( $spam_num, $cus_num11,107
	my $r_Spam_usage r_Spam_usage12,138
sub delete Spam_usage::delete23,278
	my $r_Spam_usage r_Spam_usage24,291
	my $dbh dbh25,318
	my $res res26,355
sub update Spam_usage::update31,409
	my $r_Spam_usage r_Spam_usage32,422
	my $query query33,449
	my $dbh dbh38,573
	my $res res39,610
sub create Spam_usage::create44,664
	my $r_Spam_usage r_Spam_usage45,677
	my $query query46,704
	my $dbh dbh56,857
	my $res res57,894

/emcsvn/billing/trunk/lib/Billing/Control.pm,534
package Control;3,17
sub new Control::new9,93
my( $relay_updated, $emm_updated)( $relay_updated, $emm_updated11,104
	my $r_Control r_Control12,144
sub delete Control::delete23,290
	my $r_Control r_Control24,303
	my $dbh dbh25,327
	my $res res26,364
sub update Control::update31,418
	my $r_Control r_Control32,431
	my $query query33,455
	my $dbh dbh38,588
	my $res res39,625
sub create Control::create44,679
	my $r_Control r_Control45,692
	my $query query46,716
	my $dbh dbh56,878
	my $res res57,915

/emcsvn/billing/trunk/lib/Billing/Spamfilters.pm,637
package Spamfilters;3,17
sub new Spamfilters::new9,97
my( $spam_num, $spam_desc, $spam_explanation)( $spam_num, $spam_desc, $spam_explanation11,108
	my $r_Spamfilters r_Spamfilters12,160
sub delete Spamfilters::delete24,350
	my $r_Spamfilters r_Spamfilters25,363
	my $query query26,391
	my $dbh dbh27,482
	my $res res28,519
sub update Spamfilters::update33,573
	my $r_Spamfilters r_Spamfilters34,586
	my $query query35,614
	my $dbh dbh42,852
	my $res res43,889
sub create Spamfilters::create48,943
	my $r_Spamfilters r_Spamfilters49,956
	my $query query50,984
	my $dbh dbh62,1206
	my $res res63,1243

/emcsvn/billing/trunk/lib/Billing/Quote.pm,576
package Quote;3,17
sub new Quote::new9,91
my( $name, $date, $emc_num, $quote_cus_num, $cus_num)( $name, $date, $emc_num, $quote_cus_num, $cus_num13,110
	my $r_Quote r_Quote14,170
sub delete Quote::delete28,360
	my $r_Quote r_Quote29,373
	my $query query30,395
	my $dbh dbh31,462
	my $res res32,499
sub update Quote::update42,584
	my $r_Quote r_Quote43,597
	my $query query44,619
	my $dbh dbh53,861
	my $res res54,898
sub create Quote::create64,983
	my $r_Quote r_Quote65,996
	my $query query66,1018
	my $dbh dbh82,1268
	my $res res83,1305

/emcsvn/billing/trunk/lib/Billing/Functions.pm,460
package Functions;3,21
sub db_connect Functions::db_connect13,176
	my($user, $password, $host, $port, $driver, $database)($user, $password, $host, $port, $driver, $database15,203
	my $connect connect17,266
	my $dbh dbh18,340
sub databasecon Functions::databasecon25,466
	my $database database27,494
	my $user user28,527
	my $password password29,561
	my $driver driver30,599
	my $host host31,637
	my $port port32,672
	my $dbh dbh33,706

/emcsvn/billing/trunk/lib/Billing/Traffic.pm,594
package Traffic;3,17
sub new Traffic::new9,93
my( $sub_num, $tr_type, $tr_datum, $tr_unixdate, $tr_comments)( $sub_num, $tr_type, $tr_datum, $tr_unixdate, $tr_comments11,104
	my $r_Traffic r_Traffic12,173
sub delete Traffic::delete26,389
	my $r_Traffic r_Traffic27,402
	my $dbh dbh28,426
	my $res res29,463
sub update Traffic::update34,517
	my $r_Traffic r_Traffic35,530
	my $query query36,554
	my $dbh dbh44,796
	my $res res45,833
sub create Traffic::create50,887
	my $r_Traffic r_Traffic51,900
	my $query query52,924
	my $dbh dbh68,1204
	my $res res69,1241

/emcsvn/billing/trunk/lib/Billing/Batch.pm,565
package Batch;3,17
sub new Batch::new9,91
my( $batch_unixdate, $batch_date, $batch_posted)( $batch_unixdate, $batch_date, $batch_posted11,102
	my $r_Batch r_Batch12,157
sub delete Batch::delete24,329
	my $r_Batch r_Batch25,342
	my $query query26,364
	my $dbh dbh27,445
	my $res res28,482
sub update Batch::update33,536
	my $r_Batch r_Batch34,549
	my $query query35,571
	my $dbh dbh42,787
	my $res res43,824
sub create Batch::create48,878
	my $r_Batch r_Batch49,891
	my $query query50,913
	my $dbh dbh62,1117
	my $res res63,1154

/emcsvn/billing/trunk/lib/Billing/Dns_types.pm,634
package Dns_types;3,17
sub new Dns_types::new9,95
my( $dns_type, $dt_desc, $dt_address, $dt_mx1, $dt_mx2)( $dns_type, $dt_desc, $dt_address, $dt_mx1, $dt_mx211,106
	my $r_Dns_types r_Dns_types12,168
sub delete Dns_types::delete26,378
	my $r_Dns_types r_Dns_types27,391
	my $query query28,417
	my $dbh dbh29,504
	my $res res30,541
sub update Dns_types::update35,595
	my $r_Dns_types r_Dns_types36,608
	my $query query37,634
	my $dbh dbh46,920
	my $res res47,957
sub create Dns_types::create52,1011
	my $r_Dns_types r_Dns_types53,1024
	my $query query54,1050
	my $dbh dbh70,1328
	my $res res71,1365

/emcsvn/billing/trunk/lib/Billing/ContactLink.pm,1189
package ContactLink;3,18
my %contact_types contact_types10,166
sub newContactLink::new16,243
	my ($emc_dbh, $con_num, $cus_num, $con_type, $con_sendspam, $no_marketing, $con_primary)($emc_dbh, $con_num, $cus_num, $con_type, $con_sendspam, $no_marketing, $con_primary20,262
	my $conlink;conlink22,359
		my $query query25,397
		my $stmt stmt26,486
sub deleteContactLink::delete53,1004
	my $conlink conlink55,1017
	my $now_ts now_ts57,1040
	my $dbh dbh59,1105
	my $query query60,1133
	my $res res61,1229
sub unlinkContactLink::unlink84,1986
	my $conlink conlink86,1999
	my $now_ts now_ts88,2022
	my $dbh dbh90,2087
	my $query query91,2115
	my $res res93,2244
		my $con_type_name con_type_name96,2366
sub updateContactLink::update115,3098
	my $conlink conlink117,3111
	my $query query119,3134
	my $dbh dbh127,3286
	my $res res128,3314
sub createContactLink::create149,4051
	my $conlink conlink151,4064
	my $query query153,4087
	my $dbh dbh166,4275
	my $res;res167,4303
		my $query query170,4345
		my $con_type_name con_type_name184,4754
sub con_type_to_nameContactLink::con_type_to_name202,5512
	my $con_type con_type204,5535

/emcsvn/billing/trunk/lib/Billing/Tech_notes.pm,660
package Tech_notes;3,17
sub new Tech_notes::new9,96
my( $cus_num, $emc_email, $date, $note, $subject, $tn_status)( $cus_num, $emc_email, $date, $note, $subject, $tn_status11,107
	my $r_Tech_notes r_Tech_notes12,175
sub delete Tech_notes::delete27,405
	my $r_Tech_notes r_Tech_notes28,418
	my $query query29,445
	my $dbh dbh30,530
	my $res res31,567
sub update Tech_notes::update36,621
	my $r_Tech_notes r_Tech_notes37,634
	my $query query38,661
	my $dbh dbh48,982
	my $res res49,1019
sub create Tech_notes::create54,1073
	my $r_Tech_notes r_Tech_notes55,1086
	my $query query56,1113
	my $dbh dbh74,1432
	my $res res75,1469

/emcsvn/billing/trunk/lib/Billing/Eic_primary.pm,708
package Eic_primary;3,17
sub new Eic_primary::new9,97
my( $cus_num, $eic_name, $eic_server, $eic_password, $eic_mailer, $eic_notify)( $cus_num, $eic_name, $eic_server, $eic_password, $eic_mailer, $eic_notify11,108
	my $r_Eic_primary r_Eic_primary12,193
sub delete Eic_primary::delete27,461
	my $r_Eic_primary r_Eic_primary28,474
	my $query query29,502
	my $dbh dbh30,593
	my $res res31,630
sub update Eic_primary::update36,684
	my $r_Eic_primary r_Eic_primary37,697
	my $query query38,725
	my $dbh dbh48,1092
	my $res res49,1129
sub create Eic_primary::create54,1183
	my $r_Eic_primary r_Eic_primary55,1196
	my $query query56,1224
	my $dbh dbh74,1584
	my $res res75,1621

/emcsvn/billing/trunk/lib/Billing/Tran_types.pm,558
package Tran_types;3,17
sub new Tran_types::new9,96
my( $tt_desc)( $tt_desc11,107
	my $r_Tran_types r_Tran_types12,127
sub delete Tran_types::delete22,241
	my $r_Tran_types r_Tran_types23,254
	my $query query24,281
	my $dbh dbh25,372
	my $res res26,409
sub update Tran_types::update31,463
	my $r_Tran_types r_Tran_types32,476
	my $query query33,503
	my $dbh dbh38,634
	my $res res39,671
sub create Tran_types::create44,725
	my $r_Tran_types r_Tran_types45,738
	my $query query46,765
	my $dbh dbh54,873
	my $res res55,910

/emcsvn/billing/trunk/lib/Billing/Eic_faxlog.pm,557
package Eic_faxlog;3,17
sub new Eic_faxlog::new9,96
my( $eic_name, $fax_date)( $eic_name, $fax_date11,107
	my $r_Eic_faxlog r_Eic_faxlog12,139
sub delete Eic_faxlog::delete23,281
	my $r_Eic_faxlog r_Eic_faxlog24,294
	my $dbh dbh25,321
	my $res res26,358
sub update Eic_faxlog::update31,412
	my $r_Eic_faxlog r_Eic_faxlog32,425
	my $query query33,452
	my $dbh dbh38,578
	my $res res39,615
sub create Eic_faxlog::create44,669
	my $r_Eic_faxlog r_Eic_faxlog45,682
	my $query query46,709
	my $dbh dbh56,864
	my $res res57,901

/emcsvn/billing/trunk/lib/Billing/Quote_data.pm,749
package Quote_data;3,17
sub new Quote_data::new9,96
my( $quote_id, $service_num, $users, $discount, $discount_amount, $price, $total_before_discount, $total)( $quote_id, $service_num, $users, $discount, $discount_amount, $price, $total_before_discount, $total13,115
	my $r_Quote_data r_Quote_data14,227
sub delete Quote_data::delete31,553
	my $r_Quote_data r_Quote_data32,566
	my $query query33,593
	my $dbh dbh34,670
	my $res res35,707
sub update Quote_data::update45,792
	my $r_Quote_data r_Quote_data46,805
	my $query query47,832
	my $dbh dbh59,1273
	my $res res60,1310
sub create Quote_data::create70,1395
	my $r_Quote_data r_Quote_data71,1408
	my $query query72,1435
	my $dbh dbh94,1888
	my $res res95,1925

/emcsvn/billing/trunk/lib/Billing/Remote_smtp_ip.pm,663
package Remote_smtp_ip;3,17
sub new Remote_smtp_ip::new9,100
my( $cus_num, $IP, $service, $comment)( $cus_num, $IP, $service, $comment11,111
	my $r_Remote_smtp_ip r_Remote_smtp_ip12,156
sub delete Remote_smtp_ip::delete25,348
	my $r_Remote_smtp_ip r_Remote_smtp_ip26,361
	my $query query27,392
	my $dbh dbh28,477
	my $res res29,514
sub update Remote_smtp_ip::update34,568
	my $r_Remote_smtp_ip r_Remote_smtp_ip35,581
	my $query query36,612
	my $dbh dbh44,863
	my $res res45,900
sub create Remote_smtp_ip::create50,954
	my $r_Remote_smtp_ip r_Remote_smtp_ip51,967
	my $query query52,998
	my $dbh dbh66,1245
	my $res res67,1282

/emcsvn/billing/trunk/lib/Billing/CreditCard.pm,3499
package CreditCard;6,95
sub null_ccCreditCard::null_cc16,259
	my($cc)($cc18,273
sub newCreditCard::new37,888
	my ($emc_dbh, $cus_num, $cc_id, $cc_hash, $card_type, $cc_data,($emc_dbh, $cus_num, $cc_id, $cc_hash, $card_type, $cc_data,41,907
	my $cc cc45,1096
		my $query query58,1495
		my $stmt stmt68,1950
			my $cc_data cc_data77,2155
		my $query query83,2344
		my $stmt stmt92,2780
			my $cc_data cc_data101,2993
		my $cc_data cc_data125,3739
sub deleteCreditCard::delete142,4038
	my $cc cc144,4051
	my $emc_dbh emc_dbh146,4069
	my $cc_data cc_data148,4097
	my $now now153,4212
	my $now_date now_date154,4231
	my $sql_failed sql_failed157,4319
	my $query query159,4341
	my $res res160,4412
	my $row row168,4640
	my $refcount refcount170,4690
		my $query query176,4792
		my $res res177,4863
			my $query query184,5019
			my $stmt stmt185,5109
sub updateCreditCard::update205,5534
	my $cc cc207,5547
	my $emc_dbh emc_dbh209,5565
	my $query query211,5593
	my $stmt stmt215,5713
	my $orig orig217,5783
	my $now now220,5837
	my $now_date now_date221,5856
	my $res res234,6144
		my $query query245,6392
		my $orig_cc_data orig_cc_data252,6582
		my $new_cc_data new_cc_data253,6668
			my $h_diff h_diff257,6817
				my $original original259,6914
			my $dup_orig dup_orig274,7305
			my $dup_new dup_new275,7330
			my $h_diff h_diff277,7353
				my $original original283,7527
sub createCreditCard::create298,7836
	my $cc cc300,7849
	my $emc_dbh emc_dbh302,7867
	my $now now304,7895
	my $now_date now_date305,7914
	my $query query307,7979
	my $res res316,8201
		my @row row324,8491
		my $new_cc new_cc329,8569
		my $query query334,8751
sub diff_hashCreditCard::diff_hash346,9239
	my ($hr1, $hr2)($hr1, $hr2348,9255
	my %result;result349,9278
sub encryptCreditCard::encrypt370,9588
	my ($cc, $pw)($cc, $pw372,9602
	my $packing_version packing_version373,9623
	my @cols cols375,9650
	my $csv csv388,10079
	my $plaintext plaintext390,10160
	my $cipher cipher392,10192
	my $ciphertext ciphertext402,10452
sub decryptCreditCard::decrypt409,10631
	my ($b64_text, $pw)($b64_text, $pw411,10645
	my %cc;cc412,10672
	my ($version, $b64_ciphertext)($version, $b64_ciphertext420,10829
		my $cipher cipher425,10970
		my $ciphertext ciphertext432,11150
		my $plaintext plaintext437,11291
			my $csv csv457,11727
			my $rc rc458,11787
			my @cols cols459,11824
sub validateCreditCard::validate490,12660
	my ($number)($number492,12675
	my ($i, $sum, $weight)($i, $sum, $weight493,12695
my %prefixes prefixes512,13170
sub validate_card_typeCreditCard::validate_card_type536,15126
	my ($card_type, $card_num)($card_type, $card_num538,15151
		my $v v541,15224
sub get_card_typeCreditCard::get_card_type555,15493
	my ($card_num)($card_num557,15513
		my $v v560,15574
sub hash_cc_numCreditCard::hash_cc_num577,16087
	my ($cc_num)($cc_num579,16105
	my $digest digest585,16201
sub search_for_cardCreditCard::search_for_card590,16271
	my ($emc_dbh, $cc_num, $answers, $emc_num, $pw)($emc_dbh, $cc_num, $answers, $emc_num, $pw592,16293
	my $cc_hash cc_hash600,16423
	my @answers;answers603,16495
	my $query query605,16510
	my $res res607,16657
		my $test test611,16765
			my $found_cc found_cc618,16885
my %known_test_numbers known_test_numbers648,17766
sub is_test_numberCreditCard::is_test_number675,18329
	my ($num)($num677,18350

/emcsvn/billing/trunk/lib/Billing/Quote_customer.pm,832
package Quote_customer;3,17
sub new Quote_customer::new9,100
my( $cus_name, $cus_address1, $cus_address2, $cus_city, $cus_prov, $cus_country, $cus_postal, $emc_num, $cus_profile_id)( $cus_name, $cus_address1, $cus_address2, $cus_city, $cus_prov, $cus_country, $cus_postal, $emc_num, $cus_profile_id13,119
	my $r_Quote_customer r_Quote_customer14,246
sub delete Quote_customer::delete32,622
	my $r_Quote_customer r_Quote_customer33,635
	my $query query34,666
	my $dbh dbh35,761
	my $res res36,798
sub update Quote_customer::update46,883
	my $r_Quote_customer r_Quote_customer47,896
	my $query query48,927
	my $dbh dbh61,1472
	my $res res62,1509
sub create Quote_customer::create72,1594
	my $r_Quote_customer r_Quote_customer73,1607
	my $query query74,1638
	my $dbh dbh98,2184
	my $res res99,2221

/emcsvn/billing/trunk/lib/Billing/PolicySmart.pm,2569
package PolicySmart;1,0
sub getCusNumForDomainPolicySmart::getCusNumForDomain6,44
	my ($aka_dbh, $domain)($aka_dbh, $domain8,69
	my $sql sql10,100
	my $query query11,166
	my $row row14,232
sub countCypherSmartUsersPolicySmart::countCypherSmartUsers20,315
	my ($aka_dbh, $domain)($aka_dbh, $domain22,343
	my $sql sql24,374
	my $query query26,507
	my $row row29,580
sub getMailboxCountPolicySmart::getMailboxCount35,661
	my ($aka_dbh, $domain)($aka_dbh, $domain37,683
	my $nMailboxes nMailboxes39,714
	my $sql sql41,737
	my $query query42,824
sub getDomainMailboxesPolicySmart::getDomainMailboxes53,1013
	my ($aka_dbh, $domain)($aka_dbh, $domain55,1038
	my $nMailboxes nMailboxes57,1070
	my $sql sql59,1093
	my $query query60,1185
	my @mailboxes mailboxes63,1252
	my $i i64,1273
sub getDomainMailboxesExceptPolicySmart::getDomainMailboxesExcept73,1421
	my ($aka_dbh, $domain, $listID)($aka_dbh, $domain, $listID75,1452
	my $nMailboxes nMailboxes77,1492
	my $sql sql79,1514
	my $query query84,1699
	my @mailboxes mailboxes87,1773
	my $i i88,1794
sub getApplyListCountPolicySmart::getApplyListCount97,1942
	my ($aka_dbh, $listID)($aka_dbh, $listID99,1966
	my $sql sql101,1997
	my $query query103,2086
	my $row row106,2153
	my $nMailboxes nMailboxes108,2192
sub getListMailboxesPolicySmart::getListMailboxes118,2312
	my ($aka_dbh, $listID)($aka_dbh, $listID120,2335
	my $sql sql122,2368
	my $query query124,2439
	my @mailboxes mailboxes127,2505
	my $i i128,2526
sub inApplyListPolicySmart::inApplyList137,2667
	my ($aka_dbh, $listID, $data)($aka_dbh, $listID, $data139,2685
	my $sql sql141,2725
	my $query query143,2820
	my $row row146,2894
	my $count count148,2933
sub get_policy_user_count_bydomainPolicySmart::get_policy_user_count_bydomain161,3120
	my ($aka_dbh, $domain, $sps_service_num, $min_days, $max_days)($aka_dbh, $domain, $sps_service_num, $min_days, $max_days163,3157
	my $cusNum cusNum165,3228
	my $query;query166,3281
	my $nMailboxes nMailboxes167,3293
	my $sql sql171,3380
		my $action;action187,3840
	my $filterID;filterID208,4371
	my $filterOwner;filterOwner209,4386
	my $applyListID;applyListID210,4404
	my $exceptionListID;exceptionListID211,4422
	my @applyMailboxes applyMailboxes213,4446
	my @exemptMailboxes exemptMailboxes214,4472
	my @policyMailboxes policyMailboxes215,4499
	my @domainMailboxes domainMailboxes216,4526
	my $nDomainMailboxes nDomainMailboxes218,4555
			my %seen;seen248,5551
			my %seen;seen255,5811

/emcsvn/billing/trunk/lib/Billing/Eic_log.pm,580
package Eic_log;3,17
sub new Eic_log::new9,93
my( $eic_name, $call_duration, $call_date, $call_bytes)( $eic_name, $call_duration, $call_date, $call_bytes11,104
	my $r_Eic_log r_Eic_log12,166
sub delete Eic_log::delete25,364
	my $r_Eic_log r_Eic_log26,377
	my $dbh dbh27,401
	my $res res28,438
sub update Eic_log::update33,492
	my $r_Eic_log r_Eic_log34,505
	my $query query35,529
	my $dbh dbh42,740
	my $res res43,777
sub create Eic_log::create48,831
	my $r_Eic_log r_Eic_log49,844
	my $query query50,868
	my $dbh dbh64,1114
	my $res res65,1151

/emcsvn/billing/trunk/lib/Billing/Message_log.pm,677
package Message_log;3,17
sub new Message_log::new9,97
my( $cus_num, $msg_direction, $msg_date, $msg_size, $msg_sender, $msg_recip)( $cus_num, $msg_direction, $msg_date, $msg_size, $msg_sender, $msg_recip11,108
	my $r_Message_log r_Message_log12,191
sub delete Message_log::delete27,455
	my $r_Message_log r_Message_log28,468
	my $dbh dbh29,496
	my $res res30,533
sub update Message_log::update35,587
	my $r_Message_log r_Message_log36,600
	my $query query37,628
	my $dbh dbh46,943
	my $res res47,980
sub create Message_log::create52,1034
	my $r_Message_log r_Message_log53,1047
	my $query query54,1075
	my $dbh dbh72,1431
	my $res res73,1468

/emcsvn/billing/trunk/lib/Billing/Currencies.pm,860
package Currencies;3,17
sub new Currencies::new9,96
my ($cus_currency)($cus_currency11,113
	my $sql sql12,139
	my $dbh dbh13,215
	my $res res14,252
	my $row row16,300
	my $r_Currencies r_Currencies17,335
sub delete Currencies::delete29,532
	my $r_Currencies r_Currencies30,545
	my $query query31,572
	my $dbh dbh32,669
	my $res res33,706
sub update Currencies::update38,760
	my $r_Currencies r_Currencies39,773
	my $query query40,800
	my $dbh dbh45,939
	my $res res46,976
sub create Currencies::create51,1030
	my $r_Currencies r_Currencies52,1043
	my $query query53,1070
	my $dbh dbh61,1180
	my $res res62,1217
sub get_name Currencies::get_name66,1270
  my $r_Currencies r_Currencies67,1285
	my $row;row68,1313
  my $query query69,1323
  my $dbh dbh70,1433
  my $res res71,1471
  my $rows rows73,1523

/emcsvn/billing/trunk/lib/Billing/Msmail_pos.pm,593
package Msmail_pos;3,17
sub new Msmail_pos::new9,96
my( $cus_num, $ms_id, $ms_po, $ms_network)( $cus_num, $ms_id, $ms_po, $ms_network11,107
	my $r_Msmail_pos r_Msmail_pos12,156
sub delete Msmail_pos::delete25,340
	my $r_Msmail_pos r_Msmail_pos26,353
	my $dbh dbh27,380
	my $res res28,417
sub update Msmail_pos::update33,471
	my $r_Msmail_pos r_Msmail_pos34,484
	my $query query35,511
	my $dbh dbh42,711
	my $res res43,748
sub create Msmail_pos::create48,802
	my $r_Msmail_pos r_Msmail_pos49,815
	my $query query50,842
	my $dbh dbh64,1077
	my $res res65,1114

/emcsvn/billing/trunk/lib/Billing/Transactions2.pm,1036
package Transactions2;3,18
sub newTransactions2::new45,1220
	my ($class)($class47,1230
	my ($sql, $res, $row)($sql, $res, $row49,1253
	my ($emc_dbh, $tran_num, $year, $month, $cus_num, $owner_num, $parent_tran_num,($emc_dbh, $tran_num, $year, $month, $cus_num, $owner_num, $parent_tran_num,50,1277
	my $self self90,2934
sub deleteTransactions2::delete121,3756
	my $transaction transaction123,3769
	my $emc_dbh emc_dbh125,3796
	my $query query130,3878
	my $res res131,3938
sub updateTransactions2::update140,4215
	my $transaction transaction142,4228
	my $emc_dbh emc_dbh144,4255
	my $query query149,4337
	my $stmt stmt150,4397
	my $orig orig152,4479
	my $res res177,4952
		my $h_diff h_diff199,5635
sub createTransactions2::create210,5966
	my $transaction transaction212,5979
	my $emc_dbh emc_dbh214,6006
	my $query query219,6088
	my $res res261,6611
		my $row row285,7473
sub diff_hashTransactions2::diff_hash298,7831
	my ($hr1, $hr2)($hr1, $hr2300,7847
	my %result;result301,7870

/emcsvn/billing/trunk/lib/Billing/API.pm,823
package API;1,0
sub newAPI::new10,120
	my ($host, $port, $realm, $user, $passwords)($host, $port, $realm, $user, $passwords12,130
	my $api api14,183
sub queryAPI::query27,336
	my ($api, $query)($api, $query29,348
		my $answer answer32,398
	my $json json40,539
		my $answer answer42,605
	my $answer;answer57,963
sub run_queryAPI::run_query77,1346
	my ($api, $password, $json)($api, $password, $json79,1362
	my $ua ua82,1430
	my $request request91,1627
	my $response response98,1818
	my $answer;answer101,1892
 my $https_host https_host122,2126
 my $https_port https_port123,2168
 my $basic_auth_realm basic_auth_realm124,2191
 my $api_login api_login125,2247
 my $api_passwords api_passwords126,2299
 my $api api128,2366
 my $query query133,2477
 my $response response137,2520

/emcsvn/billing/trunk/lib/Billing/Vars.pm,836
package Vars;3,17
sub new Vars::new9,90
my( $var_name, $var_address1, $var_address2, $var_city, $var_prov, $var_postal, $var_country, $var_currency, $var_contact, $var_email, $var_phone, $var_fax, $var_pager, $emc_num, $start)( $var_name, $var_address1, $var_address2, $var_city, $var_prov, $var_postal, $var_country, $var_currency, $var_contact, $var_email, $var_phone, $var_fax, $var_pager, $emc_num, $start11,101
	my $r_Vars r_Vars12,294
sub delete Vars::delete36,786
	my $r_Vars r_Vars37,799
	my $query query38,820
	my $dbh dbh39,895
	my $res res40,932
sub update Vars::update45,986
	my $r_Vars r_Vars46,999
	my $query query47,1020
	my $dbh dbh66,1671
	my $res res67,1708
sub create Vars::create72,1762
	my $r_Vars r_Vars73,1775
	my $query query74,1796
	my $dbh dbh110,2476
	my $res res111,2513

/emcsvn/billing/trunk/lib/Billing/Exchange.pm,6277
package Exchange;1,0
sub minExchange::min20,454
	my ($x, $y)($x, $y22,464
sub maxExchange::max27,514
	my ($x, $y)($x, $y29,524
sub convert_AD_timestampExchange::convert_AD_timestamp42,855
	my ($lastLoginTimestamp)($lastLoginTimestamp44,882
	my $unix_timestamp unix_timestamp55,1091
sub exch_mungeExchange::exch_munge66,1338
	my ($uid)($uid68,1355
	my ($u1, $u2, $u3, $u4, $u5)($u1, $u2, $u3, $u4, $u570,1373
	my @u;u71,1456
sub find_exchange_billing_addressExchange::find_exchange_billing_address99,1879
	my ($aka_dbh, $sps_num, @addr_list)($aka_dbh, $sps_num, @addr_list101,1915
	my $found_addr found_addr102,1958
sub check_addrExchange::check_addr117,2267
	my ($aka_dbh, $addr, $sps_num)($aka_dbh, $addr, $sps_num119,2284
	my ($localpart, $domain)($localpart, $domain121,2323
	my $rc rc122,2376
	my $query query124,2390
	my $res res125,2451
			my ($cus_num)($cus_num132,2586
sub addr_sortExchange::addr_sort148,2933
sub single_spaceExchange::single_space184,3500
	my ($s)($s186,3519
sub get_storage_classesExchange::get_storage_classes193,3639
	my ($aka_dbh, $known_billing_classes, $error)($aka_dbh, $known_billing_classes, $error195,3665
	my $query query197,3719
	my $stmt stmt198,3802
my @exchange_class_lookup exchange_class_lookup219,4362
sub extract_storage_classExchange::extract_storage_class235,5189
	my ($line, $errstr)($line, $errstr237,5217
sub storage_class_bynameExchange::storage_class_byname248,5375
	my ($known_billing_classes, $class_name)($known_billing_classes, $class_name250,5402
sub get_exchange_classesExchange::get_exchange_classes259,5641
	my ($known_classes, $result, $error)($known_classes, $result, $error261,5668
	my @lines lines265,5852
	my $csv_in csv_in271,6149
	my $found_start found_start273,6233
		my $rc rc287,6470
		my @cols cols288,6501
		my ($user)($user290,6534
		my $class_name class_name292,6579
sub read_class_fileExchange::read_class_file308,6872
	my ($class_file, $aka_storage_classes, $exch_storage_classes, $error)($class_file, $aka_storage_classes, $exch_storage_classes, $error310,6894
	my $csv csv317,7075
		my $rc rc321,7185
		my @cols cols322,7213
		my $is_owa is_owa324,7243
		my ($user)($user326,7286
		my $class_name;class_name328,7332
sub read_mapping_fileExchange::read_mapping_file357,8248
	my ($aka_dbro_dbh, $map_file, $user_storage_class, $domains, $users, $primary_addr_map, $cust_ou_map, $error, $error_list)($aka_dbro_dbh, $map_file, $user_storage_class, $domains, $users, $primary_addr_map, $cust_ou_map, $error, $error_list359,8272
	my $csv csv366,8499
	my $csv2 csv2367,8561
	my ($exch_DN_col, $exch_legacyExchangeDN_col, $exch_msExchMailboxGuid_col,($exch_DN_col, $exch_legacyExchangeDN_col, $exch_msExchMailboxGuid_col,370,8797
	my %expected_cols expected_cols374,9033
	my $rc rc387,9510
	my @cols cols388,9537
	my $column column389,9565
	my $errors errors398,9773
		my $billing_addr;billing_addr414,10166
		my $rc rc415,10186
		my @cols cols424,10374
		my $exch_DN exch_DN429,10535
		my $exch_legacyExchangeDN exch_legacyExchangeDN430,10572
		my $exch_msExchMailboxGuid exch_msExchMailboxGuid431,10637
		my $exch_whenCreated exch_whenCreated432,10704
		my $exch_proxyAddresses exch_proxyAddresses433,10759
		my $exch_mail exch_mail434,10820
		my $exch_lastLogonTimestamp exch_lastLogonTimestamp435,10861
		my $exch_userPrincipalName exch_userPrincipalName436,10930
		my $exch_userAccountControl exch_userAccountControl437,10997
		my $is_disabled is_disabled449,11472
		my @cols2 cols2456,11657
		my $sps_num;sps_num458,11689
			my $node node472,12100
			my ($localpart, $domain)($localpart, $domain486,12472
				my $node node492,12686
			my $x x504,12986
			my $last_login last_login521,13887
			my ($y, $m, $d)($y, $m, $d526,14055
			my %ou_map ou_map562,15485
			my @ou_stack ou_stack581,15964
						my $entry entry589,16192
sub parse_ouExchange::parse_ou610,16592
	my ($s, $billing_addr)($s, $billing_addr612,16607
	my @ou_stack;ou_stack614,16638
	my %skip skip616,16654
	my %do_not_skip do_not_skip623,16799
	my ($localpart, $domain)($localpart, $domain650,17429
	my $csv csv652,17491
	my $rc rc653,17554
	my @cols cols654,17581
			my $candidate_ou candidate_ou658,17659
sub read_storage_fileExchange::read_storage_file679,18053
	my ($data_file, $primary_addr_map, $domains, $users, $bad_storage_user, $error)($data_file, $primary_addr_map, $domains, $users, $bad_storage_user, $error681,18077
	my $dn dn683,18165
	my $guid guid684,18179
	my $count count685,18195
	my $storage storage686,18211
	my $deleted_storage deleted_storage687,18229
	my $display_name;display_name688,18255
	my $abort_mailbox abort_mailbox689,18274
			my $part2 part2713,18851
				my $billing_addr billing_addr768,20344
				my ($localpart, $domain)($localpart, $domain769,20406
sub read_resource_fileExchange::read_resource_file800,21319
	my ($aka_dbro_dbh, $file, $exch_storage_classes, $domains, $users, $primary_addr_map, $errstr)($aka_dbro_dbh, $file, $exch_storage_classes, $domains, $users, $primary_addr_map, $errstr802,21344
	my $have_data_block have_data_block804,21447
	my $have_value have_value805,21473
	my $name;name806,21494
	my $value;value807,21505
	my $ExchangeGuid;ExchangeGuid808,21517
	my $mailbox mailbox809,21536
				my $user user836,22083
					my $billing_addr billing_addr840,22267
sub parse_mec_mailbox_reportExchange::parse_mec_mailbox_report888,23076
	my ($file, $mailboxes, $errstr)($file, $mailboxes, $errstr890,23107
	my $name;name892,23147
	my $value;value893,23158
	my $eaten_binary_header eaten_binary_header894,23170
	my $have_mailbox have_mailbox895,23200
	my $have_value have_value896,23223
	my $abort_mailbox abort_mailbox897,23244
	my $MailboxGuid;MailboxGuid898,23268
	my $LegacyDN;LegacyDN899,23286
	my $mailbox mailbox900,23301
						my ($bytes)($bytes922,23753
					my ($bytes)($bytes968,24714
sub get_last_cnExchange::get_last_cn1022,25836
	my ($dn)($dn1024,25854
	my ($cn)($cn1026,25871
sub fill_nodeExchange::fill_node1031,25925
	my ($mailbox)($mailbox1033,25941
	my $cn cn1035,25963
	my $addr addr1036,26012

/emcsvn/billing/trunk/lib/blib2.pl,4091
sub emmunity_provider_namemain::emmunity_provider_name18,357
	my ($providers)($providers20,386
	my %emm_providers emm_providers22,410
sub emmunity_provider_name_allmain::emmunity_provider_name_all51,852
	my ($providers)($providers53,885
	my %emm_providers emm_providers55,910
sub emmunity_provider_name_listmain::emmunity_provider_name_list84,1534
	my ($providers)($providers86,1568
	my @scanners;scanners87,1591
sub main::get_date 114,2070
	my ($a_year, $a_month)($a_year, $a_month116,2101
	my ($tim0, $tim1, $tim2)($tim0, $tim1, $tim2117,2131
	my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst118,2158
	my @check check129,2549
sub round_dollarsmain::round_dollars162,3262
	my ($amount, $precision)($amount, $precision164,3282
	my $x x174,3409
sub minmain::min180,3606
	my ($a, $b)($a, $b182,3616
sub maxmain::max187,3668
	my ($a, $b)($a, $b189,3678
sub get_courier_mailbox_sizemain::get_courier_mailbox_size194,3730
	my ($box, $ms_server)($box, $ms_server196,3761
	my $socket socket198,3791
	my $response response205,3963
	my ($ok, $cu_size, $msg_num)($ok, $cu_size, $msg_num206,3990
sub list_aka_domainsmain::list_aka_domains218,4220
	my ($aka_dbh, $cus_num)($aka_dbh, $cus_num220,4243
	my @domains;domains222,4275
	my $stmt stmt225,4360
	my $query query237,4954
sub resolve_billingmain::resolve_billing294,6305
	my ($node, $bill_to_cus_num)($node, $bill_to_cus_num296,6327
sub get_billing_parentmain::get_billing_parent309,6615
	my ($customer)($customer311,6640
sub get_billing_mapsmain::get_billing_maps327,6904
	my ($emc_dbh, $cus_info, $errstr)($emc_dbh, $cus_info, $errstr329,6927
	my $query query332,7002
	my $res res335,7135
		my $aka_customer aka_customer383,8801
		my $billing_cus_num billing_cus_num397,9259
sub get_local_domainsmain::get_local_domains428,10168
	my ($aka_dbh)($aka_dbh430,10192
	my %domains;domains431,10213
	my $query query434,10287
	my $res res442,10648
sub is_local_addressmain::is_local_address453,10822
	my ($ourdomains, $forward_address)($ourdomains, $forward_address455,10845
	my ($user, $domain)($user, $domain457,10888
	my $ret ret458,10941
sub is_local_domainmain::is_local_domain473,11167
	my ($count_dbh, $year, $month, $domain)($count_dbh, $year, $month, $domain475,11189
	my $ret ret477,11237
	my $query query479,11252
	my $res res480,11336
	my @result result484,11436
sub days_free_billablemain::days_free_billable497,11634
	my ($startmonth_ts, $endmonth_ts, $startfree_ts, $endfree_ts)($startmonth_ts, $endmonth_ts, $startfree_ts, $endfree_ts499,11659
	my ($free_days, $paid_days)($free_days, $paid_days501,11729
	my $d d504,11781
sub get_days_freemain::get_days_free547,13154
	my ($parent, $customer, $year, $month)($parent, $customer, $year, $month549,13174
	my $days_free days_free551,13221
	my $cus_startdate cus_startdate556,13327
	my ($start_year, $start_month, $start_day)($start_year, $start_month, $start_day561,13479
	my $startfree_ts startfree_ts563,13572
	my $endfree_ts endfree_ts564,13672
	my ($ann_year, $ann_month)($ann_year, $ann_month567,13730
	my $answer answer568,13814
		my ($next_year, $next_month)($next_year, $next_month574,13908
		my ($follow_year, $follow_month)($follow_year, $follow_month575,13971
		my $startmonth_ts startmonth_ts576,14038
		my $next_month_ts next_month_ts577,14124
		my ($days_free, $days_to_bill, $days_in_month)($days_free, $days_to_bill, $days_in_month579,14215
		my $node node581,14349
sub printable_tax_namemain::printable_tax_name600,14656
	my ($tax)($tax602,14681
	my $id_tag;id_tag604,14699
sub has_reseller_parentmain::has_reseller_parent621,15193
	my ($emc_dbh, $customer)($emc_dbh, $customer623,15219
	my $query query632,15363
	my $stmt stmt633,15435
	my $cus_num cus_num635,15475
		my $row row641,15596
sub get_childrenmain::get_children656,15812
	my ($emc_dbh, $customer)($emc_dbh, $customer658,15831
	my $query query660,15864
	my $stmt stmt661,15922

/emcsvn/billing/trunk/lib/blib.pl,14304
sub doctypemain::doctype35,659
sub do_setup main::do_setup41,811
sub do_setup_basic main::do_setup_basic56,1182
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions58,1213
sub do_setup_simple main::do_setup_simple83,1915
	my ($form_variables)($form_variables85,1947
sub do_setup_html main::do_setup_html104,2414
	my ($form_variables)($form_variables106,2444
sub frames main::frames125,2911
	my ($emc_dbh, $emc_user, $form_variables, $script)($emc_dbh, $emc_user, $form_variables, $script127,2934
	my $cus_num cus_num129,2993
	my @fields fields131,3037
		my $customer customer137,3161
sub title main::title154,3795
	my $title title156,3817
sub actions main::actions170,4322
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions172,4347
	my ($month, $year)($month, $year174,4407
	my $var;var175,4447
	my @links links218,5497
	my @links2 links2229,5945
	my $this_year this_year265,7069
	my $this_month this_month266,7093
sub footer main::footer308,10332
sub footer_html main::footer_html313,10396
sub error main::error318,10465
	my $message message320,10487
sub row main::row328,10582
	my $text text330,10602
sub startrow main::startrow337,10695
	my ($bgcolor)($bgcolor339,10720
sub endrow main::endrow347,10832
sub cell main::cell352,10876
	my $text text354,10897
sub rightcell main::rightcell359,10962
	my $text text361,10988
sub bcell main::bcell366,11065
	my ($text,$font_color)($text,$font_color368,11087
sub startcell main::startcell376,11285
sub endcell main::endcell381,11333
sub incell main::incell386,11378
	my $text text388,11401
sub showphone main::showphone393,11438
	my $phone phone395,11464
	my @array;array396,11484
		my $string string406,11637
		my $string string413,11873
		my $string string420,12177
sub showphone2 main::showphone2426,12383
	my $phone phone428,12410
	my @array;array429,12430
		my $string string435,12544
sub show_subscriptionmain::show_subscription442,12755
	my ($cus_num, $emc_user)($cus_num, $emc_user444,12779
sub db_errormain::db_error490,14013
	my ($dbh, $query)($dbh, $query492,14028
sub html_main_table(main::html_main_table506,14438
sub html_error(main::html_error511,14522
	my ($txt)($txt513,14541
sub syserror(main::syserror517,14615
	my ($txt)($txt519,14632
sub rid2cusmain::rid2cus523,14713
	my ($rid)($rid525,14727
	my $cust_num cust_num527,14777
	my $s s528,14797
			sub { main::{531,14890
	my $custBag custBag535,15023
sub cus2ridmain::cus2rid541,15227
	my ($cus_num)($cus_num543,15241
	my $rid rid544,15262
	my $s s546,15310
			sub { main::{549,15403
	my $custBag custBag553,15536
sub sps_servicesmain::sps_services559,15728
	my $rid rid561,15747
	my $s s562,15765
			sub { main::{565,15857
	my $custBag custBag569,15990
sub check_servicemain::check_service575,16189
	my ($emc_dbh, $aka_dbh, $cus_num, $sps_service_num)($emc_dbh, $aka_dbh, $cus_num, $sps_service_num577,16209
	my $ret ret578,16268
	my $customer customer579,16282
	my $sql sql583,16432
	my $res res584,16657
sub get_sps_servicemain::get_sps_service606,17127
	my ($rid, $service_rid)($rid, $service_rid608,17149
	my $leave leave609,17180
	my $s s611,17247
			sub { main::{614,17339
	my $custBag custBag619,17498
sub service2ridmain::service2rid629,17784
	my ($service_name)($service_name631,17802
	my $leave leave632,17828
	my $s s634,17896
			sub { main::{637,17988
	my $custBag custBag642,18147
sub check_subscriptionmain::check_subscription652,18408
	my ($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value)($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value654,18433
	my $leave leave655,18513
	my $s s656,18529
	my $result result665,18810
		my $service_data service_data671,19064
sub show_packagesmain::show_packages685,19467
	my ($emc_dbh, $customer, $emc_user, $simple)($emc_dbh, $customer, $emc_user, $simple687,19487
	my ($res2)($res2689,19540
	my $counter;counter690,19553
	my $query query691,19567
	my $stmt stmt695,19744
		my $query query715,20611
		my $stmt stmt720,20925
		my $num num722,21026
			my $status status729,21216
			my $bgcolor;bgcolor730,21236
			my $query query739,21347
			my $stmt stmt744,21599
			my $price price746,21741
			my $user_price user_price748,21799
sub show_subscriptions2main::show_subscriptions2765,22572
	my ($emc_dbh, $cus_num, $emc_user, $simple)($emc_dbh, $cus_num, $emc_user, $simple767,22598
	my $customer customer769,22650
	my ($sql, $res, $res2)($sql, $res, $res2770,22701
	my $counter;counter771,22726
		my $num num808,24479
			my $status status815,24671
			my $bgcolor;bgcolor816,24691
				my $service service834,25857
sub is_spsmain::is_sps870,27330
	my ($emc_dbh, $service_num, $cus_num, $customer_spsnum)($emc_dbh, $service_num, $cus_num, $customer_spsnum872,27343
	my $customer_rid customer_rid874,27407
	my $service service875,27454
	my $service_bag service_bag877,27570
	my $service_rid service_rid878,27628
		my $status status881,27744
sub subscribe_spsmain::subscribe_sps891,28070
	my ($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid)($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid893,28090
	my $sub sub895,28164
	my $customer customer896,28227
	my $hash;hash897,28278
	my $s s898,28289
	my $bag bag926,29307
	my $rid rid927,29368
sub get_month_yearmain::get_month_year932,29509
	my ($month,$year)($month,$year934,29530
sub access_deniedmain::access_denied944,29686
sub check_hosted_usagemain::check_hosted_usage949,29768
	my ($aka_dbh, $access, $sps_num)($aka_dbh, $access, $sps_num951,29793
	my $query_check;query_check952,29834
	my $ret ret953,29852
	my $sql sql964,30076
	my $res res970,30429
	my @row row972,30481
sub tbl_nummain::tbl_num983,30602
	my($num)($num985,30616
sub next_monthmain::next_month989,30683
	my ($year, $month, $months_delta)($year, $month, $months_delta991,30700
sub list_sps_servicesmain::list_sps_services1007,30907
	my ($aka_dbh, $sps_num)($aka_dbh, $sps_num1009,30931
	my %ret ret1011,30963
	my $sql sql1012,30978
	my $res res1018,31174
			my $sql sql1023,31374
			my $res2 res21027,31586
sub check_sps_service_usagemain::check_sps_service_usage1056,32457
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1058,32487
	my $ret ret1059,32533
	my $sql sql1060,32547
	my $res res1082,33544
		my $row row1085,33618
sub check_sps_service_billingmain::check_sps_service_billing1093,33710
	my ($emc_dbh, $cus_num, $service_desc)($emc_dbh, $cus_num, $service_desc1095,33742
	my $ret ret1096,33788
	my $emc_cus_num emc_cus_num1097,33802
	my $query query1103,33961
	my $res res1104,34029
		my $row row1107,34105
	my $sql sql1114,34218
		my $found found1123,34599
		my $cur_set cur_set1124,34616
sub count_sps_service_usersmain::count_sps_service_users1152,35045
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1154,35075
	my $ret ret1155,35121
	my $sql sql1157,35136
	my $res res1162,35427
		my $row row1165,35501
sub check_bs_servicemain::check_bs_service1173,35593
	my ($emc_dbh, $sps_num, $service_num)($emc_dbh, $sps_num, $service_num1175,35616
	my $service service1177,35662
	my $ret ret1178,35718
	my $aka_dbh aka_dbh1179,35732
			my $sql sql1183,35991
			my $res2 res21184,36082
			my $sql sql1191,36214
			my $res2 res21192,36305
			my $sql sql1199,36454
			my $res2 res21200,36566
			my $sql sql1207,36716
			my $res2 res21208,36808
	my %extras extras1216,36929
			my $sql sql1222,37137
			my $res2 res21227,37458
		my $sql sql1235,37620
		my $res2 res21241,38039
		my $sql sql1248,38147
		my $res res1250,38360
sub cleanse_inputmain::cleanse_input1265,38647
	my ($s)($s1267,38667
sub cleanse_hashmain::cleanse_hash1275,38876
	my ($href)($href1277,38895
sub cleanse_input_punctuationmain::cleanse_input_punctuation1290,39358
	my ($s)($s1292,39390
sub line_datemain::line_date1304,39672
	my ($year, $month)($year, $month1306,39688
	my ($line_year, $line_month)($line_year, $line_month1308,39715
	my $line_date line_date1309,39777
sub human_datemain::human_date1316,40011
	my ($year, $month)($year, $month1318,40028
	my ($line_year, $line_month)($line_year, $line_month1320,40055
	my $unixdate unixdate1322,40118
	my @parts parts1324,40189
	my $line_date line_date1325,40224
sub ym_to_humanmain::ym_to_human1334,40387
	my ($ym, $months_delta)($ym, $months_delta1336,40405
	my ($year, $month)($year, $month1342,40478
	my @months months1355,40740
sub get_ym_nowmain::get_ym_now1365,40966
	my ($now, $months_delta)($now, $months_delta1367,40983
	my @ts ts1369,41016
	my $year year1371,41044
	my $month month1372,41072
sub days_in_monthmain::days_in_month1378,41204
	my ($year, $month)($year, $month1380,41224
	my $then then1387,41302
	my @then then1389,41385
sub is_anniversary_monthmain::is_anniversary_month1403,41779
	my ($year, $month, $customer)($year, $month, $customer1405,41806
sub next_anniversary_monthmain::next_anniversary_month1438,42901
	my ($year, $month, $customer, $direction)($year, $month, $customer, $direction1440,42930
	my $d d1442,42980
		my $y y1451,43143
		my $m m1452,43160
		my $limit limit1453,43178
sub get_anniversary_monthsmain::get_anniversary_months1464,43381
	my ($customer)($customer1466,43410
	my $cus_billfreq cus_billfreq1468,43433
	my $cus_billfreq_month cus_billfreq_month1469,43480
	my %target_months;target_months1471,43540
		my $t t1475,43654
sub gazetteer_checkmain::gazetteer_check1498,44198
	my ($emc_dbh, $city, $prov, $country)($emc_dbh, $city, $prov, $country1500,44220
	my $query query1505,44360
	my $res res1506,44454
	my $x x1507,44492
	my $row row1508,44552
			my $stamp stamp1518,44883
sub clone_hashmain::clone_hash1529,45130
	my ($hr)($hr1531,45147
	my %new;new1533,45164
sub show_alertsmain::show_alerts1547,45354
	my ($emc_dbh)($emc_dbh1549,45372
sub check_paymentech_password_agemain::check_paymentech_password_age1565,45826
	my ($emc_dbh)($emc_dbh1567,45862
	my $too_old too_old1569,45884
	my $query query1571,45903
	my $stmt stmt1572,46012
sub send_via_smtpmain::send_via_smtp1593,46563
	my ($server, $helo, $mail_from, $rcpt_to, $msg, $errstr)($server, $helo, $mail_from, $rcpt_to, $msg, $errstr1595,46583
	my $rc;rc1596,46647
	my $smtp smtp1608,46868
sub send_via_mtamain::send_via_mta1649,47594
	my ($cmd, $to, $mesg_path, $errstr)($cmd, $to, $mesg_path, $errstr1651,47613
			my $line;line1666,47965
sub create_contact_linkmain::create_contact_link1681,48193
	my ($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr)($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr1683,48219
	my $admin admin1685,48321
	my $bill bill1686,48337
	my $tech tech1687,48352
		my $conlink conlink1694,48649
		my $conlink conlink1703,48910
		my $conlink conlink1712,49173
sub delete_customermain::delete_customer1729,49600
	my ($emc_dbh, $customer, $errstr)($emc_dbh, $customer, $errstr1731,49622
	my $abort_transaction abort_transaction1733,49664
		my $rz;rz1741,49788
		my $query query1744,49826
		my $stmt stmt1745,49894
				my $query query1750,50072
				my $stmt stmt1758,50450
					my $row row1760,50532
						my $query query1763,50655
			my $now_ts now_ts1781,51037
sub get_invoice_contactsmain::get_invoice_contacts1825,52792
	my ($emc_dbh, $customer, $recips)($emc_dbh, $customer, $recips1827,52819
	my $count count1829,52861
	my $query query1834,52979
	my $stmt stmt1838,53234
	my %contacts;contacts1844,53336
	my $list;list1849,53445
			my $contact contact1863,53826
my %batch_dirs batch_dirs1886,54345
sub zip_batchesmain::zip_batches1894,54462
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1896,54480
	my $query query1903,54674
	my $res res1906,54842
	my $login login1908,54910
	my @jobs;jobs1911,54963
	my $rc rc1916,55150
		my $cc_batch_dir cc_batch_dir1927,55446
		my $file_base file_base1928,55591
				my $r1 r11933,55728
				my $r2 r21934,55768
				my $rc;rc1936,55807
				my $cmd cmd1937,55819
				my $rc;rc1952,56367
				my $cmd cmd1953,56379
		my $query query1965,56862
sub upload_batchesmain::upload_batches1975,57098
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1977,57119
	my $query query1983,57233
	my $res res1985,57364
	my $login login1987,57432
	my @jobs;jobs1990,57485
	my %sftp_args sftp_args2009,57981
	my $sftp sftp2021,58215
		my $cc_batch_dir cc_batch_dir2029,58419
		my $file_base file_base2030,58564
				my $query query2041,59011
				my $query query2055,59543
sub download_batchesmain::download_batches2065,59729
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt2067,59752
	my $query query2073,59866
	my $res res2076,60034
	my $login login2078,60102
	my @jobs;jobs2081,60155
	my $rc rc2085,60336
	my %sftp_args sftp_args2095,60499
	my $sftp sftp2107,60733
		my $cc_batch_dir cc_batch_dir2114,60900
		my $file_base file_base2115,61045
				my $rc rc2124,61405
					my $query query2132,61731
				my $rc rc2142,62165
					my $query query2150,62486
sub unzip_batchmain::unzip_batch2162,62730
	my ($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr)($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr2164,62748
	my $query query2168,62871
	my $res res2171,63056
	my $login login2173,63124
		my ($base)($base2177,63219
		my $pgp_request_file pgp_request_file2178,63265
		my $pgp_response_file pgp_response_file2180,63350
			my $rc rc2185,63473
			my $rc rc2195,63834
		my ($base)($base2202,64124
		my $zip_request_file zip_request_file2203,64170
		my $zip_response_file zip_response_file2205,64255
			my $rc rc2210,64376
			my $rc rc2220,64694

/emcsvn/billing/trunk/lib/imaptest.pl,101
my $socket socket8,127
my $client client16,357
my @folders folders25,615
my @msgs msgs30,782

/emcsvn/billing/trunk/web/invoice_func.pl,29971
sub billing_contact_emailmain::billing_contact_email15,255
	my ($emc_dbh, $cus_num)($emc_dbh, $cus_num17,283
	my $query query19,315
	my $res res24,534
	my $count count26,598
	my $to to27,614
	my $smail smail28,628
sub ym_to_batchmain::ym_to_batch47,1054
	my ($emc_dbh, $year, $month)($emc_dbh, $year, $month49,1072
	my ($query, $res, $row, $batch_num)($query, $res, $row, $batch_num50,1108
	my $rc rc51,1146
		my $row row59,1347
		my $batch_num batch_num60,1385
sub get_service_usagemain::get_service_usage72,1645
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $year, $month, $billing_run74,1669
	my ($service_units, $service_usage)($service_units, $service_usage76,1767
	my $header header77,1805
		my ($units, $usage)($units, $usage83,2116
		my ($units, $usage)($units, $usage90,2422
		my @domains domains107,3234
			my ($units, $usage)($units, $usage115,3685
			my $prorate_ratio prorate_ratio131,4412
sub get_domain_usagemain::get_domain_usage154,5302
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $domain, $year, $month, $billing_run156,5325
	my $query,query158,5432
	my $unit_counter,unit_counter159,5472
	my $total_units_used total_units_used160,5529
	my $billed_units_used billed_units_used161,5582
	my $units_used_text units_used_text162,5637
	my $total_units_used_text total_units_used_text163,5690
	my $total_user_count total_user_count164,5723
	my $total_included_used total_included_used165,5750
	my $base;base166,5780
	my ($units, $usage)($units, $usage167,5791
			my %unit_dispatch unit_dispatch223,7771
				my $dispatch dispatch343,13425
			my %usage_dispatch usage_dispatch396,15224
					my $query query474,19473
					my $stmt stmt482,19897
					my $delta delta490,20157
					my $query query492,20218
					my $stmt stmt502,20695
					my $query query522,21332
					my $stmt stmt530,21756
					my $delta delta538,22016
					my $query query540,22077
					my $stmt stmt550,22554
					my $query query570,23179
					my $stmt stmt578,23599
					my $delta delta586,23859
					my $query query588,23920
					my $stmt stmt598,24393
				my $dispatch dispatch619,25168
	my $line_date line_date647,26102
		my $emc_num emc_num650,26171
			my $query query656,26301
			my $res res661,26551
				my $query query668,26991
				my $res res673,27228
				my $query query678,27519
				my $res res683,27790
sub get_sharepoint_countmain::get_sharepoint_count695,28189
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run697,28216
	my $query query699,28319
	my $stmt stmt701,28435
	my $row row703,28515
	my $count count707,28629
	my $units units712,28710
sub get_sharepoint_storagemain::get_sharepoint_storage722,28848
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage724,28877
	my $query query726,28990
	my $stmt stmt729,29155
	my $row row731,29235
	my $total_usage_used total_usage_used734,29288
	my $count count737,29433
	my $usage usage742,29514
sub calc_hosted_domain_storage_popmain::calc_hosted_domain_storage_pop755,29775
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run757,29812
	my $query query759,29923
sub calc_hosted_domain_storage_webmailmain::calc_hosted_domain_storage_webmail768,30481
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run770,30522
	my $query query772,30633
sub calc_hosted_domain_storage_popwebmain::calc_hosted_domain_storage_popweb781,31192
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run783,31232
	my $query query785,31343
sub calc_hosted_domain_storage_imapmain::calc_hosted_domain_storage_imap794,31902
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run796,31940
	my $query query798,32051
sub calc_hosted_domain_storage_classmain::calc_hosted_domain_storage_class807,32612
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage_class809,32651
	my $query query811,32778
sub calc_hosted_domain_storage_bcs_inactivemain::calc_hosted_domain_storage_bcs_inactive823,33353
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run825,33399
	my $query query827,33510
sub calc_hosted_domain_storage_bcs_activemain::calc_hosted_domain_storage_bcs_active836,34088
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run838,34132
	my $query query840,34243
sub calc_hosted_domain_storage_bcsmain::calc_hosted_domain_storage_bcs849,34842
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run851,34879
	my $query query853,34990
sub get_ele_customer_usagemain::get_ele_customer_usage861,35541
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run863,35570
	my $unit_counter,unit_counter865,35660
	my $total_units_used total_units_used866,35717
	my $billed_units_used billed_units_used867,35770
	my $units_used_text units_used_text868,35825
	my $total_units_used_text total_units_used_text869,35878
	my $total_user_count total_user_count870,35911
	my $total_included_used total_included_used871,35938
	my $base;base872,35968
	my ($units, $usage)($units, $usage873,35979
	my $query query875,36002
	my $stmt stmt876,36102
	my $row row878,36183
		my %unit_dispatch unit_dispatch894,36584
			my $dispatch dispatch950,38818
			my %usage_dispatch usage_dispatch977,39563
				my $dispatch dispatch999,40387
sub exchange_basic_countmain::exchange_basic_count1031,41326
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1033,41353
	my $query query1035,41456
	my $stmt stmt1036,41533
	my ($storage_class)($storage_class1038,41614
	my ($total_units_used)($total_units_used1052,42147
	my $units units1055,42213
sub exchange_standard_countmain::exchange_standard_count1064,42348
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1066,42378
	my $query query1068,42481
	my $stmt stmt1069,42558
	my ($storage_class)($storage_class1071,42639
	my ($total_units_used)($total_units_used1085,43178
	my $units units1088,43244
sub exchange_plus_countmain::exchange_plus_count1097,43379
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1099,43405
	my $query query1101,43508
	my $stmt stmt1102,43585
	my ($storage_class)($storage_class1104,43666
	my ($total_units_used)($total_units_used1118,44205
	my $units units1121,44271
sub get_fusemail_customer_usagemain::get_fusemail_customer_usage1130,44406
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run1132,44440
	my $unit_counter,unit_counter1134,44530
	my $total_units_used total_units_used1135,44587
	my $billed_units_used billed_units_used1136,44640
	my $units_used_text units_used_text1137,44695
	my $total_units_used_text;total_units_used_text1138,44748
	my $total_user_count total_user_count1139,44776
	my $total_included_used total_included_used1140,44803
	my $base;base1141,44833
	my ($units, $usage)($units, $usage1142,44844
	my $query query1144,44867
	my $stmt stmt1145,44993
	my $row row1147,45049
		my %unit_dispatch unit_dispatch1163,45450
			my $dispatch dispatch1207,47247
sub fusemail_cc_countmain::fusemail_cc_count1246,48345
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1248,48369
	my $stmt;stmt1250,48475
	my $query query1251,48486
	my $row row1255,48697
	my $unit unit1262,48806
sub fusemail_total_countmain::fusemail_total_count1271,48935
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1273,48962
	my $stmt;stmt1275,49068
	my $query query1276,49079
	my $row row1280,49288
	my $unit unit1287,49397
sub count_package_hostedmain::count_package_hosted1296,49526
	my ($count_dbh, $year, $month, $customer, $service, $bucket)($count_dbh, $year, $month, $customer, $service, $bucket1298,49553
	my $count count1300,49622
		my $query query1304,49675
		my $stmt stmt1306,49812
		my $query query1311,49979
		my $stmt stmt1313,50088
	my $unit unit1323,50284
sub hosted_50_countmain::hosted_50_count1332,50406
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1334,50428
sub hosted_100_countmain::hosted_100_count1339,50619
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1341,50642
sub hosted_200_countmain::hosted_200_count1346,50834
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1348,50857
sub hosted_300_countmain::hosted_300_count1353,51049
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1355,51072
sub hosted_400_countmain::hosted_400_count1360,51264
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1362,51287
sub hosted_500_countmain::hosted_500_count1367,51479
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1369,51502
sub hosted_1000_countmain::hosted_1000_count1374,51694
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1376,51718
sub hosted_2000_countmain::hosted_2000_count1381,51911
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1383,51935
sub hosted_5000_countmain::hosted_5000_count1388,52128
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1390,52152
sub hosted_10000_countmain::hosted_10000_count1395,52345
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1397,52370
sub hosted_25000_countmain::hosted_25000_count1402,52564
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1404,52589
sub hosted_50000_countmain::hosted_50000_count1409,52783
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1411,52808
sub hosted_100000_countmain::hosted_100000_count1416,53002
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1418,53028
sub calc_hosted_domain_storagemain::calc_hosted_domain_storage1425,53225
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $query)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $query1427,53258
	my $stmt,stmt1429,53377
	my $total_user_count total_user_count1430,53397
	my $total_usage_used total_usage_used1431,53424
	my $usage_used_text;usage_used_text1432,53507
	my @users;users1433,53529
	my $total_mb total_mb1435,53542
		my $user_included_used user_included_used1440,53659
	my $line_date line_date1460,54337
		my $line_price line_price1463,54421
		my $line_price_disc line_price_disc1468,54649
			my $line_amount line_amount1470,54752
			my $line_amount_disc line_amount_disc1471,54814
				my $desc desc1474,54962
					my $sql5 sql51477,55159
					my $res res1486,55819
				my $desc desc1494,56063
					my $sql5 sql51496,56161
					my $res res1503,56620
	my $domain_service_usage domain_service_usage1509,56755
sub calc_eic_trafficmain::calc_eic_traffic1520,57019
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1522,57042
	my $usage usage1524,57153
	my $query query1536,57446
	my $sth sth1538,57607
	my $res res1539,57647
		my $row row1541,57704
sub list_domainsmain::list_domains1551,57951
	my ($emc_dbh, $count_dbh, $service_num, $cus_num, $month, $year)($emc_dbh, $count_dbh, $service_num, $cus_num, $month, $year1553,57970
	my $sql sql1555,58043
	my $res res1556,58130
	my @fields fields1558,58182
	my $count_cond count_cond1559,58218
	my @domains;domains1562,58264
sub is_sps_resellermain::is_sps_reseller1581,58767
	my ($emc_dbh, $cus_num)($emc_dbh, $cus_num1583,58789
	my $aka_dbh aka_dbh1585,58821
	my $customer customer1587,59029
	my $sql sql1588,59080
	my $res res1589,59167
	my @result result1591,59219
sub get_subsmain::get_subs1598,59317
	my($emc_dbh, $cus_num)($emc_dbh, $cus_num1600,59332
	my @service;service1602,59363
	my @services;services1603,59377
	my $query query1605,59393
	my $res res1606,59496
sub get_unit_pricemain::get_unit_price1616,59666
	my ($emc_dbh, $customer, $service_num, $count)($emc_dbh, $customer, $service_num, $count1618,59687
	my @price;price1622,59784
	my $query query1630,59965
	my $res res1635,60145
sub get_usage_pricemain::get_usage_price1642,60378
	my ($emc_dbh, $customer, $service_num, $count)($emc_dbh, $customer, $service_num, $count1644,60400
	my @price;price1648,60497
	my $query query1656,60678
	my $res res1661,60859
sub get_basemain::get_base1668,61092
	my ($emc_dbh, $customer, $service_num)($emc_dbh, $customer, $service_num1670,61107
	my $query query1674,61196
	my $res res1675,61296
	my @price price1677,61393
sub get_usage_basemain::get_usage_base1683,61466
	my ($emc_dbh, $customer, $service_num)($emc_dbh, $customer, $service_num1685,61487
	my $query query1689,61576
	my $res res1690,61677
	my @price price1692,61774
sub allowed_unitsmain::allowed_units1698,61847
	my ($emc_dbh, $count_dbh, $service, $cus_num, $year, $month)($emc_dbh, $count_dbh, $service, $cus_num, $year, $month1700,61867
	my @count;count1702,61936
	my $query query1703,61948
	my $users users1704,61965
	my $ret ret1705,61981
	my $min_allowed min_allowed1706,61995
	my $add_traffic;add_traffic1707,62017
		my $res res1723,62326
sub allowed_usagemain::allowed_usage1741,62616
	my ($service, $cus_num, $year, $month, $min_users, $max_users)($service, $cus_num, $year, $month, $min_users, $max_users1743,62636
	my $emc_dbh emc_dbh1745,62707
	my $count_dbh count_dbh1747,62885
	my @count;count1750,63082
	my $query query1751,63094
	my $users users1752,63111
	my $ret ret1753,63127
	my $min_allowed min_allowed1754,63141
	my $add_traffic;add_traffic1755,63163
		my $add_traffic add_traffic1764,63288
		my $query3 query31766,63369
		my $res3 res31768,63534
		my $res res1829,65198
sub check_submain::check_sub1849,65535
	my($emc_dbh, $cus_num, $service_type)($emc_dbh, $cus_num, $service_type1851,65551
	my $row;row1853,65597
	my $query query1854,65607
	my $res res1871,66293
sub calc_hosted_storagemain::calc_hosted_storage1884,66442
	my($cus_num, $charge, $year, $month, $billing_run)($cus_num, $charge, $year, $month, $billing_run1886,66468
	my $count_dbh count_dbh1888,66527
	my $row;row1891,66785
	my $query query1893,66838
	my $res res1894,66968
	my $total total1896,67024
	my $total_text total_text1897,67040
	my $total_mb total_mb1898,67062
sub calc_eic_usersmain::calc_eic_users1908,67335
	my ($count_dbh, $cus_num, $month, $year)($count_dbh, $cus_num, $month, $year1910,67356
	my $users users1912,67405
	my $query query1915,67465
	my $res res1917,67609
	my @row row1919,67665
		my $res res1925,67890
sub calc_inoutrelay_usersmain::calc_inoutrelay_users1936,68044
	my ($emc_dbh, $cus_num, $month, $year)($emc_dbh, $cus_num, $month, $year1938,68072
	my $users users1940,68119
	my $count_dbh count_dbh1941,68135
	my $aka_dbh aka_dbh1943,68331
	my $row;row1945,68539
	my $customer customer1946,68549
	my $query query1949,68636
	my $res res1956,69285
	my @row row1958,69339
			my $res res1976,70071
		my $forw_users forw_users1982,70206
sub calc_inoutrelay_domain_usersmain::calc_inoutrelay_domain_users2005,70962
	my ($count_dbh, $cus_num, $aka_domain, $year, $month)($count_dbh, $cus_num, $aka_domain, $year, $month2007,70997
	my $users users2009,71059
	my $ret_text ret_text2010,71075
	my $row;row2011,71095
	my $out_users out_users2012,71105
	my $query query2014,71126
	my $res res2015,71229
	my @row row2017,71285
		my ($localpart, $domain)($localpart, $domain2021,71436
sub calc_add_eic_trafficmain::calc_add_eic_traffic2073,73164
	my($cus_num)($cus_num2075,73191
	my $traffic traffic2077,73212
	my $emc_dbh emc_dbh2078,73230
	my $row;row2080,73408
	my $sql sql2081,73418
	my $res res2083,73531
sub calc_notes_usersmain::calc_notes_users2118,74216
	my($count_dbh, $cus_num, $month, $year)($count_dbh, $cus_num, $month, $year2120,74239
	my $query query2123,74330
	my $res res2124,74478
	my @row row2126,74534
	my $users users2127,74567
sub check_domain_submain::check_domain_sub2140,74887
	my ($aka_domain, $service_type, $month, $year)($aka_domain, $service_type, $month, $year2142,74910
	my $count_dbh count_dbh2144,74965
	my $row;row2146,75161
	my $query query2147,75171
	my $res res2151,75346
sub calc_eic_users_domainmain::calc_eic_users_domain2164,75522
	my ($count_dbh, $cus_num, $aka_domain, $month, $year)($count_dbh, $cus_num, $aka_domain, $month, $year2166,75550
	my $query query2168,75612
	my $res res2170,75780
	my @row row2172,75836
	my $users users2173,75869
		my $res res2178,76087
sub calc_inoutrelay_users_domainmain::calc_inoutrelay_users_domain2190,76265
	my ($count_dbh, $cus_num, $aka_domain, $month, $year)($count_dbh, $cus_num, $aka_domain, $month, $year2192,76300
	my $users users2193,76361
	my @row;row2194,76377
	my $query query2196,76388
	my $res res2198,76577
		my @row row2201,76655
		my $res res2211,76995
		my $res res2225,77446
sub calc_ext_for_users_domainmain::calc_ext_for_users_domain2243,77714
	my($cus_num, $aka_domain, $month, $year)($cus_num, $aka_domain, $month, $year2245,77746
	my $users users2247,77795
	my $count_dbh count_dbh2248,77811
	my @row;row2250,78007
	my $query query2252,78072
	my $res res2254,78284
sub calc_proratedmain::calc_prorated2264,78502
	my($sub_deleted_date, $month, $year, $total)($sub_deleted_date, $month, $year, $total2266,78522
	my $total_res total_res2268,78575
	my $last_month last_month2269,78595
	my $last_day last_day2270,78649
	my $flag=flag2271,78715
		my $days1 days12274,78835
		my $days2 days22275,78894
		my $prorated prorated2276,78936
sub calc_prepaidmain::calc_prepaid2295,79671
	my ($emc_dbh, $owner, $customer, $days_free_data, $prepaid_total, $month, $year, $multiple, $billing_run)($emc_dbh, $owner, $customer, $days_free_data, $prepaid_total, $month, $year, $multiple, $billing_run2297,79690
	my $precision precision2299,79804
	my $abort abort2304,79881
	my $tran_account;tran_account2306,79898
	my $tran_service;tran_service2307,79917
	my $tran_greatpl_num;tran_greatpl_num2308,79936
	my $days_free_remaining days_free_remaining2333,80734
	my $tran_credit_amount tran_credit_amount2334,80764
		my $df df2336,80843
	my $tran_amount tran_amount2341,81037
	my ($next_year1, $next_month1)($next_year1, $next_month12342,81111
	my ($next_year2, $next_month2)($next_year2, $next_month22343,81183
	my $tran_desc tran_desc2344,81247
	my $tran_date tran_date2345,81330
	my $tran_unixdate tran_unixdate2346,81398
	my $tran_type tran_type2347,81473
	my $transaction transaction2349,81496
			my $parent_tran_num parent_tran_num2370,82206
			my $tran_amount tran_amount2372,82289
			my $tran_desc tran_desc2373,82332
			my $tran_type tran_type2374,82419
			my $transaction transaction2376,82444
	my $period_error period_error2402,83288
	my $monthly_trans monthly_trans2404,83402
		my $tran_amount tran_amount2407,83524
		my ($next_year, $next_month)($next_year, $next_month2408,83561
		my $tran_date tran_date2409,83631
		my $tran_desc tran_desc2410,83698
		my $transaction transaction2417,83915
		my $df df2437,84626
			my $tran_credit_amount tran_credit_amount2440,84699
			my $tran_amount tran_amount2442,84811
			my $tran_desc tran_desc2443,84853
			my $tran_type tran_type2444,84934
			my $transaction transaction2451,85123
sub process_transactions2main::process_transactions22471,85829
	my ($emc_dbh, $batch_num, $cus_num, $year, $month)($emc_dbh, $batch_num, $cus_num, $year, $month2473,85857
	my $credits credits2475,85916
	my ($next_year, $next_month)($next_year, $next_month2477,85935
	my $sql;sql2479,85998
	my $res res2500,87008
		my $customer customer2506,87127
			my $total_amount total_amount2514,87389
			my $query query2517,87510
			my $stmt stmt2520,87687
				my $service service2525,87838
			my $service service2530,88113
		my $sql3;sql32536,88452
sub insert_transaction_linemain::insert_transaction_line2552,88804
	my ($emc_dbh, $year, $month, $owner_num, $customer, $batch_num, $package, $service, $row, $credits_ptr)($emc_dbh, $year, $month, $owner_num, $customer, $batch_num, $package, $service, $row, $credits_ptr2554,88834
	my $service_num;service_num2556,88946
	my $greatpl_num;greatpl_num2557,88964
	my $parent_num parent_num2585,89719
	my $query query2587,89763
sub mincharge_tranmain::mincharge_tran2612,90606
	my ($emc_dbh, $owner, $cus_num, $amount, $month, $year, $batch)($emc_dbh, $owner, $cus_num, $amount, $month, $year, $batch2614,90627
	my $counter counter2616,90699
	my $customer customer2617,90717
	my ($next_year, $next_month)($next_year, $next_month2618,90768
	my $tran_date tran_date2619,90830
	my $tran_unixdate tran_unixdate2620,90876
	my $monthly_trans monthly_trans2621,90949
	my $tran_desc tran_desc2622,90997
	my $tran_type tran_type2623,91043
	my $gplains_account gplains_account2624,91091
	my $transaction transaction2625,91150
		my $sql2 sql22637,91664
		my $rz rz2644,92224
sub mw_collapse_invoice_itemsmain::mw_collapse_invoice_items2653,92479
	my ($customer, $invoice_items, $line_type)($customer, $invoice_items, $line_type2655,92511
	my $has_mw_service has_mw_service2657,92562
	my $line_overusage line_overusage2658,92587
	my $mw_revenue mw_revenue2659,92612
	my $line_date;line_date2660,92633
		my $item item2666,92783
		my $service_num service_num2667,92819
sub quexion_collapse_invoice_itemsmain::quexion_collapse_invoice_items2713,93958
	my ($emc_dbh, $customer, $invoice_items, $line_type)($emc_dbh, $customer, $invoice_items, $line_type2715,93995
	my %child_to_parent_map;child_to_parent_map2717,94056
	my %service_parent;service_parent2718,94082
	my @append_lines;append_lines2719,94103
	my $have_spam;have_spam2720,94122
	my $have_virus;have_virus2721,94138
	my $query query2727,94285
	my $stmt stmt2728,94412
			my $query2 query22733,94600
			my $stmt2 stmt22734,94685
			my $row2 row22736,94790
		my $item item2746,95129
		my $service_num service_num2747,95165
		my $parent parent2752,95341
		my $item item2773,95927
		my $delta delta2774,95963
		my $sub_num sub_num2775,96025
		my $query2 query22781,96161
		my $stmt2 stmt22782,96257
		my $row2 row22784,96362
		my $query query2787,96435
		my $stmt stmt2788,96533
sub fusemail_collapse_invoice_itemsmain::fusemail_collapse_invoice_items2831,97919
	my ($emc_dbh, $customer, $invoice_items, $line_type)($emc_dbh, $customer, $invoice_items, $line_type2833,97957
	my $has_fm_service_1 has_fm_service_12835,98018
	my $has_fm_service_2 has_fm_service_22836,98045
	my $line_overusage line_overusage2837,98072
	my $fm_revenue_1 fm_revenue_12838,98097
	my $fm_revenue_2 fm_revenue_22839,98120
	my $min_charge_part min_charge_part2840,98143
	my $line_free_amount line_free_amount2841,98169
	my $line_date;line_date2842,98196
	my $fm_plan_name;fm_plan_name2843,98212
	my $max_mailboxes;max_mailboxes2844,98231
	my $has_credit_lines has_credit_lines2845,98251
	my $has_credit_amount has_credit_amount2846,98278
	my %aggr;aggr2852,98434
	my $invoice_items_2 invoice_items_22869,99323
		my $item item2871,99407
	my $i i2875,99481
		my $item item2877,99541
		my $service_num service_num2878,99579
		my $line_desc line_desc2879,99621
				my $year year2935,101410
				my $month month2936,101440
					my $query query2938,101507
					my $stmt stmt2941,101680
					my ($amount)($amount2943,101759
	my $query query2955,101977
	my $stmt stmt2956,102064
		my $row row2959,102165
sub package_collapse_invoice_itemsmain::package_collapse_invoice_items3100,105490
	my ($emc_dbh, $customer, $invoice_items, $line_type)($emc_dbh, $customer, $invoice_items, $line_type3102,105527
	my @new_invoice_items;new_invoice_items3106,105636
	my $package_desc;package_desc3107,105660
	my $package_user_count package_user_count3108,105679
	my $package_amount package_amount3109,105708
	my $price_per_user price_per_user3110,105733
	my $package_price package_price3111,105758
	my $line_date;line_date3112,105782
	my $min_charge_part min_charge_part3113,105798
	my $line_free_amount line_free_amount3114,105824
	my $current_package current_package3116,105852
		my $item item3118,105926
				my $query query3142,106734
				my $stmt stmt3146,106972
sub invoice_totalmain::invoice_total3204,108609
	my ($emc_dbh, $inv_num)($emc_dbh, $inv_num3206,108629
	my $query query3208,108661
	my $res res3211,108796
	my $invoice invoice3213,108860
	my $cm_total cm_total3217,108916
sub create_contact_update_pinmain::create_contact_update_pin3238,109387
	my ($pin_length)($pin_length3240,109419
	my @chars chars3242,109444
	my $pin pin3246,109609
		my ($r, $s)($r, $s3251,109687
sub get_contact_update_pinmain::get_contact_update_pin3270,109929
	my ($emc_dbh, $year, $month, $cus_num)($emc_dbh, $year, $month, $cus_num3272,109958
	my $query query3274,110005
	my $stmt stmt3275,110088
	my $row row3277,110169
sub trial_domain_proratemain::trial_domain_prorate3290,110405
	my ($year, $month, $created, $when)($year, $month, $created, $when3292,110432
	my $prorate_ratio prorate_ratio3294,110476
	my ($y, $m, $d)($y, $m, $d3295,110500
	my $t0 t03296,110556
		my ($y, $m, $d)($y, $m, $d3299,110668
		my $t1 t13300,110728
		my $days_old days_old3301,110778
			my $target target3308,110924
			my $days days3309,110956
sub months_agomain::months_ago3321,111216
	my ($now_year, $now_month, $delta_months)($now_year, $now_month, $delta_months3323,111233
	my $t t3325,111283
	my $then_year then_year3326,111339
	my $then_month then_month3327,111368

/emcsvn/billing/trunk/web/blib.pl,14304
sub doctypemain::doctype35,659
sub do_setup main::do_setup41,811
sub do_setup_basic main::do_setup_basic56,1182
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions58,1213
sub do_setup_simple main::do_setup_simple83,1915
	my ($form_variables)($form_variables85,1947
sub do_setup_html main::do_setup_html104,2414
	my ($form_variables)($form_variables106,2444
sub frames main::frames125,2911
	my ($emc_dbh, $emc_user, $form_variables, $script)($emc_dbh, $emc_user, $form_variables, $script127,2934
	my $cus_num cus_num129,2993
	my @fields fields131,3037
		my $customer customer137,3161
sub title main::title154,3795
	my $title title156,3817
sub actions main::actions170,4322
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions172,4347
	my ($month, $year)($month, $year174,4407
	my $var;var175,4447
	my @links links218,5497
	my @links2 links2229,5945
	my $this_year this_year265,7069
	my $this_month this_month266,7093
sub footer main::footer308,10332
sub footer_html main::footer_html313,10396
sub error main::error318,10465
	my $message message320,10487
sub row main::row328,10582
	my $text text330,10602
sub startrow main::startrow337,10695
	my ($bgcolor)($bgcolor339,10720
sub endrow main::endrow347,10832
sub cell main::cell352,10876
	my $text text354,10897
sub rightcell main::rightcell359,10962
	my $text text361,10988
sub bcell main::bcell366,11065
	my ($text,$font_color)($text,$font_color368,11087
sub startcell main::startcell376,11285
sub endcell main::endcell381,11333
sub incell main::incell386,11378
	my $text text388,11401
sub showphone main::showphone393,11438
	my $phone phone395,11464
	my @array;array396,11484
		my $string string406,11637
		my $string string413,11873
		my $string string420,12177
sub showphone2 main::showphone2426,12383
	my $phone phone428,12410
	my @array;array429,12430
		my $string string435,12544
sub show_subscriptionmain::show_subscription442,12755
	my ($cus_num, $emc_user)($cus_num, $emc_user444,12779
sub db_errormain::db_error490,14013
	my ($dbh, $query)($dbh, $query492,14028
sub html_main_table(main::html_main_table506,14438
sub html_error(main::html_error511,14522
	my ($txt)($txt513,14541
sub syserror(main::syserror517,14615
	my ($txt)($txt519,14632
sub rid2cusmain::rid2cus523,14713
	my ($rid)($rid525,14727
	my $cust_num cust_num527,14777
	my $s s528,14797
			sub { main::{531,14890
	my $custBag custBag535,15023
sub cus2ridmain::cus2rid541,15227
	my ($cus_num)($cus_num543,15241
	my $rid rid544,15262
	my $s s546,15310
			sub { main::{549,15403
	my $custBag custBag553,15536
sub sps_servicesmain::sps_services559,15728
	my $rid rid561,15747
	my $s s562,15765
			sub { main::{565,15857
	my $custBag custBag569,15990
sub check_servicemain::check_service575,16189
	my ($emc_dbh, $aka_dbh, $cus_num, $sps_service_num)($emc_dbh, $aka_dbh, $cus_num, $sps_service_num577,16209
	my $ret ret578,16268
	my $customer customer579,16282
	my $sql sql583,16432
	my $res res584,16657
sub get_sps_servicemain::get_sps_service606,17127
	my ($rid, $service_rid)($rid, $service_rid608,17149
	my $leave leave609,17180
	my $s s611,17247
			sub { main::{614,17339
	my $custBag custBag619,17498
sub service2ridmain::service2rid629,17784
	my ($service_name)($service_name631,17802
	my $leave leave632,17828
	my $s s634,17896
			sub { main::{637,17988
	my $custBag custBag642,18147
sub check_subscriptionmain::check_subscription652,18408
	my ($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value)($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value654,18433
	my $leave leave655,18513
	my $s s656,18529
	my $result result665,18810
		my $service_data service_data671,19064
sub show_packagesmain::show_packages685,19467
	my ($emc_dbh, $customer, $emc_user, $simple)($emc_dbh, $customer, $emc_user, $simple687,19487
	my ($res2)($res2689,19540
	my $counter;counter690,19553
	my $query query691,19567
	my $stmt stmt695,19744
		my $query query715,20611
		my $stmt stmt720,20925
		my $num num722,21026
			my $status status729,21216
			my $bgcolor;bgcolor730,21236
			my $query query739,21347
			my $stmt stmt744,21599
			my $price price746,21741
			my $user_price user_price748,21799
sub show_subscriptions2main::show_subscriptions2765,22572
	my ($emc_dbh, $cus_num, $emc_user, $simple)($emc_dbh, $cus_num, $emc_user, $simple767,22598
	my $customer customer769,22650
	my ($sql, $res, $res2)($sql, $res, $res2770,22701
	my $counter;counter771,22726
		my $num num808,24479
			my $status status815,24671
			my $bgcolor;bgcolor816,24691
				my $service service834,25857
sub is_spsmain::is_sps870,27330
	my ($emc_dbh, $service_num, $cus_num, $customer_spsnum)($emc_dbh, $service_num, $cus_num, $customer_spsnum872,27343
	my $customer_rid customer_rid874,27407
	my $service service875,27454
	my $service_bag service_bag877,27570
	my $service_rid service_rid878,27628
		my $status status881,27744
sub subscribe_spsmain::subscribe_sps891,28070
	my ($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid)($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid893,28090
	my $sub sub895,28164
	my $customer customer896,28227
	my $hash;hash897,28278
	my $s s898,28289
	my $bag bag926,29307
	my $rid rid927,29368
sub get_month_yearmain::get_month_year932,29509
	my ($month,$year)($month,$year934,29530
sub access_deniedmain::access_denied944,29686
sub check_hosted_usagemain::check_hosted_usage949,29768
	my ($aka_dbh, $access, $sps_num)($aka_dbh, $access, $sps_num951,29793
	my $query_check;query_check952,29834
	my $ret ret953,29852
	my $sql sql964,30076
	my $res res970,30429
	my @row row972,30481
sub tbl_nummain::tbl_num983,30602
	my($num)($num985,30616
sub next_monthmain::next_month989,30683
	my ($year, $month, $months_delta)($year, $month, $months_delta991,30700
sub list_sps_servicesmain::list_sps_services1007,30907
	my ($aka_dbh, $sps_num)($aka_dbh, $sps_num1009,30931
	my %ret ret1011,30963
	my $sql sql1012,30978
	my $res res1018,31174
			my $sql sql1023,31374
			my $res2 res21027,31586
sub check_sps_service_usagemain::check_sps_service_usage1056,32457
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1058,32487
	my $ret ret1059,32533
	my $sql sql1060,32547
	my $res res1082,33544
		my $row row1085,33618
sub check_sps_service_billingmain::check_sps_service_billing1093,33710
	my ($emc_dbh, $cus_num, $service_desc)($emc_dbh, $cus_num, $service_desc1095,33742
	my $ret ret1096,33788
	my $emc_cus_num emc_cus_num1097,33802
	my $query query1103,33961
	my $res res1104,34029
		my $row row1107,34105
	my $sql sql1114,34218
		my $found found1123,34599
		my $cur_set cur_set1124,34616
sub count_sps_service_usersmain::count_sps_service_users1152,35045
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1154,35075
	my $ret ret1155,35121
	my $sql sql1157,35136
	my $res res1162,35427
		my $row row1165,35501
sub check_bs_servicemain::check_bs_service1173,35593
	my ($emc_dbh, $sps_num, $service_num)($emc_dbh, $sps_num, $service_num1175,35616
	my $service service1177,35662
	my $ret ret1178,35718
	my $aka_dbh aka_dbh1179,35732
			my $sql sql1183,35991
			my $res2 res21184,36082
			my $sql sql1191,36214
			my $res2 res21192,36305
			my $sql sql1199,36454
			my $res2 res21200,36566
			my $sql sql1207,36716
			my $res2 res21208,36808
	my %extras extras1216,36929
			my $sql sql1222,37137
			my $res2 res21227,37458
		my $sql sql1235,37620
		my $res2 res21241,38039
		my $sql sql1248,38147
		my $res res1250,38360
sub cleanse_inputmain::cleanse_input1265,38647
	my ($s)($s1267,38667
sub cleanse_hashmain::cleanse_hash1275,38876
	my ($href)($href1277,38895
sub cleanse_input_punctuationmain::cleanse_input_punctuation1290,39358
	my ($s)($s1292,39390
sub line_datemain::line_date1304,39672
	my ($year, $month)($year, $month1306,39688
	my ($line_year, $line_month)($line_year, $line_month1308,39715
	my $line_date line_date1309,39777
sub human_datemain::human_date1316,40011
	my ($year, $month)($year, $month1318,40028
	my ($line_year, $line_month)($line_year, $line_month1320,40055
	my $unixdate unixdate1322,40118
	my @parts parts1324,40189
	my $line_date line_date1325,40224
sub ym_to_humanmain::ym_to_human1334,40387
	my ($ym, $months_delta)($ym, $months_delta1336,40405
	my ($year, $month)($year, $month1342,40478
	my @months months1355,40740
sub get_ym_nowmain::get_ym_now1365,40966
	my ($now, $months_delta)($now, $months_delta1367,40983
	my @ts ts1369,41016
	my $year year1371,41044
	my $month month1372,41072
sub days_in_monthmain::days_in_month1378,41204
	my ($year, $month)($year, $month1380,41224
	my $then then1387,41302
	my @then then1389,41385
sub is_anniversary_monthmain::is_anniversary_month1403,41779
	my ($year, $month, $customer)($year, $month, $customer1405,41806
sub next_anniversary_monthmain::next_anniversary_month1438,42901
	my ($year, $month, $customer, $direction)($year, $month, $customer, $direction1440,42930
	my $d d1442,42980
		my $y y1451,43143
		my $m m1452,43160
		my $limit limit1453,43178
sub get_anniversary_monthsmain::get_anniversary_months1464,43381
	my ($customer)($customer1466,43410
	my $cus_billfreq cus_billfreq1468,43433
	my $cus_billfreq_month cus_billfreq_month1469,43480
	my %target_months;target_months1471,43540
		my $t t1475,43654
sub gazetteer_checkmain::gazetteer_check1498,44198
	my ($emc_dbh, $city, $prov, $country)($emc_dbh, $city, $prov, $country1500,44220
	my $query query1505,44360
	my $res res1506,44454
	my $x x1507,44492
	my $row row1508,44552
			my $stamp stamp1518,44883
sub clone_hashmain::clone_hash1529,45130
	my ($hr)($hr1531,45147
	my %new;new1533,45164
sub show_alertsmain::show_alerts1547,45354
	my ($emc_dbh)($emc_dbh1549,45372
sub check_paymentech_password_agemain::check_paymentech_password_age1565,45826
	my ($emc_dbh)($emc_dbh1567,45862
	my $too_old too_old1569,45884
	my $query query1571,45903
	my $stmt stmt1572,46012
sub send_via_smtpmain::send_via_smtp1593,46563
	my ($server, $helo, $mail_from, $rcpt_to, $msg, $errstr)($server, $helo, $mail_from, $rcpt_to, $msg, $errstr1595,46583
	my $rc;rc1596,46647
	my $smtp smtp1608,46868
sub send_via_mtamain::send_via_mta1649,47594
	my ($cmd, $to, $mesg_path, $errstr)($cmd, $to, $mesg_path, $errstr1651,47613
			my $line;line1666,47965
sub create_contact_linkmain::create_contact_link1681,48193
	my ($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr)($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr1683,48219
	my $admin admin1685,48321
	my $bill bill1686,48337
	my $tech tech1687,48352
		my $conlink conlink1694,48649
		my $conlink conlink1703,48910
		my $conlink conlink1712,49173
sub delete_customermain::delete_customer1729,49600
	my ($emc_dbh, $customer, $errstr)($emc_dbh, $customer, $errstr1731,49622
	my $abort_transaction abort_transaction1733,49664
		my $rz;rz1741,49788
		my $query query1744,49826
		my $stmt stmt1745,49894
				my $query query1750,50072
				my $stmt stmt1758,50450
					my $row row1760,50532
						my $query query1763,50655
			my $now_ts now_ts1781,51037
sub get_invoice_contactsmain::get_invoice_contacts1825,52792
	my ($emc_dbh, $customer, $recips)($emc_dbh, $customer, $recips1827,52819
	my $count count1829,52861
	my $query query1834,52979
	my $stmt stmt1838,53234
	my %contacts;contacts1844,53336
	my $list;list1849,53445
			my $contact contact1863,53826
my %batch_dirs batch_dirs1886,54345
sub zip_batchesmain::zip_batches1894,54462
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1896,54480
	my $query query1903,54674
	my $res res1906,54842
	my $login login1908,54910
	my @jobs;jobs1911,54963
	my $rc rc1916,55150
		my $cc_batch_dir cc_batch_dir1927,55446
		my $file_base file_base1928,55591
				my $r1 r11933,55728
				my $r2 r21934,55768
				my $rc;rc1936,55807
				my $cmd cmd1937,55819
				my $rc;rc1952,56367
				my $cmd cmd1953,56379
		my $query query1965,56862
sub upload_batchesmain::upload_batches1975,57098
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1977,57119
	my $query query1983,57233
	my $res res1985,57364
	my $login login1987,57432
	my @jobs;jobs1990,57485
	my %sftp_args sftp_args2009,57981
	my $sftp sftp2021,58215
		my $cc_batch_dir cc_batch_dir2029,58419
		my $file_base file_base2030,58564
				my $query query2041,59011
				my $query query2055,59543
sub download_batchesmain::download_batches2065,59729
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt2067,59752
	my $query query2073,59866
	my $res res2076,60034
	my $login login2078,60102
	my @jobs;jobs2081,60155
	my $rc rc2085,60336
	my %sftp_args sftp_args2095,60499
	my $sftp sftp2107,60733
		my $cc_batch_dir cc_batch_dir2114,60900
		my $file_base file_base2115,61045
				my $rc rc2124,61405
					my $query query2132,61731
				my $rc rc2142,62165
					my $query query2150,62486
sub unzip_batchmain::unzip_batch2162,62730
	my ($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr)($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr2164,62748
	my $query query2168,62871
	my $res res2171,63056
	my $login login2173,63124
		my ($base)($base2177,63219
		my $pgp_request_file pgp_request_file2178,63265
		my $pgp_response_file pgp_response_file2180,63350
			my $rc rc2185,63473
			my $rc rc2195,63834
		my ($base)($base2202,64124
		my $zip_request_file zip_request_file2203,64170
		my $zip_response_file zip_response_file2205,64255
			my $rc rc2210,64376
			my $rc rc2220,64694

/emcsvn/billing/trunk/web/cc_lib.pl,907
sub show_card_infomain::show_card_info1,0
	my ($dbh, $emc_user, $cc, $cc_data)($dbh, $emc_user, $cc, $cc_data3,21
	my $query query9,215
	my $res res10,283
	my $row row12,351
sub cc_update_formmain::cc_update_form84,2899
	my ($dbh, $emc_user, $cus_num, $old_cc, $old_cc_data)($dbh, $emc_user, $cus_num, $old_cc, $old_cc_data86,2920
	my $s s104,3610
	my $stmt stmt112,3876
sub create_cc_priority_slotmain::create_cc_priority_slot376,11808
	my ($emc_dbh, $cus_num, $cc_id, $priority)($emc_dbh, $cus_num, $cc_id, $priority378,11838
	my $top top380,11889
		my $query query383,11923
		my $stmt stmt384,12016
		my $row row388,12114
				my $query query393,12241
sub display_cc_listmain::display_cc_list406,12459
	my ($cus_num, $api_response)($cus_num, $api_response408,12481
	my $results results410,12518
		my $seen_default seen_default417,12664
		my @cards cards423,12831

/emcsvn/billing/trunk/misc/check_eic.pl,46
		my $sql sql17,504
		my $res2 res218,628

/emcsvn/billing/trunk/misc/services2services2.pl,539
my $sql sql13,330
my $res res14,407
sub transfer_service main::transfer_service129,3830
		my($row, $new_service)($row, $new_service130,3853
		my $sub_min_charge sub_min_charge131,3884
		my $sub_min_users sub_min_users132,3910
		my $sql sql133,3935
		my $res res134,4041
		my $n n136,4091
			my $sql4 sql4138,4130
			my $r r139,4217
			my $sql3 sql3175,5454
			my $sql3 sql3176,5803
			my $sql3 sql3177,6152
sub transfer_emmunity main::transfer_emmunity194,6662
	my $sql sql195,6686
	my $res2 res2196,6817

/emcsvn/billing/trunk/misc/sub_to_spam.pl,48
			my $sql sql20,559
			my $res2 res222,704

/emcsvn/billing/trunk/misc/transactions2transactions2.pl,231
my $sql sql11,195
my $res res12,276
sub transfer_service main::transfer_service119,3347
		my($row, $new_service)($row, $new_service120,3370
				my $sql5 sql5123,3468
				my $res5 res5125,3605
			my $sql3 sql3139,3885

/emcsvn/billing/trunk/misc/check_bs.pl,231
my $sql sql11,196
my $res res12,277
sub transfer_service main::transfer_service116,3308
		my($row, $new_service)($row, $new_service117,3331
				my $sql5 sql5120,3429
				my $res5 res5122,3566
			my $sql3 sql3136,3846

/emcsvn/billing/trunk/misc/compare_invoices.pl,297
my $batch1 batch16,64
my $batch2 batch27,82
my $sql sql8,100
my $res1 res111,274
	my $inv1 inv115,445
	my $inv2 inv216,497
sub get_invoice main::get_invoice20,614
	my($cus_num, $batch_num)($cus_num, $batch_num21,632
	my $ret ret23,778
	my $sql sql24,792
	my $res4 res425,997

/emcsvn/billing/trunk/misc/create_pdf.pl,221
my $pdf pdf6,47
        my $root root12,372
        my $page page15,504
        my $f1 f118,567
        my $f2 f221,735
				my $text1 text126,946
				my $string_w string_w27,988
				my $c_pos c_pos29,1066

/emcsvn/billing/trunk/misc/import_pricing_profile.pl,357
my $profile_id profile_id8,100
my $dbh dbh14,246
my $sql sql16,354
my $res res17,439
my $num num19,485
	my $dsql dsql22,538
	my $dres dres23,609
		my($data_start, $data_end, $service_num, $price, $pid, $setup, $base)($data_start, $data_end, $service_num, $price, $pid, $setup, $base26,676
			my $sql2 sql235,1002
			my $res2 res236,1195

/emcsvn/billing/trunk/misc/delete_cus_sub.pl,46
		my $sql sql17,406
		my $res2 res219,543

/emcsvn/billing/trunk/misc/richard_revenue.pl,931
my $dbh dbh10,128
my $query query11,228
my $res res12,307
my %seen seen15,356
my %batch batch16,371
my @unique_months unique_months17,387
my $cus_name cus_name18,411
my $cus_num cus_num19,430
my $cus_currency cus_currency20,448
my $cus_startdate cus_startdate21,471
my $cus_country cus_country22,495
my $cus_var_num cus_var_num23,517
my $cus_var_name cus_var_name24,538
my $cus_varpercent cus_varpercent25,561
my $cus_emc_num cus_emc_num26,585
my $cus_emc_fullname cus_emc_fullname27,606
my $cus_billfreq cus_billfreq28,633
my $cus_prov cus_prov29,655
my $cus_address cus_address30,674
	my ($year, $month, $day)($year, $month, $day34,746
	my $date date35,795
my $query query47,1160
my $res res48,1640
	my $query2 query265,2041
	my $res2 res266,2127
		my $query_batch query_batch78,2680
			my $query1 query189,2998
			my $res1 res191,3139
				my $sub_total sub_total95,3253

/emcsvn/billing/trunk/misc/parse_codes.pl,166
my $onyx_dbh onyx_dbh8,103
my $res res9,226
 	my($cus_num, $cus_name, $onyx_id)($cus_num, $cus_name, $onyx_id13,296
	my $sql sql14,351
	my $res2 res216,451

/emcsvn/billing/trunk/misc/disaster_recovery.pl,83
my $sql sql6,64
my $res1 res19,272
	my $sql sql13,464
	my $res2 res214,755

/emcsvn/billing/trunk/misc/update_minusers.pl,290
		my $sql sql17,503
		my $res2 res218,602
		my $sql3 sql324,759
		my $res3 res325,895
		my $sql sql33,1224
		my $res2 res234,1323
		my $sql3 sql340,1480
		my $res3 res342,1636
		my $sql sql51,1965
		my $res2 res252,2064
		my $sql3 sql358,2221
		my $res3 res360,2377

/emcsvn/billing/trunk/misc/create_objects.pl,354
my $tmp tmp5,38
my $dbh dbh7,59
my $res res8,144
my $num num10,199
my @row;row11,221
my @row2;row212,230
my $res2;res213,240
my $sql;sql14,250
my $object_prop;object_prop15,259
my $package;package16,276
my ($new, $new2, $create, $create2, $update, $update2, $delete)($new, $new2, $create, $create2, $update, $update2, $delete18,290

/emcsvn/billing/trunk/misc/make_profiles.pl,46
		my $sql sql17,395
		my $res2 res225,674

/emcsvn/billing/trunk/misc/list_techs_onyx.pl,435
my $cus_num cus_num20,367
my $res res22,392
my $res2 res223,406
my $query query24,421
	my $onyx_id onyx_id44,1357
	my $onyx_cus_name onyx_cus_name45,1376
sub get_onyx_id main::get_onyx_id59,1698
	my ($cus_num)($cus_num60,1716
	my $onyx_id onyx_id61,1737
	my $onyx_cus_name onyx_cus_name62,1755
sub get_contacts main::get_contacts81,2304
	my($cus_num)($cus_num82,2323
	my $sql sql83,2343
	my $res res84,2493

/emcsvn/billing/trunk/misc/onyx.pl,433
my $cus_num cus_num20,367
my $res res22,392
my $res2 res223,406
my $query query24,421
	my $onyx_id onyx_id35,928
	my $onyx_cus_name onyx_cus_name36,947
sub get_onyx_id main::get_onyx_id48,1229
	my ($cus_num)($cus_num49,1247
	my $onyx_id onyx_id50,1268
	my $onyx_cus_name onyx_cus_name51,1286
sub get_contacts main::get_contacts64,1663
	my($cus_num)($cus_num65,1682
	my $sql sql66,1702
	my $res res67,1852

/emcsvn/billing/trunk/misc/onyx_delete.pl,94
my $cus_num cus_num20,367
my $res res22,392
my $res2 res223,406
my $query query24,421

/emcsvn/billing/trunk/misc/check_spam_trial.pl,302
my $d1 d19,117
my $m1 m110,163
my $y1 y111,209
my $limit_days limit_days12,255
my $txt txt13,275
my $txt_support txt_support14,289
my $sql sql16,312
my $dbh dbh17,326
my $res res25,849
	my $date1 date129,937
	my $date2 date230,998
		my $date date37,1465
	my $date date51,1958

/emcsvn/billing/trunk/misc/pre_sales_revenue.pl,289
my $batch batch9,117
my $sales_rep sales_rep10,139
my $query2 query211,165
my $cad_cus cad_cus12,182
my $us_cus us_cus13,200
my $dbh dbh15,218
my $query query16,344
my $res res21,502
	my $res2 res230,1342
	my $us_total us_total32,1395
	my $cad_total cad_total33,1414

/emcsvn/billing/trunk/misc/check_all_customers.pl,444
my $akaserver akaserver5,27
my $akauser akauser6,67
my $akapass akapass7,93
my $emcdb emcdb8,121
my $akadb akadb9,144
my %bs_sub bs_sub10,167
my %mm_sub mm_sub11,184
my %customer customer12,201
my %customer_name customer_name13,220
my %bs_services bs_services14,244
my %mm_services mm_services15,266
my %delete delete16,288
		my $sql sql40,1078
		my $res2 res241,1144
		my $sql sql48,1317
		my $res2 res249,1601

/emcsvn/billing/trunk/misc/check_cus.pl,46
		my $sql sql17,403
		my $res2 res218,483

/emcsvn/billing/trunk/scripts/mb_charges.pl,169
sub main'subs main::main'subs38,1003
	my $cus_num cus_num41,1071
	my $tim1 tim142,1093
	my $tim2 tim243,1112
	my $timenow timenow44,1131
	my $res res46,1154

/emcsvn/billing/trunk/scripts/delete_or_suspend_customer.pl,134
my $emc_dbh;emc_dbh7,118
my $commit commit8,131
my ($emc_num, $cus_num)($emc_num, $cus_num31,549
	my $customer customer39,691

/emcsvn/billing/trunk/scripts/all_smtp_traffic.pl,126
sub main'lookup_nums main::main'lookup_nums263,7018
	my $ret_sender ret_sender270,7153
	my $ret_recip ret_recip271,7174

/emcsvn/billing/trunk/scripts/eic_add_charge.pl,357
my $ma_num ma_num10,172
my %seen seen11,188
my %unique_senders unique_senders12,203
my $temp_path temp_path13,228
my @months months19,311
my @months2 months220,399
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow22,527
sub main'lookup_nums main::main'lookup_nums119,3021
	my $ret_sender ret_sender126,3146
	my $ret_recip ret_recip127,3167

/emcsvn/billing/trunk/scripts/traffic_log2.pl,121
sub get_address main::get_address270,8418
	my $ma_num ma_num272,8446
	my $resx resx274,8469
	my @val val276,8580

/emcsvn/billing/trunk/scripts/traffic_log3.pl,121
sub get_address main::get_address178,5026
	my $ma_num ma_num180,5054
	my $resx resx182,5077
	my @val val184,5188

/emcsvn/billing/trunk/scripts/akabeans_usage.pl,72
my $debug debug12,210
my $sql sql20,627
my $res_emc res_emc24,989

/emcsvn/billing/trunk/scripts/eic_traffic.pl,293
my $ma_num ma_num10,172
my $temp_path temp_path11,188
my @months months16,259
my @months2 months217,347
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow19,475
sub main'lookup_nums main::main'lookup_nums126,3408
	my $ret_sender ret_sender133,3533
	my $ret_recip ret_recip134,3554

/emcsvn/billing/trunk/scripts/gen_invoices.pl,157
sub main'bill main::main'bill82,2494
	my $cus_num cus_num84,2520
	my $timenow timenow85,2542
	my $date date86,2564
	my $batch_num batch_num87,2583

/emcsvn/billing/trunk/scripts/ldap_usage.pl,147
my @months2 months211,153
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow13,281
my $dbh dbh16,425
	my $sql sql22,974
		my $sql sql26,1209

/emcsvn/billing/trunk/scripts/monthly_trans.pl,636
sub main'subs main::main'subs35,947
	my $cus_num cus_num38,1014
	my $tim1 tim139,1036
	my $tim2 tim240,1055
	my $timenow timenow41,1074
	my $res res43,1097
	my $query query50,1345
sub main'do_minimum main::main'do_minimum536,26407
				my $cus_num cus_num538,26439
				my $cus_name cus_name539,26464
				my $currency currency540,26490
				my $multiplier multiplier541,26516
				my $var_num var_num542,26544
				my $var_percent var_percent543,26569
				my $desc desc544,26598
				my $base base545,26620
				my $timenow timenow546,26642
				my $servnum servnum547,26667
				my $emcnum emcnum548,26692

/emcsvn/billing/trunk/scripts/monthly_trans2.pl,680
sub main'subs main::main'subs35,953
		  my $cus_num cus_num38,1020
		  my $tim1 tim139,1045
		  my $tim2 tim240,1067
		  my $timenow timenow41,1089
		  my $res res43,1115
		  my $query query50,1378
		  sub main'do_minimum main::main'do_minimum545,29074
					 my $cus_num cus_num547,29114
					 my $cus_name cus_name548,29141
					 my $currency currency549,29169
					 my $multiplier multiplier550,29197
					 my $var_num var_num551,29227
					 my $var_percent var_percent552,29254
					 my $desc desc553,29285
					 my $base base554,29309
					 my $timenow timenow555,29333
					 my $servnum servnum556,29360
					 my $emcnum emcnum557,29387

/emcsvn/billing/trunk/scripts/shared_folders_usage.pl,104
my @months2 months211,153
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow13,281
	my $sql sql22,974

/emcsvn/billing/trunk/scripts/eic_traffic_new.pl,293
my $ma_num ma_num10,172
my $temp_path temp_path11,188
my @months months16,259
my @months2 months217,347
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow19,475
sub main'lookup_nums main::main'lookup_nums124,2836
	my $ret_sender ret_sender131,2961
	my $ret_recip ret_recip132,2982

/emcsvn/billing/trunk/scripts/import_eic.pl,132
my @fields;fields6,86
my $sub_num;sub_num7,98
my $cus_num;cus_num8,111
my $base;base9,124
my $add_charge;add_charge10,134

/emcsvn/billing/trunk/sanity_checks/TestAccounts.pm,27
package TestAccounts;3,18

/emcsvn/billing/trunk/reporting/enventis_domain_summary.pl,474
my $total;total27,893
my $start_date;start_date28,904
my $del;del29,920
my $username;username30,929
my $plans plans32,944
my $quota quota41,1040
my $active=active50,1140
my $date date55,1192
    my $line line59,1268
    my ($reseller,$customer, $created_on, $domain, $package, $deleted, $email)($reseller,$customer, $created_on, $domain, $package, $deleted, $email61,1386
                my $count count74,2147
                my $count count88,3217

/emcsvn/billing/trunk/reporting/enventis_report.pl,3666
my $customer_num customer_num20,720
my $db db21,749
my $test_db test_db31,1050
my $aka_dbh aka_dbh48,1625
my @ignore_words ignore_words54,1834
my $ignore ignore76,2163
my $pkg_defs pkg_defs82,2301
my $pkg_prices pkg_prices85,2369
my $depth depth91,2635
my $num_cust num_cust92,2650
my $start_time start_time96,2801
my $customer customer99,2917
my $invoice invoice100,2960
sub recurseCustomersmain::recurseCustomers111,3152
    my $customer customer113,3175
    my ($key, $value)($key, $value114,3201
    my $customers customers116,3243
    my $cust_hash;cust_hash119,3317
    my $pkgs pkgs124,3444
    my $cust;cust128,3622
        my $sub sub132,3683
            my ($c_num, $c_hash)($c_num, $c_hash136,3824
            my $realm_list realm_list141,4100
                my $mb_list mb_list145,4328
                    my $mb_sub_list mb_sub_list149,4546
                            my $pkg_info pkg_info156,5006
                            my $parent parent159,5233
sub getCustomerPackagesmain::getCustomerPackages173,5689
    my $pkg_num pkg_num175,5715
    my $package;package177,5741
sub getDomainsmain::getDomains188,6177
    my $cus_num cus_num190,6194
    my $query query192,6220
    my $stmt stmt193,6282
    my $rc rc194,6324
    my $data data199,6474
sub getMailboxesmain::getMailboxes204,6550
    my $domain domain206,6569
    my $query query208,6594
    my $stmt stmt210,6712
    my $rc rc211,6754
    my $data data216,6902
sub getMailboxPackagemain::getMailboxPackage221,6965
    my $mailbox mailbox223,6989
    my $query query225,7015
    my $stmt stmt226,7144
    my $rc rc227,7186
    my $data data232,7344
sub getMailboxSubListmain::getMailboxSubList236,7420
    my $box_num box_num238,7444
    my $query query240,7470
    my $stmt stmt242,7588
    my $rc rc243,7630
    my $data data248,7777
sub getRealmListmain::getRealmList253,7840
    my $cus_num cus_num255,7859
    my $query query257,7885
    my $stmt stmt258,7967
    my $rc rc259,8010
    my $data data264,8165
sub getMailboxRealmCount main::getMailboxRealmCount269,8228
    my $realm realm271,8256
    my $query query273,8280
    my $stmt stmt274,8362
    my $rc rc275,8404
    my $data data280,8545
sub getMailboxSubCountmain::getMailboxSubCount288,8731
    my $sub_num sub_num290,8756
    my $query query292,8782
    my $stmt stmt293,8865
    my $rc rc294,8907
    my $data data299,9052
sub getCustomermain::getCustomer305,9124
    my $cus_num cus_num307,9142
    my $query query308,9167
    my $stmt stmt309,9308
    my $rc rc310,9350
    my $data data315,9509
sub getCustomersmain::getCustomers320,9571
    my $cus_num cus_num322,9590
    my $query query323,9615
    my $stmt stmt324,9756
    my $rc rc325,9798
    my $data data331,9958
sub getPackageDefinitionsmain::getPackageDefinitions335,10030
    my $query query337,10058
    my $stmt stmt338,10111
    my $rc rc339,10153
    my $data data345,10305
sub getPackagePricingmain::getPackagePricing349,10381
    my $query query351,10405
    my $stmt stmt352,10454
    my $rc rc353,10496
    my $data data359,10644
sub getPackageSubscriptionsmain::getPackageSubscriptions363,10720
    my $sub_num sub_num365,10750
    my $query query366,10775
    my $stmt stmt367,10902
    my $rc rc368,10944
    my $data data373,11115
sub getCustomerSubscriptionsmain::getCustomerSubscriptions381,11396
  my $cus_num cus_num383,11427
  my $query query384,11450
    my $stmt stmt386,11578
    my $rc rc387,11620
    my $data data392,11792

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_missing_billing_subscriptions.pl,3632
my $SERVICE_MISSING_IN_EMC SERVICE_MISSING_IN_EMC18,317
my $SERVICE_MISSING_IN_AKA SERVICE_MISSING_IN_AKA19,349
my $fm_dbh;fm_dbh22,399
my $emc_dbh;emc_dbh23,411
my $aka_dbh;aka_dbh24,424
my $commit commit25,437
my $billinghost billinghost29,463
my $billingusername billingusername30,501
my $billingpassword billingpassword31,534
my $billingdsn billingdsn32,569
my $akahost akahost35,717
my $akausername akausername36,747
my $akapassword akapassword37,776
my $akadsn akadsn38,807
my $customers customers68,1565
my @miss_results miss_results70,1607
my %aka_customer_hash aka_customer_hash71,1630
	my $cus_num cus_num73,1693
	my $sps_num sps_num74,1732
	my $missing_subscriptions missing_subscriptions76,1772
            my $akabean_customer akabean_customer84,1964
        my $c c89,2148
        my $billable billable90,2194
        my $will_resell will_resell91,2250
        my $inv_total inv_total92,2317
        my $cus_name cus_name93,2375
            my @line line96,2531
            my $miss_service_num miss_service_num97,2558
            my $count_and_domain count_and_domain99,2618
            my $user_count user_count100,2716
            my $user_domain user_domain101,2775
            my $billing_class billing_class105,2911
            my $codes codes113,3176
            my $code_str code_str115,3329
            my $line_str line_str131,3986
            my @line line136,4181
            my $line_str line_str151,4856
my $fh;fh158,4984
my $csv_columns csv_columns164,5157
my $csv csv167,5486
sub get_all_emc_customers main::get_all_emc_customers182,5894
	my $ret ret183,5922
	my $query query184,5937
sub get_all_possible_billing_code main::get_all_possible_billing_code207,6435
	my $sps_service sps_service208,6471
	my $domain domain209,6497
	my $ret ret210,6518
	my $query query211,6533
sub get_emc_last_inv_total main::get_emc_last_inv_total230,6932
	my $cus_num cus_num231,6961
	my $ret ret232,6983
	my $query query233,6997
	my $row row241,7192
sub get_aka_service_count_and_domain main::get_aka_service_count_and_domain248,7298
	my $service_num service_num249,7337
	my $cus_num cus_num250,7363
	my $ret ret251,7385
	my $query query252,7399
sub get_billing_class main::get_billing_class268,7800
	my $domain domain269,7824
	my $ret ret270,7845
	my $query query271,7860
sub get_aka_customers main::get_aka_customers287,8252
	my $cus_num cus_num288,8276
	my $ret ret289,8298
	my $query query290,8313
sub get_discrepancies main::get_discrepancies306,8573
	my $set1 set1307,8597
	my $set2 set2308,8616
        my @losts losts309,8635
                        my %lost lost313,8761
sub get_missing_subscriptions main::get_missing_subscriptions325,9322
	my %discrepancies discrepancies326,9354
	my $cus_num cus_num327,9379
	my $sps_num sps_num328,9401
	my $akabean_subscriptions akabean_subscriptions331,9453
	my $emc_subscriptions emc_subscriptions332,9519
sub get_akabean_subscriptions main::get_akabean_subscriptions340,9880
	my $ret ret341,9912
	my $sps_num sps_num342,9927
	my $query query344,9950
                my $service_short service_short357,10514
sub get_service_createon main::get_service_createon365,10648
	my $ret ret366,10675
	my $cus_num cus_num367,10690
	my $service_short service_short368,10712
	my $query query370,10741
sub get_emc_subscriptions main::get_emc_subscriptions390,11129
	my $ret ret391,11157
	my $cus_num cus_num392,11172
	my $query query394,11195
                my $service_short service_short411,11573

/emcsvn/billing/trunk/reporting/hiddendollarproject/getMissingSuspendedCustomer.pl,1459
my $host host12,84
my $username username13,112
my $password password14,138
my $dsn dsn15,166
my $dbh dbh16,225
my $billinghost billinghost18,282
my $billingusername billingusername19,320
my $billingpassword billingpassword20,353
my $billingdsn billingdsn21,388
my $billingdbh billingdbh22,456
my $akahost akahost24,541
my $akausername akausername25,571
my $akapassword akapassword26,600
my $akadsn akadsn27,631
my $akadbh akadbh28,696
my %varmapping varmapping32,774
my %deletedbilling deletedbilling34,852
my $sthFusemail sthFusemail54,1291
my $sthAKAServices sthAKAServices65,1521
my $sthAKA sthAKA79,1811
my $sthAKADomain sthAKADomain90,2023
	my $isPrint isPrint105,2480
	my $active_in_Fusemail active_in_Fusemail106,2498
	my $active_in_EMC active_in_EMC107,2529
	my $active_with_Domain active_with_Domain108,2555
	my $biz_unit biz_unit109,2586
	my $parent_num_billing parent_num_billing111,2611
	my $cus_num_aka	cus_num_aka112,2684
	my $cus_num_fusemail	cus_num_fusemail113,2748
	my $cus_is_reseller_billing cus_is_reseller_billing114,2816
	my $cus_deleted_billing cus_deleted_billing115,2889
	my $cus_name_billing cus_name_billing116,2976
	my $cus_deleted_date_billing cus_deleted_date_billing117,3049
	my $var_num	var_num118,3122
	my $activeinFusemail activeinFusemail123,3273
	my $activeServicesInEMC activeServicesInEMC130,3455
	my $activeDomainInEMC activeDomainInEMC137,3641

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_missing_diskplans.pl,2013
my $fm_dbh;fm_dbh19,305
my $emc_dbh;emc_dbh20,317
my $commit commit21,330
my $accounts accounts50,941
my $account;account51,960
my $fake_resellers fake_resellers54,1017
my @test_accounts test_accounts61,1104
my $resellers resellers88,1708
my $direct_group_admins direct_group_admins89,1728
	my ($plans, $total)($plans, $total91,1788
	my $reseller_id reseller_id92,1844
		my $reseller reseller100,2081
			my $size size102,2155
my $fh;fh115,2452
my $csv_columns csv_columns116,2460
my $csv csv123,2715
my $account_id;account_id131,2996
my $count;count132,3012
my $size;size133,3023
my $plans;plans134,3033
my $total;total135,3044
	my $billing billing143,3170
	my $creation_date creation_date144,3222
my $value;value163,3671
	my $billing billing173,3873
		my $reseller_id reseller_id175,3953
		my $creation_date creation_date176,4006
		my $reseller_name reseller_name177,4056
		my $reseller_cus_num reseller_cus_num178,4082
		my $count count179,4111
		my $size size180,4143
		my $cus_name cus_name181,4182
		my $cus_num cus_num182,4219
		my $inv_total inv_total183,4239
		my $status status184,4261
			my $reseller reseller193,4469
sub get_missing_diskplans main::get_missing_diskplans219,4997
	my $ret ret220,5025
	my $account account221,5040
	my $account_plan_id account_plan_id222,5062
	my $disks disks223,5114
	my $total total224,5160
	my $query query226,5177
		my $size size247,5645
sub get_diskplans main::get_diskplans259,5824
	my @ret ret260,5844
	my $account_plan_id account_plan_id261,5859
	my $query query263,5890
sub get_account main::get_account279,6190
	my $ret;ret280,6208
	my $account_id account_id281,6218
	my $query query282,6243
sub get_all_group_admins main::get_all_group_admins298,6524
	my $ret ret299,6551
	my $query query300,6566
sub get_fm_customer_at_emc main::get_fm_customer_at_emc321,6970
	my $ret;ret322,6999
	my $account_id account_id323,7009
	my $query query324,7034

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_wrong_fm_subscriptions.pl,2066
my $fm_dbh;fm_dbh16,288
my $emc_dbh;emc_dbh17,300
my $aka_dbh;aka_dbh18,313
my $commit commit19,326
my $VAULT_SMART_SERVICE_NUM=VAULT_SMART_SERVICE_NUM21,343
my $SPAM_SMART_SERVICE_NUM=SPAM_SMART_SERVICE_NUM22,375
my $VIRUS_SMART_SERVICE_NUM=VIRUS_SMART_SERVICE_NUM23,405
my $accounts accounts61,1326
my $vault_akabean_customers vault_akabean_customers62,1375
my $virus_akabean_customers virus_akabean_customers63,1437
my $spam_akabean_customers spam_akabean_customers64,1499
my $fake_resellers fake_resellers67,1603
my @test_accounts test_accounts74,1690
my $account;account80,1835
my $missing_resellers missing_resellers83,1893
my $missing_group_admins missing_group_admins84,1921
	my $account_id account_id87,1983
	my $is_hybrid;is_hybrid88,2026
	my $target;target89,2042
	my $count count90,2055
	my $reseller_id reseller_id91,2098
my $fh;fh134,3058
my $csv_columns csv_columns135,3066
my $csv csv141,3251
	my $billing billing150,3614
	my $vault_count vault_count154,3745
	my $spam_count spam_count155,3790
	my $virus_count virus_count156,3833
	my $billing billing188,4670
	my $vault_count vault_count192,4801
	my $spam_count spam_count193,4846
	my $virus_count virus_count194,4889
sub get_all_group_admins_with_plan main::get_all_group_admins_with_plan228,5720
  my $ret ret229,5757
  my $query query230,5773
sub get_all_customers_with_vault main::get_all_customers_with_vault249,6183
  my $ret ret250,6218
  my $query query251,6234
sub get_all_customers_with_virus main::get_all_customers_with_virus276,6887
  my $ret ret277,6922
  my $query query278,6938
sub get_all_customers_with_spam main::get_all_customers_with_spam303,7591
  my $ret ret304,7625
  my $query query305,7641
sub get_total_users main::get_total_users330,8293
	my $ret;ret331,8315
	my $account_id account_id332,8325
	my $query query333,8350
sub get_fm_customer_at_emc main::get_fm_customer_at_emc351,8683
  my $ret;ret352,8712
  my $account_id account_id353,8723
  my $query query354,8749

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_missing_fm_subscriptions.pl,2066
my $fm_dbh;fm_dbh16,288
my $emc_dbh;emc_dbh17,300
my $aka_dbh;aka_dbh18,313
my $commit commit19,326
my $VAULT_SMART_SERVICE_NUM=VAULT_SMART_SERVICE_NUM21,343
my $SPAM_SMART_SERVICE_NUM=SPAM_SMART_SERVICE_NUM22,375
my $VIRUS_SMART_SERVICE_NUM=VIRUS_SMART_SERVICE_NUM23,405
my $accounts accounts61,1326
my $vault_akabean_customers vault_akabean_customers62,1375
my $virus_akabean_customers virus_akabean_customers63,1437
my $spam_akabean_customers spam_akabean_customers64,1499
my $fake_resellers fake_resellers67,1603
my @test_accounts test_accounts74,1690
my $account;account80,1835
my $missing_resellers missing_resellers83,1893
my $missing_group_admins missing_group_admins84,1921
	my $account_id account_id87,1983
	my $is_hybrid;is_hybrid88,2026
	my $target;target89,2042
	my $count count90,2055
	my $reseller_id reseller_id91,2098
my $fh;fh134,3055
my $csv_columns csv_columns135,3063
my $csv csv141,3248
	my $billing billing150,3615
	my $vault_count vault_count154,3746
	my $spam_count spam_count155,3791
	my $virus_count virus_count156,3834
	my $billing billing188,4671
	my $vault_count vault_count192,4802
	my $spam_count spam_count193,4847
	my $virus_count virus_count194,4890
sub get_all_group_admins_with_plan main::get_all_group_admins_with_plan228,5723
  my $ret ret229,5760
  my $query query230,5776
sub get_all_customers_with_vault main::get_all_customers_with_vault249,6186
  my $ret ret250,6221
  my $query query251,6237
sub get_all_customers_with_virus main::get_all_customers_with_virus276,6890
  my $ret ret277,6925
  my $query query278,6941
sub get_all_customers_with_spam main::get_all_customers_with_spam303,7594
  my $ret ret304,7628
  my $query query305,7644
sub get_total_users main::get_total_users330,8296
	my $ret;ret331,8318
	my $account_id account_id332,8328
	my $query query333,8353
sub get_fm_customer_at_emc main::get_fm_customer_at_emc351,8686
  my $ret;ret352,8715
  my $account_id account_id353,8726
  my $query query354,8752

/emcsvn/billing/trunk/reporting/hiddendollarproject/getSuspendedResellerwithActiveSubcus.pl,1426
my $host host12,84
my $username username13,112
my $password password14,138
my $dsn dsn15,166
my $dbh dbh16,225
my $billinghost billinghost18,282
my $billingusername billingusername19,320
my $billingpassword billingpassword20,353
my $billingdsn billingdsn21,388
my $billingdbh billingdbh22,456
my $akahost akahost24,541
my $akausername akausername25,571
my $akapassword akapassword26,600
my $akadsn akadsn27,631
my $akadbh akadbh28,696
my %varmapping varmapping32,774
my %deletedbilling deletedbilling34,852
my $sthsubCustomers sthsubCustomers72,1473
my $sthSubBilling sthSubBilling86,1723
my $sthFusemail sthFusemail97,1954
my $sthAKAServices sthAKAServices111,2194
my $sthAKADomain sthAKADomain125,2484
	my $isPrint isPrint140,2838
	my $active_in_Billing active_in_Billing141,2856
	my $active_in_Fusemail active_in_Fusemail142,2886
	my $active_in_EMC active_in_EMC143,2917
	my $active_with_Domain active_with_Domain144,2943
	my $biz_unit biz_unit145,2974
	my $cus_name_billing cus_name_billing147,2999
	my $cus_num_aka	cus_num_aka148,3072
	my $cus_num_fusemail	cus_num_fusemail149,3136
	my $var_num	var_num150,3204
	my $activeSubinBilling activeSubinBilling155,3348
	my $activeinFusemail activeinFusemail162,3538
		my $subSPSNum subSPSNum172,3776
		my $activeServicesInEMC activeServicesInEMC177,3875
		my $activeDomainInEMC activeDomainInEMC184,4065

/emcsvn/billing/trunk/reporting/hiddendollarproject/getMissingSubcusinBilling.pl,2093
my $host host9,79
my $username username10,107
my $password password11,133
my $dsn dsn12,161
my $dbh dbh13,220
my $billinghost billinghost15,277
my $billingusername billingusername16,315
my $billingpassword billingpassword17,348
my $billingdsn billingdsn18,383
my $billingdbh billingdbh19,451
my $akahost akahost21,536
my $akausername akausername22,566
my $akapassword akapassword23,595
my $akadsn akadsn24,626
my $akadbh akadbh25,691
my %varmapping varmapping29,769
my %akaresellers akaresellers31,847
my %fusemailresellers fusemailresellers54,1346
my $sthsubAKACustomers sthsubAKACustomers91,2129
my $sthsubFusemailCustomers sthsubFusemailCustomers109,2456
my $sthinBilling sthinBilling128,2785
my $sthFMResellertoBilling sthFMResellertoBilling139,2986
my $sthAKAResellertoBilling sthAKAResellertoBilling151,3256
my %sub_biz_unit sub_biz_unit160,3457
my %resellers;resellers162,3513
	my $akaResellerBillingID akaResellerBillingID169,3809
	my $akamissing_count akamissing_count171,3889
	my $cus_name cus_name173,3917
	my $org_num org_num174,3978
	my $cus_willresell cus_willresell175,4039
	my @missingakasubs;missingakasubs177,4107
		my $akamissing_count akamissing_count182,4243
		my $akasubnum akasubnum184,4272
		my $akasubname akasubname185,4310
		my $akafmaccountid akafmaccountid186,4349
		my $akacreatedby akacreatedby187,4392
		my $akacreatedon akacreatedon188,4433
		my $sub_biz_unit sub_biz_unit190,4475
		my $akaactiveinBilling akaactiveinBilling193,4582
	my $fmResellerBillingID fmResellerBillingID216,5541
	my $fmmissing_count fmmissing_count218,5619
	my $cus_name cus_name220,5647
	my $company_name company_name221,5718
	my $creation_time creation_time222,5794
	my $featureset_id featureset_id223,5870
	my @missingfmsubs;missingfmsubs225,5947
		my $fmaccountid fmaccountid230,6102
		my $fmsubname fmsubname231,6147
		my $fmcreatedon fmcreatedon232,6190
		my $fmstatus fmstatus233,6235
		my $sub_biz_unit sub_biz_unit235,6278
		my $fmactiveinBilling fmactiveinBilling238,6373

/emcsvn/billing/trunk/support/send_tech_notes.pl,0

/emcsvn/billing/trunk/scripts/post.pl,0

/emcsvn/billing/trunk/scripts/test_date.pl,0

/emcsvn/billing/trunk/scripts/check_eic_traffic.pl,0

/emcsvn/billing/trunk/scripts/config_read.pl,0

/emcsvn/billing/trunk/scripts/generate_mailbox_reports.pl,0

/emcsvn/billing/trunk/scripts/summarize_charges.pl,0

/emcsvn/billing/trunk/scripts/import_modem.pl,0

/emcsvn/billing/trunk/scripts/akabeans_resellers.pl,0

/emcsvn/billing/trunk/scripts/aka_usage.pl,0

/emcsvn/billing/trunk/scripts/misc_cleanup.pl,0

/emcsvn/billing/trunk/scripts/aka_cleanup.pl,0

/emcsvn/billing/trunk/scripts/report_revenue.pl,0

/emcsvn/billing/trunk/scripts/del_batch.pl,0

/emcsvn/billing/trunk/scripts/accpac_batch.pl,0

/emcsvn/billing/trunk/scripts/clean_verps.pl,0

/emcsvn/billing/trunk/scripts/traffic_log1.pl,0

/emcsvn/billing/trunk/scripts/aka_resellers.pl,0

/emcsvn/billing/trunk/scripts/predelete.pl,0

/emcsvn/billing/trunk/misc/sps2emc.pl,0

/emcsvn/billing/trunk/lib/Billing/Accpac_temp.pm,650
package Accpac_temp;3,18
sub new Accpac_temp::new9,98
my( $line_monthyear, $line_currency, $line_amount, $account_num)( $line_monthyear, $line_currency, $line_amount, $account_num11,109
	my $r_Accpac_temp r_Accpac_temp12,180
sub delete Accpac_temp::delete25,412
	my $r_Accpac_temp r_Accpac_temp26,425
	my $dbh dbh27,453
	my $res res28,490
sub update Accpac_temp::update33,544
	my $r_Accpac_temp r_Accpac_temp34,557
	my $query query35,585
	my $dbh dbh42,834
	my $res res43,871
sub create Accpac_temp::create48,925
	my $r_Accpac_temp r_Accpac_temp49,938
	my $query query50,966
	my $dbh dbh64,1250
	my $res res65,1287

/emcsvn/billing/trunk/lib/Billing/Aka.pm,716
package Aka;3,18
sub new Aka::new9,90
my( $cus_num, $aka_domain, $aka_server, $aka_relay, $aka_fvirus, $aka_pvirus, $parent_cus_num, $primary_service, $preferred_mailstore)( $cus_num, $aka_domain, $aka_server, $aka_relay, $aka_fvirus, $aka_pvirus, $parent_cus_num, $primary_service, $preferred_mailstore11,101
	my $r_Aka r_Aka12,242
sub delete Aka::delete30,602
	my $r_Aka r_Aka31,615
	my $query query32,635
	my $dbh dbh33,714
	my $res res34,751
sub update Aka::update39,805
	my $r_Aka r_Aka40,818
	my $query query41,838
	my $dbh dbh54,1296
	my $res res55,1333
sub create Aka::create60,1387
	my $r_Aka r_Aka61,1400
	my $query query62,1420
	my $dbh dbh86,1884
	my $res res87,1921

/emcsvn/billing/trunk/lib/Billing/Var_trans.pm,676
package Var_trans;3,17
sub new Var_trans::new9,95
my( $var_num, $cus_num, $var_unixdate, $var_date, $var_amount, $var_currency, $var_desc)( $var_num, $cus_num, $var_unixdate, $var_date, $var_amount, $var_currency, $var_desc11,106
	my $r_Var_trans r_Var_trans12,201
sub delete Var_trans::delete28,485
	my $r_Var_trans r_Var_trans29,498
	my $dbh dbh30,524
	my $res res31,561
sub update Var_trans::update36,615
	my $r_Var_trans r_Var_trans37,628
	my $query query38,654
	my $dbh dbh48,998
	my $res res49,1035
sub create Var_trans::create54,1089
	my $r_Var_trans r_Var_trans55,1102
	my $query query56,1128
	my $dbh dbh76,1516
	my $res res77,1553

/emcsvn/billing/trunk/lib/Billing/BounceCookie.pm,363
package BounceCookie;4,42
my $encodeTable encodeTable12,146
sub bounce_cryptBounceCookie::bounce_crypt24,558
	my $bounceid bounceid26,577
	my ($pacstr, $l, $pac, $pacenc, $format, $pacencstr)($pacstr, $l, $pac, $pacenc, $format, $pacencstr28,601
	my @string string30,657
	my $key key31,693
	my $keylength keylength32,723
	my $encstr encstr34,763

/emcsvn/billing/trunk/lib/Billing/Eic_secondary.pm,652
package Eic_secondary;3,17
sub new Eic_secondary::new9,99
my( $eic_name, $eic_subdomain, $eic_po)( $eic_name, $eic_subdomain, $eic_po11,110
	my $r_Eic_secondary r_Eic_secondary12,156
sub delete Eic_secondary::delete24,342
	my $r_Eic_secondary r_Eic_secondary25,355
	my $query query26,385
	my $dbh dbh27,490
	my $res res28,527
sub update Eic_secondary::update33,581
	my $r_Eic_secondary r_Eic_secondary34,594
	my $query query35,624
	my $dbh dbh42,870
	my $res res43,907
sub create Eic_secondary::create48,961
	my $r_Eic_secondary r_Eic_secondary49,974
	my $query query50,1004
	my $dbh dbh62,1222
	my $res res63,1259

/emcsvn/billing/trunk/lib/Billing/Grpwise_pos.pm,599
package Grpwise_pos;3,17
sub new Grpwise_pos::new9,97
my( $cus_num, $grp_domain)( $cus_num, $grp_domain11,108
	my $r_Grpwise_pos r_Grpwise_pos12,141
sub delete Grpwise_pos::delete23,289
	my $r_Grpwise_pos r_Grpwise_pos24,302
	my $query query25,330
	my $dbh dbh26,425
	my $res res27,462
sub update Grpwise_pos::update32,516
	my $r_Grpwise_pos r_Grpwise_pos33,529
	my $query query34,557
	my $dbh dbh40,740
	my $res res41,777
sub create Grpwise_pos::create46,831
	my $r_Grpwise_pos r_Grpwise_pos47,844
	my $query query48,872
	my $dbh dbh58,1032
	my $res res59,1069

/emcsvn/billing/trunk/lib/Billing/Profile_data.pm,843
package Profile_data;3,17
sub newProfile_data::new9,98
	my ($sql, $dbh, $row, $res)($sql, $dbh, $row, $res12,116
	my ($data_id, $data_start, $data_end, $service_num, $unit_price, $usage_price, $profile_id, $setup, $base)($data_id, $data_start, $data_end, $service_num, $unit_price, $usage_price, $profile_id, $setup, $base13,146
	my $r_Profile_data r_Profile_data35,950
sub deleteProfile_data::delete53,1299
	my $r_Profile_data r_Profile_data55,1312
	my $query query57,1342
	my $dbh dbh58,1433
	my $res res59,1470
sub updateProfile_data::update64,1524
	my $r_Profile_data r_Profile_data66,1537
	my $query query68,1567
	my $dbh dbh80,2020
	my $res res81,2057
sub createProfile_data::create86,2111
	my $r_Profile_data r_Profile_data88,2124
	my $query query90,2154
	my $dbh dbh114,2652
	my $res res115,2689

/emcsvn/billing/trunk/lib/Billing/Ccmail_pos.pm,574
package Ccmail_pos;3,17
sub new Ccmail_pos::new9,96
my( $cus_num, $cc_po)( $cus_num, $cc_po11,107
	my $r_Ccmail_pos r_Ccmail_pos12,135
sub delete Ccmail_pos::delete23,269
	my $r_Ccmail_pos r_Ccmail_pos24,282
	my $query query25,309
	my $dbh dbh26,392
	my $res res27,429
sub update Ccmail_pos::update32,483
	my $r_Ccmail_pos r_Ccmail_pos33,496
	my $query query34,523
	my $dbh dbh40,682
	my $res res41,719
sub create Ccmail_pos::create46,773
	my $r_Ccmail_pos r_Ccmail_pos47,786
	my $query query48,813
	my $dbh dbh58,960
	my $res res59,997

/emcsvn/billing/trunk/lib/Billing/Line_items.pm,745
package Line_items;3,17
sub new Line_items::new9,96
my( $inv_num, $line_unixdate, $line_date, $line_amount, $line_desc, $account_num, $emc_num, $sale_type)( $inv_num, $line_unixdate, $line_date, $line_amount, $line_desc, $account_num, $emc_num, $sale_type11,107
	my $r_Line_items r_Line_items12,217
sub delete Line_items::delete29,539
	my $r_Line_items r_Line_items30,552
	my $query query31,579
	my $dbh dbh32,668
	my $res res33,705
sub update Line_items::update38,759
	my $r_Line_items r_Line_items39,772
	my $query query40,799
	my $dbh dbh52,1248
	my $res res53,1285
sub create Line_items::create58,1339
	my $r_Line_items r_Line_items59,1352
	my $query query60,1379
	my $dbh dbh82,1828
	my $res res83,1865

/emcsvn/billing/trunk/lib/Billing/Services2.pm,1000
package Services2;3,18
sub newServices2::new10,114
	my $emc_dbh emc_dbh14,133
	my ($query, $res, $row)($query, $res, $row16,156
	my ($service_num, $service_name,($service_num, $service_name,17,182
	my ($greatpl_service_num, $greatpl_usage_num)($greatpl_service_num, $greatpl_usage_num22,532
	my $r_Services2 r_Services260,2152
sub deleteServices2::delete89,3114
	my $r_Services2 r_Services291,3127
	my $query query93,3154
	my $emc_dbh emc_dbh94,3247
	my $res res95,3283
sub updateServices2::update104,3474
	my $r_Services2 r_Services2106,3487
	my $emc_dbh emc_dbh108,3514
	my $query query110,3551
	my $stmt stmt111,3611
	my $orig orig113,3696
	my $res res137,4215
		my $h_diff h_diff157,4949
sub createServices2::create168,5214
	my $r_Services2 r_Services2170,5227
	my $query query172,5254
	my $emc_dbh emc_dbh193,5697
	my $res res194,5733
sub diff_hashServices2::diff_hash221,6637
	my ($hr1, $hr2)($hr1, $hr2223,6653
	my %result;result224,6676

/emcsvn/billing/trunk/lib/Billing/Log.pm,314
package Log;1,0
sub logitLog::logit12,120
	my ($emc_dbh, $source, $emc_num, $cus_num, @args)($emc_dbh, $source, $emc_num, $cus_num, @args14,132
	my @now now16,190
	my $remote_addr;remote_addr17,220
	my $ym ym18,238
	my $fmt fmt34,582
	my $now now35,607
	my $msg msg36,655
	my $query query38,689

/emcsvn/billing/trunk/lib/Billing/EMCTypes.pm,143
package EMCTypes;1,0
sub createDataBag EMCTypes::createDataBag7,49
	my ($entity, $hash )($entity, $hash 8,69
	my $databag databag18,347

/emcsvn/billing/trunk/lib/Billing/Subscribed2.pm,1268
package Subscribed2;3,18
sub newSubscribed2::new11,167
	my ($sql, $res, $row)($sql, $res, $row15,186
	my ($sub_num, $cus_num, $service_num, $tied_package_num, $var_num, $sub_varpercent,($sub_num, $cus_num, $service_num, $tied_package_num, $var_num, $sub_varpercent,16,210
	my $dbh dbh24,686
	my $sub sub73,2644
sub deleteSubscribed2::delete110,3778
	my ($sub, $sub_deleted_date)($sub, $sub_deleted_date112,3791
	my $query query114,3828
	my $dbh dbh115,3923
	my $res res116,3947
sub updateSubscribed2::update124,4070
	my $sub sub126,4083
	my $emc_dbh emc_dbh128,4102
	my $query query130,4131
	my $stmt stmt131,4207
	my $orig orig133,4301
	my $res res166,5004
		my $h_diff h_diff195,5761
sub createSubscribed2::create207,6067
	my $sub sub209,6080
	my $dbh dbh211,6099
	my $query query212,6123
	my $res res272,6852
		my @row row303,7555
sub nukeSubscribed2::nuke315,7802
	my $sub sub317,7813
	my $query query319,7832
	my $dbh dbh320,7890
	my $res res321,7914
sub nuke_subSubscribed2::nuke_sub332,8138
	my $sub sub334,8153
	my $query query336,8172
	my $dbh dbh337,8242
	my $res res338,8266
sub diff_hashSubscribed2::diff_hash347,8452
	my ($hr1, $hr2)($hr1, $hr2349,8468
	my %result;result350,8491

/emcsvn/billing/trunk/lib/Billing/Message_addresses.pm,657
package Message_addresses;3,17
sub new Message_addresses::new9,103
my( $ma_address)( $ma_address11,114
	my $r_Message_addresses r_Message_addresses12,137
sub delete Message_addresses::delete22,285
	my $r_Message_addresses r_Message_addresses23,298
	my $query query24,332
	my $dbh dbh25,431
	my $res res26,468
sub update Message_addresses::update31,522
	my $r_Message_addresses r_Message_addresses32,535
	my $query query33,569
	my $dbh dbh38,721
	my $res res39,758
sub create Message_addresses::create44,812
	my $r_Message_addresses r_Message_addresses45,825
	my $query query46,859
	my $dbh dbh54,987
	my $res res55,1024

/emcsvn/billing/trunk/lib/Billing/Revenue_accounts.pm,677
package Revenue_accounts;3,17
sub new Revenue_accounts::new9,102
my( $account_num, $account_desc)( $account_num, $account_desc11,113
	my $r_Revenue_accounts r_Revenue_accounts12,152
sub delete Revenue_accounts::delete23,332
	my $r_Revenue_accounts r_Revenue_accounts24,345
	my $query query25,378
	my $dbh dbh26,485
	my $res res27,522
sub update Revenue_accounts::update32,576
	my $r_Revenue_accounts r_Revenue_accounts33,589
	my $query query34,622
	my $dbh dbh40,839
	my $res res41,876
sub create Revenue_accounts::create46,930
	my $r_Revenue_accounts r_Revenue_accounts47,943
	my $query query48,976
	my $dbh dbh58,1163
	my $res res59,1200

/emcsvn/billing/trunk/lib/Billing/Templates.pm,60
package Billing::Templates;1,0
my $TestTmpl TestTmpl3,29

/emcsvn/billing/trunk/lib/Billing/Usage_reports.pm,825
package Usage_reports;3,17
sub new Usage_reports::new9,99
my( $cus_num, $sub_num, $usage_included, $usage_rate, $usage_used, $usage_minusage, $usage_charged, $usage_type, $ur_unixdate, $ur_date)( $cus_num, $sub_num, $usage_included, $usage_rate, $usage_used, $usage_minusage, $usage_charged, $usage_type, $ur_unixdate, $ur_date11,110
	my $r_Usage_reports r_Usage_reports12,253
sub delete Usage_reports::delete31,661
	my $r_Usage_reports r_Usage_reports32,674
	my $dbh dbh33,704
	my $res res34,741
sub update Usage_reports::update39,795
	my $r_Usage_reports r_Usage_reports40,808
	my $query query41,838
	my $dbh dbh54,1379
	my $res res55,1416
sub create Usage_reports::create60,1470
	my $r_Usage_reports r_Usage_reports61,1483
	my $query query62,1513
	my $dbh dbh88,2107
	my $res res89,2144

/emcsvn/billing/trunk/lib/Billing/Contact.pm,668
package Contact;3,18
sub newContact::new10,112
	my ($emc_dbh, $con_num,($emc_dbh, $con_num,14,131
	my $contact;contact18,323
		my $query query25,430
		my $stmt stmt26,487
sub deleteContact::delete60,1310
	my $contact contact62,1323
	my $now_ts now_ts64,1346
	my $query query66,1411
	my $dbh dbh67,1502
	my $res res68,1530
sub updateContact::update81,1978
	my $contact contact83,1991
	my $ymd ymd85,2014
	my $query query86,2073
	my $dbh dbh101,2375
	my $res res107,2478
sub createContact::create133,3319
	my $contact contact135,3332
	my $query query137,3355
	my $dbh dbh154,3643
	my $res res160,3746
		my @row row173,4177

/emcsvn/billing/trunk/lib/Billing/Pricing_profile.pm,730
package Pricing_profile;3,17
sub newPricing_profile::new9,101
	my($profile_id, $profile_name, $profile_currency, $profile_desc)($profile_id, $profile_name, $profile_currency, $profile_desc13,120
	my $r_Pricing_profile r_Pricing_profile14,192
sub deletePricing_profile::delete26,445
	my $r_Pricing_profile r_Pricing_profile28,458
	my $query query30,491
	my $dbh dbh31,594
	my $res res32,631
sub updatePricing_profile::update36,684
	my $r_Pricing_profile r_Pricing_profile38,697
	my $query query40,730
	my $dbh dbh48,1057
	my $res res49,1094
sub createPricing_profile::create53,1147
	my $r_Pricing_profile r_Pricing_profile55,1160
	my $query query57,1193
	my $dbh dbh71,1499
	my $res res72,1536

/emcsvn/billing/trunk/lib/Billing/Customer.pm,5123
package Customer;3,18
sub SOAP::Transport::HTTP::Client::get_basic_credentials14,194
sub newCustomer::new19,326
	my ($res, $row, $query)($res, $row, $query23,345
	my ($cus_num, $parent_num,($cus_num, $parent_num,24,371
	my $fusemail_integrated;fusemail_integrated33,990
	my $dbh dbh35,1024
	my $customer customer108,3696
sub deleteCustomer::delete164,5281
	my $customer customer166,5294
	my $dbh dbh168,5318
	my %contacts;contacts171,5388
	my $query query172,5403
	my $stmt stmt173,5468
		my $query query186,5766
		my $res res187,5824
		my $query query195,6014
		my $stmt stmt196,6081
		my ($count)($count200,6169
			my $query query204,6246
			my $res res205,6300
	my $res res214,6468
	my $rc rc226,6712
		my $query query230,6791
		my $stmt stmt231,6863
		my ($AccountID)($AccountID235,6963
			my $fm_dbh fm_dbh239,7066
				my $query query246,7297
sub set_deleteCustomer::set_delete266,7766
	my $customer customer268,7783
	my $cus_delete_date cus_delete_date270,7807
	my $query query272,7881
	my $dbh dbh273,7981
	my $res res274,8010
	my $rc rc281,8231
		my $query query285,8310
		my $stmt stmt286,8382
		my ($AccountID)($AccountID288,8458
			my $fm_dbh fm_dbh292,8561
				my $query query299,8795
sub set_undeleteCustomer::set_undelete319,9304
	my $customer customer321,9323
	my $query query323,9347
	my $dbh dbh324,9450
	my $res res325,9479
	my $rc rc332,9685
		my $query query336,9774
		my $stmt stmt337,9846
		my ($AccountID)($AccountID339,9922
			my $fm_dbh fm_dbh343,10025
				my $query query350,10256
				my $stmt stmt351,10319
				my ($Status)($Status353,10392
					my $query query357,10490
sub is_deletedCustomer::is_deleted378,11009
	my $customer customer380,11026
	my $query query382,11050
	my $dbh dbh383,11117
	my $res res384,11146
	my @row row386,11218
sub updateCustomer::update391,11286
	my $customer customer393,11299
	my $emc_dbh emc_dbh395,11323
	my $query query416,11832
	my $stmt stmt417,11887
	my $orig orig419,11965
	my $res res455,12803
		my $h_diff h_diff488,14019
sub createCustomer::create499,14318
	my $customer customer501,14331
	my $dbh dbh508,14568
		my $query query512,14719
		my $stmt stmt513,14775
		my $parent parent515,14854
			my $now_ymdhms now_ymdhms542,15609
	my @row;row551,15807
	my $query query552,15817
	my $res res612,16670
sub checkCustomer::check655,18093
	my $customer customer657,18105
	my $dbh dbh659,18129
	my $query query660,18158
	my $res res661,18223
	my $rows rows663,18296
sub cleanse_dataCustomer::cleanse_data673,18414
	my $customer customer675,18433
sub create_spsCustomer::create_sps695,19515
	my $customer customer697,19532
	my $s s702,19639
	my $hash hash711,19895
	my $sps_num;sps_num726,20560
	my $res res727,20574
sub create_maestro_spsCustomer::create_maestro_sps745,20998
	my $customer customer747,21023
	my $s s749,21047
	my $hash hash757,21283
	my $s_customer s_customer768,21820
	my $rid rid769,21882
sub check_core_serviceCustomer::check_core_service774,21964
	my $customer customer776,21989
	my $query query778,22013
	my $dbh dbh779,22081
	my $res res780,22110
sub has_serviceCustomer::has_service792,22329
	my $customer customer794,22347
	my ($service_num)($service_num795,22370
	my $query query797,22396
	my $dbh dbh798,22472
	my $res res799,22501
	my @cols cols801,22587
sub delete_all_subsCustomer::delete_all_subs809,22695
	my $customer customer811,22717
	my $emc_dbh emc_dbh813,22741
	my $failed failed814,22774
	my $query query816,22792
	my $stmt stmt817,22860
		my $query2 query2820,22982
		my $res res821,23058
my $ele_unit ele_unit839,23410
my $alp_unit alp_unit840,23510
my $rie_unit rie_unit841,23610
my %forced_customer forced_customer846,23769
sub is_alpCustomer::is_alp862,24093
	my $customer customer864,24106
		my $ci ci870,24269
sub is_eleCustomer::is_ele884,24481
	my $customer customer886,24494
sub is_euCustomer::is_eu896,24643
	my $customer customer898,24655
	my $emc_dbh emc_dbh900,24679
	my $query query902,24713
	my $stmt stmt903,24798
	my $row row905,24880
sub get_unitCustomer::get_unit915,25057
	my ($customer, $strict)($customer, $strict917,25072
my %remit remit933,25399
sub remit_to_addressCustomer::remit_to_address979,26556
	my $customer customer981,26579
	my $forced forced983,26603
sub diff_hashCustomer::diff_hash1022,27543
	my ($new, $orig)($new, $orig1024,27559
	my %result;result1025,27583
sub get_deferred_regionCustomer::get_deferred_region1046,27965
  my ($customer)($customer1048,27991
  my $def_region def_region1049,28014
sub set_package_epochCustomer::set_package_epoch1073,28989
	my ($customer, $ymd)($customer, $ymd1075,29013
	my $emc_dbh emc_dbh1077,29042
	my $query query1082,29121
	my $stmt stmt1083,29216
	my $row row1088,29320
sub get_ownerCustomer::get_owner1098,29467
	my $customer customer1100,29483
	my $emc_dbh emc_dbh1106,29572
	my %seen;seen1111,29651
		my $parent parent1121,29814

/emcsvn/billing/trunk/lib/Billing/Dns_domains.pm,1220
package Dns_domains;3,17
sub new Dns_domains::new9,97
my( $cus_num, $dns_domname, $manage_dns, $dns_updated, $www_status, $www_address, $ftp_status, $ftp_address, $dns_type, $dns_arecord, $dns_master, $www_delegate1, $www_delegate2, $www_delegate3, $ftp_delegate1, $ftp_delegate2, $ftp_delegate3, $dns_emmsystem, $relay_type, $auth_type, $inbound, $spam, $primary_service, $imported)( $cus_num, $dns_domname, $manage_dns, $dns_updated, $www_status, $www_address, $ftp_status, $ftp_address, $dns_type, $dns_arecord, $dns_master, $www_delegate1, $www_delegate2, $www_delegate3, $ftp_delegate1, $ftp_delegate2, $ftp_delegate3, $dns_emmsystem, $relay_type, $auth_type, $inbound, $spam, $primary_service, $imported11,108
	my $r_Dns_domains r_Dns_domains12,444
sub delete Dns_domains::delete45,1286
	my $r_Dns_domains r_Dns_domains46,1299
	my $query query47,1327
	my $dbh dbh48,1416
	my $res res49,1453
sub update Dns_domains::update54,1507
	my $r_Dns_domains r_Dns_domains55,1520
	my $query query56,1548
	my $dbh dbh84,2793
	my $res res85,2830
sub create Dns_domains::create90,2884
	my $r_Dns_domains r_Dns_domains91,2897
	my $query query92,2925
	my $dbh dbh146,4219
	my $res res147,4256

/emcsvn/billing/trunk/lib/Billing/Dial_accounts.pm,676
package Dial_accounts;3,17
sub new Dial_accounts::new9,99
my( $provider, $dial_id, $dial_password, $cus_num)( $provider, $dial_id, $dial_password, $cus_num11,110
	my $r_Dial_accounts r_Dial_accounts12,167
sub delete Dial_accounts::delete25,379
	my $r_Dial_accounts r_Dial_accounts26,392
	my $query query27,422
	my $dbh dbh28,517
	my $res res29,554
sub update Dial_accounts::update34,608
	my $r_Dial_accounts r_Dial_accounts35,621
	my $query query36,651
	my $dbh dbh44,932
	my $res res45,969
sub create Dial_accounts::create50,1023
	my $r_Dial_accounts r_Dial_accounts51,1036
	my $query query52,1066
	my $dbh dbh66,1332
	my $res res67,1369

/emcsvn/billing/trunk/lib/Billing/Supervisor.pm,1773
package Supervisor;1,0
my $year;year8,136
my $month;month9,146
sub parse_script_confSupervisor::parse_script_conf17,330
	my ($path, $conf)($path, $conf19,354
	my (@list, @pairs, $rootdir, $line, $errors)(@list, @pairs, $rootdir, $line, $errors20,379
				my ($vars, %script)($vars, %script37,771
					my ($name, $value)($name, $value46,1106
sub get_statusSupervisor::get_status84,1971
	my ($self, $year, $month, $script)($self, $year, $month, $script86,1988
	my ($dbh, $query, $stmt, $row)($dbh, $query, $stmt, $row87,2030
	my ($rc)($rc88,2063
sub put_statusSupervisor::put_status116,2818
	my ($self, $year, $month, $script)($self, $year, $month, $script118,2835
	my ($dbh, $update_query, $insert_query, $stmt, $row)($dbh, $update_query, $insert_query, $stmt, $row119,2877
	my $rc;rc120,2932
sub get_scriptSupervisor::get_script150,4036
	my ($self, $name, $priority)($self, $name, $priority152,4053
	my $matches_found matches_found153,4089
	my $remembered;remembered154,4113
sub newSupervisor::new180,4528
	my ($class)($class182,4538
	my ($sv_db, $sv_db_host, $sv_db_port, $sv_user, $sv_password, $path, $year, $month)($sv_db, $sv_db_host, $sv_db_port, $sv_user, $sv_password, $path, $year, $month183,4560
	my $self self184,4651
sub doSupervisor::do206,5231
	my ($self, $dbh, $script, @args)($self, $dbh, $script, @args208,5240
	my (@argv, $result)(@argv, $result209,5280
	my $try;try210,5302
			my ($package, $filename, $line)($package, $filename, $line219,5463
sub executeSupervisor::execute241,6091
	my ($self, $sth, $script, @args)($self, $sth, $script, @args243,6105
	my (@argv, $result)(@argv, $result244,6145
	my $try;try245,6167
			my ($package, $filename, $line)($package, $filename, $line260,6549

/emcsvn/billing/trunk/lib/Billing/Payment_method.pm,622
package Payment_method;3,17
sub new Payment_method::new9,100
my( $payment_id, $payment_desc)( $payment_id, $payment_desc11,111
	my $r_Payment_method r_Payment_method12,149
sub delete Payment_method::delete23,319
	my $r_Payment_method r_Payment_method24,332
	my $dbh dbh25,363
	my $res res26,400
sub update Payment_method::update31,454
	my $r_Payment_method r_Payment_method32,467
	my $query query33,498
	my $dbh dbh38,648
	my $res res39,685
sub create Payment_method::create44,739
	my $r_Payment_method r_Payment_method45,752
	my $query query46,783
	my $dbh dbh56,962
	my $res res57,999

/emcsvn/billing/trunk/lib/Billing/MakeMIME.pm,1730
package MakeMIME;1,0
sub create_messageMakeMIME::create_message12,300
	my ($header, $body, $parts, $use_old_format, $errstr)($header, $body, $parts, $use_old_format, $errstr14,321
	my $msg;msg16,383
	my $msg_alt;msg_alt17,393
	my $msg_mixed;msg_mixed18,407
			my $html_part html_part68,1859
			my $msg_main msg_main97,2609
			my $msg_alt msg_alt108,2932
			my %params params179,4664
sub create_alternativeMakeMIME::create_alternative202,5206
	my ($header, $body, $use_old_format, $errstr)($header, $body, $use_old_format, $errstr204,5231
sub create_mixedMakeMIME::create_mixed211,5423
	my ($header, $parts, $errstr)($header, $parts, $errstr213,5442
	my $msg;msg215,5480
		my %params params229,5777
sub new_content_idMakeMIME::new_content_id250,6280
	my ($domain)($domain252,6301
	my $id;id254,6322
sub emit_unsignedMakeMIME::emit_unsigned266,6513
	my ($entity, $path, $errstr)($entity, $path, $errstr268,6533
sub emit_openpgp_signedMakeMIME::emit_openpgp_signed281,6725
	my ($entity, $key, $path, $errstr)($entity, $key, $path, $errstr283,6751
	my $gpg gpg287,6813
sub emit_smime_signedMakeMIME::emit_smime_signed309,7261
	my ($entity, $cert, $path, $errstr)($entity, $cert, $path, $errstr311,7285
	my $sm sm315,7349
	my $p p331,7692
	my $q q332,7721
	my $msg_string msg_string341,7888
	my ($prep, $outer)($prep, $outer342,7926
	my $si si344,7988
 my $pgp_key pgp_key393,9272
 my $smime_cert smime_cert394,9366
 my $header header396,9474
 my $body body403,9689
 my $errstr;errstr412,9966
 my $content_id content_id414,9980
 my $rc rc416,10034
 my $rc rc417,10122
 my $rc rc418,10205
 my $rc rc420,10268
 my $rc rc421,10339
 my $rc rc422,10426

/emcsvn/billing/trunk/lib/Billing/Prepaid.pm,1286
package Prepaid;11,418
sub get_prepaids(Prepaid::get_prepaids14,464
  my ($customer,$year,$month)($customer,$year,$month15,488
  my @out out16,524
  my $months months17,540
  my $has_charge has_charge18,559
  my $has_prepaid has_prepaid19,581
    my $transactions transactions23,730
sub get_prepaids_month(Prepaid::get_prepaids_month44,1376
  my ($cusnum,$year,$month)($cusnum,$year,$month45,1406
  my $emc_dbh emc_dbh53,1692
  my $res res54,1868
  my %out out56,2027
  my $prepaid_missing prepaid_missing57,2043
sub fix_prepaid(Prepaid::fix_prepaid82,2940
  my $lineref lineref83,2961
  my @fields fields85,3038
  my @data data86,3215
  my $sql sql90,3304
  my $emc_dbh emc_dbh92,3412
  my $res res93,3588
sub calc_prepaid_months(Prepaid::calc_prepaid_months114,4289
	my ($customer, $year, $month, $months)($customer, $year, $month, $months115,4321
  my $check_init_ym check_init_ym117,4368
	my $multiple multiple129,4634
	my $start_year start_year144,5043
	my $start_month start_month145,5068
	my $end_year end_year147,5125
	my $end_month end_month148,5154
	my $target_ym target_ym158,5322
	my $check_start_ym;check_start_ym160,5377
	my $check_end_ym;check_end_ym161,5398
	my($y,$m)($y,$m192,6239
		my $ym ym194,6303

/emcsvn/billing/trunk/lib/Billing/CCBatchPaymentech.pm,4508
package CCBatchPaymentech;1,0
sub newCCBatchPaymentech::new13,213
	my ($class)($class15,223
	my ($emc_dbh, $merchantID)($emc_dbh, $merchantID16,245
	my $self self24,460
sub set_loginCCBatchPaymentech::set_login53,963
	my ($self, $host, $username, $password)($self, $host, $username, $password55,979
sub set_fileCCBatchPaymentech::set_file62,1116
	my ($self, $batch_dir, $batch_file, $unix_timestamp)($self, $batch_dir, $batch_file, $unix_timestamp64,1131
sub conv_to_centsCCBatchPaymentech::conv_to_cents77,1484
	my ($amount)($amount79,1504
sub emit_headerCCBatchPaymentech::emit_header87,1603
	my ($self, $fp, $fileID, $file_timestamp)($self, $fp, $fileID, $file_timestamp89,1621
sub emit_order_requestCCBatchPaymentech::emit_order_request98,1954
	my ($self, $fp, $request, $sequence)($self, $fp, $request, $sequence100,1979
	my %avs_countries avs_countries102,2024
		my ($year, $month)($year, $month122,2984
sub emit_void_requestCCBatchPaymentech::emit_void_request145,4237
	my ($self, $fp, $request, $sequence)($self, $fp, $request, $sequence147,4261
sub emit_footerCCBatchPaymentech::emit_footer163,4918
	my ($self, $fp, $sequence)($self, $fp, $sequence165,4936
sub emit_batch_fileCCBatchPaymentech::emit_batch_file175,5331
	my ($self, $errstr)($self, $errstr177,5353
	my $request_count request_count179,5381
    my $fp fp187,5641
	my $request_sequence request_sequence212,6441
sub zip_batch_fileCCBatchPaymentech::zip_batch_file231,6916
	my ($self, $fileID, $pwd, $errstr)($self, $fileID, $pwd, $errstr233,6937
	my $rc rc235,6980
sub finalize_batchCCBatchPaymentech::finalize_batch248,7289
	my ($self, $batch_file, $errstr)($self, $batch_file, $errstr250,7310
	my $errors errors251,7350
	my $query query256,7475
sub add_recurring_chargeCCBatchPaymentech::add_recurring_charge286,8085
	my ($self, $request)($self, $request288,8112
sub add_ecommerce_chargeCCBatchPaymentech::add_ecommerce_charge299,8318
	my ($self, $request)($self, $request301,8345
sub add_recurring_refundCCBatchPaymentech::add_recurring_refund312,8551
	my ($self, $request)($self, $request314,8578
sub add_ecommerce_refundCCBatchPaymentech::add_ecommerce_refund325,8783
	my ($self, $request)($self, $request327,8810
sub add_voidCCBatchPaymentech::add_void338,9015
	my ($self, $request)($self, $request340,9030
sub request_countCCBatchPaymentech::request_count348,9167
	my ($self)($self350,9187
sub put_filesCCBatchPaymentech::put_files361,9450
	my ($self, $login, $files, $timeout)($self, $login, $files, $timeout363,9466
sub get_filesCCBatchPaymentech::get_files368,9567
	my ($self, $login, $files, $timeout)($self, $login, $files, $timeout370,9583
sub delete_filesCCBatchPaymentech::delete_files375,9684
	my ($self, $login, $files, $timeout)($self, $login, $files, $timeout377,9703
sub sftp_filesCCBatchPaymentech::sftp_files390,10061
	my ($login, $op, $files, $timeout)($login, $op, $files, $timeout392,10078
	my %sftp_args sftp_args401,10258
	my $sftp sftp413,10588
			my $src;src422,10816
			my $dst;dst423,10828
			my $rc rc437,11111
			my $src;src446,11299
			my $dst;dst447,11311
			my $rc rc461,11594
			my $dst;dst470,11781
			my $rc rc478,11930
sub get_responseCCBatchPaymentech::get_response495,12152
	my ($self, $batchRequestNo, $errstr)($self, $batchRequestNo, $errstr497,12171
sub parse_response_fileCCBatchPaymentech::parse_response_file513,12509
	my ($self, $response_file, $errstr)($self, $response_file, $errstr515,12535
	my $xmlschema xmlschema522,12668
	my $parser parser523,12793
	my $doc doc524,12825
	my $root root538,13107
		my $response response540,13196
		my $batchRequestNo batchRequestNo542,13234
		my $response response559,13977
		my $batchRequestNo batchRequestNo561,14016
		my $response response590,15545
		my $batchRequestNo batchRequestNo592,15586
				my $request request622,17127
				my $request request637,17909
				my $request request644,18370
				my $request request651,18834
sub parse_batch_fileCCBatchPaymentech::parse_batch_file701,20958
	my ($self, $batch_file, $errstr)($self, $batch_file, $errstr703,20981
	my $xmlschema xmlschema710,21105
	my $parser parser711,21229
	my $doc doc712,21261
	my $root root727,21562
			my $request request734,21881
			my $request request759,23115
			my $request request769,23549
			my $request request791,24802
			my $request request813,26061
			my $request request824,26530

/emcsvn/billing/trunk/lib/Billing/Invoice.pm,666
package Invoice;3,17
sub new Invoice::new9,93
my( $cus_num, $batch_num, $inv_subtotal, $inv_gst, $inv_pst, $inv_total, $inv_type)( $cus_num, $batch_num, $inv_subtotal, $inv_gst, $inv_pst, $inv_total, $inv_type11,104
	my $r_Invoice r_Invoice12,194
sub delete Invoice::delete28,460
	my $r_Invoice r_Invoice29,473
	my $query query30,497
	my $dbh dbh31,578
	my $res res32,615
sub update Invoice::update37,669
	my $r_Invoice r_Invoice38,682
	my $query query39,706
	my $dbh dbh50,1066
	my $res res51,1103
sub create Invoice::create56,1157
	my $r_Invoice r_Invoice57,1170
	my $query query58,1194
	my $dbh dbh78,1556
	my $res res79,1593

/emcsvn/billing/trunk/lib/Billing/Bounces.pm,1555
package Bounces;5,107
sub newBounces::new11,187
	my ($class, $box_fulladdress, $password, $timeout)($class, $box_fulladdress, $password, $timeout13,197
	my $this this15,256
	my %monthMapping monthMapping24,378
	my ($localpart, $domain)($localpart, $domain41,633
sub _setTimeoutBounces::_setTimeout53,933
	my ($this, $timeout)($this, $timeout55,951
sub _setMonthBounces::_setMonth60,1015
	my ($this, $months)($this, $months62,1031
sub _setDomainBounces::_setDomain67,1091
	my ($this, $domain)($this, $domain69,1108
sub _setHostnameBounces::_setHostname74,1169
	my ($this, $hostname)($this, $hostname76,1188
sub _setUsernameBounces::_setUsername81,1256
	my ($this, $box_fulladdress)($this, $box_fulladdress83,1275
sub _setPasswordBounces::_setPassword88,1357
	my ($this, $password)($this, $password90,1376
sub _setBounceInfoBounces::_setBounceInfo95,1444
	my ($this, $bounceinfo)($this, $bounceinfo97,1465
sub _getBounceInfoBounces::_getBounceInfo102,1538
	my $this this104,1559
	my $domain domain106,1579
	my $imap imap108,1613
	my @bounceinfo;bounceinfo114,1799
		my @msgs msgs119,1869
			my $msg msg124,2026
      my $mail_from;mail_from125,2067
			my $mail_id_crypt;mail_id_crypt131,2314
			my $mail_id;mail_id132,2336
			my ($mday, $mon, $year, $hh, $mm, $ss)($mday, $mon, $year, $hh, $mm, $ss150,2771
			my $timestamp timestamp152,2902
			my ($client_ip_addr)($client_ip_addr157,3085
			my $data data161,3232
sub getBounceInfoBounces::getBounceInfo190,3839
	my $this this192,3859

/emcsvn/billing/trunk/lib/Billing/Emc_staff.pm,2031
package Emc_staff;3,18
sub newEmc_staff::new13,236
	my $emc_dbh emc_dbh17,255
	my ($emc_fullname, $emc_password, $emc_category, $emc_num, $emc_email, $emc_ldap,($emc_fullname, $emc_password, $emc_category, $emc_num, $emc_email, $emc_ldap,19,278
		my ($emc_search)($emc_search23,471
		my $query;query24,496
		my $stmt stmt34,717
		my $row row36,788
			my $query query41,929
			my $stmt stmt42,988
	my $staff staff67,1791
	my $query query85,2243
	my $stmt stmt86,2342
sub deleteEmc_staff::delete96,2550
	my $staff staff98,2563
	my $emc_dbh emc_dbh100,2584
	my $query query102,2615
	my $res res103,2671
		my $query query106,2743
		my $aka_dbh aka_dbh112,3039
			my $query query115,3284
			my $res res116,3342
sub updateEmc_staff::update127,3486
	my $staff staff129,3499
	my $emc_dbh emc_dbh131,3520
	my $query query133,3551
	my $stmt stmt134,3607
	my $orig orig136,3682
	my $res res156,4050
		my %old_codes;old_codes174,4481
		my $query query175,4498
		my $stmt stmt176,4600
		my %access_codes;access_codes185,4871
				my $query query194,5187
		my $aka_dbh aka_dbh202,5464
			my $query query205,5709
			my $res res220,6005
		my $h_diff h_diff240,6428
sub createEmc_staff::create264,7198
	my $staff staff266,7211
	my $emc_dbh emc_dbh268,7232
	my $query query271,7264
	my $res res291,7578
		my $res res306,7930
		my @row row308,8005
		my $query query312,8087
		my %access_codes;access_codes315,8237
		my $stmt stmt317,8305
				my $query query324,8556
		my $aka_dbh aka_dbh339,9147
			my $query query342,9392
			my $res res361,9708
sub diff_hashEmc_staff::diff_hash386,10232
	my ($hr1, $hr2)($hr1, $hr2388,10248
	my %result;result389,10271
sub has_accessEmc_staff::has_access401,10420
	my ($self, $code_or_tag)($self, $code_or_tag403,10437
sub has_contact_accessEmc_staff::has_contact_access422,10890
	my ($self)($self424,10915
sub has_profile_accessEmc_staff::has_profile_access429,11019
	my ($self)($self431,11044

/emcsvn/billing/trunk/lib/Billing/Mhs_domains.pm,635
package Mhs_domains;3,17
sub new Mhs_domains::new9,97
my( $cus_num, $mhs_shortname, $mhs_password)( $cus_num, $mhs_shortname, $mhs_password11,108
	my $r_Mhs_domains r_Mhs_domains12,159
sub delete Mhs_domains::delete24,347
	my $r_Mhs_domains r_Mhs_domains25,360
	my $query query26,388
	my $dbh dbh27,489
	my $res res28,526
sub update Mhs_domains::update33,580
	my $r_Mhs_domains r_Mhs_domains34,593
	my $query query35,621
	my $dbh dbh42,867
	my $res res43,904
sub create Mhs_domains::create48,958
	my $r_Mhs_domains r_Mhs_domains49,971
	my $query query50,999
	my $dbh dbh62,1219
	my $res res63,1256

/emcsvn/billing/trunk/lib/Billing/Spam_usage.pm,555
package Spam_usage;3,17
sub new Spam_usage::new9,96
my( $spam_num, $cus_num)( $spam_num, $cus_num11,107
	my $r_Spam_usage r_Spam_usage12,138
sub delete Spam_usage::delete23,278
	my $r_Spam_usage r_Spam_usage24,291
	my $dbh dbh25,318
	my $res res26,355
sub update Spam_usage::update31,409
	my $r_Spam_usage r_Spam_usage32,422
	my $query query33,449
	my $dbh dbh38,573
	my $res res39,610
sub create Spam_usage::create44,664
	my $r_Spam_usage r_Spam_usage45,677
	my $query query46,704
	my $dbh dbh56,857
	my $res res57,894

/emcsvn/billing/trunk/lib/Billing/Control.pm,534
package Control;3,17
sub new Control::new9,93
my( $relay_updated, $emm_updated)( $relay_updated, $emm_updated11,104
	my $r_Control r_Control12,144
sub delete Control::delete23,290
	my $r_Control r_Control24,303
	my $dbh dbh25,327
	my $res res26,364
sub update Control::update31,418
	my $r_Control r_Control32,431
	my $query query33,455
	my $dbh dbh38,588
	my $res res39,625
sub create Control::create44,679
	my $r_Control r_Control45,692
	my $query query46,716
	my $dbh dbh56,878
	my $res res57,915

/emcsvn/billing/trunk/lib/Billing/Spamfilters.pm,637
package Spamfilters;3,17
sub new Spamfilters::new9,97
my( $spam_num, $spam_desc, $spam_explanation)( $spam_num, $spam_desc, $spam_explanation11,108
	my $r_Spamfilters r_Spamfilters12,160
sub delete Spamfilters::delete24,350
	my $r_Spamfilters r_Spamfilters25,363
	my $query query26,391
	my $dbh dbh27,482
	my $res res28,519
sub update Spamfilters::update33,573
	my $r_Spamfilters r_Spamfilters34,586
	my $query query35,614
	my $dbh dbh42,852
	my $res res43,889
sub create Spamfilters::create48,943
	my $r_Spamfilters r_Spamfilters49,956
	my $query query50,984
	my $dbh dbh62,1206
	my $res res63,1243

/emcsvn/billing/trunk/lib/Billing/Quote.pm,576
package Quote;3,17
sub new Quote::new9,91
my( $name, $date, $emc_num, $quote_cus_num, $cus_num)( $name, $date, $emc_num, $quote_cus_num, $cus_num13,110
	my $r_Quote r_Quote14,170
sub delete Quote::delete28,360
	my $r_Quote r_Quote29,373
	my $query query30,395
	my $dbh dbh31,462
	my $res res32,499
sub update Quote::update42,584
	my $r_Quote r_Quote43,597
	my $query query44,619
	my $dbh dbh53,861
	my $res res54,898
sub create Quote::create64,983
	my $r_Quote r_Quote65,996
	my $query query66,1018
	my $dbh dbh82,1268
	my $res res83,1305

/emcsvn/billing/trunk/lib/Billing/Functions.pm,460
package Functions;3,21
sub db_connect Functions::db_connect13,176
	my($user, $password, $host, $port, $driver, $database)($user, $password, $host, $port, $driver, $database15,203
	my $connect connect17,266
	my $dbh dbh18,340
sub databasecon Functions::databasecon25,466
	my $database database27,494
	my $user user28,527
	my $password password29,561
	my $driver driver30,599
	my $host host31,637
	my $port port32,672
	my $dbh dbh33,706

/emcsvn/billing/trunk/lib/Billing/Traffic.pm,594
package Traffic;3,17
sub new Traffic::new9,93
my( $sub_num, $tr_type, $tr_datum, $tr_unixdate, $tr_comments)( $sub_num, $tr_type, $tr_datum, $tr_unixdate, $tr_comments11,104
	my $r_Traffic r_Traffic12,173
sub delete Traffic::delete26,389
	my $r_Traffic r_Traffic27,402
	my $dbh dbh28,426
	my $res res29,463
sub update Traffic::update34,517
	my $r_Traffic r_Traffic35,530
	my $query query36,554
	my $dbh dbh44,796
	my $res res45,833
sub create Traffic::create50,887
	my $r_Traffic r_Traffic51,900
	my $query query52,924
	my $dbh dbh68,1204
	my $res res69,1241

/emcsvn/billing/trunk/lib/Billing/Batch.pm,565
package Batch;3,17
sub new Batch::new9,91
my( $batch_unixdate, $batch_date, $batch_posted)( $batch_unixdate, $batch_date, $batch_posted11,102
	my $r_Batch r_Batch12,157
sub delete Batch::delete24,329
	my $r_Batch r_Batch25,342
	my $query query26,364
	my $dbh dbh27,445
	my $res res28,482
sub update Batch::update33,536
	my $r_Batch r_Batch34,549
	my $query query35,571
	my $dbh dbh42,787
	my $res res43,824
sub create Batch::create48,878
	my $r_Batch r_Batch49,891
	my $query query50,913
	my $dbh dbh62,1117
	my $res res63,1154

/emcsvn/billing/trunk/lib/Billing/Dns_types.pm,634
package Dns_types;3,17
sub new Dns_types::new9,95
my( $dns_type, $dt_desc, $dt_address, $dt_mx1, $dt_mx2)( $dns_type, $dt_desc, $dt_address, $dt_mx1, $dt_mx211,106
	my $r_Dns_types r_Dns_types12,168
sub delete Dns_types::delete26,378
	my $r_Dns_types r_Dns_types27,391
	my $query query28,417
	my $dbh dbh29,504
	my $res res30,541
sub update Dns_types::update35,595
	my $r_Dns_types r_Dns_types36,608
	my $query query37,634
	my $dbh dbh46,920
	my $res res47,957
sub create Dns_types::create52,1011
	my $r_Dns_types r_Dns_types53,1024
	my $query query54,1050
	my $dbh dbh70,1328
	my $res res71,1365

/emcsvn/billing/trunk/lib/Billing/ContactLink.pm,1189
package ContactLink;3,18
my %contact_types contact_types10,166
sub newContactLink::new16,243
	my ($emc_dbh, $con_num, $cus_num, $con_type, $con_sendspam, $no_marketing, $con_primary)($emc_dbh, $con_num, $cus_num, $con_type, $con_sendspam, $no_marketing, $con_primary20,262
	my $conlink;conlink22,359
		my $query query25,397
		my $stmt stmt26,486
sub deleteContactLink::delete53,1004
	my $conlink conlink55,1017
	my $now_ts now_ts57,1040
	my $dbh dbh59,1105
	my $query query60,1133
	my $res res61,1229
sub unlinkContactLink::unlink84,1986
	my $conlink conlink86,1999
	my $now_ts now_ts88,2022
	my $dbh dbh90,2087
	my $query query91,2115
	my $res res93,2244
		my $con_type_name con_type_name96,2366
sub updateContactLink::update115,3098
	my $conlink conlink117,3111
	my $query query119,3134
	my $dbh dbh127,3286
	my $res res128,3314
sub createContactLink::create149,4051
	my $conlink conlink151,4064
	my $query query153,4087
	my $dbh dbh166,4275
	my $res;res167,4303
		my $query query170,4345
		my $con_type_name con_type_name184,4754
sub con_type_to_nameContactLink::con_type_to_name202,5512
	my $con_type con_type204,5535

/emcsvn/billing/trunk/lib/Billing/Tech_notes.pm,660
package Tech_notes;3,17
sub new Tech_notes::new9,96
my( $cus_num, $emc_email, $date, $note, $subject, $tn_status)( $cus_num, $emc_email, $date, $note, $subject, $tn_status11,107
	my $r_Tech_notes r_Tech_notes12,175
sub delete Tech_notes::delete27,405
	my $r_Tech_notes r_Tech_notes28,418
	my $query query29,445
	my $dbh dbh30,530
	my $res res31,567
sub update Tech_notes::update36,621
	my $r_Tech_notes r_Tech_notes37,634
	my $query query38,661
	my $dbh dbh48,982
	my $res res49,1019
sub create Tech_notes::create54,1073
	my $r_Tech_notes r_Tech_notes55,1086
	my $query query56,1113
	my $dbh dbh74,1432
	my $res res75,1469

/emcsvn/billing/trunk/lib/Billing/Eic_primary.pm,708
package Eic_primary;3,17
sub new Eic_primary::new9,97
my( $cus_num, $eic_name, $eic_server, $eic_password, $eic_mailer, $eic_notify)( $cus_num, $eic_name, $eic_server, $eic_password, $eic_mailer, $eic_notify11,108
	my $r_Eic_primary r_Eic_primary12,193
sub delete Eic_primary::delete27,461
	my $r_Eic_primary r_Eic_primary28,474
	my $query query29,502
	my $dbh dbh30,593
	my $res res31,630
sub update Eic_primary::update36,684
	my $r_Eic_primary r_Eic_primary37,697
	my $query query38,725
	my $dbh dbh48,1092
	my $res res49,1129
sub create Eic_primary::create54,1183
	my $r_Eic_primary r_Eic_primary55,1196
	my $query query56,1224
	my $dbh dbh74,1584
	my $res res75,1621

/emcsvn/billing/trunk/lib/Billing/Tran_types.pm,558
package Tran_types;3,17
sub new Tran_types::new9,96
my( $tt_desc)( $tt_desc11,107
	my $r_Tran_types r_Tran_types12,127
sub delete Tran_types::delete22,241
	my $r_Tran_types r_Tran_types23,254
	my $query query24,281
	my $dbh dbh25,372
	my $res res26,409
sub update Tran_types::update31,463
	my $r_Tran_types r_Tran_types32,476
	my $query query33,503
	my $dbh dbh38,634
	my $res res39,671
sub create Tran_types::create44,725
	my $r_Tran_types r_Tran_types45,738
	my $query query46,765
	my $dbh dbh54,873
	my $res res55,910

/emcsvn/billing/trunk/lib/Billing/Eic_faxlog.pm,557
package Eic_faxlog;3,17
sub new Eic_faxlog::new9,96
my( $eic_name, $fax_date)( $eic_name, $fax_date11,107
	my $r_Eic_faxlog r_Eic_faxlog12,139
sub delete Eic_faxlog::delete23,281
	my $r_Eic_faxlog r_Eic_faxlog24,294
	my $dbh dbh25,321
	my $res res26,358
sub update Eic_faxlog::update31,412
	my $r_Eic_faxlog r_Eic_faxlog32,425
	my $query query33,452
	my $dbh dbh38,578
	my $res res39,615
sub create Eic_faxlog::create44,669
	my $r_Eic_faxlog r_Eic_faxlog45,682
	my $query query46,709
	my $dbh dbh56,864
	my $res res57,901

/emcsvn/billing/trunk/lib/Billing/Quote_data.pm,749
package Quote_data;3,17
sub new Quote_data::new9,96
my( $quote_id, $service_num, $users, $discount, $discount_amount, $price, $total_before_discount, $total)( $quote_id, $service_num, $users, $discount, $discount_amount, $price, $total_before_discount, $total13,115
	my $r_Quote_data r_Quote_data14,227
sub delete Quote_data::delete31,553
	my $r_Quote_data r_Quote_data32,566
	my $query query33,593
	my $dbh dbh34,670
	my $res res35,707
sub update Quote_data::update45,792
	my $r_Quote_data r_Quote_data46,805
	my $query query47,832
	my $dbh dbh59,1273
	my $res res60,1310
sub create Quote_data::create70,1395
	my $r_Quote_data r_Quote_data71,1408
	my $query query72,1435
	my $dbh dbh94,1888
	my $res res95,1925

/emcsvn/billing/trunk/lib/Billing/Remote_smtp_ip.pm,663
package Remote_smtp_ip;3,17
sub new Remote_smtp_ip::new9,100
my( $cus_num, $IP, $service, $comment)( $cus_num, $IP, $service, $comment11,111
	my $r_Remote_smtp_ip r_Remote_smtp_ip12,156
sub delete Remote_smtp_ip::delete25,348
	my $r_Remote_smtp_ip r_Remote_smtp_ip26,361
	my $query query27,392
	my $dbh dbh28,477
	my $res res29,514
sub update Remote_smtp_ip::update34,568
	my $r_Remote_smtp_ip r_Remote_smtp_ip35,581
	my $query query36,612
	my $dbh dbh44,863
	my $res res45,900
sub create Remote_smtp_ip::create50,954
	my $r_Remote_smtp_ip r_Remote_smtp_ip51,967
	my $query query52,998
	my $dbh dbh66,1245
	my $res res67,1282

/emcsvn/billing/trunk/lib/Billing/CreditCard.pm,3499
package CreditCard;6,95
sub null_ccCreditCard::null_cc16,259
	my($cc)($cc18,273
sub newCreditCard::new37,888
	my ($emc_dbh, $cus_num, $cc_id, $cc_hash, $card_type, $cc_data,($emc_dbh, $cus_num, $cc_id, $cc_hash, $card_type, $cc_data,41,907
	my $cc cc45,1096
		my $query query58,1495
		my $stmt stmt68,1950
			my $cc_data cc_data77,2155
		my $query query83,2344
		my $stmt stmt92,2780
			my $cc_data cc_data101,2993
		my $cc_data cc_data125,3739
sub deleteCreditCard::delete142,4038
	my $cc cc144,4051
	my $emc_dbh emc_dbh146,4069
	my $cc_data cc_data148,4097
	my $now now153,4212
	my $now_date now_date154,4231
	my $sql_failed sql_failed157,4319
	my $query query159,4341
	my $res res160,4412
	my $row row168,4640
	my $refcount refcount170,4690
		my $query query176,4792
		my $res res177,4863
			my $query query184,5019
			my $stmt stmt185,5109
sub updateCreditCard::update205,5534
	my $cc cc207,5547
	my $emc_dbh emc_dbh209,5565
	my $query query211,5593
	my $stmt stmt215,5713
	my $orig orig217,5783
	my $now now220,5837
	my $now_date now_date221,5856
	my $res res234,6144
		my $query query245,6392
		my $orig_cc_data orig_cc_data252,6582
		my $new_cc_data new_cc_data253,6668
			my $h_diff h_diff257,6817
				my $original original259,6914
			my $dup_orig dup_orig274,7305
			my $dup_new dup_new275,7330
			my $h_diff h_diff277,7353
				my $original original283,7527
sub createCreditCard::create298,7836
	my $cc cc300,7849
	my $emc_dbh emc_dbh302,7867
	my $now now304,7895
	my $now_date now_date305,7914
	my $query query307,7979
	my $res res316,8201
		my @row row324,8491
		my $new_cc new_cc329,8569
		my $query query334,8751
sub diff_hashCreditCard::diff_hash346,9239
	my ($hr1, $hr2)($hr1, $hr2348,9255
	my %result;result349,9278
sub encryptCreditCard::encrypt370,9588
	my ($cc, $pw)($cc, $pw372,9602
	my $packing_version packing_version373,9623
	my @cols cols375,9650
	my $csv csv388,10079
	my $plaintext plaintext390,10160
	my $cipher cipher392,10192
	my $ciphertext ciphertext402,10452
sub decryptCreditCard::decrypt409,10631
	my ($b64_text, $pw)($b64_text, $pw411,10645
	my %cc;cc412,10672
	my ($version, $b64_ciphertext)($version, $b64_ciphertext420,10829
		my $cipher cipher425,10970
		my $ciphertext ciphertext432,11150
		my $plaintext plaintext437,11291
			my $csv csv457,11727
			my $rc rc458,11787
			my @cols cols459,11824
sub validateCreditCard::validate490,12660
	my ($number)($number492,12675
	my ($i, $sum, $weight)($i, $sum, $weight493,12695
my %prefixes prefixes512,13170
sub validate_card_typeCreditCard::validate_card_type536,15126
	my ($card_type, $card_num)($card_type, $card_num538,15151
		my $v v541,15224
sub get_card_typeCreditCard::get_card_type555,15493
	my ($card_num)($card_num557,15513
		my $v v560,15574
sub hash_cc_numCreditCard::hash_cc_num577,16087
	my ($cc_num)($cc_num579,16105
	my $digest digest585,16201
sub search_for_cardCreditCard::search_for_card590,16271
	my ($emc_dbh, $cc_num, $answers, $emc_num, $pw)($emc_dbh, $cc_num, $answers, $emc_num, $pw592,16293
	my $cc_hash cc_hash600,16423
	my @answers;answers603,16495
	my $query query605,16510
	my $res res607,16657
		my $test test611,16765
			my $found_cc found_cc618,16885
my %known_test_numbers known_test_numbers648,17766
sub is_test_numberCreditCard::is_test_number675,18329
	my ($num)($num677,18350

/emcsvn/billing/trunk/lib/Billing/Quote_customer.pm,832
package Quote_customer;3,17
sub new Quote_customer::new9,100
my( $cus_name, $cus_address1, $cus_address2, $cus_city, $cus_prov, $cus_country, $cus_postal, $emc_num, $cus_profile_id)( $cus_name, $cus_address1, $cus_address2, $cus_city, $cus_prov, $cus_country, $cus_postal, $emc_num, $cus_profile_id13,119
	my $r_Quote_customer r_Quote_customer14,246
sub delete Quote_customer::delete32,622
	my $r_Quote_customer r_Quote_customer33,635
	my $query query34,666
	my $dbh dbh35,761
	my $res res36,798
sub update Quote_customer::update46,883
	my $r_Quote_customer r_Quote_customer47,896
	my $query query48,927
	my $dbh dbh61,1472
	my $res res62,1509
sub create Quote_customer::create72,1594
	my $r_Quote_customer r_Quote_customer73,1607
	my $query query74,1638
	my $dbh dbh98,2184
	my $res res99,2221

/emcsvn/billing/trunk/lib/Billing/PolicySmart.pm,2569
package PolicySmart;1,0
sub getCusNumForDomainPolicySmart::getCusNumForDomain6,44
	my ($aka_dbh, $domain)($aka_dbh, $domain8,69
	my $sql sql10,100
	my $query query11,166
	my $row row14,232
sub countCypherSmartUsersPolicySmart::countCypherSmartUsers20,315
	my ($aka_dbh, $domain)($aka_dbh, $domain22,343
	my $sql sql24,374
	my $query query26,507
	my $row row29,580
sub getMailboxCountPolicySmart::getMailboxCount35,661
	my ($aka_dbh, $domain)($aka_dbh, $domain37,683
	my $nMailboxes nMailboxes39,714
	my $sql sql41,737
	my $query query42,824
sub getDomainMailboxesPolicySmart::getDomainMailboxes53,1013
	my ($aka_dbh, $domain)($aka_dbh, $domain55,1038
	my $nMailboxes nMailboxes57,1070
	my $sql sql59,1093
	my $query query60,1185
	my @mailboxes mailboxes63,1252
	my $i i64,1273
sub getDomainMailboxesExceptPolicySmart::getDomainMailboxesExcept73,1421
	my ($aka_dbh, $domain, $listID)($aka_dbh, $domain, $listID75,1452
	my $nMailboxes nMailboxes77,1492
	my $sql sql79,1514
	my $query query84,1699
	my @mailboxes mailboxes87,1773
	my $i i88,1794
sub getApplyListCountPolicySmart::getApplyListCount97,1942
	my ($aka_dbh, $listID)($aka_dbh, $listID99,1966
	my $sql sql101,1997
	my $query query103,2086
	my $row row106,2153
	my $nMailboxes nMailboxes108,2192
sub getListMailboxesPolicySmart::getListMailboxes118,2312
	my ($aka_dbh, $listID)($aka_dbh, $listID120,2335
	my $sql sql122,2368
	my $query query124,2439
	my @mailboxes mailboxes127,2505
	my $i i128,2526
sub inApplyListPolicySmart::inApplyList137,2667
	my ($aka_dbh, $listID, $data)($aka_dbh, $listID, $data139,2685
	my $sql sql141,2725
	my $query query143,2820
	my $row row146,2894
	my $count count148,2933
sub get_policy_user_count_bydomainPolicySmart::get_policy_user_count_bydomain161,3120
	my ($aka_dbh, $domain, $sps_service_num, $min_days, $max_days)($aka_dbh, $domain, $sps_service_num, $min_days, $max_days163,3157
	my $cusNum cusNum165,3228
	my $query;query166,3281
	my $nMailboxes nMailboxes167,3293
	my $sql sql171,3380
		my $action;action187,3840
	my $filterID;filterID208,4371
	my $filterOwner;filterOwner209,4386
	my $applyListID;applyListID210,4404
	my $exceptionListID;exceptionListID211,4422
	my @applyMailboxes applyMailboxes213,4446
	my @exemptMailboxes exemptMailboxes214,4472
	my @policyMailboxes policyMailboxes215,4499
	my @domainMailboxes domainMailboxes216,4526
	my $nDomainMailboxes nDomainMailboxes218,4555
			my %seen;seen248,5551
			my %seen;seen255,5811

/emcsvn/billing/trunk/lib/Billing/Eic_log.pm,580
package Eic_log;3,17
sub new Eic_log::new9,93
my( $eic_name, $call_duration, $call_date, $call_bytes)( $eic_name, $call_duration, $call_date, $call_bytes11,104
	my $r_Eic_log r_Eic_log12,166
sub delete Eic_log::delete25,364
	my $r_Eic_log r_Eic_log26,377
	my $dbh dbh27,401
	my $res res28,438
sub update Eic_log::update33,492
	my $r_Eic_log r_Eic_log34,505
	my $query query35,529
	my $dbh dbh42,740
	my $res res43,777
sub create Eic_log::create48,831
	my $r_Eic_log r_Eic_log49,844
	my $query query50,868
	my $dbh dbh64,1114
	my $res res65,1151

/emcsvn/billing/trunk/lib/Billing/Message_log.pm,677
package Message_log;3,17
sub new Message_log::new9,97
my( $cus_num, $msg_direction, $msg_date, $msg_size, $msg_sender, $msg_recip)( $cus_num, $msg_direction, $msg_date, $msg_size, $msg_sender, $msg_recip11,108
	my $r_Message_log r_Message_log12,191
sub delete Message_log::delete27,455
	my $r_Message_log r_Message_log28,468
	my $dbh dbh29,496
	my $res res30,533
sub update Message_log::update35,587
	my $r_Message_log r_Message_log36,600
	my $query query37,628
	my $dbh dbh46,943
	my $res res47,980
sub create Message_log::create52,1034
	my $r_Message_log r_Message_log53,1047
	my $query query54,1075
	my $dbh dbh72,1431
	my $res res73,1468

/emcsvn/billing/trunk/lib/Billing/Currencies.pm,860
package Currencies;3,17
sub new Currencies::new9,96
my ($cus_currency)($cus_currency11,113
	my $sql sql12,139
	my $dbh dbh13,215
	my $res res14,252
	my $row row16,300
	my $r_Currencies r_Currencies17,335
sub delete Currencies::delete29,532
	my $r_Currencies r_Currencies30,545
	my $query query31,572
	my $dbh dbh32,669
	my $res res33,706
sub update Currencies::update38,760
	my $r_Currencies r_Currencies39,773
	my $query query40,800
	my $dbh dbh45,939
	my $res res46,976
sub create Currencies::create51,1030
	my $r_Currencies r_Currencies52,1043
	my $query query53,1070
	my $dbh dbh61,1180
	my $res res62,1217
sub get_name Currencies::get_name66,1270
  my $r_Currencies r_Currencies67,1285
	my $row;row68,1313
  my $query query69,1323
  my $dbh dbh70,1433
  my $res res71,1471
  my $rows rows73,1523

/emcsvn/billing/trunk/lib/Billing/Msmail_pos.pm,593
package Msmail_pos;3,17
sub new Msmail_pos::new9,96
my( $cus_num, $ms_id, $ms_po, $ms_network)( $cus_num, $ms_id, $ms_po, $ms_network11,107
	my $r_Msmail_pos r_Msmail_pos12,156
sub delete Msmail_pos::delete25,340
	my $r_Msmail_pos r_Msmail_pos26,353
	my $dbh dbh27,380
	my $res res28,417
sub update Msmail_pos::update33,471
	my $r_Msmail_pos r_Msmail_pos34,484
	my $query query35,511
	my $dbh dbh42,711
	my $res res43,748
sub create Msmail_pos::create48,802
	my $r_Msmail_pos r_Msmail_pos49,815
	my $query query50,842
	my $dbh dbh64,1077
	my $res res65,1114

/emcsvn/billing/trunk/lib/Billing/Transactions2.pm,1036
package Transactions2;3,18
sub newTransactions2::new45,1220
	my ($class)($class47,1230
	my ($sql, $res, $row)($sql, $res, $row49,1253
	my ($emc_dbh, $tran_num, $year, $month, $cus_num, $owner_num, $parent_tran_num,($emc_dbh, $tran_num, $year, $month, $cus_num, $owner_num, $parent_tran_num,50,1277
	my $self self90,2934
sub deleteTransactions2::delete121,3756
	my $transaction transaction123,3769
	my $emc_dbh emc_dbh125,3796
	my $query query130,3878
	my $res res131,3938
sub updateTransactions2::update140,4215
	my $transaction transaction142,4228
	my $emc_dbh emc_dbh144,4255
	my $query query149,4337
	my $stmt stmt150,4397
	my $orig orig152,4479
	my $res res177,4952
		my $h_diff h_diff199,5635
sub createTransactions2::create210,5966
	my $transaction transaction212,5979
	my $emc_dbh emc_dbh214,6006
	my $query query219,6088
	my $res res261,6611
		my $row row285,7473
sub diff_hashTransactions2::diff_hash298,7831
	my ($hr1, $hr2)($hr1, $hr2300,7847
	my %result;result301,7870

/emcsvn/billing/trunk/lib/Billing/API.pm,823
package API;1,0
sub newAPI::new10,120
	my ($host, $port, $realm, $user, $passwords)($host, $port, $realm, $user, $passwords12,130
	my $api api14,183
sub queryAPI::query27,336
	my ($api, $query)($api, $query29,348
		my $answer answer32,398
	my $json json40,539
		my $answer answer42,605
	my $answer;answer57,963
sub run_queryAPI::run_query77,1346
	my ($api, $password, $json)($api, $password, $json79,1362
	my $ua ua82,1430
	my $request request91,1627
	my $response response98,1818
	my $answer;answer101,1892
 my $https_host https_host122,2126
 my $https_port https_port123,2168
 my $basic_auth_realm basic_auth_realm124,2191
 my $api_login api_login125,2247
 my $api_passwords api_passwords126,2299
 my $api api128,2366
 my $query query133,2477
 my $response response137,2520

/emcsvn/billing/trunk/lib/Billing/Vars.pm,836
package Vars;3,17
sub new Vars::new9,90
my( $var_name, $var_address1, $var_address2, $var_city, $var_prov, $var_postal, $var_country, $var_currency, $var_contact, $var_email, $var_phone, $var_fax, $var_pager, $emc_num, $start)( $var_name, $var_address1, $var_address2, $var_city, $var_prov, $var_postal, $var_country, $var_currency, $var_contact, $var_email, $var_phone, $var_fax, $var_pager, $emc_num, $start11,101
	my $r_Vars r_Vars12,294
sub delete Vars::delete36,786
	my $r_Vars r_Vars37,799
	my $query query38,820
	my $dbh dbh39,895
	my $res res40,932
sub update Vars::update45,986
	my $r_Vars r_Vars46,999
	my $query query47,1020
	my $dbh dbh66,1671
	my $res res67,1708
sub create Vars::create72,1762
	my $r_Vars r_Vars73,1775
	my $query query74,1796
	my $dbh dbh110,2476
	my $res res111,2513

/emcsvn/billing/trunk/lib/Billing/Exchange.pm,6277
package Exchange;1,0
sub minExchange::min20,454
	my ($x, $y)($x, $y22,464
sub maxExchange::max27,514
	my ($x, $y)($x, $y29,524
sub convert_AD_timestampExchange::convert_AD_timestamp42,855
	my ($lastLoginTimestamp)($lastLoginTimestamp44,882
	my $unix_timestamp unix_timestamp55,1091
sub exch_mungeExchange::exch_munge66,1338
	my ($uid)($uid68,1355
	my ($u1, $u2, $u3, $u4, $u5)($u1, $u2, $u3, $u4, $u570,1373
	my @u;u71,1456
sub find_exchange_billing_addressExchange::find_exchange_billing_address99,1879
	my ($aka_dbh, $sps_num, @addr_list)($aka_dbh, $sps_num, @addr_list101,1915
	my $found_addr found_addr102,1958
sub check_addrExchange::check_addr117,2267
	my ($aka_dbh, $addr, $sps_num)($aka_dbh, $addr, $sps_num119,2284
	my ($localpart, $domain)($localpart, $domain121,2323
	my $rc rc122,2376
	my $query query124,2390
	my $res res125,2451
			my ($cus_num)($cus_num132,2586
sub addr_sortExchange::addr_sort148,2933
sub single_spaceExchange::single_space184,3500
	my ($s)($s186,3519
sub get_storage_classesExchange::get_storage_classes193,3639
	my ($aka_dbh, $known_billing_classes, $error)($aka_dbh, $known_billing_classes, $error195,3665
	my $query query197,3719
	my $stmt stmt198,3802
my @exchange_class_lookup exchange_class_lookup219,4362
sub extract_storage_classExchange::extract_storage_class235,5189
	my ($line, $errstr)($line, $errstr237,5217
sub storage_class_bynameExchange::storage_class_byname248,5375
	my ($known_billing_classes, $class_name)($known_billing_classes, $class_name250,5402
sub get_exchange_classesExchange::get_exchange_classes259,5641
	my ($known_classes, $result, $error)($known_classes, $result, $error261,5668
	my @lines lines265,5852
	my $csv_in csv_in271,6149
	my $found_start found_start273,6233
		my $rc rc287,6470
		my @cols cols288,6501
		my ($user)($user290,6534
		my $class_name class_name292,6579
sub read_class_fileExchange::read_class_file308,6872
	my ($class_file, $aka_storage_classes, $exch_storage_classes, $error)($class_file, $aka_storage_classes, $exch_storage_classes, $error310,6894
	my $csv csv317,7075
		my $rc rc321,7185
		my @cols cols322,7213
		my $is_owa is_owa324,7243
		my ($user)($user326,7286
		my $class_name;class_name328,7332
sub read_mapping_fileExchange::read_mapping_file357,8248
	my ($aka_dbro_dbh, $map_file, $user_storage_class, $domains, $users, $primary_addr_map, $cust_ou_map, $error, $error_list)($aka_dbro_dbh, $map_file, $user_storage_class, $domains, $users, $primary_addr_map, $cust_ou_map, $error, $error_list359,8272
	my $csv csv366,8499
	my $csv2 csv2367,8561
	my ($exch_DN_col, $exch_legacyExchangeDN_col, $exch_msExchMailboxGuid_col,($exch_DN_col, $exch_legacyExchangeDN_col, $exch_msExchMailboxGuid_col,370,8797
	my %expected_cols expected_cols374,9033
	my $rc rc387,9510
	my @cols cols388,9537
	my $column column389,9565
	my $errors errors398,9773
		my $billing_addr;billing_addr414,10166
		my $rc rc415,10186
		my @cols cols424,10374
		my $exch_DN exch_DN429,10535
		my $exch_legacyExchangeDN exch_legacyExchangeDN430,10572
		my $exch_msExchMailboxGuid exch_msExchMailboxGuid431,10637
		my $exch_whenCreated exch_whenCreated432,10704
		my $exch_proxyAddresses exch_proxyAddresses433,10759
		my $exch_mail exch_mail434,10820
		my $exch_lastLogonTimestamp exch_lastLogonTimestamp435,10861
		my $exch_userPrincipalName exch_userPrincipalName436,10930
		my $exch_userAccountControl exch_userAccountControl437,10997
		my $is_disabled is_disabled449,11472
		my @cols2 cols2456,11657
		my $sps_num;sps_num458,11689
			my $node node472,12100
			my ($localpart, $domain)($localpart, $domain486,12472
				my $node node492,12686
			my $x x504,12986
			my $last_login last_login521,13887
			my ($y, $m, $d)($y, $m, $d526,14055
			my %ou_map ou_map562,15485
			my @ou_stack ou_stack581,15964
						my $entry entry589,16192
sub parse_ouExchange::parse_ou610,16592
	my ($s, $billing_addr)($s, $billing_addr612,16607
	my @ou_stack;ou_stack614,16638
	my %skip skip616,16654
	my %do_not_skip do_not_skip623,16799
	my ($localpart, $domain)($localpart, $domain650,17429
	my $csv csv652,17491
	my $rc rc653,17554
	my @cols cols654,17581
			my $candidate_ou candidate_ou658,17659
sub read_storage_fileExchange::read_storage_file679,18053
	my ($data_file, $primary_addr_map, $domains, $users, $bad_storage_user, $error)($data_file, $primary_addr_map, $domains, $users, $bad_storage_user, $error681,18077
	my $dn dn683,18165
	my $guid guid684,18179
	my $count count685,18195
	my $storage storage686,18211
	my $deleted_storage deleted_storage687,18229
	my $display_name;display_name688,18255
	my $abort_mailbox abort_mailbox689,18274
			my $part2 part2713,18851
				my $billing_addr billing_addr768,20344
				my ($localpart, $domain)($localpart, $domain769,20406
sub read_resource_fileExchange::read_resource_file800,21319
	my ($aka_dbro_dbh, $file, $exch_storage_classes, $domains, $users, $primary_addr_map, $errstr)($aka_dbro_dbh, $file, $exch_storage_classes, $domains, $users, $primary_addr_map, $errstr802,21344
	my $have_data_block have_data_block804,21447
	my $have_value have_value805,21473
	my $name;name806,21494
	my $value;value807,21505
	my $ExchangeGuid;ExchangeGuid808,21517
	my $mailbox mailbox809,21536
				my $user user836,22083
					my $billing_addr billing_addr840,22267
sub parse_mec_mailbox_reportExchange::parse_mec_mailbox_report888,23076
	my ($file, $mailboxes, $errstr)($file, $mailboxes, $errstr890,23107
	my $name;name892,23147
	my $value;value893,23158
	my $eaten_binary_header eaten_binary_header894,23170
	my $have_mailbox have_mailbox895,23200
	my $have_value have_value896,23223
	my $abort_mailbox abort_mailbox897,23244
	my $MailboxGuid;MailboxGuid898,23268
	my $LegacyDN;LegacyDN899,23286
	my $mailbox mailbox900,23301
						my ($bytes)($bytes922,23753
					my ($bytes)($bytes968,24714
sub get_last_cnExchange::get_last_cn1022,25836
	my ($dn)($dn1024,25854
	my ($cn)($cn1026,25871
sub fill_nodeExchange::fill_node1031,25925
	my ($mailbox)($mailbox1033,25941
	my $cn cn1035,25963
	my $addr addr1036,26012

/emcsvn/billing/trunk/lib/blib2.pl,4091
sub emmunity_provider_namemain::emmunity_provider_name18,357
	my ($providers)($providers20,386
	my %emm_providers emm_providers22,410
sub emmunity_provider_name_allmain::emmunity_provider_name_all51,852
	my ($providers)($providers53,885
	my %emm_providers emm_providers55,910
sub emmunity_provider_name_listmain::emmunity_provider_name_list84,1534
	my ($providers)($providers86,1568
	my @scanners;scanners87,1591
sub main::get_date 114,2070
	my ($a_year, $a_month)($a_year, $a_month116,2101
	my ($tim0, $tim1, $tim2)($tim0, $tim1, $tim2117,2131
	my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst118,2158
	my @check check129,2549
sub round_dollarsmain::round_dollars162,3262
	my ($amount, $precision)($amount, $precision164,3282
	my $x x174,3409
sub minmain::min180,3606
	my ($a, $b)($a, $b182,3616
sub maxmain::max187,3668
	my ($a, $b)($a, $b189,3678
sub get_courier_mailbox_sizemain::get_courier_mailbox_size194,3730
	my ($box, $ms_server)($box, $ms_server196,3761
	my $socket socket198,3791
	my $response response205,3963
	my ($ok, $cu_size, $msg_num)($ok, $cu_size, $msg_num206,3990
sub list_aka_domainsmain::list_aka_domains218,4220
	my ($aka_dbh, $cus_num)($aka_dbh, $cus_num220,4243
	my @domains;domains222,4275
	my $stmt stmt225,4360
	my $query query237,4954
sub resolve_billingmain::resolve_billing294,6305
	my ($node, $bill_to_cus_num)($node, $bill_to_cus_num296,6327
sub get_billing_parentmain::get_billing_parent309,6615
	my ($customer)($customer311,6640
sub get_billing_mapsmain::get_billing_maps327,6904
	my ($emc_dbh, $cus_info, $errstr)($emc_dbh, $cus_info, $errstr329,6927
	my $query query332,7002
	my $res res335,7135
		my $aka_customer aka_customer383,8801
		my $billing_cus_num billing_cus_num397,9259
sub get_local_domainsmain::get_local_domains428,10168
	my ($aka_dbh)($aka_dbh430,10192
	my %domains;domains431,10213
	my $query query434,10287
	my $res res442,10648
sub is_local_addressmain::is_local_address453,10822
	my ($ourdomains, $forward_address)($ourdomains, $forward_address455,10845
	my ($user, $domain)($user, $domain457,10888
	my $ret ret458,10941
sub is_local_domainmain::is_local_domain473,11167
	my ($count_dbh, $year, $month, $domain)($count_dbh, $year, $month, $domain475,11189
	my $ret ret477,11237
	my $query query479,11252
	my $res res480,11336
	my @result result484,11436
sub days_free_billablemain::days_free_billable497,11634
	my ($startmonth_ts, $endmonth_ts, $startfree_ts, $endfree_ts)($startmonth_ts, $endmonth_ts, $startfree_ts, $endfree_ts499,11659
	my ($free_days, $paid_days)($free_days, $paid_days501,11729
	my $d d504,11781
sub get_days_freemain::get_days_free547,13154
	my ($parent, $customer, $year, $month)($parent, $customer, $year, $month549,13174
	my $days_free days_free551,13221
	my $cus_startdate cus_startdate556,13327
	my ($start_year, $start_month, $start_day)($start_year, $start_month, $start_day561,13479
	my $startfree_ts startfree_ts563,13572
	my $endfree_ts endfree_ts564,13672
	my ($ann_year, $ann_month)($ann_year, $ann_month567,13730
	my $answer answer568,13814
		my ($next_year, $next_month)($next_year, $next_month574,13908
		my ($follow_year, $follow_month)($follow_year, $follow_month575,13971
		my $startmonth_ts startmonth_ts576,14038
		my $next_month_ts next_month_ts577,14124
		my ($days_free, $days_to_bill, $days_in_month)($days_free, $days_to_bill, $days_in_month579,14215
		my $node node581,14349
sub printable_tax_namemain::printable_tax_name600,14656
	my ($tax)($tax602,14681
	my $id_tag;id_tag604,14699
sub has_reseller_parentmain::has_reseller_parent621,15193
	my ($emc_dbh, $customer)($emc_dbh, $customer623,15219
	my $query query632,15363
	my $stmt stmt633,15435
	my $cus_num cus_num635,15475
		my $row row641,15596
sub get_childrenmain::get_children656,15812
	my ($emc_dbh, $customer)($emc_dbh, $customer658,15831
	my $query query660,15864
	my $stmt stmt661,15922

/emcsvn/billing/trunk/lib/blib.pl,14304
sub doctypemain::doctype35,659
sub do_setup main::do_setup41,811
sub do_setup_basic main::do_setup_basic56,1182
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions58,1213
sub do_setup_simple main::do_setup_simple83,1915
	my ($form_variables)($form_variables85,1947
sub do_setup_html main::do_setup_html104,2414
	my ($form_variables)($form_variables106,2444
sub frames main::frames125,2911
	my ($emc_dbh, $emc_user, $form_variables, $script)($emc_dbh, $emc_user, $form_variables, $script127,2934
	my $cus_num cus_num129,2993
	my @fields fields131,3037
		my $customer customer137,3161
sub title main::title154,3795
	my $title title156,3817
sub actions main::actions170,4322
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions172,4347
	my ($month, $year)($month, $year174,4407
	my $var;var175,4447
	my @links links218,5497
	my @links2 links2229,5945
	my $this_year this_year265,7069
	my $this_month this_month266,7093
sub footer main::footer308,10332
sub footer_html main::footer_html313,10396
sub error main::error318,10465
	my $message message320,10487
sub row main::row328,10582
	my $text text330,10602
sub startrow main::startrow337,10695
	my ($bgcolor)($bgcolor339,10720
sub endrow main::endrow347,10832
sub cell main::cell352,10876
	my $text text354,10897
sub rightcell main::rightcell359,10962
	my $text text361,10988
sub bcell main::bcell366,11065
	my ($text,$font_color)($text,$font_color368,11087
sub startcell main::startcell376,11285
sub endcell main::endcell381,11333
sub incell main::incell386,11378
	my $text text388,11401
sub showphone main::showphone393,11438
	my $phone phone395,11464
	my @array;array396,11484
		my $string string406,11637
		my $string string413,11873
		my $string string420,12177
sub showphone2 main::showphone2426,12383
	my $phone phone428,12410
	my @array;array429,12430
		my $string string435,12544
sub show_subscriptionmain::show_subscription442,12755
	my ($cus_num, $emc_user)($cus_num, $emc_user444,12779
sub db_errormain::db_error490,14013
	my ($dbh, $query)($dbh, $query492,14028
sub html_main_table(main::html_main_table506,14438
sub html_error(main::html_error511,14522
	my ($txt)($txt513,14541
sub syserror(main::syserror517,14615
	my ($txt)($txt519,14632
sub rid2cusmain::rid2cus523,14713
	my ($rid)($rid525,14727
	my $cust_num cust_num527,14777
	my $s s528,14797
			sub { main::{531,14890
	my $custBag custBag535,15023
sub cus2ridmain::cus2rid541,15227
	my ($cus_num)($cus_num543,15241
	my $rid rid544,15262
	my $s s546,15310
			sub { main::{549,15403
	my $custBag custBag553,15536
sub sps_servicesmain::sps_services559,15728
	my $rid rid561,15747
	my $s s562,15765
			sub { main::{565,15857
	my $custBag custBag569,15990
sub check_servicemain::check_service575,16189
	my ($emc_dbh, $aka_dbh, $cus_num, $sps_service_num)($emc_dbh, $aka_dbh, $cus_num, $sps_service_num577,16209
	my $ret ret578,16268
	my $customer customer579,16282
	my $sql sql583,16432
	my $res res584,16657
sub get_sps_servicemain::get_sps_service606,17127
	my ($rid, $service_rid)($rid, $service_rid608,17149
	my $leave leave609,17180
	my $s s611,17247
			sub { main::{614,17339
	my $custBag custBag619,17498
sub service2ridmain::service2rid629,17784
	my ($service_name)($service_name631,17802
	my $leave leave632,17828
	my $s s634,17896
			sub { main::{637,17988
	my $custBag custBag642,18147
sub check_subscriptionmain::check_subscription652,18408
	my ($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value)($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value654,18433
	my $leave leave655,18513
	my $s s656,18529
	my $result result665,18810
		my $service_data service_data671,19064
sub show_packagesmain::show_packages685,19467
	my ($emc_dbh, $customer, $emc_user, $simple)($emc_dbh, $customer, $emc_user, $simple687,19487
	my ($res2)($res2689,19540
	my $counter;counter690,19553
	my $query query691,19567
	my $stmt stmt695,19744
		my $query query715,20611
		my $stmt stmt720,20925
		my $num num722,21026
			my $status status729,21216
			my $bgcolor;bgcolor730,21236
			my $query query739,21347
			my $stmt stmt744,21599
			my $price price746,21741
			my $user_price user_price748,21799
sub show_subscriptions2main::show_subscriptions2765,22572
	my ($emc_dbh, $cus_num, $emc_user, $simple)($emc_dbh, $cus_num, $emc_user, $simple767,22598
	my $customer customer769,22650
	my ($sql, $res, $res2)($sql, $res, $res2770,22701
	my $counter;counter771,22726
		my $num num808,24479
			my $status status815,24671
			my $bgcolor;bgcolor816,24691
				my $service service834,25857
sub is_spsmain::is_sps870,27330
	my ($emc_dbh, $service_num, $cus_num, $customer_spsnum)($emc_dbh, $service_num, $cus_num, $customer_spsnum872,27343
	my $customer_rid customer_rid874,27407
	my $service service875,27454
	my $service_bag service_bag877,27570
	my $service_rid service_rid878,27628
		my $status status881,27744
sub subscribe_spsmain::subscribe_sps891,28070
	my ($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid)($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid893,28090
	my $sub sub895,28164
	my $customer customer896,28227
	my $hash;hash897,28278
	my $s s898,28289
	my $bag bag926,29307
	my $rid rid927,29368
sub get_month_yearmain::get_month_year932,29509
	my ($month,$year)($month,$year934,29530
sub access_deniedmain::access_denied944,29686
sub check_hosted_usagemain::check_hosted_usage949,29768
	my ($aka_dbh, $access, $sps_num)($aka_dbh, $access, $sps_num951,29793
	my $query_check;query_check952,29834
	my $ret ret953,29852
	my $sql sql964,30076
	my $res res970,30429
	my @row row972,30481
sub tbl_nummain::tbl_num983,30602
	my($num)($num985,30616
sub next_monthmain::next_month989,30683
	my ($year, $month, $months_delta)($year, $month, $months_delta991,30700
sub list_sps_servicesmain::list_sps_services1007,30907
	my ($aka_dbh, $sps_num)($aka_dbh, $sps_num1009,30931
	my %ret ret1011,30963
	my $sql sql1012,30978
	my $res res1018,31174
			my $sql sql1023,31374
			my $res2 res21027,31586
sub check_sps_service_usagemain::check_sps_service_usage1056,32457
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1058,32487
	my $ret ret1059,32533
	my $sql sql1060,32547
	my $res res1082,33544
		my $row row1085,33618
sub check_sps_service_billingmain::check_sps_service_billing1093,33710
	my ($emc_dbh, $cus_num, $service_desc)($emc_dbh, $cus_num, $service_desc1095,33742
	my $ret ret1096,33788
	my $emc_cus_num emc_cus_num1097,33802
	my $query query1103,33961
	my $res res1104,34029
		my $row row1107,34105
	my $sql sql1114,34218
		my $found found1123,34599
		my $cur_set cur_set1124,34616
sub count_sps_service_usersmain::count_sps_service_users1152,35045
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1154,35075
	my $ret ret1155,35121
	my $sql sql1157,35136
	my $res res1162,35427
		my $row row1165,35501
sub check_bs_servicemain::check_bs_service1173,35593
	my ($emc_dbh, $sps_num, $service_num)($emc_dbh, $sps_num, $service_num1175,35616
	my $service service1177,35662
	my $ret ret1178,35718
	my $aka_dbh aka_dbh1179,35732
			my $sql sql1183,35991
			my $res2 res21184,36082
			my $sql sql1191,36214
			my $res2 res21192,36305
			my $sql sql1199,36454
			my $res2 res21200,36566
			my $sql sql1207,36716
			my $res2 res21208,36808
	my %extras extras1216,36929
			my $sql sql1222,37137
			my $res2 res21227,37458
		my $sql sql1235,37620
		my $res2 res21241,38039
		my $sql sql1248,38147
		my $res res1250,38360
sub cleanse_inputmain::cleanse_input1265,38647
	my ($s)($s1267,38667
sub cleanse_hashmain::cleanse_hash1275,38876
	my ($href)($href1277,38895
sub cleanse_input_punctuationmain::cleanse_input_punctuation1290,39358
	my ($s)($s1292,39390
sub line_datemain::line_date1304,39672
	my ($year, $month)($year, $month1306,39688
	my ($line_year, $line_month)($line_year, $line_month1308,39715
	my $line_date line_date1309,39777
sub human_datemain::human_date1316,40011
	my ($year, $month)($year, $month1318,40028
	my ($line_year, $line_month)($line_year, $line_month1320,40055
	my $unixdate unixdate1322,40118
	my @parts parts1324,40189
	my $line_date line_date1325,40224
sub ym_to_humanmain::ym_to_human1334,40387
	my ($ym, $months_delta)($ym, $months_delta1336,40405
	my ($year, $month)($year, $month1342,40478
	my @months months1355,40740
sub get_ym_nowmain::get_ym_now1365,40966
	my ($now, $months_delta)($now, $months_delta1367,40983
	my @ts ts1369,41016
	my $year year1371,41044
	my $month month1372,41072
sub days_in_monthmain::days_in_month1378,41204
	my ($year, $month)($year, $month1380,41224
	my $then then1387,41302
	my @then then1389,41385
sub is_anniversary_monthmain::is_anniversary_month1403,41779
	my ($year, $month, $customer)($year, $month, $customer1405,41806
sub next_anniversary_monthmain::next_anniversary_month1438,42901
	my ($year, $month, $customer, $direction)($year, $month, $customer, $direction1440,42930
	my $d d1442,42980
		my $y y1451,43143
		my $m m1452,43160
		my $limit limit1453,43178
sub get_anniversary_monthsmain::get_anniversary_months1464,43381
	my ($customer)($customer1466,43410
	my $cus_billfreq cus_billfreq1468,43433
	my $cus_billfreq_month cus_billfreq_month1469,43480
	my %target_months;target_months1471,43540
		my $t t1475,43654
sub gazetteer_checkmain::gazetteer_check1498,44198
	my ($emc_dbh, $city, $prov, $country)($emc_dbh, $city, $prov, $country1500,44220
	my $query query1505,44360
	my $res res1506,44454
	my $x x1507,44492
	my $row row1508,44552
			my $stamp stamp1518,44883
sub clone_hashmain::clone_hash1529,45130
	my ($hr)($hr1531,45147
	my %new;new1533,45164
sub show_alertsmain::show_alerts1547,45354
	my ($emc_dbh)($emc_dbh1549,45372
sub check_paymentech_password_agemain::check_paymentech_password_age1565,45826
	my ($emc_dbh)($emc_dbh1567,45862
	my $too_old too_old1569,45884
	my $query query1571,45903
	my $stmt stmt1572,46012
sub send_via_smtpmain::send_via_smtp1593,46563
	my ($server, $helo, $mail_from, $rcpt_to, $msg, $errstr)($server, $helo, $mail_from, $rcpt_to, $msg, $errstr1595,46583
	my $rc;rc1596,46647
	my $smtp smtp1608,46868
sub send_via_mtamain::send_via_mta1649,47594
	my ($cmd, $to, $mesg_path, $errstr)($cmd, $to, $mesg_path, $errstr1651,47613
			my $line;line1666,47965
sub create_contact_linkmain::create_contact_link1681,48193
	my ($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr)($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr1683,48219
	my $admin admin1685,48321
	my $bill bill1686,48337
	my $tech tech1687,48352
		my $conlink conlink1694,48649
		my $conlink conlink1703,48910
		my $conlink conlink1712,49173
sub delete_customermain::delete_customer1729,49600
	my ($emc_dbh, $customer, $errstr)($emc_dbh, $customer, $errstr1731,49622
	my $abort_transaction abort_transaction1733,49664
		my $rz;rz1741,49788
		my $query query1744,49826
		my $stmt stmt1745,49894
				my $query query1750,50072
				my $stmt stmt1758,50450
					my $row row1760,50532
						my $query query1763,50655
			my $now_ts now_ts1781,51037
sub get_invoice_contactsmain::get_invoice_contacts1825,52792
	my ($emc_dbh, $customer, $recips)($emc_dbh, $customer, $recips1827,52819
	my $count count1829,52861
	my $query query1834,52979
	my $stmt stmt1838,53234
	my %contacts;contacts1844,53336
	my $list;list1849,53445
			my $contact contact1863,53826
my %batch_dirs batch_dirs1886,54345
sub zip_batchesmain::zip_batches1894,54462
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1896,54480
	my $query query1903,54674
	my $res res1906,54842
	my $login login1908,54910
	my @jobs;jobs1911,54963
	my $rc rc1916,55150
		my $cc_batch_dir cc_batch_dir1927,55446
		my $file_base file_base1928,55591
				my $r1 r11933,55728
				my $r2 r21934,55768
				my $rc;rc1936,55807
				my $cmd cmd1937,55819
				my $rc;rc1952,56367
				my $cmd cmd1953,56379
		my $query query1965,56862
sub upload_batchesmain::upload_batches1975,57098
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1977,57119
	my $query query1983,57233
	my $res res1985,57364
	my $login login1987,57432
	my @jobs;jobs1990,57485
	my %sftp_args sftp_args2009,57981
	my $sftp sftp2021,58215
		my $cc_batch_dir cc_batch_dir2029,58419
		my $file_base file_base2030,58564
				my $query query2041,59011
				my $query query2055,59543
sub download_batchesmain::download_batches2065,59729
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt2067,59752
	my $query query2073,59866
	my $res res2076,60034
	my $login login2078,60102
	my @jobs;jobs2081,60155
	my $rc rc2085,60336
	my %sftp_args sftp_args2095,60499
	my $sftp sftp2107,60733
		my $cc_batch_dir cc_batch_dir2114,60900
		my $file_base file_base2115,61045
				my $rc rc2124,61405
					my $query query2132,61731
				my $rc rc2142,62165
					my $query query2150,62486
sub unzip_batchmain::unzip_batch2162,62730
	my ($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr)($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr2164,62748
	my $query query2168,62871
	my $res res2171,63056
	my $login login2173,63124
		my ($base)($base2177,63219
		my $pgp_request_file pgp_request_file2178,63265
		my $pgp_response_file pgp_response_file2180,63350
			my $rc rc2185,63473
			my $rc rc2195,63834
		my ($base)($base2202,64124
		my $zip_request_file zip_request_file2203,64170
		my $zip_response_file zip_response_file2205,64255
			my $rc rc2210,64376
			my $rc rc2220,64694

/emcsvn/billing/trunk/lib/imaptest.pl,101
my $socket socket8,127
my $client client16,357
my @folders folders25,615
my @msgs msgs30,782

/emcsvn/billing/trunk/web/invoice_func.pl,29971
sub billing_contact_emailmain::billing_contact_email15,255
	my ($emc_dbh, $cus_num)($emc_dbh, $cus_num17,283
	my $query query19,315
	my $res res24,534
	my $count count26,598
	my $to to27,614
	my $smail smail28,628
sub ym_to_batchmain::ym_to_batch47,1054
	my ($emc_dbh, $year, $month)($emc_dbh, $year, $month49,1072
	my ($query, $res, $row, $batch_num)($query, $res, $row, $batch_num50,1108
	my $rc rc51,1146
		my $row row59,1347
		my $batch_num batch_num60,1385
sub get_service_usagemain::get_service_usage72,1645
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $year, $month, $billing_run74,1669
	my ($service_units, $service_usage)($service_units, $service_usage76,1767
	my $header header77,1805
		my ($units, $usage)($units, $usage83,2116
		my ($units, $usage)($units, $usage90,2422
		my @domains domains107,3234
			my ($units, $usage)($units, $usage115,3685
			my $prorate_ratio prorate_ratio131,4412
sub get_domain_usagemain::get_domain_usage154,5302
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $domain, $year, $month, $billing_run156,5325
	my $query,query158,5432
	my $unit_counter,unit_counter159,5472
	my $total_units_used total_units_used160,5529
	my $billed_units_used billed_units_used161,5582
	my $units_used_text units_used_text162,5637
	my $total_units_used_text total_units_used_text163,5690
	my $total_user_count total_user_count164,5723
	my $total_included_used total_included_used165,5750
	my $base;base166,5780
	my ($units, $usage)($units, $usage167,5791
			my %unit_dispatch unit_dispatch223,7771
				my $dispatch dispatch343,13425
			my %usage_dispatch usage_dispatch396,15224
					my $query query474,19473
					my $stmt stmt482,19897
					my $delta delta490,20157
					my $query query492,20218
					my $stmt stmt502,20695
					my $query query522,21332
					my $stmt stmt530,21756
					my $delta delta538,22016
					my $query query540,22077
					my $stmt stmt550,22554
					my $query query570,23179
					my $stmt stmt578,23599
					my $delta delta586,23859
					my $query query588,23920
					my $stmt stmt598,24393
				my $dispatch dispatch619,25168
	my $line_date line_date647,26102
		my $emc_num emc_num650,26171
			my $query query656,26301
			my $res res661,26551
				my $query query668,26991
				my $res res673,27228
				my $query query678,27519
				my $res res683,27790
sub get_sharepoint_countmain::get_sharepoint_count695,28189
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run697,28216
	my $query query699,28319
	my $stmt stmt701,28435
	my $row row703,28515
	my $count count707,28629
	my $units units712,28710
sub get_sharepoint_storagemain::get_sharepoint_storage722,28848
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage724,28877
	my $query query726,28990
	my $stmt stmt729,29155
	my $row row731,29235
	my $total_usage_used total_usage_used734,29288
	my $count count737,29433
	my $usage usage742,29514
sub calc_hosted_domain_storage_popmain::calc_hosted_domain_storage_pop755,29775
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run757,29812
	my $query query759,29923
sub calc_hosted_domain_storage_webmailmain::calc_hosted_domain_storage_webmail768,30481
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run770,30522
	my $query query772,30633
sub calc_hosted_domain_storage_popwebmain::calc_hosted_domain_storage_popweb781,31192
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run783,31232
	my $query query785,31343
sub calc_hosted_domain_storage_imapmain::calc_hosted_domain_storage_imap794,31902
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run796,31940
	my $query query798,32051
sub calc_hosted_domain_storage_classmain::calc_hosted_domain_storage_class807,32612
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $storage_class809,32651
	my $query query811,32778
sub calc_hosted_domain_storage_bcs_inactivemain::calc_hosted_domain_storage_bcs_inactive823,33353
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run825,33399
	my $query query827,33510
sub calc_hosted_domain_storage_bcs_activemain::calc_hosted_domain_storage_bcs_active836,34088
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run838,34132
	my $query query840,34243
sub calc_hosted_domain_storage_bcsmain::calc_hosted_domain_storage_bcs849,34842
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run851,34879
	my $query query853,34990
sub get_ele_customer_usagemain::get_ele_customer_usage861,35541
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run863,35570
	my $unit_counter,unit_counter865,35660
	my $total_units_used total_units_used866,35717
	my $billed_units_used billed_units_used867,35770
	my $units_used_text units_used_text868,35825
	my $total_units_used_text total_units_used_text869,35878
	my $total_user_count total_user_count870,35911
	my $total_included_used total_included_used871,35938
	my $base;base872,35968
	my ($units, $usage)($units, $usage873,35979
	my $query query875,36002
	my $stmt stmt876,36102
	my $row row878,36183
		my %unit_dispatch unit_dispatch894,36584
			my $dispatch dispatch950,38818
			my %usage_dispatch usage_dispatch977,39563
				my $dispatch dispatch999,40387
sub exchange_basic_countmain::exchange_basic_count1031,41326
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1033,41353
	my $query query1035,41456
	my $stmt stmt1036,41533
	my ($storage_class)($storage_class1038,41614
	my ($total_units_used)($total_units_used1052,42147
	my $units units1055,42213
sub exchange_standard_countmain::exchange_standard_count1064,42348
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1066,42378
	my $query query1068,42481
	my $stmt stmt1069,42558
	my ($storage_class)($storage_class1071,42639
	my ($total_units_used)($total_units_used1085,43178
	my $units units1088,43244
sub exchange_plus_countmain::exchange_plus_count1097,43379
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1099,43405
	my $query query1101,43508
	my $stmt stmt1102,43585
	my ($storage_class)($storage_class1104,43666
	my ($total_units_used)($total_units_used1118,44205
	my $units units1121,44271
sub get_fusemail_customer_usagemain::get_fusemail_customer_usage1130,44406
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run1132,44440
	my $unit_counter,unit_counter1134,44530
	my $total_units_used total_units_used1135,44587
	my $billed_units_used billed_units_used1136,44640
	my $units_used_text units_used_text1137,44695
	my $total_units_used_text;total_units_used_text1138,44748
	my $total_user_count total_user_count1139,44776
	my $total_included_used total_included_used1140,44803
	my $base;base1141,44833
	my ($units, $usage)($units, $usage1142,44844
	my $query query1144,44867
	my $stmt stmt1145,44993
	my $row row1147,45049
		my %unit_dispatch unit_dispatch1163,45450
			my $dispatch dispatch1207,47247
sub fusemail_cc_countmain::fusemail_cc_count1246,48345
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1248,48369
	my $stmt;stmt1250,48475
	my $query query1251,48486
	my $row row1255,48697
	my $unit unit1262,48806
sub fusemail_total_countmain::fusemail_total_count1271,48935
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1273,48962
	my $stmt;stmt1275,49068
	my $query query1276,49079
	my $row row1280,49288
	my $unit unit1287,49397
sub count_package_hostedmain::count_package_hosted1296,49526
	my ($count_dbh, $year, $month, $customer, $service, $bucket)($count_dbh, $year, $month, $customer, $service, $bucket1298,49553
	my $count count1300,49622
		my $query query1304,49675
		my $stmt stmt1306,49812
		my $query query1311,49979
		my $stmt stmt1313,50088
	my $unit unit1323,50284
sub hosted_50_countmain::hosted_50_count1332,50406
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1334,50428
sub hosted_100_countmain::hosted_100_count1339,50619
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1341,50642
sub hosted_200_countmain::hosted_200_count1346,50834
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1348,50857
sub hosted_300_countmain::hosted_300_count1353,51049
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1355,51072
sub hosted_400_countmain::hosted_400_count1360,51264
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1362,51287
sub hosted_500_countmain::hosted_500_count1367,51479
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1369,51502
sub hosted_1000_countmain::hosted_1000_count1374,51694
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1376,51718
sub hosted_2000_countmain::hosted_2000_count1381,51911
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1383,51935
sub hosted_5000_countmain::hosted_5000_count1388,52128
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1390,52152
sub hosted_10000_countmain::hosted_10000_count1395,52345
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1397,52370
sub hosted_25000_countmain::hosted_25000_count1402,52564
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1404,52589
sub hosted_50000_countmain::hosted_50000_count1409,52783
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1411,52808
sub hosted_100000_countmain::hosted_100000_count1416,53002
	my ($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class)($emc_dbh, $count_dbh, $customer, $service, $sub, $year, $month, $billing_run, $storage_class1418,53028
sub calc_hosted_domain_storagemain::calc_hosted_domain_storage1425,53225
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $query)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run, $query1427,53258
	my $stmt,stmt1429,53377
	my $total_user_count total_user_count1430,53397
	my $total_usage_used total_usage_used1431,53424
	my $usage_used_text;usage_used_text1432,53507
	my @users;users1433,53529
	my $total_mb total_mb1435,53542
		my $user_included_used user_included_used1440,53659
	my $line_date line_date1460,54337
		my $line_price line_price1463,54421
		my $line_price_disc line_price_disc1468,54649
			my $line_amount line_amount1470,54752
			my $line_amount_disc line_amount_disc1471,54814
				my $desc desc1474,54962
					my $sql5 sql51477,55159
					my $res res1486,55819
				my $desc desc1494,56063
					my $sql5 sql51496,56161
					my $res res1503,56620
	my $domain_service_usage domain_service_usage1509,56755
sub calc_eic_trafficmain::calc_eic_traffic1520,57019
	my ($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run)($emc_dbh, $count_dbh, $owner, $customer, $service, $sub, $aka_domain, $year, $month, $billing_run1522,57042
	my $usage usage1524,57153
	my $query query1536,57446
	my $sth sth1538,57607
	my $res res1539,57647
		my $row row1541,57704
sub list_domainsmain::list_domains1551,57951
	my ($emc_dbh, $count_dbh, $service_num, $cus_num, $month, $year)($emc_dbh, $count_dbh, $service_num, $cus_num, $month, $year1553,57970
	my $sql sql1555,58043
	my $res res1556,58130
	my @fields fields1558,58182
	my $count_cond count_cond1559,58218
	my @domains;domains1562,58264
sub is_sps_resellermain::is_sps_reseller1581,58767
	my ($emc_dbh, $cus_num)($emc_dbh, $cus_num1583,58789
	my $aka_dbh aka_dbh1585,58821
	my $customer customer1587,59029
	my $sql sql1588,59080
	my $res res1589,59167
	my @result result1591,59219
sub get_subsmain::get_subs1598,59317
	my($emc_dbh, $cus_num)($emc_dbh, $cus_num1600,59332
	my @service;service1602,59363
	my @services;services1603,59377
	my $query query1605,59393
	my $res res1606,59496
sub get_unit_pricemain::get_unit_price1616,59666
	my ($emc_dbh, $customer, $service_num, $count)($emc_dbh, $customer, $service_num, $count1618,59687
	my @price;price1622,59784
	my $query query1630,59965
	my $res res1635,60145
sub get_usage_pricemain::get_usage_price1642,60378
	my ($emc_dbh, $customer, $service_num, $count)($emc_dbh, $customer, $service_num, $count1644,60400
	my @price;price1648,60497
	my $query query1656,60678
	my $res res1661,60859
sub get_basemain::get_base1668,61092
	my ($emc_dbh, $customer, $service_num)($emc_dbh, $customer, $service_num1670,61107
	my $query query1674,61196
	my $res res1675,61296
	my @price price1677,61393
sub get_usage_basemain::get_usage_base1683,61466
	my ($emc_dbh, $customer, $service_num)($emc_dbh, $customer, $service_num1685,61487
	my $query query1689,61576
	my $res res1690,61677
	my @price price1692,61774
sub allowed_unitsmain::allowed_units1698,61847
	my ($emc_dbh, $count_dbh, $service, $cus_num, $year, $month)($emc_dbh, $count_dbh, $service, $cus_num, $year, $month1700,61867
	my @count;count1702,61936
	my $query query1703,61948
	my $users users1704,61965
	my $ret ret1705,61981
	my $min_allowed min_allowed1706,61995
	my $add_traffic;add_traffic1707,62017
		my $res res1723,62326
sub allowed_usagemain::allowed_usage1741,62616
	my ($service, $cus_num, $year, $month, $min_users, $max_users)($service, $cus_num, $year, $month, $min_users, $max_users1743,62636
	my $emc_dbh emc_dbh1745,62707
	my $count_dbh count_dbh1747,62885
	my @count;count1750,63082
	my $query query1751,63094
	my $users users1752,63111
	my $ret ret1753,63127
	my $min_allowed min_allowed1754,63141
	my $add_traffic;add_traffic1755,63163
		my $add_traffic add_traffic1764,63288
		my $query3 query31766,63369
		my $res3 res31768,63534
		my $res res1829,65198
sub check_submain::check_sub1849,65535
	my($emc_dbh, $cus_num, $service_type)($emc_dbh, $cus_num, $service_type1851,65551
	my $row;row1853,65597
	my $query query1854,65607
	my $res res1871,66293
sub calc_hosted_storagemain::calc_hosted_storage1884,66442
	my($cus_num, $charge, $year, $month, $billing_run)($cus_num, $charge, $year, $month, $billing_run1886,66468
	my $count_dbh count_dbh1888,66527
	my $row;row1891,66785
	my $query query1893,66838
	my $res res1894,66968
	my $total total1896,67024
	my $total_text total_text1897,67040
	my $total_mb total_mb1898,67062
sub calc_eic_usersmain::calc_eic_users1908,67335
	my ($count_dbh, $cus_num, $month, $year)($count_dbh, $cus_num, $month, $year1910,67356
	my $users users1912,67405
	my $query query1915,67465
	my $res res1917,67609
	my @row row1919,67665
		my $res res1925,67890
sub calc_inoutrelay_usersmain::calc_inoutrelay_users1936,68044
	my ($emc_dbh, $cus_num, $month, $year)($emc_dbh, $cus_num, $month, $year1938,68072
	my $users users1940,68119
	my $count_dbh count_dbh1941,68135
	my $aka_dbh aka_dbh1943,68331
	my $row;row1945,68539
	my $customer customer1946,68549
	my $query query1949,68636
	my $res res1956,69285
	my @row row1958,69339
			my $res res1976,70071
		my $forw_users forw_users1982,70206
sub calc_inoutrelay_domain_usersmain::calc_inoutrelay_domain_users2005,70962
	my ($count_dbh, $cus_num, $aka_domain, $year, $month)($count_dbh, $cus_num, $aka_domain, $year, $month2007,70997
	my $users users2009,71059
	my $ret_text ret_text2010,71075
	my $row;row2011,71095
	my $out_users out_users2012,71105
	my $query query2014,71126
	my $res res2015,71229
	my @row row2017,71285
		my ($localpart, $domain)($localpart, $domain2021,71436
sub calc_add_eic_trafficmain::calc_add_eic_traffic2073,73164
	my($cus_num)($cus_num2075,73191
	my $traffic traffic2077,73212
	my $emc_dbh emc_dbh2078,73230
	my $row;row2080,73408
	my $sql sql2081,73418
	my $res res2083,73531
sub calc_notes_usersmain::calc_notes_users2118,74216
	my($count_dbh, $cus_num, $month, $year)($count_dbh, $cus_num, $month, $year2120,74239
	my $query query2123,74330
	my $res res2124,74478
	my @row row2126,74534
	my $users users2127,74567
sub check_domain_submain::check_domain_sub2140,74887
	my ($aka_domain, $service_type, $month, $year)($aka_domain, $service_type, $month, $year2142,74910
	my $count_dbh count_dbh2144,74965
	my $row;row2146,75161
	my $query query2147,75171
	my $res res2151,75346
sub calc_eic_users_domainmain::calc_eic_users_domain2164,75522
	my ($count_dbh, $cus_num, $aka_domain, $month, $year)($count_dbh, $cus_num, $aka_domain, $month, $year2166,75550
	my $query query2168,75612
	my $res res2170,75780
	my @row row2172,75836
	my $users users2173,75869
		my $res res2178,76087
sub calc_inoutrelay_users_domainmain::calc_inoutrelay_users_domain2190,76265
	my ($count_dbh, $cus_num, $aka_domain, $month, $year)($count_dbh, $cus_num, $aka_domain, $month, $year2192,76300
	my $users users2193,76361
	my @row;row2194,76377
	my $query query2196,76388
	my $res res2198,76577
		my @row row2201,76655
		my $res res2211,76995
		my $res res2225,77446
sub calc_ext_for_users_domainmain::calc_ext_for_users_domain2243,77714
	my($cus_num, $aka_domain, $month, $year)($cus_num, $aka_domain, $month, $year2245,77746
	my $users users2247,77795
	my $count_dbh count_dbh2248,77811
	my @row;row2250,78007
	my $query query2252,78072
	my $res res2254,78284
sub calc_proratedmain::calc_prorated2264,78502
	my($sub_deleted_date, $month, $year, $total)($sub_deleted_date, $month, $year, $total2266,78522
	my $total_res total_res2268,78575
	my $last_month last_month2269,78595
	my $last_day last_day2270,78649
	my $flag=flag2271,78715
		my $days1 days12274,78835
		my $days2 days22275,78894
		my $prorated prorated2276,78936
sub calc_prepaidmain::calc_prepaid2295,79671
	my ($emc_dbh, $owner, $customer, $days_free_data, $prepaid_total, $month, $year, $multiple, $billing_run)($emc_dbh, $owner, $customer, $days_free_data, $prepaid_total, $month, $year, $multiple, $billing_run2297,79690
	my $precision precision2299,79804
	my $abort abort2304,79881
	my $tran_account;tran_account2306,79898
	my $tran_service;tran_service2307,79917
	my $tran_greatpl_num;tran_greatpl_num2308,79936
	my $days_free_remaining days_free_remaining2333,80734
	my $tran_credit_amount tran_credit_amount2334,80764
		my $df df2336,80843
	my $tran_amount tran_amount2341,81037
	my ($next_year1, $next_month1)($next_year1, $next_month12342,81111
	my ($next_year2, $next_month2)($next_year2, $next_month22343,81183
	my $tran_desc tran_desc2344,81247
	my $tran_date tran_date2345,81330
	my $tran_unixdate tran_unixdate2346,81398
	my $tran_type tran_type2347,81473
	my $transaction transaction2349,81496
			my $parent_tran_num parent_tran_num2370,82206
			my $tran_amount tran_amount2372,82289
			my $tran_desc tran_desc2373,82332
			my $tran_type tran_type2374,82419
			my $transaction transaction2376,82444
	my $period_error period_error2402,83288
	my $monthly_trans monthly_trans2404,83402
		my $tran_amount tran_amount2407,83524
		my ($next_year, $next_month)($next_year, $next_month2408,83561
		my $tran_date tran_date2409,83631
		my $tran_desc tran_desc2410,83698
		my $transaction transaction2417,83915
		my $df df2437,84626
			my $tran_credit_amount tran_credit_amount2440,84699
			my $tran_amount tran_amount2442,84811
			my $tran_desc tran_desc2443,84853
			my $tran_type tran_type2444,84934
			my $transaction transaction2451,85123
sub process_transactions2main::process_transactions22471,85829
	my ($emc_dbh, $batch_num, $cus_num, $year, $month)($emc_dbh, $batch_num, $cus_num, $year, $month2473,85857
	my $credits credits2475,85916
	my ($next_year, $next_month)($next_year, $next_month2477,85935
	my $sql;sql2479,85998
	my $res res2500,87008
		my $customer customer2506,87127
			my $total_amount total_amount2514,87389
			my $query query2517,87510
			my $stmt stmt2520,87687
				my $service service2525,87838
			my $service service2530,88113
		my $sql3;sql32536,88452
sub insert_transaction_linemain::insert_transaction_line2552,88804
	my ($emc_dbh, $year, $month, $owner_num, $customer, $batch_num, $package, $service, $row, $credits_ptr)($emc_dbh, $year, $month, $owner_num, $customer, $batch_num, $package, $service, $row, $credits_ptr2554,88834
	my $service_num;service_num2556,88946
	my $greatpl_num;greatpl_num2557,88964
	my $parent_num parent_num2585,89719
	my $query query2587,89763
sub mincharge_tranmain::mincharge_tran2612,90606
	my ($emc_dbh, $owner, $cus_num, $amount, $month, $year, $batch)($emc_dbh, $owner, $cus_num, $amount, $month, $year, $batch2614,90627
	my $counter counter2616,90699
	my $customer customer2617,90717
	my ($next_year, $next_month)($next_year, $next_month2618,90768
	my $tran_date tran_date2619,90830
	my $tran_unixdate tran_unixdate2620,90876
	my $monthly_trans monthly_trans2621,90949
	my $tran_desc tran_desc2622,90997
	my $tran_type tran_type2623,91043
	my $gplains_account gplains_account2624,91091
	my $transaction transaction2625,91150
		my $sql2 sql22637,91664
		my $rz rz2644,92224
sub mw_collapse_invoice_itemsmain::mw_collapse_invoice_items2653,92479
	my ($customer, $invoice_items, $line_type)($customer, $invoice_items, $line_type2655,92511
	my $has_mw_service has_mw_service2657,92562
	my $line_overusage line_overusage2658,92587
	my $mw_revenue mw_revenue2659,92612
	my $line_date;line_date2660,92633
		my $item item2666,92783
		my $service_num service_num2667,92819
sub quexion_collapse_invoice_itemsmain::quexion_collapse_invoice_items2713,93958
	my ($emc_dbh, $customer, $invoice_items, $line_type)($emc_dbh, $customer, $invoice_items, $line_type2715,93995
	my %child_to_parent_map;child_to_parent_map2717,94056
	my %service_parent;service_parent2718,94082
	my @append_lines;append_lines2719,94103
	my $have_spam;have_spam2720,94122
	my $have_virus;have_virus2721,94138
	my $query query2727,94285
	my $stmt stmt2728,94412
			my $query2 query22733,94600
			my $stmt2 stmt22734,94685
			my $row2 row22736,94790
		my $item item2746,95129
		my $service_num service_num2747,95165
		my $parent parent2752,95341
		my $item item2773,95927
		my $delta delta2774,95963
		my $sub_num sub_num2775,96025
		my $query2 query22781,96161
		my $stmt2 stmt22782,96257
		my $row2 row22784,96362
		my $query query2787,96435
		my $stmt stmt2788,96533
sub fusemail_collapse_invoice_itemsmain::fusemail_collapse_invoice_items2831,97919
	my ($emc_dbh, $customer, $invoice_items, $line_type)($emc_dbh, $customer, $invoice_items, $line_type2833,97957
	my $has_fm_service_1 has_fm_service_12835,98018
	my $has_fm_service_2 has_fm_service_22836,98045
	my $line_overusage line_overusage2837,98072
	my $fm_revenue_1 fm_revenue_12838,98097
	my $fm_revenue_2 fm_revenue_22839,98120
	my $min_charge_part min_charge_part2840,98143
	my $line_free_amount line_free_amount2841,98169
	my $line_date;line_date2842,98196
	my $fm_plan_name;fm_plan_name2843,98212
	my $max_mailboxes;max_mailboxes2844,98231
	my $has_credit_lines has_credit_lines2845,98251
	my $has_credit_amount has_credit_amount2846,98278
	my %aggr;aggr2852,98434
	my $invoice_items_2 invoice_items_22869,99323
		my $item item2871,99407
	my $i i2875,99481
		my $item item2877,99541
		my $service_num service_num2878,99579
		my $line_desc line_desc2879,99621
				my $year year2935,101410
				my $month month2936,101440
					my $query query2938,101507
					my $stmt stmt2941,101680
					my ($amount)($amount2943,101759
	my $query query2955,101977
	my $stmt stmt2956,102064
		my $row row2959,102165
sub package_collapse_invoice_itemsmain::package_collapse_invoice_items3100,105490
	my ($emc_dbh, $customer, $invoice_items, $line_type)($emc_dbh, $customer, $invoice_items, $line_type3102,105527
	my @new_invoice_items;new_invoice_items3106,105636
	my $package_desc;package_desc3107,105660
	my $package_user_count package_user_count3108,105679
	my $package_amount package_amount3109,105708
	my $price_per_user price_per_user3110,105733
	my $package_price package_price3111,105758
	my $line_date;line_date3112,105782
	my $min_charge_part min_charge_part3113,105798
	my $line_free_amount line_free_amount3114,105824
	my $current_package current_package3116,105852
		my $item item3118,105926
				my $query query3142,106734
				my $stmt stmt3146,106972
sub invoice_totalmain::invoice_total3204,108609
	my ($emc_dbh, $inv_num)($emc_dbh, $inv_num3206,108629
	my $query query3208,108661
	my $res res3211,108796
	my $invoice invoice3213,108860
	my $cm_total cm_total3217,108916
sub create_contact_update_pinmain::create_contact_update_pin3238,109387
	my ($pin_length)($pin_length3240,109419
	my @chars chars3242,109444
	my $pin pin3246,109609
		my ($r, $s)($r, $s3251,109687
sub get_contact_update_pinmain::get_contact_update_pin3270,109929
	my ($emc_dbh, $year, $month, $cus_num)($emc_dbh, $year, $month, $cus_num3272,109958
	my $query query3274,110005
	my $stmt stmt3275,110088
	my $row row3277,110169
sub trial_domain_proratemain::trial_domain_prorate3290,110405
	my ($year, $month, $created, $when)($year, $month, $created, $when3292,110432
	my $prorate_ratio prorate_ratio3294,110476
	my ($y, $m, $d)($y, $m, $d3295,110500
	my $t0 t03296,110556
		my ($y, $m, $d)($y, $m, $d3299,110668
		my $t1 t13300,110728
		my $days_old days_old3301,110778
			my $target target3308,110924
			my $days days3309,110956
sub months_agomain::months_ago3321,111216
	my ($now_year, $now_month, $delta_months)($now_year, $now_month, $delta_months3323,111233
	my $t t3325,111283
	my $then_year then_year3326,111339
	my $then_month then_month3327,111368

/emcsvn/billing/trunk/web/blib.pl,14304
sub doctypemain::doctype35,659
sub do_setup main::do_setup41,811
sub do_setup_basic main::do_setup_basic56,1182
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions58,1213
sub do_setup_simple main::do_setup_simple83,1915
	my ($form_variables)($form_variables85,1947
sub do_setup_html main::do_setup_html104,2414
	my ($form_variables)($form_variables106,2444
sub frames main::frames125,2911
	my ($emc_dbh, $emc_user, $form_variables, $script)($emc_dbh, $emc_user, $form_variables, $script127,2934
	my $cus_num cus_num129,2993
	my @fields fields131,3037
		my $customer customer137,3161
sub title main::title154,3795
	my $title title156,3817
sub actions main::actions170,4322
	my ($emc_dbh, $emc_user, $form_variables, @actions)($emc_dbh, $emc_user, $form_variables, @actions172,4347
	my ($month, $year)($month, $year174,4407
	my $var;var175,4447
	my @links links218,5497
	my @links2 links2229,5945
	my $this_year this_year265,7069
	my $this_month this_month266,7093
sub footer main::footer308,10332
sub footer_html main::footer_html313,10396
sub error main::error318,10465
	my $message message320,10487
sub row main::row328,10582
	my $text text330,10602
sub startrow main::startrow337,10695
	my ($bgcolor)($bgcolor339,10720
sub endrow main::endrow347,10832
sub cell main::cell352,10876
	my $text text354,10897
sub rightcell main::rightcell359,10962
	my $text text361,10988
sub bcell main::bcell366,11065
	my ($text,$font_color)($text,$font_color368,11087
sub startcell main::startcell376,11285
sub endcell main::endcell381,11333
sub incell main::incell386,11378
	my $text text388,11401
sub showphone main::showphone393,11438
	my $phone phone395,11464
	my @array;array396,11484
		my $string string406,11637
		my $string string413,11873
		my $string string420,12177
sub showphone2 main::showphone2426,12383
	my $phone phone428,12410
	my @array;array429,12430
		my $string string435,12544
sub show_subscriptionmain::show_subscription442,12755
	my ($cus_num, $emc_user)($cus_num, $emc_user444,12779
sub db_errormain::db_error490,14013
	my ($dbh, $query)($dbh, $query492,14028
sub html_main_table(main::html_main_table506,14438
sub html_error(main::html_error511,14522
	my ($txt)($txt513,14541
sub syserror(main::syserror517,14615
	my ($txt)($txt519,14632
sub rid2cusmain::rid2cus523,14713
	my ($rid)($rid525,14727
	my $cust_num cust_num527,14777
	my $s s528,14797
			sub { main::{531,14890
	my $custBag custBag535,15023
sub cus2ridmain::cus2rid541,15227
	my ($cus_num)($cus_num543,15241
	my $rid rid544,15262
	my $s s546,15310
			sub { main::{549,15403
	my $custBag custBag553,15536
sub sps_servicesmain::sps_services559,15728
	my $rid rid561,15747
	my $s s562,15765
			sub { main::{565,15857
	my $custBag custBag569,15990
sub check_servicemain::check_service575,16189
	my ($emc_dbh, $aka_dbh, $cus_num, $sps_service_num)($emc_dbh, $aka_dbh, $cus_num, $sps_service_num577,16209
	my $ret ret578,16268
	my $customer customer579,16282
	my $sql sql583,16432
	my $res res584,16657
sub get_sps_servicemain::get_sps_service606,17127
	my ($rid, $service_rid)($rid, $service_rid608,17149
	my $leave leave609,17180
	my $s s611,17247
			sub { main::{614,17339
	my $custBag custBag619,17498
sub service2ridmain::service2rid629,17784
	my ($service_name)($service_name631,17802
	my $leave leave632,17828
	my $s s634,17896
			sub { main::{637,17988
	my $custBag custBag642,18147
sub check_subscriptionmain::check_subscription652,18408
	my ($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value)($customer_rid, $service_rid, $sps_subservice, $sps_subservice_value654,18433
	my $leave leave655,18513
	my $s s656,18529
	my $result result665,18810
		my $service_data service_data671,19064
sub show_packagesmain::show_packages685,19467
	my ($emc_dbh, $customer, $emc_user, $simple)($emc_dbh, $customer, $emc_user, $simple687,19487
	my ($res2)($res2689,19540
	my $counter;counter690,19553
	my $query query691,19567
	my $stmt stmt695,19744
		my $query query715,20611
		my $stmt stmt720,20925
		my $num num722,21026
			my $status status729,21216
			my $bgcolor;bgcolor730,21236
			my $query query739,21347
			my $stmt stmt744,21599
			my $price price746,21741
			my $user_price user_price748,21799
sub show_subscriptions2main::show_subscriptions2765,22572
	my ($emc_dbh, $cus_num, $emc_user, $simple)($emc_dbh, $cus_num, $emc_user, $simple767,22598
	my $customer customer769,22650
	my ($sql, $res, $res2)($sql, $res, $res2770,22701
	my $counter;counter771,22726
		my $num num808,24479
			my $status status815,24671
			my $bgcolor;bgcolor816,24691
				my $service service834,25857
sub is_spsmain::is_sps870,27330
	my ($emc_dbh, $service_num, $cus_num, $customer_spsnum)($emc_dbh, $service_num, $cus_num, $customer_spsnum872,27343
	my $customer_rid customer_rid874,27407
	my $service service875,27454
	my $service_bag service_bag877,27570
	my $service_rid service_rid878,27628
		my $status status881,27744
sub subscribe_spsmain::subscribe_sps891,28070
	my ($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid)($emc_dbh, $cus_num,$customer_rid, $service_num, $service_rid893,28090
	my $sub sub895,28164
	my $customer customer896,28227
	my $hash;hash897,28278
	my $s s898,28289
	my $bag bag926,29307
	my $rid rid927,29368
sub get_month_yearmain::get_month_year932,29509
	my ($month,$year)($month,$year934,29530
sub access_deniedmain::access_denied944,29686
sub check_hosted_usagemain::check_hosted_usage949,29768
	my ($aka_dbh, $access, $sps_num)($aka_dbh, $access, $sps_num951,29793
	my $query_check;query_check952,29834
	my $ret ret953,29852
	my $sql sql964,30076
	my $res res970,30429
	my @row row972,30481
sub tbl_nummain::tbl_num983,30602
	my($num)($num985,30616
sub next_monthmain::next_month989,30683
	my ($year, $month, $months_delta)($year, $month, $months_delta991,30700
sub list_sps_servicesmain::list_sps_services1007,30907
	my ($aka_dbh, $sps_num)($aka_dbh, $sps_num1009,30931
	my %ret ret1011,30963
	my $sql sql1012,30978
	my $res res1018,31174
			my $sql sql1023,31374
			my $res2 res21027,31586
sub check_sps_service_usagemain::check_sps_service_usage1056,32457
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1058,32487
	my $ret ret1059,32533
	my $sql sql1060,32547
	my $res res1082,33544
		my $row row1085,33618
sub check_sps_service_billingmain::check_sps_service_billing1093,33710
	my ($emc_dbh, $cus_num, $service_desc)($emc_dbh, $cus_num, $service_desc1095,33742
	my $ret ret1096,33788
	my $emc_cus_num emc_cus_num1097,33802
	my $query query1103,33961
	my $res res1104,34029
		my $row row1107,34105
	my $sql sql1114,34218
		my $found found1123,34599
		my $cur_set cur_set1124,34616
sub count_sps_service_usersmain::count_sps_service_users1152,35045
	my ($aka_dbh, $sps_num, $service_desc)($aka_dbh, $sps_num, $service_desc1154,35075
	my $ret ret1155,35121
	my $sql sql1157,35136
	my $res res1162,35427
		my $row row1165,35501
sub check_bs_servicemain::check_bs_service1173,35593
	my ($emc_dbh, $sps_num, $service_num)($emc_dbh, $sps_num, $service_num1175,35616
	my $service service1177,35662
	my $ret ret1178,35718
	my $aka_dbh aka_dbh1179,35732
			my $sql sql1183,35991
			my $res2 res21184,36082
			my $sql sql1191,36214
			my $res2 res21192,36305
			my $sql sql1199,36454
			my $res2 res21200,36566
			my $sql sql1207,36716
			my $res2 res21208,36808
	my %extras extras1216,36929
			my $sql sql1222,37137
			my $res2 res21227,37458
		my $sql sql1235,37620
		my $res2 res21241,38039
		my $sql sql1248,38147
		my $res res1250,38360
sub cleanse_inputmain::cleanse_input1265,38647
	my ($s)($s1267,38667
sub cleanse_hashmain::cleanse_hash1275,38876
	my ($href)($href1277,38895
sub cleanse_input_punctuationmain::cleanse_input_punctuation1290,39358
	my ($s)($s1292,39390
sub line_datemain::line_date1304,39672
	my ($year, $month)($year, $month1306,39688
	my ($line_year, $line_month)($line_year, $line_month1308,39715
	my $line_date line_date1309,39777
sub human_datemain::human_date1316,40011
	my ($year, $month)($year, $month1318,40028
	my ($line_year, $line_month)($line_year, $line_month1320,40055
	my $unixdate unixdate1322,40118
	my @parts parts1324,40189
	my $line_date line_date1325,40224
sub ym_to_humanmain::ym_to_human1334,40387
	my ($ym, $months_delta)($ym, $months_delta1336,40405
	my ($year, $month)($year, $month1342,40478
	my @months months1355,40740
sub get_ym_nowmain::get_ym_now1365,40966
	my ($now, $months_delta)($now, $months_delta1367,40983
	my @ts ts1369,41016
	my $year year1371,41044
	my $month month1372,41072
sub days_in_monthmain::days_in_month1378,41204
	my ($year, $month)($year, $month1380,41224
	my $then then1387,41302
	my @then then1389,41385
sub is_anniversary_monthmain::is_anniversary_month1403,41779
	my ($year, $month, $customer)($year, $month, $customer1405,41806
sub next_anniversary_monthmain::next_anniversary_month1438,42901
	my ($year, $month, $customer, $direction)($year, $month, $customer, $direction1440,42930
	my $d d1442,42980
		my $y y1451,43143
		my $m m1452,43160
		my $limit limit1453,43178
sub get_anniversary_monthsmain::get_anniversary_months1464,43381
	my ($customer)($customer1466,43410
	my $cus_billfreq cus_billfreq1468,43433
	my $cus_billfreq_month cus_billfreq_month1469,43480
	my %target_months;target_months1471,43540
		my $t t1475,43654
sub gazetteer_checkmain::gazetteer_check1498,44198
	my ($emc_dbh, $city, $prov, $country)($emc_dbh, $city, $prov, $country1500,44220
	my $query query1505,44360
	my $res res1506,44454
	my $x x1507,44492
	my $row row1508,44552
			my $stamp stamp1518,44883
sub clone_hashmain::clone_hash1529,45130
	my ($hr)($hr1531,45147
	my %new;new1533,45164
sub show_alertsmain::show_alerts1547,45354
	my ($emc_dbh)($emc_dbh1549,45372
sub check_paymentech_password_agemain::check_paymentech_password_age1565,45826
	my ($emc_dbh)($emc_dbh1567,45862
	my $too_old too_old1569,45884
	my $query query1571,45903
	my $stmt stmt1572,46012
sub send_via_smtpmain::send_via_smtp1593,46563
	my ($server, $helo, $mail_from, $rcpt_to, $msg, $errstr)($server, $helo, $mail_from, $rcpt_to, $msg, $errstr1595,46583
	my $rc;rc1596,46647
	my $smtp smtp1608,46868
sub send_via_mtamain::send_via_mta1649,47594
	my ($cmd, $to, $mesg_path, $errstr)($cmd, $to, $mesg_path, $errstr1651,47613
			my $line;line1666,47965
sub create_contact_linkmain::create_contact_link1681,48193
	my ($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr)($emc_dbh, $emc_user, $cus_num, $con_num, $con_bits, $con_primary, $no_marketing, $errstr1683,48219
	my $admin admin1685,48321
	my $bill bill1686,48337
	my $tech tech1687,48352
		my $conlink conlink1694,48649
		my $conlink conlink1703,48910
		my $conlink conlink1712,49173
sub delete_customermain::delete_customer1729,49600
	my ($emc_dbh, $customer, $errstr)($emc_dbh, $customer, $errstr1731,49622
	my $abort_transaction abort_transaction1733,49664
		my $rz;rz1741,49788
		my $query query1744,49826
		my $stmt stmt1745,49894
				my $query query1750,50072
				my $stmt stmt1758,50450
					my $row row1760,50532
						my $query query1763,50655
			my $now_ts now_ts1781,51037
sub get_invoice_contactsmain::get_invoice_contacts1825,52792
	my ($emc_dbh, $customer, $recips)($emc_dbh, $customer, $recips1827,52819
	my $count count1829,52861
	my $query query1834,52979
	my $stmt stmt1838,53234
	my %contacts;contacts1844,53336
	my $list;list1849,53445
			my $contact contact1863,53826
my %batch_dirs batch_dirs1886,54345
sub zip_batchesmain::zip_batches1894,54462
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1896,54480
	my $query query1903,54674
	my $res res1906,54842
	my $login login1908,54910
	my @jobs;jobs1911,54963
	my $rc rc1916,55150
		my $cc_batch_dir cc_batch_dir1927,55446
		my $file_base file_base1928,55591
				my $r1 r11933,55728
				my $r2 r21934,55768
				my $rc;rc1936,55807
				my $cmd cmd1937,55819
				my $rc;rc1952,56367
				my $cmd cmd1953,56379
		my $query query1965,56862
sub upload_batchesmain::upload_batches1975,57098
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt1977,57119
	my $query query1983,57233
	my $res res1985,57364
	my $login login1987,57432
	my @jobs;jobs1990,57485
	my %sftp_args sftp_args2009,57981
	my $sftp sftp2021,58215
		my $cc_batch_dir cc_batch_dir2029,58419
		my $file_base file_base2030,58564
				my $query query2041,59011
				my $query query2055,59543
sub download_batchesmain::download_batches2065,59729
	my ($emc_dbh, $merchant_id, $batch_type, $opt)($emc_dbh, $merchant_id, $batch_type, $opt2067,59752
	my $query query2073,59866
	my $res res2076,60034
	my $login login2078,60102
	my @jobs;jobs2081,60155
	my $rc rc2085,60336
	my %sftp_args sftp_args2095,60499
	my $sftp sftp2107,60733
		my $cc_batch_dir cc_batch_dir2114,60900
		my $file_base file_base2115,61045
				my $rc rc2124,61405
					my $query query2132,61731
				my $rc rc2142,62165
					my $query query2150,62486
sub unzip_batchmain::unzip_batch2162,62730
	my ($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr)($emc_dbh, $merchant_id, $batch_type, $batch_dir, $request_file, $response_file, $errstr2164,62748
	my $query query2168,62871
	my $res res2171,63056
	my $login login2173,63124
		my ($base)($base2177,63219
		my $pgp_request_file pgp_request_file2178,63265
		my $pgp_response_file pgp_response_file2180,63350
			my $rc rc2185,63473
			my $rc rc2195,63834
		my ($base)($base2202,64124
		my $zip_request_file zip_request_file2203,64170
		my $zip_response_file zip_response_file2205,64255
			my $rc rc2210,64376
			my $rc rc2220,64694

/emcsvn/billing/trunk/web/cc_lib.pl,907
sub show_card_infomain::show_card_info1,0
	my ($dbh, $emc_user, $cc, $cc_data)($dbh, $emc_user, $cc, $cc_data3,21
	my $query query9,215
	my $res res10,283
	my $row row12,351
sub cc_update_formmain::cc_update_form84,2899
	my ($dbh, $emc_user, $cus_num, $old_cc, $old_cc_data)($dbh, $emc_user, $cus_num, $old_cc, $old_cc_data86,2920
	my $s s104,3610
	my $stmt stmt112,3876
sub create_cc_priority_slotmain::create_cc_priority_slot376,11808
	my ($emc_dbh, $cus_num, $cc_id, $priority)($emc_dbh, $cus_num, $cc_id, $priority378,11838
	my $top top380,11889
		my $query query383,11923
		my $stmt stmt384,12016
		my $row row388,12114
				my $query query393,12241
sub display_cc_listmain::display_cc_list406,12459
	my ($cus_num, $api_response)($cus_num, $api_response408,12481
	my $results results410,12518
		my $seen_default seen_default417,12664
		my @cards cards423,12831

/emcsvn/billing/trunk/misc/check_eic.pl,46
		my $sql sql17,504
		my $res2 res218,628

/emcsvn/billing/trunk/misc/services2services2.pl,539
my $sql sql13,330
my $res res14,407
sub transfer_service main::transfer_service129,3830
		my($row, $new_service)($row, $new_service130,3853
		my $sub_min_charge sub_min_charge131,3884
		my $sub_min_users sub_min_users132,3910
		my $sql sql133,3935
		my $res res134,4041
		my $n n136,4091
			my $sql4 sql4138,4130
			my $r r139,4217
			my $sql3 sql3175,5454
			my $sql3 sql3176,5803
			my $sql3 sql3177,6152
sub transfer_emmunity main::transfer_emmunity194,6662
	my $sql sql195,6686
	my $res2 res2196,6817

/emcsvn/billing/trunk/misc/sub_to_spam.pl,48
			my $sql sql20,559
			my $res2 res222,704

/emcsvn/billing/trunk/misc/transactions2transactions2.pl,231
my $sql sql11,195
my $res res12,276
sub transfer_service main::transfer_service119,3347
		my($row, $new_service)($row, $new_service120,3370
				my $sql5 sql5123,3468
				my $res5 res5125,3605
			my $sql3 sql3139,3885

/emcsvn/billing/trunk/misc/check_bs.pl,231
my $sql sql11,196
my $res res12,277
sub transfer_service main::transfer_service116,3308
		my($row, $new_service)($row, $new_service117,3331
				my $sql5 sql5120,3429
				my $res5 res5122,3566
			my $sql3 sql3136,3846

/emcsvn/billing/trunk/misc/compare_invoices.pl,297
my $batch1 batch16,64
my $batch2 batch27,82
my $sql sql8,100
my $res1 res111,274
	my $inv1 inv115,445
	my $inv2 inv216,497
sub get_invoice main::get_invoice20,614
	my($cus_num, $batch_num)($cus_num, $batch_num21,632
	my $ret ret23,778
	my $sql sql24,792
	my $res4 res425,997

/emcsvn/billing/trunk/misc/create_pdf.pl,221
my $pdf pdf6,47
        my $root root12,372
        my $page page15,504
        my $f1 f118,567
        my $f2 f221,735
				my $text1 text126,946
				my $string_w string_w27,988
				my $c_pos c_pos29,1066

/emcsvn/billing/trunk/misc/import_pricing_profile.pl,357
my $profile_id profile_id8,100
my $dbh dbh14,246
my $sql sql16,354
my $res res17,439
my $num num19,485
	my $dsql dsql22,538
	my $dres dres23,609
		my($data_start, $data_end, $service_num, $price, $pid, $setup, $base)($data_start, $data_end, $service_num, $price, $pid, $setup, $base26,676
			my $sql2 sql235,1002
			my $res2 res236,1195

/emcsvn/billing/trunk/misc/delete_cus_sub.pl,46
		my $sql sql17,406
		my $res2 res219,543

/emcsvn/billing/trunk/misc/richard_revenue.pl,931
my $dbh dbh10,128
my $query query11,228
my $res res12,307
my %seen seen15,356
my %batch batch16,371
my @unique_months unique_months17,387
my $cus_name cus_name18,411
my $cus_num cus_num19,430
my $cus_currency cus_currency20,448
my $cus_startdate cus_startdate21,471
my $cus_country cus_country22,495
my $cus_var_num cus_var_num23,517
my $cus_var_name cus_var_name24,538
my $cus_varpercent cus_varpercent25,561
my $cus_emc_num cus_emc_num26,585
my $cus_emc_fullname cus_emc_fullname27,606
my $cus_billfreq cus_billfreq28,633
my $cus_prov cus_prov29,655
my $cus_address cus_address30,674
	my ($year, $month, $day)($year, $month, $day34,746
	my $date date35,795
my $query query47,1160
my $res res48,1640
	my $query2 query265,2041
	my $res2 res266,2127
		my $query_batch query_batch78,2680
			my $query1 query189,2998
			my $res1 res191,3139
				my $sub_total sub_total95,3253

/emcsvn/billing/trunk/misc/parse_codes.pl,166
my $onyx_dbh onyx_dbh8,103
my $res res9,226
 	my($cus_num, $cus_name, $onyx_id)($cus_num, $cus_name, $onyx_id13,296
	my $sql sql14,351
	my $res2 res216,451

/emcsvn/billing/trunk/misc/disaster_recovery.pl,83
my $sql sql6,64
my $res1 res19,272
	my $sql sql13,464
	my $res2 res214,755

/emcsvn/billing/trunk/misc/update_minusers.pl,290
		my $sql sql17,503
		my $res2 res218,602
		my $sql3 sql324,759
		my $res3 res325,895
		my $sql sql33,1224
		my $res2 res234,1323
		my $sql3 sql340,1480
		my $res3 res342,1636
		my $sql sql51,1965
		my $res2 res252,2064
		my $sql3 sql358,2221
		my $res3 res360,2377

/emcsvn/billing/trunk/misc/create_objects.pl,354
my $tmp tmp5,38
my $dbh dbh7,59
my $res res8,144
my $num num10,199
my @row;row11,221
my @row2;row212,230
my $res2;res213,240
my $sql;sql14,250
my $object_prop;object_prop15,259
my $package;package16,276
my ($new, $new2, $create, $create2, $update, $update2, $delete)($new, $new2, $create, $create2, $update, $update2, $delete18,290

/emcsvn/billing/trunk/misc/make_profiles.pl,46
		my $sql sql17,395
		my $res2 res225,674

/emcsvn/billing/trunk/misc/list_techs_onyx.pl,435
my $cus_num cus_num20,367
my $res res22,392
my $res2 res223,406
my $query query24,421
	my $onyx_id onyx_id44,1357
	my $onyx_cus_name onyx_cus_name45,1376
sub get_onyx_id main::get_onyx_id59,1698
	my ($cus_num)($cus_num60,1716
	my $onyx_id onyx_id61,1737
	my $onyx_cus_name onyx_cus_name62,1755
sub get_contacts main::get_contacts81,2304
	my($cus_num)($cus_num82,2323
	my $sql sql83,2343
	my $res res84,2493

/emcsvn/billing/trunk/misc/onyx.pl,433
my $cus_num cus_num20,367
my $res res22,392
my $res2 res223,406
my $query query24,421
	my $onyx_id onyx_id35,928
	my $onyx_cus_name onyx_cus_name36,947
sub get_onyx_id main::get_onyx_id48,1229
	my ($cus_num)($cus_num49,1247
	my $onyx_id onyx_id50,1268
	my $onyx_cus_name onyx_cus_name51,1286
sub get_contacts main::get_contacts64,1663
	my($cus_num)($cus_num65,1682
	my $sql sql66,1702
	my $res res67,1852

/emcsvn/billing/trunk/misc/onyx_delete.pl,94
my $cus_num cus_num20,367
my $res res22,392
my $res2 res223,406
my $query query24,421

/emcsvn/billing/trunk/misc/check_spam_trial.pl,302
my $d1 d19,117
my $m1 m110,163
my $y1 y111,209
my $limit_days limit_days12,255
my $txt txt13,275
my $txt_support txt_support14,289
my $sql sql16,312
my $dbh dbh17,326
my $res res25,849
	my $date1 date129,937
	my $date2 date230,998
		my $date date37,1465
	my $date date51,1958

/emcsvn/billing/trunk/misc/pre_sales_revenue.pl,289
my $batch batch9,117
my $sales_rep sales_rep10,139
my $query2 query211,165
my $cad_cus cad_cus12,182
my $us_cus us_cus13,200
my $dbh dbh15,218
my $query query16,344
my $res res21,502
	my $res2 res230,1342
	my $us_total us_total32,1395
	my $cad_total cad_total33,1414

/emcsvn/billing/trunk/misc/check_all_customers.pl,444
my $akaserver akaserver5,27
my $akauser akauser6,67
my $akapass akapass7,93
my $emcdb emcdb8,121
my $akadb akadb9,144
my %bs_sub bs_sub10,167
my %mm_sub mm_sub11,184
my %customer customer12,201
my %customer_name customer_name13,220
my %bs_services bs_services14,244
my %mm_services mm_services15,266
my %delete delete16,288
		my $sql sql40,1078
		my $res2 res241,1144
		my $sql sql48,1317
		my $res2 res249,1601

/emcsvn/billing/trunk/misc/check_cus.pl,46
		my $sql sql17,403
		my $res2 res218,483

/emcsvn/billing/trunk/scripts/mb_charges.pl,169
sub main'subs main::main'subs38,1003
	my $cus_num cus_num41,1071
	my $tim1 tim142,1093
	my $tim2 tim243,1112
	my $timenow timenow44,1131
	my $res res46,1154

/emcsvn/billing/trunk/scripts/delete_or_suspend_customer.pl,134
my $emc_dbh;emc_dbh7,118
my $commit commit8,131
my ($emc_num, $cus_num)($emc_num, $cus_num31,549
	my $customer customer39,691

/emcsvn/billing/trunk/scripts/all_smtp_traffic.pl,126
sub main'lookup_nums main::main'lookup_nums263,7018
	my $ret_sender ret_sender270,7153
	my $ret_recip ret_recip271,7174

/emcsvn/billing/trunk/scripts/eic_add_charge.pl,357
my $ma_num ma_num10,172
my %seen seen11,188
my %unique_senders unique_senders12,203
my $temp_path temp_path13,228
my @months months19,311
my @months2 months220,399
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow22,527
sub main'lookup_nums main::main'lookup_nums119,3021
	my $ret_sender ret_sender126,3146
	my $ret_recip ret_recip127,3167

/emcsvn/billing/trunk/scripts/traffic_log2.pl,121
sub get_address main::get_address270,8418
	my $ma_num ma_num272,8446
	my $resx resx274,8469
	my @val val276,8580

/emcsvn/billing/trunk/scripts/traffic_log3.pl,121
sub get_address main::get_address178,5026
	my $ma_num ma_num180,5054
	my $resx resx182,5077
	my @val val184,5188

/emcsvn/billing/trunk/scripts/akabeans_usage.pl,72
my $debug debug12,210
my $sql sql20,627
my $res_emc res_emc24,989

/emcsvn/billing/trunk/scripts/eic_traffic.pl,293
my $ma_num ma_num10,172
my $temp_path temp_path11,188
my @months months16,259
my @months2 months217,347
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow19,475
sub main'lookup_nums main::main'lookup_nums126,3408
	my $ret_sender ret_sender133,3533
	my $ret_recip ret_recip134,3554

/emcsvn/billing/trunk/scripts/gen_invoices.pl,157
sub main'bill main::main'bill82,2494
	my $cus_num cus_num84,2520
	my $timenow timenow85,2542
	my $date date86,2564
	my $batch_num batch_num87,2583

/emcsvn/billing/trunk/scripts/ldap_usage.pl,147
my @months2 months211,153
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow13,281
my $dbh dbh16,425
	my $sql sql22,974
		my $sql sql26,1209

/emcsvn/billing/trunk/scripts/monthly_trans.pl,636
sub main'subs main::main'subs35,947
	my $cus_num cus_num38,1014
	my $tim1 tim139,1036
	my $tim2 tim240,1055
	my $timenow timenow41,1074
	my $res res43,1097
	my $query query50,1345
sub main'do_minimum main::main'do_minimum536,26407
				my $cus_num cus_num538,26439
				my $cus_name cus_name539,26464
				my $currency currency540,26490
				my $multiplier multiplier541,26516
				my $var_num var_num542,26544
				my $var_percent var_percent543,26569
				my $desc desc544,26598
				my $base base545,26620
				my $timenow timenow546,26642
				my $servnum servnum547,26667
				my $emcnum emcnum548,26692

/emcsvn/billing/trunk/scripts/monthly_trans2.pl,680
sub main'subs main::main'subs35,953
		  my $cus_num cus_num38,1020
		  my $tim1 tim139,1045
		  my $tim2 tim240,1067
		  my $timenow timenow41,1089
		  my $res res43,1115
		  my $query query50,1378
		  sub main'do_minimum main::main'do_minimum545,29074
					 my $cus_num cus_num547,29114
					 my $cus_name cus_name548,29141
					 my $currency currency549,29169
					 my $multiplier multiplier550,29197
					 my $var_num var_num551,29227
					 my $var_percent var_percent552,29254
					 my $desc desc553,29285
					 my $base base554,29309
					 my $timenow timenow555,29333
					 my $servnum servnum556,29360
					 my $emcnum emcnum557,29387

/emcsvn/billing/trunk/scripts/shared_folders_usage.pl,104
my @months2 months211,153
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow13,281
	my $sql sql22,974

/emcsvn/billing/trunk/scripts/eic_traffic_new.pl,293
my $ma_num ma_num10,172
my $temp_path temp_path11,188
my @months months16,259
my @months2 months217,347
my ($tim1,$tim2,$timenow)($tim1,$tim2,$timenow19,475
sub main'lookup_nums main::main'lookup_nums124,2836
	my $ret_sender ret_sender131,2961
	my $ret_recip ret_recip132,2982

/emcsvn/billing/trunk/scripts/import_eic.pl,132
my @fields;fields6,86
my $sub_num;sub_num7,98
my $cus_num;cus_num8,111
my $base;base9,124
my $add_charge;add_charge10,134

/emcsvn/billing/trunk/sanity_checks/TestAccounts.pm,27
package TestAccounts;3,18

/emcsvn/billing/trunk/reporting/enventis_domain_summary.pl,474
my $total;total27,893
my $start_date;start_date28,904
my $del;del29,920
my $username;username30,929
my $plans plans32,944
my $quota quota41,1040
my $active=active50,1140
my $date date55,1192
    my $line line59,1268
    my ($reseller,$customer, $created_on, $domain, $package, $deleted, $email)($reseller,$customer, $created_on, $domain, $package, $deleted, $email61,1386
                my $count count74,2147
                my $count count88,3217

/emcsvn/billing/trunk/reporting/enventis_report.pl,3666
my $customer_num customer_num20,720
my $db db21,749
my $test_db test_db31,1050
my $aka_dbh aka_dbh48,1625
my @ignore_words ignore_words54,1834
my $ignore ignore76,2163
my $pkg_defs pkg_defs82,2301
my $pkg_prices pkg_prices85,2369
my $depth depth91,2635
my $num_cust num_cust92,2650
my $start_time start_time96,2801
my $customer customer99,2917
my $invoice invoice100,2960
sub recurseCustomersmain::recurseCustomers111,3152
    my $customer customer113,3175
    my ($key, $value)($key, $value114,3201
    my $customers customers116,3243
    my $cust_hash;cust_hash119,3317
    my $pkgs pkgs124,3444
    my $cust;cust128,3622
        my $sub sub132,3683
            my ($c_num, $c_hash)($c_num, $c_hash136,3824
            my $realm_list realm_list141,4100
                my $mb_list mb_list145,4328
                    my $mb_sub_list mb_sub_list149,4546
                            my $pkg_info pkg_info156,5006
                            my $parent parent159,5233
sub getCustomerPackagesmain::getCustomerPackages173,5689
    my $pkg_num pkg_num175,5715
    my $package;package177,5741
sub getDomainsmain::getDomains188,6177
    my $cus_num cus_num190,6194
    my $query query192,6220
    my $stmt stmt193,6282
    my $rc rc194,6324
    my $data data199,6474
sub getMailboxesmain::getMailboxes204,6550
    my $domain domain206,6569
    my $query query208,6594
    my $stmt stmt210,6712
    my $rc rc211,6754
    my $data data216,6902
sub getMailboxPackagemain::getMailboxPackage221,6965
    my $mailbox mailbox223,6989
    my $query query225,7015
    my $stmt stmt226,7144
    my $rc rc227,7186
    my $data data232,7344
sub getMailboxSubListmain::getMailboxSubList236,7420
    my $box_num box_num238,7444
    my $query query240,7470
    my $stmt stmt242,7588
    my $rc rc243,7630
    my $data data248,7777
sub getRealmListmain::getRealmList253,7840
    my $cus_num cus_num255,7859
    my $query query257,7885
    my $stmt stmt258,7967
    my $rc rc259,8010
    my $data data264,8165
sub getMailboxRealmCount main::getMailboxRealmCount269,8228
    my $realm realm271,8256
    my $query query273,8280
    my $stmt stmt274,8362
    my $rc rc275,8404
    my $data data280,8545
sub getMailboxSubCountmain::getMailboxSubCount288,8731
    my $sub_num sub_num290,8756
    my $query query292,8782
    my $stmt stmt293,8865
    my $rc rc294,8907
    my $data data299,9052
sub getCustomermain::getCustomer305,9124
    my $cus_num cus_num307,9142
    my $query query308,9167
    my $stmt stmt309,9308
    my $rc rc310,9350
    my $data data315,9509
sub getCustomersmain::getCustomers320,9571
    my $cus_num cus_num322,9590
    my $query query323,9615
    my $stmt stmt324,9756
    my $rc rc325,9798
    my $data data331,9958
sub getPackageDefinitionsmain::getPackageDefinitions335,10030
    my $query query337,10058
    my $stmt stmt338,10111
    my $rc rc339,10153
    my $data data345,10305
sub getPackagePricingmain::getPackagePricing349,10381
    my $query query351,10405
    my $stmt stmt352,10454
    my $rc rc353,10496
    my $data data359,10644
sub getPackageSubscriptionsmain::getPackageSubscriptions363,10720
    my $sub_num sub_num365,10750
    my $query query366,10775
    my $stmt stmt367,10902
    my $rc rc368,10944
    my $data data373,11115
sub getCustomerSubscriptionsmain::getCustomerSubscriptions381,11396
  my $cus_num cus_num383,11427
  my $query query384,11450
    my $stmt stmt386,11578
    my $rc rc387,11620
    my $data data392,11792

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_missing_billing_subscriptions.pl,3632
my $SERVICE_MISSING_IN_EMC SERVICE_MISSING_IN_EMC18,317
my $SERVICE_MISSING_IN_AKA SERVICE_MISSING_IN_AKA19,349
my $fm_dbh;fm_dbh22,399
my $emc_dbh;emc_dbh23,411
my $aka_dbh;aka_dbh24,424
my $commit commit25,437
my $billinghost billinghost29,463
my $billingusername billingusername30,501
my $billingpassword billingpassword31,534
my $billingdsn billingdsn32,569
my $akahost akahost35,717
my $akausername akausername36,747
my $akapassword akapassword37,776
my $akadsn akadsn38,807
my $customers customers68,1565
my @miss_results miss_results70,1607
my %aka_customer_hash aka_customer_hash71,1630
	my $cus_num cus_num73,1693
	my $sps_num sps_num74,1732
	my $missing_subscriptions missing_subscriptions76,1772
            my $akabean_customer akabean_customer84,1964
        my $c c89,2148
        my $billable billable90,2194
        my $will_resell will_resell91,2250
        my $inv_total inv_total92,2317
        my $cus_name cus_name93,2375
            my @line line96,2531
            my $miss_service_num miss_service_num97,2558
            my $count_and_domain count_and_domain99,2618
            my $user_count user_count100,2716
            my $user_domain user_domain101,2775
            my $billing_class billing_class105,2911
            my $codes codes113,3176
            my $code_str code_str115,3329
            my $line_str line_str131,3986
            my @line line136,4181
            my $line_str line_str151,4856
my $fh;fh158,4984
my $csv_columns csv_columns164,5157
my $csv csv167,5486
sub get_all_emc_customers main::get_all_emc_customers182,5894
	my $ret ret183,5922
	my $query query184,5937
sub get_all_possible_billing_code main::get_all_possible_billing_code207,6435
	my $sps_service sps_service208,6471
	my $domain domain209,6497
	my $ret ret210,6518
	my $query query211,6533
sub get_emc_last_inv_total main::get_emc_last_inv_total230,6932
	my $cus_num cus_num231,6961
	my $ret ret232,6983
	my $query query233,6997
	my $row row241,7192
sub get_aka_service_count_and_domain main::get_aka_service_count_and_domain248,7298
	my $service_num service_num249,7337
	my $cus_num cus_num250,7363
	my $ret ret251,7385
	my $query query252,7399
sub get_billing_class main::get_billing_class268,7800
	my $domain domain269,7824
	my $ret ret270,7845
	my $query query271,7860
sub get_aka_customers main::get_aka_customers287,8252
	my $cus_num cus_num288,8276
	my $ret ret289,8298
	my $query query290,8313
sub get_discrepancies main::get_discrepancies306,8573
	my $set1 set1307,8597
	my $set2 set2308,8616
        my @losts losts309,8635
                        my %lost lost313,8761
sub get_missing_subscriptions main::get_missing_subscriptions325,9322
	my %discrepancies discrepancies326,9354
	my $cus_num cus_num327,9379
	my $sps_num sps_num328,9401
	my $akabean_subscriptions akabean_subscriptions331,9453
	my $emc_subscriptions emc_subscriptions332,9519
sub get_akabean_subscriptions main::get_akabean_subscriptions340,9880
	my $ret ret341,9912
	my $sps_num sps_num342,9927
	my $query query344,9950
                my $service_short service_short357,10514
sub get_service_createon main::get_service_createon365,10648
	my $ret ret366,10675
	my $cus_num cus_num367,10690
	my $service_short service_short368,10712
	my $query query370,10741
sub get_emc_subscriptions main::get_emc_subscriptions390,11129
	my $ret ret391,11157
	my $cus_num cus_num392,11172
	my $query query394,11195
                my $service_short service_short411,11573

/emcsvn/billing/trunk/reporting/hiddendollarproject/getMissingSuspendedCustomer.pl,1459
my $host host12,84
my $username username13,112
my $password password14,138
my $dsn dsn15,166
my $dbh dbh16,225
my $billinghost billinghost18,282
my $billingusername billingusername19,320
my $billingpassword billingpassword20,353
my $billingdsn billingdsn21,388
my $billingdbh billingdbh22,456
my $akahost akahost24,541
my $akausername akausername25,571
my $akapassword akapassword26,600
my $akadsn akadsn27,631
my $akadbh akadbh28,696
my %varmapping varmapping32,774
my %deletedbilling deletedbilling34,852
my $sthFusemail sthFusemail54,1291
my $sthAKAServices sthAKAServices65,1521
my $sthAKA sthAKA79,1811
my $sthAKADomain sthAKADomain90,2023
	my $isPrint isPrint105,2480
	my $active_in_Fusemail active_in_Fusemail106,2498
	my $active_in_EMC active_in_EMC107,2529
	my $active_with_Domain active_with_Domain108,2555
	my $biz_unit biz_unit109,2586
	my $parent_num_billing parent_num_billing111,2611
	my $cus_num_aka	cus_num_aka112,2684
	my $cus_num_fusemail	cus_num_fusemail113,2748
	my $cus_is_reseller_billing cus_is_reseller_billing114,2816
	my $cus_deleted_billing cus_deleted_billing115,2889
	my $cus_name_billing cus_name_billing116,2976
	my $cus_deleted_date_billing cus_deleted_date_billing117,3049
	my $var_num	var_num118,3122
	my $activeinFusemail activeinFusemail123,3273
	my $activeServicesInEMC activeServicesInEMC130,3455
	my $activeDomainInEMC activeDomainInEMC137,3641

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_missing_diskplans.pl,2013
my $fm_dbh;fm_dbh19,305
my $emc_dbh;emc_dbh20,317
my $commit commit21,330
my $accounts accounts50,941
my $account;account51,960
my $fake_resellers fake_resellers54,1017
my @test_accounts test_accounts61,1104
my $resellers resellers88,1708
my $direct_group_admins direct_group_admins89,1728
	my ($plans, $total)($plans, $total91,1788
	my $reseller_id reseller_id92,1844
		my $reseller reseller100,2081
			my $size size102,2155
my $fh;fh115,2452
my $csv_columns csv_columns116,2460
my $csv csv123,2715
my $account_id;account_id131,2996
my $count;count132,3012
my $size;size133,3023
my $plans;plans134,3033
my $total;total135,3044
	my $billing billing143,3170
	my $creation_date creation_date144,3222
my $value;value163,3671
	my $billing billing173,3873
		my $reseller_id reseller_id175,3953
		my $creation_date creation_date176,4006
		my $reseller_name reseller_name177,4056
		my $reseller_cus_num reseller_cus_num178,4082
		my $count count179,4111
		my $size size180,4143
		my $cus_name cus_name181,4182
		my $cus_num cus_num182,4219
		my $inv_total inv_total183,4239
		my $status status184,4261
			my $reseller reseller193,4469
sub get_missing_diskplans main::get_missing_diskplans219,4997
	my $ret ret220,5025
	my $account account221,5040
	my $account_plan_id account_plan_id222,5062
	my $disks disks223,5114
	my $total total224,5160
	my $query query226,5177
		my $size size247,5645
sub get_diskplans main::get_diskplans259,5824
	my @ret ret260,5844
	my $account_plan_id account_plan_id261,5859
	my $query query263,5890
sub get_account main::get_account279,6190
	my $ret;ret280,6208
	my $account_id account_id281,6218
	my $query query282,6243
sub get_all_group_admins main::get_all_group_admins298,6524
	my $ret ret299,6551
	my $query query300,6566
sub get_fm_customer_at_emc main::get_fm_customer_at_emc321,6970
	my $ret;ret322,6999
	my $account_id account_id323,7009
	my $query query324,7034

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_wrong_fm_subscriptions.pl,2066
my $fm_dbh;fm_dbh16,288
my $emc_dbh;emc_dbh17,300
my $aka_dbh;aka_dbh18,313
my $commit commit19,326
my $VAULT_SMART_SERVICE_NUM=VAULT_SMART_SERVICE_NUM21,343
my $SPAM_SMART_SERVICE_NUM=SPAM_SMART_SERVICE_NUM22,375
my $VIRUS_SMART_SERVICE_NUM=VIRUS_SMART_SERVICE_NUM23,405
my $accounts accounts61,1326
my $vault_akabean_customers vault_akabean_customers62,1375
my $virus_akabean_customers virus_akabean_customers63,1437
my $spam_akabean_customers spam_akabean_customers64,1499
my $fake_resellers fake_resellers67,1603
my @test_accounts test_accounts74,1690
my $account;account80,1835
my $missing_resellers missing_resellers83,1893
my $missing_group_admins missing_group_admins84,1921
	my $account_id account_id87,1983
	my $is_hybrid;is_hybrid88,2026
	my $target;target89,2042
	my $count count90,2055
	my $reseller_id reseller_id91,2098
my $fh;fh134,3058
my $csv_columns csv_columns135,3066
my $csv csv141,3251
	my $billing billing150,3614
	my $vault_count vault_count154,3745
	my $spam_count spam_count155,3790
	my $virus_count virus_count156,3833
	my $billing billing188,4670
	my $vault_count vault_count192,4801
	my $spam_count spam_count193,4846
	my $virus_count virus_count194,4889
sub get_all_group_admins_with_plan main::get_all_group_admins_with_plan228,5720
  my $ret ret229,5757
  my $query query230,5773
sub get_all_customers_with_vault main::get_all_customers_with_vault249,6183
  my $ret ret250,6218
  my $query query251,6234
sub get_all_customers_with_virus main::get_all_customers_with_virus276,6887
  my $ret ret277,6922
  my $query query278,6938
sub get_all_customers_with_spam main::get_all_customers_with_spam303,7591
  my $ret ret304,7625
  my $query query305,7641
sub get_total_users main::get_total_users330,8293
	my $ret;ret331,8315
	my $account_id account_id332,8325
	my $query query333,8350
sub get_fm_customer_at_emc main::get_fm_customer_at_emc351,8683
  my $ret;ret352,8712
  my $account_id account_id353,8723
  my $query query354,8749

/emcsvn/billing/trunk/reporting/hiddendollarproject/report_missing_fm_subscriptions.pl,2066
my $fm_dbh;fm_dbh16,288
my $emc_dbh;emc_dbh17,300
my $aka_dbh;aka_dbh18,313
my $commit commit19,326
my $VAULT_SMART_SERVICE_NUM=VAULT_SMART_SERVICE_NUM21,343
my $SPAM_SMART_SERVICE_NUM=SPAM_SMART_SERVICE_NUM22,375
my $VIRUS_SMART_SERVICE_NUM=VIRUS_SMART_SERVICE_NUM23,405
my $accounts accounts61,1326
my $vault_akabean_customers vault_akabean_customers62,1375
my $virus_akabean_customers virus_akabean_customers63,1437
my $spam_akabean_customers spam_akabean_customers64,1499
my $fake_resellers fake_resellers67,1603
my @test_accounts test_accounts74,1690
my $account;account80,1835
my $missing_resellers missing_resellers83,1893
my $missing_group_admins missing_group_admins84,1921
	my $account_id account_id87,1983
	my $is_hybrid;is_hybrid88,2026
	my $target;target89,2042
	my $count count90,2055
	my $reseller_id reseller_id91,2098
my $fh;fh134,3055
my $csv_columns csv_columns135,3063
my $csv csv141,3248
	my $billing billing150,3615
	my $vault_count vault_count154,3746
	my $spam_count spam_count155,3791
	my $virus_count virus_count156,3834
	my $billing billing188,4671
	my $vault_count vault_count192,4802
	my $spam_count spam_count193,4847
	my $virus_count virus_count194,4890
sub get_all_group_admins_with_plan main::get_all_group_admins_with_plan228,5723
  my $ret ret229,5760
  my $query query230,5776
sub get_all_customers_with_vault main::get_all_customers_with_vault249,6186
  my $ret ret250,6221
  my $query query251,6237
sub get_all_customers_with_virus main::get_all_customers_with_virus276,6890
  my $ret ret277,6925
  my $query query278,6941
sub get_all_customers_with_spam main::get_all_customers_with_spam303,7594
  my $ret ret304,7628
  my $query query305,7644
sub get_total_users main::get_total_users330,8296
	my $ret;ret331,8318
	my $account_id account_id332,8328
	my $query query333,8353
sub get_fm_customer_at_emc main::get_fm_customer_at_emc351,8686
  my $ret;ret352,8715
  my $account_id account_id353,8726
  my $query query354,8752

/emcsvn/billing/trunk/reporting/hiddendollarproject/getSuspendedResellerwithActiveSubcus.pl,1426
my $host host12,84
my $username username13,112
my $password password14,138
my $dsn dsn15,166
my $dbh dbh16,225
my $billinghost billinghost18,282
my $billingusername billingusername19,320
my $billingpassword billingpassword20,353
my $billingdsn billingdsn21,388
my $billingdbh billingdbh22,456
my $akahost akahost24,541
my $akausername akausername25,571
my $akapassword akapassword26,600
my $akadsn akadsn27,631
my $akadbh akadbh28,696
my %varmapping varmapping32,774
my %deletedbilling deletedbilling34,852
my $sthsubCustomers sthsubCustomers72,1473
my $sthSubBilling sthSubBilling86,1723
my $sthFusemail sthFusemail97,1954
my $sthAKAServices sthAKAServices111,2194
my $sthAKADomain sthAKADomain125,2484
	my $isPrint isPrint140,2838
	my $active_in_Billing active_in_Billing141,2856
	my $active_in_Fusemail active_in_Fusemail142,2886
	my $active_in_EMC active_in_EMC143,2917
	my $active_with_Domain active_with_Domain144,2943
	my $biz_unit biz_unit145,2974
	my $cus_name_billing cus_name_billing147,2999
	my $cus_num_aka	cus_num_aka148,3072
	my $cus_num_fusemail	cus_num_fusemail149,3136
	my $var_num	var_num150,3204
	my $activeSubinBilling activeSubinBilling155,3348
	my $activeinFusemail activeinFusemail162,3538
		my $subSPSNum subSPSNum172,3776
		my $activeServicesInEMC activeServicesInEMC177,3875
		my $activeDomainInEMC activeDomainInEMC184,4065

/emcsvn/billing/trunk/reporting/hiddendollarproject/getMissingSubcusinBilling.pl,2093
my $host host9,79
my $username username10,107
my $password password11,133
my $dsn dsn12,161
my $dbh dbh13,220
my $billinghost billinghost15,277
my $billingusername billingusername16,315
my $billingpassword billingpassword17,348
my $billingdsn billingdsn18,383
my $billingdbh billingdbh19,451
my $akahost akahost21,536
my $akausername akausername22,566
my $akapassword akapassword23,595
my $akadsn akadsn24,626
my $akadbh akadbh25,691
my %varmapping varmapping29,769
my %akaresellers akaresellers31,847
my %fusemailresellers fusemailresellers54,1346
my $sthsubAKACustomers sthsubAKACustomers91,2129
my $sthsubFusemailCustomers sthsubFusemailCustomers109,2456
my $sthinBilling sthinBilling128,2785
my $sthFMResellertoBilling sthFMResellertoBilling139,2986
my $sthAKAResellertoBilling sthAKAResellertoBilling151,3256
my %sub_biz_unit sub_biz_unit160,3457
my %resellers;resellers162,3513
	my $akaResellerBillingID akaResellerBillingID169,3809
	my $akamissing_count akamissing_count171,3889
	my $cus_name cus_name173,3917
	my $org_num org_num174,3978
	my $cus_willresell cus_willresell175,4039
	my @missingakasubs;missingakasubs177,4107
		my $akamissing_count akamissing_count182,4243
		my $akasubnum akasubnum184,4272
		my $akasubname akasubname185,4310
		my $akafmaccountid akafmaccountid186,4349
		my $akacreatedby akacreatedby187,4392
		my $akacreatedon akacreatedon188,4433
		my $sub_biz_unit sub_biz_unit190,4475
		my $akaactiveinBilling akaactiveinBilling193,4582
	my $fmResellerBillingID fmResellerBillingID216,5541
	my $fmmissing_count fmmissing_count218,5619
	my $cus_name cus_name220,5647
	my $company_name company_name221,5718
	my $creation_time creation_time222,5794
	my $featureset_id featureset_id223,5870
	my @missingfmsubs;missingfmsubs225,5947
		my $fmaccountid fmaccountid230,6102
		my $fmsubname fmsubname231,6147
		my $fmcreatedon fmcreatedon232,6190
		my $fmstatus fmstatus233,6235
		my $sub_biz_unit sub_biz_unit235,6278
		my $fmactiveinBilling fmactiveinBilling238,6373

/emcsvn/billing/trunk/support/send_tech_notes.pl,0

/emcsvn/billing/trunk/scripts/post.pl,0

/emcsvn/billing/trunk/scripts/test_date.pl,0

/emcsvn/billing/trunk/scripts/check_eic_traffic.pl,0

/emcsvn/billing/trunk/scripts/config_read.pl,0

/emcsvn/billing/trunk/scripts/generate_mailbox_reports.pl,0

/emcsvn/billing/trunk/scripts/summarize_charges.pl,0

/emcsvn/billing/trunk/scripts/import_modem.pl,0

/emcsvn/billing/trunk/scripts/akabeans_resellers.pl,0

/emcsvn/billing/trunk/scripts/aka_usage.pl,0

/emcsvn/billing/trunk/scripts/misc_cleanup.pl,0

/emcsvn/billing/trunk/scripts/aka_cleanup.pl,0

/emcsvn/billing/trunk/scripts/report_revenue.pl,0

/emcsvn/billing/trunk/scripts/del_batch.pl,0

/emcsvn/billing/trunk/scripts/accpac_batch.pl,0

/emcsvn/billing/trunk/scripts/clean_verps.pl,0

/emcsvn/billing/trunk/scripts/traffic_log1.pl,0

/emcsvn/billing/trunk/scripts/aka_resellers.pl,0

/emcsvn/billing/trunk/scripts/predelete.pl,0

/emcsvn/billing/trunk/misc/sps2emc.pl,0
