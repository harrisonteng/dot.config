
UUX(1C)							  UUX(1C)

NAME
       uux - unix to unix command execution

SYNOPSIS
       uux [ - ] command-string

DESCRIPTION
       Uux will gather 0 or more files from various systems, exe-
       cute a command on a specified  system  and  send	 standard
       output to a file on a specified system.

       The  command-string  is	made  up of one or more arguments
       that look like a shell command line, except that the  com-
       mand  and  file	names may be prefixed by system-name!.	A
       null system-name is interpreted as the local system.

       File names may be one of

	      (1) a full pathname;

	      (2) a pathname preceded by ~xxx;	where  xxx  is	a
	      userid  on  the specified system and is replaced by
	      that user's login directory;

	      (3) anything else is prefixed by the current direc-
	      tory.

       The  `-'	 option	 will cause the standard input to the uux
       command to be the standard input to the command-string.

       For example, the command

	      uux  "!diff   usg!/usr/dan/f1   pwba!/a4/dan/f1	>
	      !fi.diff"

       will get the f1 files from the usg and pwba machines, exe-
       cute a diff command and put the results in f1.diff in  the
       local directory.

       Any special shell characters such as <>;| should be quoted
       either by quoting the entire  command-string,  or  quoting
       the special characters as individual arguments.

FILES
       /usr/uucp/spool - spool directory
       /usr/uucp/* - other data and programs

SEE ALSO
       uucp(1)
       D. A. Nowitz, Uucp implementation description

WARNING
       An  installation	 may,  and for security reasons generally
       will, limit the list of commands executable on  behalf  of

								1

UUX(1C)							  UUX(1C)

       an  incoming  request  from  uux.  Typically, a restricted
       site will permit little other than the receipt of mail via
       uux.

BUGS
       Only the first command of a shell pipeline may have a sys-
       tem-name!.  All other commands are executed on the  system
       of the first command.
       The  use of the shell metacharacter * will probably not do
       what you want it to do.
       The shell tokens << and >> are not implemented.
       There is no notification of denial  of  execution  on  the
       remote machine.

								2

