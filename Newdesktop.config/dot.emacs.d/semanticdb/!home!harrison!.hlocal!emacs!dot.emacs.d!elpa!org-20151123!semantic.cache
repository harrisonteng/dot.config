;; Object org-20151123/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "org-20151123/"
  :tables
  (list
    (semanticdb-table "org-autoloads.el"
      :major-mode 'emacs-lisp-mode
      :tags nil
      :file "org-autoloads.el"
      :pointmax 279
      :fsize 26447
      :lastmodtime '(22100 41727 899474 86000)
      :unmatched-syntax nil)
    (semanticdb-table "org-loaddefs.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("org-babel-execute-safely-maybe" function (:prototype-flag t) nil [1135 1221])
            ("org-babel-execute-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1223 1300])
            ("org-babel-view-src-block-info" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1302 1544])
            ("org-babel-expand-src-block-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1546 1755])
            ("org-babel-load-in-session-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1757 1975])
            ("org-babel-pop-to-session-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1977 2180])
            ("org-babel-execute-src-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [2182 2843])
            ("org-babel-expand-src-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [2845 3081])
            ("org-babel-check-src-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3083 3212])
            ("org-babel-insert-header-arg" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3214 3380])
            ("org-babel-load-in-session" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3382 3645])
            ("org-babel-initiate-session" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3647 3960])
            ("org-babel-switch-to-session" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3962 4242])
            ("org-babel-switch-to-session-with-code" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [4244 4382])
            ("org-babel-do-in-edit-buffer" function (:prototype-flag t) nil [4384 4597])
            ("org-babel-open-src-block-result" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [4599 4889])
            ("org-babel-map-src-blocks" function (:prototype-flag t) nil [4891 6055])
            ("org-babel-map-inline-src-blocks" function (:prototype-flag t) nil [6057 6283])
            ("org-babel-map-call-lines" function (:prototype-flag t) nil [6285 6494])
            ("org-babel-map-executables" function (:prototype-flag t) nil [6496 6603])
            ("org-babel-execute-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [6605 6802])
            ("org-babel-execute-subtree" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [6804 7004])
            ("org-babel-sha1-hash" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7006 7129])
            ("org-babel-hide-result-toggle-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7131 7242])
            ("org-babel-goto-src-block-head" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7244 7359])
            ("org-babel-goto-named-src-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7361 7468])
            ("org-babel-goto-named-result" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7470 7563])
            ("org-babel-next-src-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7565 7745])
            ("org-babel-previous-src-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7747 7936])
            ("org-babel-mark-block" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7938 8021])
            ("org-babel-describe-bindings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [8188 8310])
            ("org-babel-lob-execute-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [8497 8747])
            ("org-babel-lob-get-info" function (:prototype-flag t) nil [8749 8864])
            ("org-babel-tangle-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9048 9488])
            ("org-babel-tangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9490 10082])
            ("org-toggle-sticky-agenda" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10613 10721])
            ("org-agenda" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10723 12501])
            ("org-batch-agenda" function (:prototype-flag t) nil [12503 12953])
            ("org-batch-agenda-csv" function (:prototype-flag t) nil [12955 14749])
            ("org-store-agenda-views" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14751 14852])
            ("org-batch-store-agenda-views" function (:prototype-flag t) nil [14854 15011])
            ("org-agenda-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15013 15733])
            ("org-search-view" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15735 18057])
            ("org-todo-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18059 18439])
            ("org-tags-view" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18441 18655])
            ("org-agenda-list-stuck-projects" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18657 18961])
            ("org-diary" function (:prototype-flag t) nil [18963 20126])
            ("org-agenda-check-for-timestamp-as-reason-to-ignore-todo-item" function (:prototype-flag t) nil [20128 20321])
            ("org-agenda-set-restriction-lock" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20323 20679])
            ("org-calendar-goto-agenda" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20681 20889])
            ("org-agenda-to-appt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20891 22136])
            ("org-add-archive-files" function (:prototype-flag t) nil [22473 22674])
            ("org-archive-subtree" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22676 23484])
            ("org-archive-to-archive-sibling" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23486 23836])
            ("org-toggle-archive-tag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23838 24100])
            ("org-archive-subtree-default" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24102 24295])
            ("org-archive-subtree-default-with-confirmation" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24297 24508])
            ("org-attach" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24659 24826])
            ("org-bbdb-anniversaries" function (:prototype-flag t) nil [24991 25114])
            ("org-capture-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25321 25455])
            ("org-capture" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25457 26673])
            ("org-capture-import-remember-templates" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26675 26826])
            ("org-resolve-clocks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26965 27223])
            ("org-clock-in" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27225 27945])
            ("org-clock-in-last" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27947 28448])
            ("org-clock-out" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28450 28799])
            ("org-clock-cancel" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28801 28916])
            ("org-clock-goto" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28918 29133])
            ("org-clock-sum" function (:prototype-flag t) nil [29135 29696])
            ("org-clock-display" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [29698 30122])
            ("org-clock-remove-overlays" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [30124 30387])
            ("org-clock-get-clocktable" function (:prototype-flag t) nil [30389 30625])
            ("org-clock-report" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [30627 31078])
            ("org-clocktable-shift" function (:prototype-flag t) nil [31080 31570])
            ("org-dblock-write:clocktable" function (:prototype-flag t) nil [31572 31680])
            ("org-clock-update-time-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31682 31822])
            ("org-columns-remove-overlays" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32167 32282])
            ("org-columns-get-format-and-top-level" function (:prototype-flag t) nil [32284 32380])
            ("org-columns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32382 32571])
            ("org-columns-compute" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32573 32719])
            ("org-columns-number-to-string" function (:prototype-flag t) nil [32721 32887])
            ("org-dblock-write:columnview" function (:prototype-flag t) nil [32889 33927])
            ("org-insert-columns-dblock" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [33929 34051])
            ("org-agenda-columns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34053 34159])
            ("org-check-version" function (:prototype-flag t) nil [34304 34426])
            ("org-datetree-find-date-create" function (:prototype-flag t) nil [34610 34900])
            ("org-element-update-syntax" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35203 35296])
            ("org-element-interpret-data" function (:prototype-flag t) nil [35298 35516])
            ("org-element-cache-reset" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35518 35700])
            ("org-element-cache-refresh" function (:prototype-flag t) nil [35702 35807])
            ("org-element-at-point" function (:prototype-flag t) nil [35809 36599])
            ("org-element-context" function (:prototype-flag t) nil [36601 37359])
            ("org-feed-update-all" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [37580 37691])
            ("org-feed-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [37693 37932])
            ("org-feed-goto-inbox" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [37934 38049])
            ("org-feed-show-raw-feed" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [38051 38154])
            ("org-footnote-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [38351 38805])
            ("org-footnote-normalize" function (:prototype-flag t) nil [38807 39151])
            ("org-id-get-create" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [39517 39748])
            ("org-id-copy" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [39750 39878])
            ("org-id-get" function (:prototype-flag t) nil [39880 40286])
            ("org-id-get-with-outline-path-completion" function (:prototype-flag t) nil [40288 40667])
            ("org-id-get-with-outline-drilling" function (:prototype-flag t) nil [40669 40963])
            ("org-id-goto" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [40965 41117])
            ("org-id-find" function (:prototype-flag t) nil [41119 41407])
            ("org-id-new" function (:prototype-flag t) nil [41409 41879])
            ("org-id-update-id-locations" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [41881 42286])
            ("org-id-find-id-file" function (:prototype-flag t) nil [42288 42414])
            ("org-id-store-link" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42416 42520])
            ("org-indent-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42684 43085])
            ("org-irc-store-link" function (:prototype-flag t) nil [43235 43366])
            ("org-load-noerror-mustsuffix" function (:prototype-flag t) nil [43515 43727])
            ("org-mobile-push" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43907 44162])
            ("org-mobile-pull" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [44164 44398])
            ("org-plot/gnuplot" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [44549 44786])
            ("org-table-create-with-table.el" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [46458 46669])
            ("org-table-create-or-convert-from-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [46671 47103])
            ("org-table-create" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [47105 47281])
            ("org-table-convert-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [47283 48221])
            ("org-table-import" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48223 48523])
            ("org-table-export" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48525 49255])
            ("org-table-align" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49257 49369])
            ("org-table-begin" function (:prototype-flag t) nil [49371 49643])
            ("org-table-end" function (:prototype-flag t) nil [49645 49903])
            ("org-table-justify-field-maybe" function (:prototype-flag t) nil [49905 50126])
            ("org-table-next-field" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50128 50312])
            ("org-table-previous-field" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50314 50468])
            ("org-table-next-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50470 50634])
            ("org-table-copy-down" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50636 51449])
            ("org-table-blank-field" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51451 51561])
            ("org-table-field-info" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51563 51701])
            ("org-table-current-dline" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51703 51840])
            ("org-table-goto-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51842 52216])
            ("org-table-insert-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52218 52318])
            ("org-table-delete-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52320 52416])
            ("org-table-move-column-right" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52418 52512])
            ("org-table-move-column-left" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52514 52606])
            ("org-table-move-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52608 52757])
            ("org-table-move-row-down" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52759 52844])
            ("org-table-move-row-up" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52846 52927])
            ("org-table-move-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52929 53061])
            ("org-table-insert-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53063 53242])
            ("org-table-insert-hline" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53244 53437])
            ("org-table-hline-and-move" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53439 53578])
            ("org-table-kill-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53580 53697])
            ("org-table-sort-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53699 55252])
            ("org-table-cut-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [55254 55451])
            ("org-table-copy-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [55453 55673])
            ("org-table-paste-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [55675 56014])
            ("org-table-convert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [56016 56626])
            ("org-table-wrap-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [56628 57881])
            ("org-table-edit-field" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [57883 58166])
            ("org-table-sum" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [58168 58851])
            ("org-table-get-stored-formulas" function (:prototype-flag t) nil [58853 59014])
            ("org-table-maybe-eval-formula" function (:prototype-flag t) nil [59016 59183])
            ("org-table-rotate-recalc-marks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [59185 59621])
            ("org-table-analyze" function (:prototype-flag t) nil [59623 60054])
            ("org-table-maybe-recalculate-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [60056 60206])
            ("org-table-eval-formula" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [60208 62230])
            ("org-table-recalculate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [62232 62825])
            ("org-table-iterate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [62827 63053])
            ("org-table-recalculate-buffer-tables" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63055 63177])
            ("org-table-iterate-buffer-tables" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63179 63323])
            ("org-table-edit-formulas" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63325 63450])
            ("org-table-toggle-coordinate-overlays" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63452 63581])
            ("org-table-toggle-formula-debugger" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63583 63696])
            ("orgtbl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63698 63832])
            ("orgtbl-exp-regexp" variable (:default-value "^\\([-+]?[0-9][0-9.]*\\)[eE]\\([-+]?[0-9]+\\)$") nil [63834 63975])
            ("org-table-to-lisp" function (:prototype-flag t) nil [63977 64312])
            ("orgtbl-to-generic" function (:prototype-flag t) nil [64314 67257])
            ("orgtbl-to-tsv" function (:prototype-flag t) nil [67259 67385])
            ("orgtbl-to-csv" function (:prototype-flag t) nil [67387 67577])
            ("orgtbl-to-latex" function (:prototype-flag t) nil [67579 68238])
            ("orgtbl-to-html" function (:prototype-flag t) nil [68240 68738])
            ("orgtbl-to-texinfo" function (:prototype-flag t) nil [68740 69278])
            ("orgtbl-to-orgtbl" function (:prototype-flag t) nil [69280 69856])
            ("orgtbl-ascii-plot" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [69858 70244])
            ("org-timer-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [70483 71071])
            ("org-timer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [71073 71640])
            ("org-timer-change-times-in-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [71642 71775])
            ("org-timer-item" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [71777 71907])
            ("org-timer-set-timer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [71909 72747])
            ("org-release" function (:prototype-flag t) nil [72905 73055])
            ("org-git-version" function (:prototype-flag t) nil [73057 73207])
            ("org-odt-data-dir" variable (:default-value "/usr/share/emacs/etc/org") nil [73209 73293])
            ("org-babel-do-load-languages" function (:prototype-flag t) nil [73831 73963])
            ("org-babel-load-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [73965 74330])
            ("org-version" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [74332 74647])
            ("turn-on-orgtbl" function (:prototype-flag t) nil [74649 74739])
            ("org-clock-persistence-insinuate" function (:prototype-flag t) nil [74741 74845])
            ("org-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [74847 75726])
            ("org-cycle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [75728 78092])
            ("org-global-cycle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [78094 78348])
            ("put" code nil nil [78349 78417])
            ("orgstruct-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [78419 78731])
            ("turn-on-orgstruct" function (:prototype-flag t) nil [78733 78829])
            ("turn-on-orgstruct++" function (:prototype-flag t) nil [78831 78931])
            ("org-run-like-in-org-mode" function (:prototype-flag t) nil [78933 79214])
            ("org-store-link" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [79216 79784])
            ("org-insert-link-global" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [79786 79953])
            ("org-open-at-point-global" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [79955 80130])
            ("org-open-link-from-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [80132 80280])
            ("org-switchb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [80282 80613])
            ("defalias" code nil nil [80615 80655])
            ("defalias" code nil nil [80657 80694])
            ("org-cycle-agenda-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [80696 80936])
            ("org-submit-bug-report" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [80938 81295])
            ("org-reload" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [81297 81448])
            ("org-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [81450 81548])
            ("org-export-as" function (:prototype-flag t) nil [81666 82607])
            ("org-export-string-as" function (:prototype-flag t) nil [82609 83176])
            ("org-export-replace-region-by" function (:prototype-flag t) nil [83178 83439])
            ("org-export-insert-default-template" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [83441 83952])
            ("org-export-to-buffer" function (:prototype-flag t) nil [83954 85330])
            ("put" code nil nil [85332 85384])
            ("org-export-to-file" function (:prototype-flag t) nil [85386 86724])
            ("put" code nil nil [86726 86776])
            ("org-export-dispatch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [86778 87545])
            ("org-ascii-export-as-ascii" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [87681 88740])
            ("org-ascii-export-to-ascii" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [88742 89684])
            ("org-ascii-publish-to-ascii" function (:prototype-flag t) nil [89686 89981])
            ("org-ascii-publish-to-latin1" function (:prototype-flag t) nil [89983 90281])
            ("org-ascii-publish-to-utf8" function (:prototype-flag t) nil [90283 90577])
            ("org-beamer-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [90917 91039])
            ("org-beamer-export-as-latex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [91041 92129])
            ("org-beamer-export-to-latex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [92131 93115])
            ("org-beamer-export-to-pdf" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [93117 94096])
            ("org-beamer-select-environment" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [94098 94495])
            ("org-beamer-publish-to-latex" function (:prototype-flag t) nil [94497 94818])
            ("org-beamer-publish-to-pdf" function (:prototype-flag t) nil [94820 95148])
            ("put" code nil nil [95430 95503])
            ("put" code nil nil [95505 95555])
            ("put" code nil nil [95557 95613])
            ("org-html-htmlize-generate-css" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [95615 96227])
            ("org-html-export-as-html" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [96229 97295])
            ("org-html-convert-region-to-html" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [97297 97588])
            ("org-html-export-to-html" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [97590 98539])
            ("org-html-publish-to-html" function (:prototype-flag t) nil [98541 98832])
            ("org-icalendar-export-to-ics" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [99091 99903])
            ("org-icalendar-export-agenda-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [99905 100122])
            ("org-icalendar-combine-agenda-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [100124 100522])
            ("org-latex-export-as-latex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [100834 101918])
            ("org-latex-convert-region-to-latex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [101920 102216])
            ("org-latex-export-to-latex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [102218 103157])
            ("org-latex-export-to-pdf" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [103159 104142])
            ("org-latex-publish-to-latex" function (:prototype-flag t) nil [104144 104439])
            ("org-latex-publish-to-pdf" function (:prototype-flag t) nil [104441 104744])
            ("org-md-export-as-markdown" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [104986 105783])
            ("org-md-convert-region-to-md" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [105785 106077])
            ("org-md-export-to-markdown" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [106079 106762])
            ("org-md-publish-to-md" function (:prototype-flag t) nil [106764 107053])
            ("put" code nil nil [107280 107348])
            ("org-odt-export-as-odf" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [107350 107820])
            ("org-odt-export-as-odf-and-open" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [107822 108043])
            ("org-odt-export-to-odt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [108045 108877])
            ("org-odt-convert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [108879 109309])
            ("org-org-export-as-org" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [109512 110553])
            ("org-org-export-to-org" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [110555 111479])
            ("org-org-publish-to-org" function (:prototype-flag t) nil [111481 111768])
            ("defalias" code nil nil [112005 112049])
            ("org-publish" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [112051 112444])
            ("org-publish-all" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [112446 112755])
            ("org-publish-current-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [112757 113025])
            ("org-publish-current-project" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [113027 113242])
            ("org-texinfo-publish-to-texinfo" function (:prototype-flag t) nil [113459 113762])
            ("org-texinfo-convert-region-to-texinfo" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [113764 114070])
            ("org-export-as" function (:prototype-flag t) nil [114361 115302])
            ("org-export-string-as" function (:prototype-flag t) nil [115304 115871])
            ("org-export-replace-region-by" function (:prototype-flag t) nil [115873 116134])
            ("org-export-insert-default-template" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [116136 116647])
            ("org-export-to-buffer" function (:prototype-flag t) nil [116649 118025])
            ("org-export-to-file" function (:prototype-flag t) nil [118027 119365])
            ("org-export-dispatch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [119367 120134])
            ("org-loaddefs" package nil nil [120145 120168]))          
      :file "org-loaddefs.el"
      :pointmax 120320
      :fsize 120319
      :lastmodtime '(22100 41727 935474 86000)
      :unmatched-syntax nil)
    (semanticdb-table "org.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("org-inhibit-highlight-removal" variable nil nil [2800 2842])
            ("org-table-formula-constants-local" variable nil nil [2870 2968])
            ("make-variable-buffer-local" code nil nil [2969 3032])
            ("gnus-sum" include nil nil [3100 3119])
            ("cl" include nil nil [3084 3097])
            ("calendar" include nil nil [3122 3141])
            ("find-func" include nil nil [3142 3162])
            ("format-spec" include nil nil [3163 3185])
            ("or" code nil nil [3187 3585])
            ("org-macs" include nil nil [3587 3606])
            ("org-compat" include nil nil [3607 3628])
            ("org-outline-regexp" variable (:default-value "\\*+ ") nil [4003 4073])
            ("org-outline-regexp-bol" variable (:default-value "^\\*+ ") nil [4075 4260])
            ("org-heading-regexp" variable (:default-value "^\\(\\*+\\)\\(?: +\\(.*?\\)\\)?[ 	]*$") nil [4262 4448])
            ("unless" code nil nil [4529 4682])
            ("unless" code nil nil [4683 4826])
            ("unless" code nil nil [4827 4924])
            ("declare-function" code nil nil [4926 4997])
            ("declare-function" code nil nil [4998 5060])
            ("declare-function" code nil nil [5061 5136])
            ("declare-function" code nil nil [5137 5215])
            ("declare-function" code nil nil [5216 5279])
            ("declare-function" code nil nil [5280 5349])
            ("declare-function" code nil nil [5350 5436])
            ("declare-function" code nil nil [5437 5486])
            ("declare-function" code nil nil [5487 5554])
            ("declare-function" code nil nil [5555 5648])
            ("declare-function" code nil nil [5649 5734])
            ("declare-function" code nil nil [5735 5828])
            ("declare-function" code nil nil [5829 5905])
            ("declare-function" code nil nil [5906 5976])
            ("declare-function" code nil nil [5977 6045])
            ("declare-function" code nil nil [6046 6107])
            ("declare-function" code nil nil [6108 6167])
            ("declare-function" code nil nil [6168 6224])
            ("declare-function" code nil nil [6225 6289])
            ("declare-function" code nil nil [6290 6362])
            ("declare-function" code nil nil [6363 6426])
            ("declare-function" code nil nil [6427 6499])
            ("declare-function" code nil nil [6500 6557])
            ("declare-function" code nil nil [6558 6641])
            ("declare-function" code nil nil [6642 6727])
            ("declare-function" code nil nil [6728 6797])
            ("declare-function" code nil nil [6798 6892])
            ("declare-function" code nil nil [6893 6965])
            ("declare-function" code nil nil [6966 7048])
            ("declare-function" code nil nil [7049 7118])
            ("declare-function" code nil nil [7119 7178])
            ("declare-function" code nil nil [7179 7240])
            ("declare-function" code nil nil [7241 7293])
            ("declare-function" code nil nil [7294 7357])
            ("declare-function" code nil nil [7358 7421])
            ("declare-function" code nil nil [7422 7490])
            ("declare-function" code nil nil [7491 7562])
            ("declare-function" code nil nil [7563 7628])
            ("declare-function" code nil nil [7629 7732])
            ("declare-function" code nil nil [7733 7782])
            ("declare-function" code nil nil [7783 7852])
            ("declare-function" code nil nil [7853 7926])
            ("declare-function" code nil nil [7927 7982])
            ("declare-function" code nil nil [7983 8058])
            ("declare-function" code nil nil [8059 8116])
            ("declare-function" code nil nil [8117 8184])
            ("declare-function" code nil nil [8185 8252])
            ("declare-function" code nil nil [8253 8320])
            ("declare-function" code nil nil [8321 8397])
            ("declare-function" code nil nil [8398 8460])
            ("declare-function" code nil nil [8461 8527])
            ("declare-function" code nil nil [8528 8580])
            ("declare-function" code nil nil [8581 8640])
            ("declare-function" code nil nil [8641 8699])
            ("declare-function" code nil nil [8700 8773])
            ("declare-function" code nil nil [8774 8838])
            ("declare-function" code nil nil [8839 8897])
            ("org-uniquify" function (:arguments ("list")) nil [8899 9043])
            ("org-get-at-bol" function (:arguments ("property")) nil [9045 9184])
            ("org-trim" function (:arguments ("s")) nil [9186 9375])
            ("org-babel-load-languages" variable nil nil [9440 9473])
            ("org-babel-do-load-languages" function (:arguments ("sym" "value")) nil [9490 9974])
            ("declare-function" code nil nil [9976 10062])
            ("org-babel-load-file" function
               (:user-visible-flag t
                :arguments ("file" "compile"))
                nil [10078 11294])
            ("org-babel-load-languages" variable (:default-value (quote ((emacs-lisp . t)))) nil [11296 13420])
            ("org-clone-delete-id" variable nil nil [13451 13719])
            ("org-check-version" code nil nil [13733 13752])
            ("org-version" function
               (:user-visible-flag t
                :arguments ("here" "full" "message"))
                nil [13769 15061])
            ("org-version" variable
               (:constant-flag t
                :default-value (org-version))
                nil [15063 15099])
            ("org-block-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+begin_?\\([^ 
]+\\)\\(\\([^
]+\\)\\)?
\\([^ ]+?\\)#\\+end_?\\1[ 	]*$")
                nil [15137 15297])
            ("org-dblock-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+\\(?:BEGIN\\|begin\\):[ 	]+\\(\\S-+\\)\\([ 	]+\\(.*\\)\\)?")
                nil [15299 15469])
            ("org-dblock-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+\\(?:END\\|end\\)\\([: 	
]\\|$\\)")
                nil [15471 15590])
            ("org-clock-string" variable
               (:constant-flag t
                :default-value "CLOCK:")
                nil [15617 15726])
            ("org-closed-string" variable (:default-value "CLOSED:") nil [15728 15839])
            ("org-deadline-string" variable (:default-value "DEADLINE:") nil [15841 16087])
            ("org-scheduled-string" variable (:default-value "SCHEDULED:") nil [16089 16343])
            ("org-ds-keyword-length" variable
               (:constant-flag t
                :default-value (+ 2 (apply (function max) (mapcar (function length) (list org-deadline-string org-scheduled-string org-clock-string org-closed-string)))))
                nil [16345 16580])
            ("org-planning-line-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*" (regexp-opt (list org-closed-string org-deadline-string org-scheduled-string) t)))
                nil [16582 16796])
            ("org-clock-line-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*" org-clock-string))
                nil [16798 16900])
            ("org-deadline-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-deadline-string))
                nil [16902 17001])
            ("org-deadline-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-deadline-string " *<\\([^>]+\\)>"))
                nil [17003 17154])
            ("org-deadline-time-hour-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-deadline-string " *<\\([^>]+[0-9]\\{1,2\\}:[0-9]\\{2\\}[0-9-+:hdwmy 	.]*\\)>"))
                nil [17156 17369])
            ("org-deadline-line-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<\\(" org-deadline-string "\\).*"))
                nil [17371 17513])
            ("org-scheduled-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-scheduled-string))
                nil [17515 17617])
            ("org-scheduled-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-scheduled-string " *<\\([^>]+\\)>"))
                nil [17619 17773])
            ("org-scheduled-time-hour-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-scheduled-string " *<\\([^>]+[0-9]\\{1,2\\}:[0-9]\\{2\\}[0-9-+:hdwmy 	.]*\\)>"))
                nil [17775 17991])
            ("org-closed-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" org-closed-string " *\\[\\([^]]+\\)\\]"))
                nil [17993 18142])
            ("org-keyword-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" (regexp-opt (list org-scheduled-string org-deadline-string org-closed-string org-clock-string) t) " *[[<]\\([^]>]+\\)[]>]"))
                nil [18144 18400])
            ("org-keyword-time-not-clock-regexp" variable
               (:constant-flag t
                :default-value (concat "\\<" (regexp-opt (list org-scheduled-string org-deadline-string org-closed-string) t) " *[[<]\\([^]>]+\\)[]>]"))
                nil [18402 18647])
            ("org-maybe-keyword-time-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<" (regexp-opt (list org-scheduled-string org-deadline-string org-closed-string org-clock-string) t) "\\)?" " *\\([[<][0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]
>]*?[]>]" "\\|" "<%%([^
>]*>\\)"))
                nil [18649 18990])
            ("org-all-time-keywords" variable
               (:constant-flag t
                :default-value (mapcar (lambda (w) (substring w 0 -1)) (list org-scheduled-string org-deadline-string org-clock-string org-closed-string)))
                nil [18992 19182])
            ("org-drawer-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*:\\(\\(?:\\w\\|[-_]\\)+\\):[ 	]*$")
                nil [19197 19362])
            ("org-property-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:PROPERTIES:[ 	]*$")
                nil [19364 19494])
            ("org-property-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:END:[ 	]*$")
                nil [19496 19616])
            ("org-clock-drawer-start-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:CLOCK:[ 	]*$")
                nil [19618 19744])
            ("org-clock-drawer-end-re" variable
               (:constant-flag t
                :default-value "^[ 	]*:END:[ 	]*$")
                nil [19746 19867])
            ("org-property-drawer-re" variable
               (:constant-flag t
                :default-value (concat "^[ 	]*:PROPERTIES:[ 	]*
" "\\(?:[ 	]*:\\S-+:\\(?: .*\\)?[ 	]*
\\)*?" "[ 	]*:END:[ 	]*$"))
                nil [19869 20055])
            ("org-clock-drawer-re" variable
               (:constant-flag t
                :default-value (concat "\\(" org-clock-drawer-start-re "\\)[^ ]*?\\(" org-clock-drawer-end-re "\\)
?"))
                nil [20057 20220])
            ("org-heading-keyword-regexp-format" variable
               (:constant-flag t
                :default-value "^\\(\\*+\\)\\(?: +%s\\)\\(?: +\\(.*?\\)\\)?[ 	]*$")
                nil [20237 20587])
            ("org-heading-keyword-maybe-regexp-format" variable
               (:constant-flag t
                :default-value "^\\(\\*+\\)\\(?: +%s\\)?\\(?: +\\(.*?\\)\\)?[ 	]*$")
                nil [20589 20936])
            ("org-archive-tag" variable
               (:constant-flag t
                :default-value "ARCHIVE")
                nil [20938 21129])
            ("org-comment-string" variable
               (:constant-flag t
                :default-value "COMMENT")
                nil [21131 21313])
            ("org-latex-regexps" variable
               (:constant-flag t
                :default-value (quote (("begin" "^[ 	]*\\(\\\\begin{\\([a-zA-Z0-9\\*]+\\)[^ ]+?\\\\end{\\2}\\)" 1 t) ("$1" "\\([^$]\\|^\\)\\(\\$[^ 	
,;.$]\\$\\)\\(\\s.\\|\\s-\\|\\s(\\|\\s)\\|\\s\"\\| \\|$\\)" 2 nil) ("$" "\\([^$]\\|^\\)\\(\\(\\$\\([^ 	
,;.$][^$
]*?\\(
[^$
]*?\\)\\{0,2\\}[^ 	
,.$]\\)\\$\\)\\)\\(\\s.\\|\\s-\\|\\s(\\|\\s)\\|\\s\"\\| \\|$\\)" 2 nil) ("\\(" "\\\\([^ ]*?\\\\)" 0 nil) ("\\[" "\\\\\\[[^ ]*?\\\\\\]" 0 nil) ("$$" "\\$\\$[^ ]*?\\$\\$" 0 nil))))
                nil [21355 22141])
            ("org-effort-property" variable
               (:constant-flag t
                :default-value "Effort")
                nil [22163 22343])
            ("org-table-any-line-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*\\(|\\|\\+-[-+]\\)")
                nil [22357 22465])
            ("org-table-line-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|")
                nil [22467 22545])
            ("org-table-dataline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|[^-]")
                nil [22547 22633])
            ("org-table-hline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*|-")
                nil [22635 22716])
            ("org-table1-hline-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*\\+-[-+]")
                nil [22718 22807])
            ("org-table-any-border-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*[^|+ 	]")
                nil [22809 22971])
            ("org-TBLFM-regexp" variable
               (:constant-flag t
                :default-value "^[ 	]*#\\+TBLFM: ")
                nil [22973 23048])
            ("org-ts-regexp" variable
               (:constant-flag t
                :default-value "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^
>]*?\\)>")
                nil [23066 23204])
            ("org-ts-regexp-inactive" variable
               (:constant-flag t
                :default-value "\\[\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^
>]*?\\)\\]")
                nil [23206 23368])
            ("org-ts-regexp-both" variable
               (:constant-flag t
                :default-value "[[<]\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} ?[^]
>]*?\\)[]>]")
                nil [23370 23520])
            ("org-ts-regexp0" variable
               (:constant-flag t
                :default-value "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\)\\( +[^]+0-9>
 -]+\\)?\\( +\\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)")
                nil [23522 23872])
            ("org-ts-regexp1" variable
               (:constant-flag t
                :default-value "\\(\\([0-9]\\{4\\}\\)-\\([0-9]\\{2\\}\\)-\\([0-9]\\{2\\}\\) *\\([^]+0-9>
 -]*\\)\\( \\([0-9]\\{1,2\\}\\):\\([0-9]\\{2\\}\\)\\)?\\)")
                nil [23874 24094])
            ("org-ts-regexp2" variable
               (:constant-flag t
                :default-value (concat "<" org-ts-regexp1 "[^>
]\\{0,16\\}>"))
                nil [24096 24227])
            ("org-ts-regexp3" variable
               (:constant-flag t
                :default-value (concat "[[<]" org-ts-regexp1 "[^]>
]\\{0,16\\}[]>]"))
                nil [24229 24379])
            ("org-tr-regexp" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp "--?-?" org-ts-regexp))
                nil [24381 24502])
            ("org-tr-regexp-both" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp-both "--?-?" org-ts-regexp-both))
                nil [24504 24642])
            ("org-tsr-regexp" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp "\\(--?-?" org-ts-regexp "\\)?"))
                nil [24644 24795])
            ("org-tsr-regexp-both" variable
               (:constant-flag t
                :default-value (concat org-ts-regexp-both "\\(--?-?" org-ts-regexp-both "\\)?"))
                nil [24797 25013])
            ("org-repeat-re" variable
               (:constant-flag t
                :default-value "<[0-9]\\{4\\}-[0-9][0-9]-[0-9][0-9] [^>
]*?\\([.+]?\\+[0-9]+[hdwmy]\\(/[0-9]+[hdwmy]\\)?\\)")
                nil [25015 25246])
            ("org-time-stamp-formats" variable
               (:constant-flag t
                :default-value (quote ("<%Y-%m-%d %a>" . "<%Y-%m-%d %a %H:%M>")))
                nil [25248 25393])
            ("org" customgroup (:user-visible-flag t) nil [25423 25542])
            ("org-mode-hook" variable nil nil [25544 25663])
            ("org-load-hook" variable nil nil [25665 25773])
            ("org-log-buffer-setup-hook" variable nil nil [25775 25919])
            ("org-modules" variable nil nil [25921 25941])
            ("org-modules-loaded" variable nil nil [25959 26032])
            ("org-load-modules-maybe" function (:arguments ("force")) nil [26034 26363])
            ("org-set-modules" function (:arguments ("var" "value")) nil [26365 26590])
            ("org-modules" variable (:default-value (quote (org-w3m org-bbdb org-bibtex org-docview org-gnus org-info org-irc org-mhe org-rmail))) nil [26592 32118])
            ("org-export-registered-backends" variable nil nil [32120 32159])
            ("declare-function" code nil nil [32174 32251])
            ("declare-function" code nil nil [32252 32309])
            ("org-export-backends" variable (:default-value (quote (ascii html icalendar latex))) nil [32310 36548])
            ("eval-after-load" code nil nil [36550 36782])
            ("org-support-shift-select" variable nil nil [36784 39019])
            ("org-loop-over-headlines-in-active-region" variable nil nil [39021 40110])
            ("org-startup" customgroup (:user-visible-flag t) nil [40112 40217])
            ("org-startup-folded" variable (:default-value t) nil [40219 41012])
            ("org-startup-truncated" variable (:default-value t) nil [41014 41277])
            ("org-startup-indented" variable nil nil [41279 41655])
            ("org-use-sub-superscripts" variable (:default-value t) nil [41657 43089])
            ("org-startup-with-beamer-mode" variable nil nil [43091 43379])
            ("org-startup-align-all-tables" variable nil nil [43381 43825])
            ("org-startup-with-inline-images" variable nil nil [43827 44161])
            ("org-startup-with-latex-preview" variable nil nil [44163 44537])
            ("org-insert-mode-line-in-empty-file" variable nil nil [44539 45007])
            ("org-replace-disputed-keys" variable nil nil [45009 45735])
            ("org-use-extra-keys" variable nil nil [45737 46257])
            ("org-defvaralias" code nil nil [46259 46323])
            ("org-disputed-keys" variable (:default-value (quote (([(shift up)] . [(meta p)]) ([(shift down)] . [(meta n)]) ([(shift left)] . [(meta -)]) ([(shift right)] . [(meta +)]) ([(control shift right)] . [(meta shift +)]) ([(control shift left)] . [(meta shift -)])))) nil [46325 47011])
            ("org-key" function (:arguments ("key")) nil [47013 47546])
            ("org-find-if" function (:arguments ("predicate" "seq")) nil [47548 47694])
            ("org-defkey" function (:arguments ("keymap" "key" "def")) nil [47696 47836])
            ("org-ellipsis" variable nil nil [47838 48371])
            ("org-display-table" variable nil nil [48373 48474])
            ("org-keywords" customgroup (:user-visible-flag t) nil [48476 48565])
            ("org-closed-keep-when-no-todo" variable nil nil [48567 48793])
            ("org-structure" customgroup (:user-visible-flag t) nil [48795 48924])
            ("org-reveal-location" customgroup (:user-visible-flag t) nil [48926 49074])
            ("org-show-context-detail" variable (:default-value (quote ((isearch . lineage) (bookmark-jump . lineage) (default . ancestors)))) nil [49076 51899])
            ("org-indirect-buffer-display" variable (:default-value (quote other-window)) nil [51901 52797])
            ("org-use-speed-commands" variable nil nil [52799 53387])
            ("org-speed-commands-user" variable nil nil [53389 54350])
            ("org-bookmark-names-plist" variable (:default-value (quote (:last-capture "org-capture-last-stored" :last-refile "org-refile-last-stored" :last-capture-marker "org-capture-last-stored-marker"))) nil [54352 54910])
            ("org-cycle" customgroup (:user-visible-flag t) nil [54912 55034])
            ("org-cycle-skip-children-state-if-no-children" variable (:default-value t) nil [55036 55201])
            ("org-cycle-max-level" variable nil nil [55203 55859])
            ("org-hide-block-startup" variable nil nil [55861 56110])
            ("org-cycle-global-at-bob" variable nil nil [56112 56702])
            ("org-cycle-level-after-item/entry-creation" variable (:default-value t) nil [56704 57423])
            ("org-cycle-emulate-tab" variable (:default-value t) nil [57425 58131])
            ("org-cycle-separator-lines" variable (:default-value 2) nil [58133 58895])
            ("put" code nil nil [58896 58959])
            ("org-pre-cycle-hook" variable nil nil [58961 59430])
            ("org-cycle-hook" variable (:default-value (quote (org-cycle-hide-archived-subtrees org-cycle-hide-drawers org-cycle-show-empty-lines org-optimize-window-after-visibility-change))) nil [59432 60113])
            ("org-edit-structure" customgroup (:user-visible-flag t) nil [60115 60254])
            ("org-odd-levels-only" variable nil nil [60256 60850])
            ("org-adapt-indentation" variable (:default-value t) nil [60852 61934])
            ("org-special-ctrl-a/e" variable nil nil [61936 63556])
            ("org-defvaralias" code nil nil [63557 63616])
            ("org-special-ctrl-k" variable nil nil [63618 64137])
            ("org-ctrl-k-protect-subtree" variable nil nil [64139 64752])
            ("org-special-ctrl-o" variable (:default-value t) nil [64754 64886])
            ("org-catch-invisible-edits" variable nil nil [64888 66053])
            ("org-yank-folded-subtrees" variable (:default-value t) nil [66055 66477])
            ("org-yank-adjusted-subtrees" variable nil nil [66479 66727])
            ("org-M-RET-may-split-line" variable (:default-value (quote ((default . t)))) nil [66729 67504])
            ("org-insert-heading-respect-content" variable nil nil [67507 67888])
            ("org-blank-before-new-entry" variable (:default-value (quote ((heading . auto) (plain-list-item . auto)))) nil [67890 68787])
            ("org-insert-heading-hook" variable nil nil [68789 68921])
            ("org-enable-fixed-width-editor" variable (:default-value t) nil [68923 69197])
            ("org-goto-auto-isearch" variable (:default-value t) nil [69199 69651])
            ("org-sparse-trees" customgroup (:user-visible-flag t) nil [69653 69783])
            ("org-highlight-sparse-tree-matches" variable (:default-value t) nil [69785 70043])
            ("org-remove-highlights-with-change" variable (:default-value t) nil [70045 70514])
            ("org-occur-hook" variable (:default-value (quote (org-first-headline-recenter))) nil [70517 70771])
            ("org-imenu-and-speedbar" customgroup (:user-visible-flag t) nil [70773 70921])
            ("org-imenu-depth" variable (:default-value 2) nil [70923 71103])
            ("org-table" customgroup (:user-visible-flag t) nil [71105 71205])
            ("org-enable-table-editor" variable (:default-value (quote optimized)) nil [71207 72688])
            ("org-self-insert-cluster-for-undo" variable (:default-value (or (featurep (quote xemacs)) (version<= emacs-version "24.1"))) nil [72690 73084])
            ("org-table-tab-recognizes-table.el" variable (:default-value t) nil [73086 73346])
            ("org-link" customgroup (:user-visible-flag t) nil [73348 73445])
            ("org-link-abbrev-alist-local" variable nil nil [73447 73601])
            ("make-variable-buffer-local" code nil nil [73602 73659])
            ("org-link-abbrev-alist" variable nil nil [73661 74882])
            ("org-descriptive-links" variable (:default-value t) nil [74884 75338])
            ("org-link-file-path-type" variable (:default-value (quote adaptive)) nil [75340 75965])
            ("defvaralias" code nil nil [75967 76021])
            ("org-highlight-links" variable (:default-value (quote (bracket angle plain radio tag date footnote))) nil [76022 77430])
            ("org-make-link-description-function" variable nil nil [77432 77835])
            ("org-link-store" customgroup (:user-visible-flag t) nil [77837 77959])
            ("org-url-hexify-p" variable (:default-value t) nil [77961 78102])
            ("org-email-link-description-format" variable (:default-value "Email %c: %.30s") nil [78104 78905])
            ("org-from-is-user-regexp" variable (:default-value (let (r1 r2) (when (and user-mail-address (not (string= user-mail-address ""))) (setq r1 (concat "\\<" (regexp-quote user-mail-address) "\\>"))) (when (and user-full-name (not (string= user-full-name ""))) (setq r2 (concat "\\<" (regexp-quote user-full-name) "\\>"))) (if (and r1 r2) (concat r1 "\\|" r2) (or r1 r2)))) nil [78907 79467])
            ("org-context-in-file-links" variable (:default-value t) nil [79469 80106])
            ("org-keep-stored-link-after-insertion" variable nil nil [80108 80696])
            ("org-link-follow" customgroup (:user-visible-flag t) nil [80698 80824])
            ("org-link-translation-function" variable nil nil [80826 81534])
            ("org-follow-link-hook" variable nil nil [81536 81665])
            ("org-tab-follows-link" variable nil nil [81667 81927])
            ("org-return-follows-link" variable nil nil [81929 82119])
            ("org-mouse-1-follows-link" variable (:default-value (if (boundp (quote mouse-1-click-follows-link)) mouse-1-click-follows-link t)) nil [82121 82699])
            ("org-mark-ring-length" variable (:default-value 4) nil [82701 82901])
            ("org-link-search-must-match-exact-headline" variable (:default-value (quote query-to-create)) nil [82903 83367])
            ("org-link-frame-setup" variable (:default-value (quote ((vm . vm-visit-folder-other-frame) (vm-imap . vm-visit-imap-folder-other-frame) (gnus . org-gnus-no-new-news) (file . find-file-other-window) (wl . wl-other-frame)))) nil [83369 84942])
            ("org-display-internal-link-with-indirect-buffer" variable nil nil [84944 85533])
            ("org-open-non-existing-files" variable nil nil [85535 85904])
            ("org-open-directory-means-index-dot-org" variable nil nil [85906 86174])
            ("org-confirm-shell-link-function" variable (:default-value (quote yes-or-no-p)) nil [86176 86890])
            ("put" code nil nil [86891 87008])
            ("org-confirm-shell-link-not-regexp" variable nil nil [87010 87169])
            ("org-confirm-elisp-link-function" variable (:default-value (quote yes-or-no-p)) nil [87171 87910])
            ("put" code nil nil [87911 88028])
            ("org-confirm-elisp-link-not-regexp" variable nil nil [88030 88189])
            ("org-file-apps-defaults-gnu" variable
               (:constant-flag t
                :default-value (quote ((remote . emacs) (system . mailcap) (t . mailcap))))
                nil [88191 88373])
            ("org-file-apps-defaults-macosx" variable
               (:constant-flag t
                :default-value (quote ((remote . emacs) (t . "open %s") (system . "open %s") ("ps.gz" . "gv %s") ("eps.gz" . "gv %s") ("dvi" . "xdvi %s") ("fig" . "xfig %s"))))
                nil [88375 88791])
            ("org-file-apps-defaults-windowsnt" variable
               (:constant-flag t
                :default-value (list (quote (remote . emacs)) (cons t (list (if (featurep (quote xemacs)) (quote mswindows-shell-execute) (quote w32-shell-execute)) "open" (quote file))) (cons (quote system) (list (if (featurep (quote xemacs)) (quote mswindows-shell-execute) (quote w32-shell-execute)) "open" (quote file)))))
                nil [88793 89227])
            ("org-file-apps" variable (:default-value (quote ((auto-mode . emacs) ("\\.mm\\'" . default) ("\\.x?html?\\'" . default) ("\\.pdf\\'" . default)))) nil [89229 93966])
            ("org-doi-server-url" variable (:default-value "http://dx.doi.org/") nil [93968 94110])
            ("org-refile" customgroup (:user-visible-flag t) nil [94112 94224])
            ("org-directory" variable (:default-value "~/org") nil [94226 94863])
            ("org-default-notes-file" variable (:default-value (convert-standard-filename "~/.notes")) nil [94865 95127])
            ("org-goto-interface" variable (:default-value (quote outline)) nil [95129 95802])
            ("org-goto-max-level" variable (:default-value 5) nil [95804 95946])
            ("org-reverse-note-order" variable nil nil [95948 96431])
            ("org-log-refile" variable nil nil [96433 97244])
            ("org-refile-targets" variable nil nil [97246 99568])
            ("org-refile-target-verify-function" variable nil nil [99570 100256])
            ("org-refile-use-cache" variable nil nil [100258 100887])
            ("org-refile-use-outline-path" variable nil nil [100889 101500])
            ("org-outline-path-complete-in-steps" variable (:default-value t) nil [101502 102109])
            ("org-refile-allow-creating-parent-nodes" variable nil nil [102111 102826])
            ("org-refile-active-region-within-subtree" variable nil nil [102828 103232])
            ("org-todo" customgroup (:user-visible-flag t) nil [103234 103336])
            ("org-progress" customgroup (:user-visible-flag t) nil [103338 103459])
            ("org-todo-interpretation-widgets" variable (:default-value (quote ((:tag "Sequence (cycling hits every state)" sequence) (:tag "Type     (cycling directly to DONE)" type)))) nil [103461 103738])
            ("org-todo-keywords" variable (:default-value (quote ((sequence "TODO" "DONE")))) nil [103740 106557])
            ("org-todo-keywords-1" variable nil nil [106559 106642])
            ("make-variable-buffer-local" code nil nil [106643 106692])
            ("org-todo-keywords-for-agenda" variable nil nil [106693 106734])
            ("org-done-keywords-for-agenda" variable nil nil [106735 106776])
            ("org-todo-keyword-alist-for-agenda" variable nil nil [106777 106823])
            ("org-tag-alist-for-agenda" variable nil nil [106824 106906])
            ("org-tag-groups-alist-for-agenda" variable nil nil [106907 107011])
            ("org-tag-groups-alist" variable nil nil [107012 107045])
            ("make-variable-buffer-local" code nil nil [107046 107096])
            ("org-agenda-contributing-files" variable nil nil [107097 107139])
            ("org-not-done-keywords" variable nil nil [107140 107174])
            ("make-variable-buffer-local" code nil nil [107175 107226])
            ("org-done-keywords" variable nil nil [107227 107257])
            ("make-variable-buffer-local" code nil nil [107258 107305])
            ("org-todo-heads" variable nil nil [107306 107333])
            ("make-variable-buffer-local" code nil nil [107334 107378])
            ("org-todo-sets" variable nil nil [107379 107405])
            ("make-variable-buffer-local" code nil nil [107406 107449])
            ("org-todo-log-states" variable nil nil [107450 107482])
            ("make-variable-buffer-local" code nil nil [107483 107532])
            ("org-todo-kwd-alist" variable nil nil [107533 107564])
            ("make-variable-buffer-local" code nil nil [107565 107613])
            ("org-todo-key-alist" variable nil nil [107614 107645])
            ("make-variable-buffer-local" code nil nil [107646 107694])
            ("org-todo-key-trigger" variable nil nil [107695 107728])
            ("make-variable-buffer-local" code nil nil [107729 107779])
            ("org-todo-interpretation" variable (:default-value (quote sequence)) nil [107781 108176])
            ("org-use-fast-todo-selection" variable (:default-value t) nil [108178 109164])
            ("org-provide-todo-statistics" variable (:default-value t) nil [109166 110158])
            ("org-hierarchical-todo-statistics" variable (:default-value t) nil [110160 110547])
            ("org-after-todo-state-change-hook" variable nil nil [110549 110796])
            ("org-blocker-hook" variable nil nil [110798 111146])
            ("org-trigger-hook" variable nil nil [111148 111748])
            ("org-enforce-todo-dependencies" variable nil nil [111750 112382])
            ("org-enforce-todo-checkbox-dependencies" variable nil nil [112384 113143])
            ("org-treat-insert-todo-heading-as-state-change" variable nil nil [113145 113506])
            ("org-treat-S-cursor-todo-selection-as-state-change" variable (:default-value t) nil [113508 113837])
            ("org-todo-state-tags-triggers" variable nil nil [113839 114555])
            ("org-log-done" variable nil nil [114557 115282])
            ("cond" code nil nil [115323 115462])
            ("org-log-reschedule" variable nil nil [115464 116091])
            ("org-log-redeadline" variable nil nil [116093 116835])
            ("org-log-note-clock-out" variable nil nil [116837 117170])
            ("org-log-done-with-time" variable (:default-value t) nil [117172 117358])
            ("org-log-note-headings" variable (:default-value (quote ((done . "CLOSING NOTE %t") (state . "State %-12s from %-12S %t") (note . "Note taken on %t") (reschedule . "Rescheduled from %S on %t") (delschedule . "Not scheduled, was %S on %t") (redeadline . "New deadline from %S on %t") (deldeadline . "Removed deadline, was %S on %t") (refile . "Refiled on %t") (clock-out . "")))) nil [117360 119255])
            ("unless" code nil nil [119257 119346])
            ("org-log-into-drawer" variable nil nil [119348 120383])
            ("org-defvaralias" code nil nil [120385 120456])
            ("org-log-into-drawer" function nil nil [120458 120953])
            ("org-log-state-notes-insert-after-drawers" variable nil nil [120955 121416])
            ("org-log-states-order-reversed" variable (:default-value t) nil [121418 121786])
            ("org-todo-repeat-to-state" variable nil nil [121788 122225])
            ("org-log-repeat" variable (:default-value (quote time)) nil [122227 123273])
            ("org-priorities" customgroup (:user-visible-flag t) nil [123276 123376])
            ("org-enable-priority-commands" variable (:default-value t) nil [123378 123600])
            ("org-highest-priority" variable (:default-value 65) nil [123602 123812])
            ("org-lowest-priority" variable (:default-value 67) nil [123814 124022])
            ("org-default-priority" variable (:default-value 66) nil [124024 124703])
            ("org-priority-start-cycle-with-default" variable (:default-value t) nil [124705 125034])
            ("org-get-priority-function" variable nil nil [125036 125537])
            ("org-time" customgroup (:user-visible-flag t) nil [125539 125656])
            ("org-time-stamp-rounding-minutes" variable (:default-value (quote (0 5))) nil [125658 126717])
            ("when" code nil nil [126769 126938])
            ("org-display-custom-times" variable nil nil [126940 127265])
            ("make-variable-buffer-local" code nil nil [127266 127320])
            ("org-time-stamp-custom-formats" variable (:default-value (quote ("<%m/%d/%y %a>" . "<%m/%d/%y %a %H:%M>"))) nil [127322 127804])
            ("org-time-stamp-format" function (:arguments ("long" "inactive")) nil [127806 128056])
            ("org-time-clocksum-format" variable (:default-value (quote (:days "%dd " :hours "%d" :require-hours t :minutes ":%02d" :require-minutes t))) nil [128058 130869])
            ("org-time-clocksum-use-fractional" variable nil nil [130871 131119])
            ("org-time-clocksum-use-effort-durations" variable nil nil [131121 131654])
            ("org-time-clocksum-fractional-format" variable (:default-value "%.2f") nil [131656 132932])
            ("org-deadline-warning-days" variable (:default-value 14) nil [132934 133392])
            ("org-scheduled-delay-days" variable nil nil [133394 133948])
            ("org-read-date-prefer-future" variable (:default-value t) nil [133950 135036])
            ("org-agenda-jump-prefer-future" variable (:default-value (quote org-read-date-prefer-future)) nil [135038 135582])
            ("org-read-date-force-compatible-dates" variable (:default-value t) nil [135584 137000])
            ("org-read-date-display-live" variable (:default-value t) nil [137002 137203])
            ("org-read-date-popup-calendar" variable (:default-value t) nil [137205 137540])
            ("org-defvaralias" code nil nil [137541 137626])
            ("make-obsolete-variable" code nil nil [137628 137750])
            ("org-read-date-minibuffer-setup-hook" variable nil nil [137751 138081])
            ("org-extend-today-until" variable nil nil [138083 138822])
            ("org-use-effective-time" variable nil nil [138824 139159])
            ("org-use-last-clock-out-time-as-effective-time" variable nil nil [139161 139489])
            ("org-edit-timestamp-down-means-later" variable nil nil [139491 139673])
            ("org-calendar-follow-timestamp-change" variable (:default-value t) nil [139675 139929])
            ("org-tags" customgroup (:user-visible-flag t) nil [139931 140027])
            ("org-tag-alist" variable nil nil [140029 141078])
            ("org-tag-persistent-alist" variable nil nil [141080 141971])
            ("org-complete-tags-always-offer-all-agenda-tags" variable nil nil [141973 142550])
            ("org-file-tags" variable nil nil [142552 142785])
            ("org-use-fast-tag-selection" variable (:default-value (quote auto)) nil [142787 143446])
            ("org-fast-tag-selection-single-key" variable nil nil [143448 143931])
            ("org-fast-tag-selection-include-todo" variable nil nil [143933 144118])
            ("org-tags-column" variable (:default-value (if (featurep (quote xemacs)) -76 -77)) nil [144120 144555])
            ("org-auto-align-tags" variable (:default-value t) nil [144557 144888])
            ("org-use-tag-inheritance" variable (:default-value t) nil [144890 145875])
            ("org-tags-exclude-from-inheritance" variable nil nil [145877 146208])
            ("org-tag-inherit-p" function (:arguments ("tag")) nil [146210 146659])
            ("org-tags-match-list-sublevels" variable (:default-value t) nil [146661 147644])
            ("org-tags-sort-function" variable nil nil [147646 147948])
            ("org-tags-history" variable nil nil [147950 148021])
            ("org-last-tags-completion-table" variable nil nil [148022 148110])
            ("org-after-tags-change-hook" variable nil nil [148111 148210])
            ("org-properties" customgroup (:user-visible-flag t) nil [148212 148326])
            ("org-property-format" variable (:default-value "%-10s %s") nil [148328 148656])
            ("org-properties-postprocess-alist" variable nil nil [148658 149634])
            ("org-use-property-inheritance" variable nil nil [149636 150942])
            ("org-property-inherit-p" function (:arguments ("property")) nil [150944 151397])
            ("org-columns-default-format" variable (:default-value "%25ITEM %TODO %3PRIORITY %TAGS") nil [151399 151672])
            ("org-columns-ellipses" variable (:default-value "..") nil [151674 152182])
            ("org-columns-modify-value-for-display-function" variable nil nil [152184 152707])
            ("org-global-properties-fixed" variable
               (:constant-flag t
                :default-value (quote (("VISIBILITY_ALL" . "folded children content all") ("CLOCK_MODELINE_TOTAL_ALL" . "current today repeat all auto"))))
                nil [152709 153282])
            ("org-global-properties" variable nil nil [153284 153821])
            ("org-file-properties" variable nil nil [153823 154004])
            ("make-variable-buffer-local" code nil nil [154005 154054])
            ("org-agenda" customgroup (:user-visible-flag t) nil [154056 154164])
            ("org-category" variable nil nil [154166 154492])
            ("make-variable-buffer-local" code nil nil [154493 154535])
            ("put" code nil nil [154536 154618])
            ("org-agenda-files" variable nil nil [154620 155444])
            ("org-agenda-file-regexp" variable (:default-value "\\`[^.].*\\.org\\'") nil [155446 155781])
            ("org-agenda-text-search-extra-files" variable nil nil [155783 156607])
            ("org-defvaralias" code nil nil [156609 156700])
            ("org-agenda-skip-unavailable-files" variable nil nil [156702 156927])
            ("org-calendar-to-agenda-key" variable (:default-value [99]) nil [156929 157270])
            ("org-calendar-insert-diary-entry-key" variable (:default-value [105]) nil [157272 157801])
            ("org-agenda-diary-file" variable (:default-value (quote diary-file)) nil [157803 158279])
            ("eval-after-load" code nil nil [158281 158629])
            ("org-latex" customgroup (:user-visible-flag t) nil [158631 158740])
            ("org-format-latex-options" variable (:default-value (quote (:foreground default :background default :scale 1.0 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers ("begin" "$1" "$" "$$" "\\(" "\\[")))) nil [158742 160191])
            ("org-format-latex-signal-error" variable (:default-value t) nil [160193 160405])
            ("org-latex-to-mathml-jar-file" variable nil nil [160407 160788])
            ("org-latex-to-mathml-convert-command" variable nil nil [160790 161583])
            ("org-latex-create-formula-image-program" variable (:default-value (quote dvipng)) nil [161585 162145])
            ("org-latex-preview-ltxpng-directory" variable (:default-value "ltxpng/") nil [162147 162447])
            ("org-format-latex-mathml-available-p" function nil nil [162449 162950])
            ("org-format-latex-header" variable (:default-value "\\documentclass{article}
\\usepackage[usenames]{color}
[PACKAGES]
[DEFAULT-PACKAGES]
\\pagestyle{empty}             % do not remove
% The settings below are copied from fullpage.sty
\\setlength{\\textwidth}{\\paperwidth}
\\addtolength{\\textwidth}{-3cm}
\\setlength{\\oddsidemargin}{1.5cm}
\\addtolength{\\oddsidemargin}{-2.54cm}
\\setlength{\\evensidemargin}{\\oddsidemargin}
\\setlength{\\textheight}{\\paperheight}
\\addtolength{\\textheight}{-\\headheight}
\\addtolength{\\textheight}{-\\headsep}
\\addtolength{\\textheight}{-\\footskip}
\\addtolength{\\textheight}{-3cm}
\\setlength{\\topmargin}{1.5cm}
\\addtolength{\\topmargin}{-2.54cm}") nil [162952 164014])
            ("org-set-packages-alist" function (:arguments ("var" "val")) nil [164016 164256])
            ("org-get-packages-alist" function (:arguments ("var")) nil [164258 164492])
            ("org-latex-default-packages-alist" variable (:default-value (quote (("AUTO" "inputenc" t) ("T1" "fontenc" t) ("" "fixltx2e" nil) ("" "graphicx" t) ("" "grffile" t) ("" "longtable" nil) ("" "wrapfig" nil) ("" "rotating" nil) ("normalem" "ulem" t) ("" "amsmath" t) ("" "textcomp" t) ("" "amssymb" t) ("" "capt-of" nil) ("" "hyperref" nil)))) nil [164494 166741])
            ("org-latex-packages-alist" variable nil nil [166743 167765])
            ("org-appearance" customgroup (:user-visible-flag t) nil [167767 167872])
            ("org-level-color-stars-only" variable nil nil [167874 168165])
            ("org-hide-leading-stars" variable nil nil [168167 168752])
            ("org-hidden-keywords" variable nil nil [168754 169196])
            ("org-custom-properties" variable nil nil [169198 169531])
            ("org-fontify-done-headline" variable nil nil [169533 169874])
            ("org-fontify-emphasized-text" variable (:default-value t) nil [169876 170092])
            ("org-fontify-whole-heading-line" variable nil nil [170094 170311])
            ("org-highlight-latex-and-related" variable nil nil [170313 170972])
            ("org-hide-emphasis-markers" variable nil nil [170974 171128])
            ("org-hide-macro-markers" variable nil nil [171130 171283])
            ("org-pretty-entities" variable nil nil [171285 171481])
            ("org-pretty-entities-include-sub-superscripts" variable (:default-value t) nil [171483 171680])
            ("org-emph-re" variable nil nil [171682 172251])
            ("org-verbatim-re" variable nil nil [172252 172331])
            ("org-emphasis-regexp-components" variable nil nil [172332 172371])
            ("org-emphasis-alist" variable nil nil [172393 172420])
            ("org-set-emph-re" function (:arguments ("var" "val")) nil [172442 174215])
            ("org-emphasis-regexp-components" variable (:default-value (quote (" 	('\"{" "- 	.,:!?;'\")}\\[" " 	
,\"'" "." 1))) nil [174403 175392])
            ("org-emphasis-alist" variable (:default-value (\` (("*" bold) ("/" italic) ("_" underline) ("=" org-verbatim verbatim) ("~" org-code verbatim) ("+" (\, (if (featurep (quote xemacs)) (quote org-table) (quote (:strike-through t)))))))) nil [175394 176247])
            ("org-protecting-blocks" variable (:default-value (quote ("src" "example" "latex" "ascii" "html" "ditaa" "dot" "r" "R"))) nil [176249 176460])
            ("org-completion" customgroup (:user-visible-flag t) nil [176489 176584])
            ("org-completion-use-ido" variable nil nil [176586 176942])
            ("org-completion-use-iswitchb" variable nil nil [176944 177354])
            ("org-completion-fallback-command" variable (:default-value (quote hippie-expand)) nil [177356 177570])
            ("outline-mode-menu-heading" variable nil nil [177681 177715])
            ("outline-mode-menu-show" variable nil nil [177716 177747])
            ("outline-mode-menu-hide" variable nil nil [177748 177779])
            ("zmacs-regions" variable nil nil [177780 177802])
            ("mark-active" variable nil nil [177835 177855])
            ("declare-function" code nil nil [177877 177943])
            ("declare-function" code nil nil [177944 178011])
            ("declare-function" code nil nil [178012 178080])
            ("declare-function" code nil nil [178081 178145])
            ("declare-function" code nil nil [178146 178214])
            ("calc-embedded-close-formula" variable nil nil [178215 178251])
            ("calc-embedded-open-formula" variable nil nil [178252 178287])
            ("declare-function" code nil nil [178288 178335])
            ("declare-function" code nil nil [178336 178394])
            ("declare-function" code nil nil [178395 178481])
            ("font-lock-unfontify-region-function" variable nil nil [178482 178526])
            ("declare-function" code nil nil [178527 178654])
            ("iswitchb-temp-buflist" variable nil nil [178655 178685])
            ("declare-function" code nil nil [178686 178762])
            ("org-agenda-tags-todo-honor-ignore-options" variable nil nil [178763 178813])
            ("declare-function" code nil nil [178814 178864])
            ("declare-function" code nil nil [178865 178996])
            ("declare-function" code nil nil [178997 179066])
            ("declare-function" code nil nil [179067 179177])
            ("declare-function" code nil nil [179178 179258])
            ("declare-function" code nil nil [179259 179315])
            ("declare-function" code nil nil [179316 179403])
            ("declare-function" code nil nil [179404 179472])
            ("declare-function" code nil nil [179473 179585])
            ("declare-function" code nil nil [179586 179656])
            ("declare-function" code nil nil [179657 179720])
            ("declare-function" code nil nil [179721 179789])
            ("declare-function" code nil nil [179790 179852])
            ("declare-function" code nil nil [179853 179916])
            ("declare-function" code nil nil [179917 179975])
            ("declare-function" code nil nil [179976 180047])
            ("declare-function" code nil nil [180048 180114])
            ("remember-data-file" variable nil nil [180115 180142])
            ("texmathp-why" variable nil nil [180143 180164])
            ("declare-function" code nil nil [180165 180236])
            ("declare-function" code nil nil [180237 180318])
            ("declare-function" code nil nil [180319 180391])
            ("turn-on-orgtbl" function nil nil [180408 180517])
            ("org-at-table-p" function (:arguments ("table-type")) nil [180519 181068])
            ("org-table-p" function nil nil [181069 181111])
            ("org-at-table.el-p" function nil nil [181113 181413])
            ("org-table-recognize-table.el" function nil nil [181415 182100])
            ("org-at-table-hline-p" function nil nil [182102 182404])
            ("org-table-map-tables" function (:arguments ("function" "quietly")) nil [182406 183196])
            ("declare-function" code nil nil [183198 183279])
            ("declare-function" code nil nil [183280 183340])
            ("declare-function" code nil nil [183341 183444])
            ("org-at-TBLFM-p" function (:arguments ("pos")) nil [183446 183737])
            ("org-clock-start-time" variable nil nil [183739 183768])
            ("org-clock-marker" variable (:default-value (make-marker)) nil [183769 183848])
            ("org-clock-hd-marker" variable (:default-value (make-marker)) nil [183849 183958])
            ("org-clock-heading" variable nil nil [183959 184032])
            ("org-clock-is-active" function nil nil [184033 184193])
            ("org-check-running-clock" function nil nil [184195 184608])
            ("org-clocktable-try-shift" function (:arguments ("dir" "n")) nil [184610 184823])
            ("org-clock-persistence-insinuate" function nil nil [184840 185035])
            ("org-archive" customgroup (:user-visible-flag t) nil [185037 185154])
            ("org-archive-location" variable (:default-value "%s_archive::") nil [185156 187570])
            ("org-agenda-skip-archived-trees" variable (:default-value t) nil [187572 187968])
            ("org-columns-skip-archived-trees" variable (:default-value t) nil [187970 188146])
            ("org-cycle-open-archived-trees" variable nil nil [188148 188513])
            ("org-sparse-tree-open-archived-trees" variable nil nil [188515 188801])
            ("org-sparse-tree-default-date-type" variable nil nil [188803 189633])
            ("org-cycle-hide-archived-subtrees" function (:arguments ("state")) nil [189635 190301])
            ("org-force-cycle-archived" function (:user-visible-flag t) nil [190303 190509])
            ("org-hide-archived-subtrees" function (:arguments ("beg" "end")) nil [190511 191006])
            ("declare-function" code nil nil [191008 191062])
            ("declare-function" code nil nil [191063 191126])
            ("org-flag-subtree" function (:arguments ("flag")) nil [191127 191320])
            ("defalias" code nil nil [191322 191385])
            ("declare-function" code nil nil [191416 191502])
            ("declare-function" code nil nil [191503 191575])
            ("declare-function" code nil nil [191576 191639])
            ("declare-function" code nil nil [191661 191706])
            ("declare-function" code nil nil [191707 191756])
            ("declare-function" code nil nil [191757 191806])
            ("org-id-track-globally" variable nil nil [191807 191837])
            ("org-todo-regexp" variable nil nil [191909 191981])
            ("make-variable-buffer-local" code nil nil [191982 192027])
            ("org-not-done-regexp" variable nil nil [192028 192124])
            ("make-variable-buffer-local" code nil nil [192125 192174])
            ("org-not-done-heading-regexp" variable nil nil [192175 192261])
            ("make-variable-buffer-local" code nil nil [192262 192319])
            ("org-todo-line-regexp" variable nil nil [192320 192421])
            ("make-variable-buffer-local" code nil nil [192422 192472])
            ("org-complex-heading-regexp" variable nil nil [192473 192682])
            ("make-variable-buffer-local" code nil nil [192683 192739])
            ("org-complex-heading-regexp-format" variable nil nil [192740 193006])
            ("make-variable-buffer-local" code nil nil [193007 193070])
            ("org-todo-line-tags-regexp" variable nil nil [193071 193225])
            ("make-variable-buffer-local" code nil nil [193226 193281])
            ("org-plain-time-of-day-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\(--?" "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\)?"))
                nil [193283 193815])
            ("org-plain-time-extension-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\<[012]?[0-9]" "\\(\\(:\\([0-5][0-9]\\([AaPp][Mm]\\)?\\)\\)\\|\\([AaPp][Mm]\\)\\)\\>\\)" "\\+\\([0-9]+\\)\\(:\\([0-5][0-9]\\)\\)?"))
                nil [193817 194265])
            ("org-stamp-time-of-day-regexp" variable
               (:constant-flag t
                :default-value (concat "<\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\} +\\sw+ +\\)" "\\([012][0-9]:[0-5][0-9]\\(-\\([012][0-9]:[0-5][0-9]\\)\\)?[^
>]*?\\)>" "\\(--?" "<\\1\\([012][0-9]:[0-5][0-9]\\)>\\)?"))
                nil [194267 194814])
            ("org-startup-options" variable
               (:constant-flag t
                :default-value (quote (("fold" org-startup-folded t) ("overview" org-startup-folded t) ("nofold" org-startup-folded nil) ("showall" org-startup-folded nil) ("showeverything" org-startup-folded showeverything) ("content" org-startup-folded content) ("indent" org-startup-indented t) ("noindent" org-startup-indented nil) ("hidestars" org-hide-leading-stars t) ("showstars" org-hide-leading-stars nil) ("odd" org-odd-levels-only t) ("oddeven" org-odd-levels-only nil) ("align" org-startup-align-all-tables t) ("noalign" org-startup-align-all-tables nil) ("inlineimages" org-startup-with-inline-images t) ("noinlineimages" org-startup-with-inline-images nil) ("latexpreview" org-startup-with-latex-preview t) ("nolatexpreview" org-startup-with-latex-preview nil) ("customtime" org-display-custom-times t) ("logdone" org-log-done time) ("lognotedone" org-log-done note) ("nologdone" org-log-done nil) ("lognoteclock-out" org-log-note-clock-out t) ("nolognoteclock-out" org-log-note-clock-out nil) ("logrepeat" org-log-repeat state) ("lognoterepeat" org-log-repeat note) ("logdrawer" org-log-into-drawer t) ("nologdrawer" org-log-into-drawer nil) ("logstatesreversed" org-log-states-order-reversed t) ("nologstatesreversed" org-log-states-order-reversed nil) ("nologrepeat" org-log-repeat nil) ("logreschedule" org-log-reschedule time) ("lognotereschedule" org-log-reschedule note) ("nologreschedule" org-log-reschedule nil) ("logredeadline" org-log-redeadline time) ("lognoteredeadline" org-log-redeadline note) ("nologredeadline" org-log-redeadline nil) ("logrefile" org-log-refile time) ("lognoterefile" org-log-refile note) ("nologrefile" org-log-refile nil) ("fninline" org-footnote-define-inline t) ("nofninline" org-footnote-define-inline nil) ("fnlocal" org-footnote-section nil) ("fnauto" org-footnote-auto-label t) ("fnprompt" org-footnote-auto-label nil) ("fnconfirm" org-footnote-auto-label confirm) ("fnplain" org-footnote-auto-label plain) ("fnadjust" org-footnote-auto-adjust t) ("nofnadjust" org-footnote-auto-adjust nil) ("constcgs" constants-unit-system cgs) ("constSI" constants-unit-system SI) ("noptag" org-tag-persistent-alist nil) ("hideblocks" org-hide-block-startup t) ("nohideblocks" org-hide-block-startup nil) ("beamer" org-startup-with-beamer-mode t) ("entitiespretty" org-pretty-entities t) ("entitiesplain" org-pretty-entities nil))))
                nil [194816 197742])
            ("org-group-tags" variable (:default-value t) nil [197744 197938])
            ("org-inhibit-startup" variable nil nil [197940 197972])
            ("org-toggle-tags-groups" function (:user-visible-flag t) nil [198009 198492])
            ("org-set-regexps-and-options" function (:arguments ("tags-only")) nil [198494 204608])
            ("org--setup-collect-keywords" function (:arguments ("regexp" "files" "alist")) nil [204610 208989])
            ("org--setup-process-tags" function (:arguments ("tags" "filetags")) nil [208991 211111])
            ("org-file-contents" function (:arguments ("file" "noerror")) nil [211113 211537])
            ("org-extract-log-state-settings" function (:arguments ("x")) nil [211539 212143])
            ("org-remove-keyword-keys" function (:arguments ("list")) nil [212145 212365])
            ("org-assign-fast-keys" function (:arguments ("alist")) nil [212367 213009])
            ("org-window-configuration" variable nil nil [213054 213151])
            ("org-selected-window" variable nil nil [213152 213244])
            ("org-finish-function" variable nil nil [213245 213384])
            ("org-no-warnings" code nil nil [213520 213552])
            ("org-last-state" variable nil nil [213585 213608])
            ("org-no-warnings" code nil nil [213609 213640])
            ("org-entities" variable nil nil [213737 213758])
            ("org-struct-menu" variable nil nil [213793 213817])
            ("org-org-menu" variable nil nil [213818 213839])
            ("org-tbl-menu" variable nil nil [213840 213861])
            ("org-table-may-need-update" variable (:default-value t) nil [213969 214147])
            ("org-before-change-function" function (:arguments ("beg" "end")) nil [214148 214291])
            ("org-mode-map" variable nil nil [214292 214313])
            ("org-inhibit-startup-visibility-stuff" variable nil nil [214314 214363])
            ("org-agenda-keep-modes" variable nil nil [214392 214426])
            ("org-inhibit-logging" variable nil nil [214460 214492])
            ("org-inhibit-blocking" variable nil nil [214528 214561])
            ("org-table-buffer-is-an" variable nil nil [214596 214631])
            ("bidi-paragraph-direction" variable nil nil [214633 214666])
            ("buffer-face-mode-face" variable nil nil [214667 214697])
            ("outline" include nil nil [214699 214717])
            ("if" code nil nil [214718 214935])
            ("noutline" include (:directory "noutline") nil [214936 214975])
            ("time-date" include nil nil [215034 215054])
            ("unless" code nil nil [215055 215129])
            ("easymenu" include nil nil [215130 215149])
            ("easy-menu-add" function (:prototype-flag t) nil [215150 215186])
            ("overlay" include nil nil [215187 215205])
            ("org-entities" include nil nil [215282 215305])
            ("org-faces" include nil nil [215383 215403])
            ("org-list" include nil nil [215404 215423])
            ("org-pcomplete" include nil nil [215424 215448])
            ("org-src" include nil nil [215449 215467])
            ("org-footnote" include nil nil [215468 215491])
            ("org-macro" include nil nil [215492 215512])
            ("ob" include nil nil [215523 215536])
            ("define-derived-mode" code nil nil [215553 222553])
            ("add-to-list" code nil nil [222605 222794])
            ("org-mode-transpose-word-syntax-table" variable (:default-value (let ((st (make-syntax-table text-mode-syntax-table))) (mapc (lambda (c) (modify-syntax-entry (string-to-char (car c)) "w p" st)) org-emphasis-alist) st)) nil [222796 223015])
            ("when" code nil nil [223017 223139])
            ("org-find-invisible-foreground" function nil nil [223141 223623])
            ("org-current-time" function (:arguments ("rounding-minutes" "past")) nil [223625 224354])
            ("org-today" function nil nil [224356 224535])
            ("org-mouse-map" variable (:default-value (make-sparse-keymap)) nil [224585 224628])
            ("org-defkey" code nil nil [224629 224684])
            ("org-defkey" code nil nil [224685 224745])
            ("when" code nil nil [224746 224832])
            ("when" code nil nil [224833 224971])
            ("font-lock" include nil nil [224973 224993])
            ("org-non-link-chars" variable
               (:constant-flag t
                :default-value "]	
<>")
                nil [224995 225036])
            ("org-link-types" variable (:default-value (quote ("http" "https" "ftp" "mailto" "file" "file+emacs" "file+sys" "news" "shell" "elisp" "doi" "message" "help"))) nil [225037 225178])
            ("org-link-types-re" variable nil nil [225179 225270])
            ("org-link-re-with-space" variable nil nil [225271 225375])
            ("org-link-re-with-space2" variable nil nil [225376 225481])
            ("org-link-re-with-space3" variable nil nil [225482 225591])
            ("org-angle-link-re" variable nil nil [225592 225682])
            ("org-plain-link-re" variable nil nil [225683 225753])
            ("org-bracket-link-regexp" variable nil nil [225754 225829])
            ("org-bracket-link-analytic-regexp" variable nil nil [225830 226017])
            ("org-bracket-link-analytic-regexp++" variable nil nil [226018 226145])
            ("org-any-link-re" variable nil nil [226146 226216])
            ("org-match-sexp-depth" variable
               (:constant-flag t
                :default-value 3)
                nil [226218 226310])
            ("org-create-multibrace-regexp" function (:arguments ("left" "right" "n")) nil [226312 227113])
            ("org-match-substring-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\S-\\)\\([_^]\\)\\(" "\\(?:" (org-create-multibrace-regexp "{" "}" org-match-sexp-depth) "\\)" "\\|" "\\(?:" (org-create-multibrace-regexp "(" ")" org-match-sexp-depth) "\\)" "\\|" "\\(?:\\*\\|[+-]?[[:alnum:].,\\]*[[:alnum:]]\\)\\)"))
                nil [227115 227478])
            ("org-match-substring-with-braces-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(\\S-\\)\\([_^]\\)" "\\(" (org-create-multibrace-regexp "{" "}" org-match-sexp-depth) "\\)"))
                nil [227480 227716])
            ("org-make-link-regexps" function nil nil [227718 229277])
            ("org-make-link-regexps" code nil nil [229279 229302])
            ("org-emph-face" variable nil nil [229304 229330])
            ("org-do-emphasis-faces" function (:arguments ("limit")) nil [229332 230531])
            ("org-emphasize" function
               (:user-visible-flag t
                :arguments ("char"))
                nil [230533 232228])
            ("org-nonsticky-props" variable
               (:constant-flag t
                :default-value (quote (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)))
                nil [232230 232353])
            ("org-rear-nonsticky-at" function (:arguments ("pos")) nil [232355 232473])
            ("org-activate-plain-links" function (:arguments ("limit")) nil [232475 233261])
            ("org-activate-code" function (:arguments ("limit")) nil [233263 233554])
            ("org-src-fontify-natively" variable (:default-value t) nil [233556 233755])
            ("org-allow-promoting-top-level-subtree" variable nil nil [233757 233993])
            ("org-fontify-meta-lines-and-blocks" function (:arguments ("limit")) nil [233995 234170])
            ("org-fontify-meta-lines-and-blocks-1" function (:arguments ("limit")) nil [234172 238134])
            ("org-fontify-drawers" function (:arguments ("limit")) nil [238136 238445])
            ("org-fontify-macros" function (:arguments ("limit")) nil [238447 238950])
            ("org-activate-angle-links" function (:arguments ("limit")) nil [238952 239402])
            ("org-activate-footnote-links" function (:arguments ("limit")) nil [239404 240148])
            ("org-activate-bracket-links" function (:arguments ("limit")) nil [240150 241741])
            ("org-activate-dates" function (:arguments ("limit")) nil [241743 242362])
            ("org-target-link-regexp" variable nil nil [242364 242460])
            ("make-variable-buffer-local" code nil nil [242461 242513])
            ("org-target-regexp" variable
               (:constant-flag t
                :default-value (let ((border "[^<>
 	]")) (format "<<\\(%s\\|%s[^<>
]*%s\\)>>" border border border)))
                nil [242515 242703])
            ("org-radio-target-regexp" variable
               (:constant-flag t
                :default-value (format "<%s>" org-target-regexp))
                nil [242705 242821])
            ("org-any-target-regexp" variable
               (:constant-flag t
                :default-value (format "%s\\|%s" org-radio-target-regexp org-target-regexp))
                nil [242823 242962])
            ("org-activate-target-links" function (:arguments ("limit")) nil [242964 243511])
            ("org-update-radio-target-regexp" function (:user-visible-flag t) nil [243513 245089])
            ("org-hide-wide-columns" function (:arguments ("limit")) nil [245091 245409])
            ("org-latex-and-related-regexp" variable nil nil [245411 245529])
            ("org-compute-latex-and-related-regexp" function nil nil [245531 246520])
            ("org-do-latex-and-related" function (:arguments ("limit")) nil [246522 247422])
            ("org-restart-font-lock" function nil nil [247424 247614])
            ("org-activate-tags" function (:arguments ("limit")) nil [247616 247989])
            ("org-outline-level" function nil nil [247991 248457])
            ("org-font-lock-keywords" variable nil nil [248459 248494])
            ("org-re-property" function (:arguments ("property" "literal" "allow-null" "value")) nil [248496 249440])
            ("org-property-re" variable
               (:constant-flag t
                :default-value (org-re-property "\\S-+" (quote literal) t))
                nil [249442 249805])
            ("org-font-lock-hook" variable nil nil [249807 249894])
            ("org-font-lock-set-keywords-hook" variable nil nil [249896 250226])
            ("org-font-lock-hook" function (:arguments ("limit")) nil [250228 250354])
            ("org-set-font-lock-defaults" function nil nil [250356 254657])
            ("org-toggle-pretty-entities" function (:user-visible-flag t) nil [254659 255110])
            ("org-custom-properties-overlays" variable nil nil [255112 255204])
            ("make-variable-buffer-local" code nil nil [255205 255265])
            ("org-toggle-custom-properties-visibility" function (:user-visible-flag t) nil [255267 256509])
            ("org-fontify-entities" function (:arguments ("limit")) nil [256511 257360])
            ("org-fontify-like-in-org-mode" function (:arguments ("s" "odd-levels")) nil [257362 257607])
            ("org-m" variable nil nil [257609 257627])
            ("org-l" variable nil nil [257628 257646])
            ("org-f" variable nil nil [257647 257665])
            ("org-get-level-face" function (:arguments ("n")) nil [257666 258192])
            ("org-face-from-face-or-color" function (:arguments ("context" "inherit" "face-or-color")) nil [258194 258541])
            ("org-get-todo-face" function (:arguments ("kwd")) nil [258543 258897])
            ("org-get-priority-face" function (:arguments ("priority")) nil [258899 259130])
            ("org-get-tag-face" function (:arguments ("tag")) nil [259132 259406])
            ("org-font-lock-add-priority-faces" function (:arguments ("limit")) nil [259408 259730])
            ("org-font-lock-add-tag-faces" function (:arguments ("limit")) nil [259732 260081])
            ("org-unfontify-region" function (:arguments ("beg" "end" "maybe_loudly")) nil [260083 260656])
            ("org-script-display" variable
               (:constant-flag t
                :default-value (quote (((raise -0.3) (height 0.7)) ((raise 0.3) (height 0.7)) ((raise -0.5)) ((raise 0.5)))))
                nil [260658 260852])
            ("org-remove-font-lock-display-properties" function (:arguments ("beg" "end")) nil [260854 261340])
            ("org-raise-scripts" function (:arguments ("limit")) nil [261342 262933])
            ("org-cycle-global-status" variable nil nil [263013 263049])
            ("make-variable-buffer-local" code nil nil [263050 263103])
            ("put" code nil nil [263104 263147])
            ("org-cycle-subtree-status" variable nil nil [263148 263185])
            ("make-variable-buffer-local" code nil nil [263186 263240])
            ("put" code nil nil [263241 263285])
            ("org-inlinetask-min-level" variable nil nil [263287 263320])
            ("org-unlogged-message" function (:arguments ("args")) nil [263322 263491])
            ("org-cycle" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [263508 269802])
            ("org-cycle-internal-global" function nil nil [269804 271183])
            ("org-called-with-limited-levels" variable nil nil [271185 271292])
            ("org-cycle-internal-local" function nil nil [271294 275757])
            ("org-global-cycle" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [275774 276447])
            ("org-set-startup-visibility" function nil nil [276449 277046])
            ("org-set-visibility-according-to-property" function
               (:user-visible-flag t
                :arguments ("no-cleanup"))
                nil [277048 278072])
            ("org-overview" function (:user-visible-flag t) nil [278255 278862])
            ("org-content" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [278864 279502])
            ("org-optimize-window-after-visibility-change" function (:arguments ("state")) nil [279504 279989])
            ("org-remove-empty-overlays-at" function (:arguments ("pos")) nil [279991 280314])
            ("org-clean-visibility-after-subtree-move" function nil nil [280316 281310])
            ("org-cycle-show-empty-lines" function (:arguments ("state")) nil [281312 282942])
            ("org-show-empty-lines-in-parent" function nil nil [282944 283189])
            ("org-files-list" function nil nil [283191 283689])
            ("org-entry-beginning-position" function nil nil [283691 283844])
            ("org-entry-end-position" function nil nil [283846 283982])
            ("org-cycle-hide-drawers" function (:arguments ("state" "exceptions")) nil [283984 285070])
            ("org-flag-drawer" function (:arguments ("flag" "element")) nil [285072 286016])
            ("org-subtree-end-visible-p" function nil nil [286018 286180])
            ("org-first-headline-recenter" function nil nil [286182 286443])
            ("org-outline-overlay-data" function (:arguments ("use-markers")) nil [286482 287215])
            ("org-set-outline-overlay-data" function (:arguments ("data")) nil [287217 287538])
            ("org-hide-block-overlays" variable nil nil [287563 287627])
            ("make-variable-buffer-local" code nil nil [287628 287681])
            ("org-block-map" function (:arguments ("function" "start" "end")) nil [287683 288188])
            ("org-hide-block-toggle-all" function nil nil [288190 288330])
            ("org-hide-block-all" function (:user-visible-flag t) nil [288332 288490])
            ("org-show-block-all" function (:user-visible-flag t) nil [288492 288668])
            ("org-hide-block-toggle-maybe" function (:user-visible-flag t) nil [288670 288934])
            ("org-hide-block-toggle" function
               (:user-visible-flag t
                :arguments ("force"))
                nil [288936 291103])
            ("add-hook" code nil nil [291145 291204])
            ("add-hook" code nil nil [291249 291370])
            ("org-goto-window-configuration" variable nil nil [291386 291428])
            ("org-goto-marker" variable nil nil [291429 291457])
            ("org-goto-map" variable nil nil [291458 291479])
            ("org-goto-map" function nil nil [291480 293054])
            ("org-goto-help" variable
               (:constant-flag t
                :default-value "Browse buffer copy, to find location or copy text.%s
RET=jump to location             C-g=quit and return to previous location
[Up]/[Down]=next/prev headline   TAB=cycle visibility   [/] org-occur")
                nil [293056 293282])
            ("org-goto-start-pos" variable nil nil [293284 293311])
            ("org-goto" function
               (:user-visible-flag t
                :arguments ("alternative-interface"))
                nil [293344 295141])
            ("org-goto-selected-point" variable nil nil [295143 295179])
            ("org-goto-exit-command" variable nil nil [295211 295245])
            ("org-goto-local-auto-isearch-map" variable nil nil [295277 295317])
            ("org-get-location" function (:arguments ("buf" "help")) nil [295335 296999])
            ("org-goto-local-auto-isearch-map" variable (:default-value (make-sparse-keymap)) nil [297001 297062])
            ("set-keymap-parent" code nil nil [297063 297131])
            ("if" code nil nil [297191 297593])
            ("org-goto-local-search-headings" function (:arguments ("string" "bound" "noerror")) nil [297595 298109])
            ("org-goto-local-auto-isearch" function (:user-visible-flag t) nil [298111 298402])
            ("org-goto-ret" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [298404 298604])
            ("org-goto-left" function (:user-visible-flag t) nil [298606 298891])
            ("org-goto-right" function (:user-visible-flag t) nil [298893 299157])
            ("org-goto-quit" function (:user-visible-flag t) nil [299159 299338])
            ("org-indirect-dedicated-frame" variable nil nil [299381 299482])
            ("org-last-indirect-buffer" variable nil nil [299483 299520])
            ("org-tree-to-indirect-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [299522 302263])
            ("org-get-indirect-buffer" function (:arguments ("buffer" "heading")) nil [302265 302744])
            ("org-set-frame-title" function (:arguments ("title")) nil [302746 302996])
            ("org-previous-line-empty-p" function (:arguments ("next")) nil [303047 303319])
            ("org-insert-heading" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok" "top-level"))
                nil [303321 310130])
            ("org-N-empty-lines-before-current" function (:arguments ("N")) nil [310132 310499])
            ("org-get-heading" function (:arguments ("no-tags" "no-todo")) nil [310501 311159])
            ("orgstruct-mode" variable nil nil [311161 311184])
            ("org-heading-components" function nil nil [311204 312375])
            ("org-get-entry" function nil nil [312377 312566])
            ("org-insert-heading-after-current" function (:user-visible-flag t) nil [312568 312794])
            ("org-insert-heading-respect-content" function
               (:user-visible-flag t
                :arguments ("invisible-ok"))
                nil [312796 312991])
            ("org-insert-todo-heading-respect-content" function
               (:user-visible-flag t
                :arguments ("force-state"))
                nil [312993 313201])
            ("org-insert-todo-heading" function
               (:user-visible-flag t
                :arguments ("arg" "force-heading"))
                nil [313203 314456])
            ("org-insert-subheading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [314458 314725])
            ("org-insert-todo-subheading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [314727 315034])
            ("org-after-demote-entry-hook" variable nil nil [315064 315272])
            ("org-after-promote-entry-hook" variable nil nil [315274 315485])
            ("org-promote-subtree" function (:user-visible-flag t) nil [315487 315701])
            ("org-demote-subtree" function (:user-visible-flag t) nil [315703 315926])
            ("org-do-promote" function (:user-visible-flag t) nil [315928 316275])
            ("org-do-demote" function (:user-visible-flag t) nil [316277 316620])
            ("org-fix-position-after-promote" function nil nil [316622 317020])
            ("org-current-level" function nil nil [317022 317423])
            ("org-get-previous-line-level" function nil nil [317425 317780])
            ("org-reduced-level" function (:arguments ("l")) nil [317782 318000])
            ("org-level-increment" function nil nil [318002 318216])
            ("org-get-valid-level" function (:arguments ("level" "change")) nil [318218 318802])
            ("if" code nil nil [318804 319077])
            ("org-promote" function nil nil [319079 319941])
            ("org-demote" function nil nil [319943 320560])
            ("org-cycle-level" function (:user-visible-flag t) nil [320562 322110])
            ("org-map-tree" function (:arguments ("fun")) nil [322112 322433])
            ("org-map-region" function (:arguments ("fun" "beg" "end")) nil [322435 322851])
            ("org-fixup-indentation" function (:arguments ("diff")) nil [322853 326894])
            ("org-convert-to-odd-levels" function (:user-visible-flag t) nil [326896 327478])
            ("org-convert-to-oddeven-levels" function (:user-visible-flag t) nil [327480 328474])
            ("org-tr-level" function (:arguments ("n")) nil [328476 328570])
            ("org-move-subtree-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [328631 328821])
            ("org-move-subtree-down" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [328823 331568])
            ("org-subtree-clip" variable nil nil [331570 331790])
            ("org-subtree-clip-folded" variable nil nil [331792 331918])
            ("org-cut-subtree" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [331920 332173])
            ("org-copy-subtree" function
               (:user-visible-flag t
                :arguments ("n" "cut" "force-store-markers" "nosubtrees"))
                nil [332175 333796])
            ("org-paste-subtree" function
               (:user-visible-flag t
                :arguments ("level" "tree" "for-yank" "remove"))
                nil [333798 338014])
            ("org-kill-is-subtree-p" function (:arguments ("txt")) nil [338016 339024])
            ("org-markers-to-move" variable nil nil [339026 339215])
            ("org-save-markers-in-region" function (:arguments ("beg" "end")) nil [339217 339860])
            ("org-check-and-save-marker" function (:arguments ("marker" "beg" "end")) nil [339862 340204])
            ("org-reinstall-markers-in-region" function (:arguments ("beg")) nil [340206 340435])
            ("org-narrow-to-subtree" function (:user-visible-flag t) nil [340437 340786])
            ("org-narrow-to-block" function (:user-visible-flag t) nil [340788 341086])
            ("org-clone-subtree-with-time-shift" function
               (:user-visible-flag t
                :arguments ("n" "shift"))
                nil [341088 345261])
            ("org-sort" function
               (:user-visible-flag t
                :arguments ("with-case"))
                nil [345284 345669])
            ("org-sort-remove-invisible" function (:arguments ("s")) nil [345671 346180])
            ("org-priority-regexp" variable nil nil [346182 346210])
            ("org-after-sorting-entries-or-items-hook" variable nil nil [346240 346559])
            ("org-sort-entries" function
               (:user-visible-flag t
                :arguments ("with-case" "sorting-type" "getkey-func" "compare-func" "property"))
                nil [346561 354724])
            ("orgstruct-heading-prefix-regexp" variable nil nil [355707 355917])
            ("orgstruct-setup-hook" variable nil nil [356002 356167])
            ("orgstruct-initialized" variable nil nil [356169 356203])
            ("org-local-vars" variable nil nil [356205 356290])
            ("define-minor-mode" code nil nil [356307 356905])
            ("turn-on-orgstruct" function nil nil [356922 357017])
            ("org-fb-vars" variable nil nil [357019 357043])
            ("make-variable-buffer-local" code nil nil [357044 357085])
            ("orgstruct++-mode" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [357086 358203])
            ("orgstruct-is-++" variable nil nil [358205 358294])
            ("make-variable-buffer-local" code nil nil [358295 358340])
            ("turn-on-orgstruct++" function nil nil [358357 358458])
            ("orgstruct-error" function (:user-visible-flag t) nil [358460 358696])
            ("orgstruct-setup" function nil nil [358698 360685])
            ("orgstruct-make-binding" function (:arguments ("fun" "key" "disable-when-heading-prefix")) nil [360687 363555])
            ("org-contextualize-keys" function (:arguments ("alist" "contexts")) nil [363557 365064])
            ("org-contextualize-validate-key" function (:arguments ("key" "contexts")) nil [365066 365987])
            ("org-context-p" function (:arguments ("contexts")) nil [365989 366534])
            ("org-get-local-variables" function nil nil [366536 367335])
            ("org-clone-local-variables" function (:arguments ("from-buffer" "regexp")) nil [367337 367735])
            ("org-run-like-in-org-mode" function (:arguments ("cmd")) nil [367752 368389])
            ("org-get-category" function (:arguments ("pos" "force-refresh")) nil [368391 368739])
            ("org-refresh-properties" function (:arguments ("dprop" "tprop")) nil [368765 369386])
            ("org-refresh-property" function (:arguments ("tprop" "p")) nil [369388 370037])
            ("org-refresh-category-properties" function nil nil [370039 371527])
            ("org-refresh-stats-properties" function nil nil [371529 372251])
            ("org-refresh-effort-properties" function nil nil [372253 372454])
            ("org-link-expand-abbrev" function (:arguments ("link")) nil [372497 373300])
            ("org-insert-link-history" variable nil nil [373335 373437])
            ("org-stored-links" variable nil nil [373439 373521])
            ("org-store-link-plist" variable nil nil [373523 373636])
            ("org-link-protocols" variable nil nil [373638 373733])
            ("org-store-link-functions" variable nil nil [373735 374690])
            ("org-add-link-type" function (:arguments ("type" "follow" "export")) nil [374692 376137])
            ("org-agenda-buffer-name" variable nil nil [376139 376170])
            ("org-id-link-to-org-use-id" variable nil nil [376198 376232])
            ("org-store-link" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [376272 384914])
            ("org-store-link-props" function (:arguments ("plist")) nil [384916 385764])
            ("org-add-link-props" function (:arguments ("plist")) nil [385766 386025])
            ("org-email-link-description" function (:arguments ("fmt")) nil [386027 387143])
            ("org-make-org-heading-search-string" function (:arguments ("string")) nil [387145 387948])
            ("org-make-link-string" function (:arguments ("link" "description")) nil [387950 388955])
            ("org-link-escape-chars" variable
               (:constant-flag t
                :default-value (quote (32 91 93 37)))
                nil [388957 389158])
            ("org-link-escape-chars-browser" variable
               (:constant-flag t
                :default-value (quote (32 34)))
                nil [389160 389518])
            ("org-link-escape" function (:arguments ("text" "table" "merge")) nil [389520 390339])
            ("org-link-escape-browser" function (:arguments ("text")) nil [390341 391462])
            ("org-link-unescape" function (:arguments ("str")) nil [391464 391786])
            ("org-link-unescape-compound" function (:arguments ("hex")) nil [391788 392863])
            ("org-link-unescape-single-byte-sequence" function (:arguments ("hex")) nil [392865 393095])
            ("org-xor" function (:arguments ("a" "b")) nil [393097 393155])
            ("org-fixup-message-id-for-http" function (:arguments ("s")) nil [393157 393642])
            ("org-link-prettify" function (:arguments ("link")) nil [393644 393971])
            ("org-insert-link-global" function (:user-visible-flag t) nil [393988 394224])
            ("org-insert-all-links" function
               (:user-visible-flag t
                :arguments ("arg" "pre" "post"))
                nil [394226 395013])
            ("org-insert-last-stored-link" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [395015 395168])
            ("org-link-fontify-links-to-this-file" function nil nil [395170 395930])
            ("org-link-links-in-this-file" variable nil nil [395932 395972])
            ("org-insert-link" function
               (:user-visible-flag t
                :arguments ("complete-file" "link-location" "default-description"))
                nil [395973 403841])
            ("org-link-try-special-completion" function (:arguments ("type")) nil [403843 404128])
            ("org-file-complete-link" function (:arguments ("arg")) nil [404130 404824])
            ("org-iread-file-name" function (:arguments ("args")) nil [404826 405380])
            ("org-completing-read" function (:arguments ("args")) nil [405382 405880])
            ("org-completing-read-no-i" function (:arguments ("args")) nil [405882 406026])
            ("org-iswitchb-completing-read" function (:arguments ("prompt" "choices" "args")) nil [406028 406414])
            ("org-icompleting-read" function (:arguments ("args")) nil [406416 407196])
            ("org-link-search-failed" variable nil nil [407228 407263])
            ("org-open-link-functions" variable nil nil [407265 408083])
            ("org-next-link" function
               (:user-visible-flag t
                :arguments ("search-backward"))
                nil [408085 409009])
            ("org-previous-link" function (:user-visible-flag t) nil [409011 409166])
            ("org-translate-link" function (:arguments ("s")) nil [409168 409383])
            ("org-translate-link-from-planner" function (:arguments ("type" "path")) nil [409385 410323])
            ("org-find-file-at-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [410325 410471])
            ("org-open-at-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [410473 410762])
            ("org-window-config-before-follow-link" variable nil nil [410764 410920])
            ("org-open-at-point-global" function (:user-visible-flag t) nil [410937 411156])
            ("org-open-link-from-string" function
               (:user-visible-flag t
                :arguments ("s" "arg" "reference-buffer"))
                nil [411173 411706])
            ("org-open-at-point-functions" variable nil nil [411708 411957])
            ("org-link-search-inhibit-query" variable nil nil [411959 412001])
            ("clean-buffer-list-kill-buffer-names" variable nil nil [412024 412068])
            ("org-open-at-point" function
               (:user-visible-flag t
                :arguments ("arg" "reference-buffer"))
                nil [412094 421442])
            ("org-offer-links-in-entry" function (:arguments ("buffer" "marker" "nth" "zero")) nil [421444 423693])
            ("org-open-file-with-system" function (:arguments ("path")) nil [423824 423953])
            ("org-open-file-with-emacs" function (:arguments ("path")) nil [423954 424055])
            ("org-create-file-search-functions" variable nil nil [424075 425167])
            ("org-execute-file-search-functions" variable nil nil [425169 426221])
            ("org-search-radio-target" function (:arguments ("target")) nil [426223 426939])
            ("org-link-search" function (:arguments ("s" "avoid-pos" "stealth")) nil [426941 433596])
            ("org-get-buffer-for-internal-link" function (:arguments ("buffer")) nil [433598 434246])
            ("org-do-occur" function (:arguments ("regexp" "cleanup")) nil [434248 434971])
            ("org-mark-ring" variable nil nil [435008 435088])
            ("org-mark-ring-last-goto" variable nil nil [435089 435177])
            ("setq" code nil nil [435205 435257])
            ("loop" code nil nil [435286 435373])
            ("setcdr" code nil nil [435374 435446])
            ("org-mark-ring-push" function
               (:user-visible-flag t
                :arguments ("pos" "buffer"))
                nil [435448 435903])
            ("org-mark-ring-goto" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [435905 436659])
            ("org-remove-angle-brackets" function (:arguments ("s")) nil [436661 436828])
            ("org-add-angle-brackets" function (:arguments ("s")) nil [436829 436996])
            ("org-remove-double-quotes" function (:arguments ("s")) nil [436997 437165])
            ("org-follow-timestamp-link" function nil nil [437197 438029])
            ("declare-function" code nil nil [438057 438131])
            ("declare-function" code nil nil [438132 438193])
            ("declare-function" code nil nil [438194 438281])
            ("org-wait" variable nil nil [438282 438303])
            ("org-open-file" function (:arguments ("path" "in-emacs" "line" "search")) nil [438304 443717])
            ("org-file-apps-entry-match-against-dlink-p" function (:arguments ("entry")) nil [443719 444383])
            ("org-default-apps" function nil nil [444385 444653])
            ("org-apps-regexp-alist" function (:arguments ("list" "add-auto-mode")) nil [444655 445319])
            ("ange-ftp-name-format" variable nil nil [445321 445350])
            ("org-file-remote-p" function (:arguments ("file")) nil [445385 445904])
            ("org-get-org-file" function nil nil [445922 446193])
            ("org-notes-order-reversed-p" function nil nil [446195 446600])
            ("org-refile-target-table" variable nil nil [446602 446695])
            ("org-agenda-new-buffers" variable nil nil [446697 446775])
            ("org-refile-cache" variable nil nil [446777 446836])
            ("org-refile-markers" variable nil nil [446838 446924])
            ("org-refile-marker" function (:arguments ("pos")) nil [446926 447159])
            ("org-refile-cache-clear" function nil nil [447161 447417])
            ("org-refile-cache-check-set" function (:arguments ("set")) nil [447419 447846])
            ("org-refile-cache-put" function (:arguments ("set" "identifiers")) nil [447848 448140])
            ("org-refile-cache-get" function (:arguments ("identifiers")) nil [448142 448515])
            ("org-refile-get-targets" function (:arguments ("default-buffer" "excluded-entries")) nil [448517 452257])
            ("org-protect-slash" function (:arguments ("s")) nil [452259 452363])
            ("org-olpa" variable (:default-value (make-vector 20 nil)) nil [452365 452403])
            ("org-get-outline-path" function (:arguments ("fastp" "level" "heading")) nil [452405 453362])
            ("org-format-outline-path" function (:arguments ("path" "width" "prefix" "separator")) nil [453364 454478])
            ("org-display-outline-path" function
               (:user-visible-flag t
                :arguments ("file" "current" "separator" "just-return-string"))
                nil [454480 455548])
            ("org-refile-history" variable nil nil [455550 455618])
            ("org-after-refile-insert-hook" variable nil nil [455620 455821])
            ("org-capture-last-stored-marker" variable nil nil [455823 455862])
            ("org-refile-keep" variable nil nil [455863 455951])
            ("org-copy" function (:user-visible-flag t) nil [455953 456096])
            ("org-refile" function
               (:user-visible-flag t
                :arguments ("arg" "default-buffer" "rfloc" "msg"))
                nil [456098 462631])
            ("org-refile-goto-last-stored" function (:user-visible-flag t) nil [462633 462866])
            ("org-refile--get-location" function (:arguments ("refloc" "tbl")) nil [462868 463234])
            ("org-refile-get-location" function (:arguments ("prompt" "default-buffer" "new-nodes" "no-exclude")) nil [463236 466354])
            ("declare-function" code nil nil [466356 466405])
            ("org-refile-check-position" function (:arguments ("refile-pointer")) nil [466406 467196])
            ("org-refile-new-child" function (:arguments ("parent-target" "child")) nil [467198 468033])
            ("org-olpath-completing-read" function (:arguments ("prompt" "collection" "args")) nil [468035 468871])
            ("org-find-dblock" function (:arguments ("name")) nil [468894 469311])
            ("org-create-dblock" function (:arguments ("plist")) nil [469313 469903])
            ("org-prepare-dblock" function nil nil [469905 470843])
            ("org-map-dblocks" function (:arguments ("command")) nil [470845 471442])
            ("org-dblock-update" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [471444 471780])
            ("org-update-dblock" function (:user-visible-flag t) nil [471782 472815])
            ("org-beginning-of-dblock" function nil nil [472817 473251])
            ("org-update-all-dblocks" function (:user-visible-flag t) nil [473253 473461])
            ("declare-function" code nil nil [473481 473543])
            ("declare-function" code nil nil [473544 473609])
            ("org-get-export-keywords" function nil nil [473610 474209])
            ("org-options-keywords" variable
               (:constant-flag t
                :default-value (quote ("ARCHIVE:" "AUTHOR:" "BIND:" "CATEGORY:" "COLUMNS:" "CREATOR:" "DATE:" "DESCRIPTION:" "DRAWERS:" "EMAIL:" "EXCLUDE_TAGS:" "FILETAGS:" "INCLUDE:" "INDEX:" "KEYWORDS:" "LANGUAGE:" "MACRO:" "OPTIONS:" "PROPERTY:" "PRIORITIES:" "SELECT_TAGS:" "SEQ_TODO:" "SETUPFILE:" "STARTUP:" "TAGS:" "TITLE:" "TODO:" "TYP_TODO:" "SELECT_TAGS:" "EXCLUDE_TAGS:")))
                nil [474211 474606])
            ("org-structure-template-alist" variable (:default-value (quote (("s" "#+BEGIN_SRC ?

#+END_SRC") ("e" "#+BEGIN_EXAMPLE
?
#+END_EXAMPLE") ("q" "#+BEGIN_QUOTE
?
#+END_QUOTE") ("v" "#+BEGIN_VERSE
?
#+END_VERSE") ("V" "#+BEGIN_VERBATIM
?
#+END_VERBATIM") ("c" "#+BEGIN_CENTER
?
#+END_CENTER") ("l" "#+BEGIN_LaTeX
?
#+END_LaTeX") ("L" "#+LaTeX: ") ("h" "#+BEGIN_HTML
?
#+END_HTML") ("H" "#+HTML: ") ("a" "#+BEGIN_ASCII
?
#+END_ASCII") ("A" "#+ASCII: ") ("i" "#+INDEX: ?") ("I" "#+INCLUDE: %file ?")))) nil [474608 475932])
            ("org-try-structure-completion" function nil nil [475934 476438])
            ("org-complete-expand-structure-template" function (:arguments ("start" "cell")) nil [476440 477221])
            ("org-toggle-comment" function (:user-visible-flag t) nil [477254 477833])
            ("org-last-todo-state-is-todo" variable nil nil [477835 478027])
            ("org-setting-tags" variable nil nil [478029 478058])
            ("org-todo-setup-filter-hook" variable nil nil [478082 478273])
            ("org-todo-get-default-hook" variable nil nil [478275 478486])
            ("org-agenda-headline-snapshot-before-repeat" variable nil nil [478488 478539])
            ("org-current-effective-time" function nil nil [478541 478990])
            ("org-todo-yesterday" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [478992 479366])
            ("org-block-entry-blocking" variable nil nil [479368 479454])
            ("org-cancel-repeater" function (:user-visible-flag t) nil [479456 479993])
            ("org-todo" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [479995 489823])
            ("org-block-todo-from-children-or-siblings-or-parent" function (:arguments ("change-plist")) nil [489825 492760])
            ("org-track-ordered-property-with-tag" variable nil nil [492795 493636])
            ("org-toggle-ordered-property" function (:user-visible-flag t) nil [493638 494338])
            ("org-blocked-by-checkboxes" variable nil nil [494340 494374])
            ("org-block-todo-from-checkboxes" function (:arguments ("change-plist")) nil [494396 495674])
            ("org-entry-blocked-p" function nil nil [495691 496040])
            ("org-update-statistics-cookies" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [496042 497368])
            ("org-entry-property-inherited-from" variable nil nil [497370 497412])
            ("org-update-parent-todo-statistics" function nil nil [497430 501444])
            ("org-after-todo-statistics-hook" variable nil nil [501446 502177])
            ("org-todo-statistics-hook" variable nil nil [502179 502416])
            ("org-todo-trigger-tag-changes" function (:arguments ("state")) nil [502418 503085])
            ("org-local-logging" function (:arguments ("value")) nil [503087 503674])
            ("org-get-todo-sequence-head" function (:arguments ("kwd")) nil [503676 504244])
            ("org-fast-todo-selection" function nil nil [504246 506292])
            ("org-entry-is-todo-p" function nil nil [506294 506378])
            ("org-entry-is-done-p" function nil nil [506380 506460])
            ("org-get-todo-state" function nil nil [506462 506669])
            ("org-at-date-range-p" function
               (:user-visible-flag t
                :arguments ("inactive-ok"))
                nil [506671 507449])
            ("org-get-repeat" function (:arguments ("tagline")) nil [507451 507814])
            ("org-last-changed-timestamp" variable nil nil [507816 507851])
            ("org-last-inserted-timestamp" variable nil nil [507852 507888])
            ("org-log-post-message" variable nil nil [507889 507918])
            ("org-log-note-purpose" variable nil nil [507919 507948])
            ("org-log-note-how" variable nil nil [507949 507978])
            ("org-log-note-extra" variable nil nil [507979 508006])
            ("org-auto-repeat-maybe" function (:arguments ("done-word")) nil [508007 511909])
            ("org-show-todo-tree" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [511911 512921])
            ("org-deadline" function
               (:user-visible-flag t
                :arguments ("arg" "time"))
                nil [512923 515697])
            ("org-schedule" function
               (:user-visible-flag t
                :arguments ("arg" "time"))
                nil [515699 518492])
            ("org-get-scheduled-time" function (:arguments ("pom" "inherit")) nil [518494 518816])
            ("org-get-deadline-time" function (:arguments ("pom" "inherit")) nil [518818 519132])
            ("org-remove-timestamp-with-keyword" function (:arguments ("keyword")) nil [519134 519801])
            ("org-time-was-given" variable nil nil [519803 519830])
            ("org-end-time-was-given" variable nil nil [519862 519893])
            ("org-at-planning-p" function nil nil [519926 520447])
            ("org-add-planning-info" function (:arguments ("what" "time" "remove")) nil [520449 524038])
            ("org-log-note-marker" variable (:default-value (make-marker)) nil [524040 524082])
            ("org-log-note-purpose" variable nil nil [524083 524116])
            ("org-log-note-state" variable nil nil [524117 524148])
            ("org-log-note-previous-state" variable nil nil [524149 524189])
            ("org-log-note-extra" variable nil nil [524190 524221])
            ("org-log-note-window-configuration" variable nil nil [524222 524268])
            ("org-log-note-return-to" variable (:default-value (make-marker)) nil [524269 524314])
            ("org-log-note-effective-time" variable nil nil [524315 524478])
            ("org-log-post-message" variable nil nil [524480 524604])
            ("org-add-note" function (:user-visible-flag t) nil [524606 524791])
            ("org-log-beginning" function (:arguments ("create")) nil [524793 526211])
            ("org-add-log-setup" function (:arguments ("purpose" "state" "prev-state" "findpos" "how" "extra")) nil [526213 527359])
            ("org-skip-over-state-notes" function nil nil [527361 528136])
            ("org-add-log-note" function (:arguments ("purpose")) nil [528138 529809])
            ("org-note-abort" variable nil nil [529811 529838])
            ("org-store-log-note" function nil nil [529860 533504])
            ("org-remove-empty-drawer-at" function (:arguments ("pos")) nil [533506 534122])
            ("org-ts-type" variable nil nil [534124 534148])
            ("org-sparse-tree" function
               (:user-visible-flag t
                :arguments ("arg" "type"))
                nil [534149 536524])
            ("org-occur-highlights" variable nil nil [536526 536604])
            ("make-variable-buffer-local" code nil nil [536605 536655])
            ("org-occur-parameters" variable nil nil [536656 537209])
            ("make-variable-buffer-local" code nil nil [537210 537260])
            ("org-occur" function
               (:user-visible-flag t
                :arguments ("regexp" "keep-previous" "callback"))
                nil [537262 539026])
            ("org-occur-next-match" function (:arguments ("n" "reset")) nil [539028 539893])
            ("org-show-context" function (:arguments ("key")) nil [539895 540304])
            ("org-show-set-visibility" function (:arguments ("detail")) nil [540306 541394])
            ("org-reveal-start-hook" variable nil nil [541396 541472])
            ("org-reveal" function
               (:user-visible-flag t
                :arguments ("siblings"))
                nil [541474 542335])
            ("org-highlight-new-match" function (:arguments ("beg" "end")) nil [542337 542616])
            ("org-remove-occur-highlights" function
               (:user-visible-flag t
                :arguments ("beg" "end" "noremove"))
                nil [542618 543141])
            ("org-priority-regexp" variable (:default-value ".*?\\(\\[#\\([A-Z0-9]\\)\\] ?\\)") nil [543160 543279])
            ("org-remove-priority-next-time" variable nil nil [543281 543323])
            ("org-priority-up" function (:user-visible-flag t) nil [543325 543435])
            ("org-priority-down" function (:user-visible-flag t) nil [543437 543551])
            ("org-priority" function
               (:user-visible-flag t
                :arguments ("action" "show"))
                nil [543553 546549])
            ("org-show-priority" function (:user-visible-flag t) nil [546551 547072])
            ("org-get-priority" function (:arguments ("s")) nil [547074 547438])
            ("org-agenda-archives-mode" variable nil nil [547451 547484])
            ("org-map-continue-from" variable nil nil [547485 547644])
            ("org-scanner-tags" variable nil nil [547646 547735])
            ("org-trust-scanner-tags" variable nil nil [547736 548314])
            ("org-scan-tags" function (:arguments ("action" "matcher" "todo-only" "start-level")) nil [548316 554296])
            ("org-remove-uninherited-tags" function (:arguments ("tags")) nil [554298 554963])
            ("org-match-sparse-tree" function
               (:user-visible-flag t
                :arguments ("todo-only" "match"))
                nil [554965 555409])
            ("defalias" code nil nil [555411 555466])
            ("org-cached-props" variable nil nil [555468 555497])
            ("org-cached-entry-get" function (:arguments ("pom" "property")) nil [555498 556146])
            ("org-global-tags-completion-table" function (:arguments ("files")) nil [556148 556739])
            ("org-make-tags-matcher" function (:arguments ("match")) nil [556741 562974])
            ("org-tags-expand" function (:arguments ("match" "single-as-list" "downcased" "tags-already-expanded")) nil [562976 567988])
            ("org-op-to-function" function (:arguments ("op" "stringp")) nil [567990 568534])
            ("org<>" function (:arguments ("a" "b")) nil [568536 568569])
            ("org-string<=" function (:arguments ("a" "b")) nil [568570 568629])
            ("org-string>=" function (:arguments ("a" "b")) nil [568630 568676])
            ("org-string>" function (:arguments ("a" "b")) nil [568677 568749])
            ("org-string<>" function (:arguments ("a" "b")) nil [568750 568796])
            ("org-time=" function (:arguments ("a" "b")) nil [568797 568890])
            ("org-time<" function (:arguments ("a" "b")) nil [568891 568984])
            ("org-time<=" function (:arguments ("a" "b")) nil [568985 569078])
            ("org-time>" function (:arguments ("a" "b")) nil [569079 569172])
            ("org-time>=" function (:arguments ("a" "b")) nil [569173 569266])
            ("org-time<>" function (:arguments ("a" "b")) nil [569267 569360])
            ("org-2ft" function (:arguments ("s")) nil [569361 569725])
            ("org-time-today" function nil nil [569727 569977])
            ("org-matcher-time" function (:arguments ("s")) nil [569979 570562])
            ("org-match-any-p" function (:arguments ("re" "list")) nil [570564 570715])
            ("org-add-colon-after-tag-completion" variable nil nil [570717 570764])
            ("org-tags-overlay" variable (:default-value (make-overlay 1 1)) nil [570794 570838])
            ("org-detach-overlay" code nil nil [570839 570876])
            ("org-get-local-tags-at" function (:arguments ("pos")) nil [570878 571010])
            ("org-get-local-tags" function nil nil [571012 571128])
            ("org-get-tags-at" function
               (:user-visible-flag t
                :arguments ("pos" "local"))
                nil [571130 572636])
            ("org-add-prop-inherited" function (:arguments ("s")) nil [572638 572730])
            ("org-toggle-tag" function (:arguments ("tag" "onoff")) nil [572732 573756])
            ("org-align-tags-here" function (:arguments ("to-col")) nil [573758 574600])
            ("org-set-tags-command" function
               (:user-visible-flag t
                :arguments ("arg" "just-align"))
                nil [574602 575007])
            ("org-set-tags-to" function
               (:user-visible-flag t
                :arguments ("data"))
                nil [575009 575990])
            ("org-align-all-tags" function (:user-visible-flag t) nil [575992 576240])
            ("org-indent-indentation-per-level" variable nil nil [576242 576283])
            ("org-set-tags" function
               (:user-visible-flag t
                :arguments ("arg" "just-align"))
                nil [576284 580306])
            ("org-change-tag-in-region" function
               (:user-visible-flag t
                :arguments ("beg" "end" "tag" "off"))
                nil [580308 581827])
            ("org-tags-completion-function" function (:arguments ("string" "predicate" "flag")) nil [581829 582630])
            ("org-fast-tag-insert" function (:arguments ("kwd" "tags" "face" "end")) nil [582632 582888])
            ("org-fast-tag-show-exit" function (:arguments ("flag")) nil [582890 583224])
            ("org-set-current-tags-overlay" function (:arguments ("current" "prefix")) nil [583226 583647])
            ("org-last-tag-selection-key" variable nil nil [583649 583688])
            ("org-fast-tag-selection" function (:arguments ("current" "inherited" "table" "todo-table")) nil [583689 590776])
            ("org-get-tags-string" function nil nil [590778 591088])
            ("org-get-tags" function nil nil [591090 591220])
            ("org-get-buffer-tags" function nil nil [591222 591707])
            ("org-map-entries" function (:arguments ("func" "match" "scope" "skip")) nil [591731 597177])
            ("org-special-properties" variable
               (:constant-flag t
                :default-value (quote ("ALLTAGS" "BLOCKED" "CLOCKSUM" "CLOCKSUM_T" "CLOSED" "DEADLINE" "FILE" "ITEM" "PRIORITY" "SCHEDULED" "TAGS" "TIMESTAMP" "TIMESTAMP_IA" "TODO")))
                nil [597199 597518])
            ("org-default-properties" variable
               (:constant-flag t
                :default-value (quote ("ARCHIVE" "CATEGORY" "SUMMARY" "DESCRIPTION" "CUSTOM_ID" "LOCATION" "LOGGING" "COLUMNS" "VISIBILITY" "TABLE_EXPORT_FORMAT" "TABLE_EXPORT_FILE" "EXPORT_OPTIONS" "EXPORT_TEXT" "EXPORT_FILE_NAME" "EXPORT_TITLE" "EXPORT_AUTHOR" "EXPORT_DATE" "UNNUMBERED" "ORDERED" "NOBLOCKING" "COOKIE_DATA" "LOG_INTO_DRAWER" "REPEAT_TO_STATE" "CLOCK_MODELINE_TOTAL" "STYLE" "HTML_CONTAINER_CLASS")))
                nil [597520 598096])
            ("org--update-property-plist" function (:arguments ("key" "val" "props")) nil [598098 598510])
            ("org-get-property-block" function (:arguments ("beg" "force")) nil [598512 599578])
            ("org-at-property-p" function nil nil [599580 599965])
            ("org-property-action" function (:user-visible-flag t) nil [599967 600530])
            ("org-inc-effort" function (:user-visible-flag t) nil [600532 600667])
            ("org-clock-effort" variable nil nil [600669 600694])
            ("org-clock-current-task" variable nil nil [600728 600759])
            ("org-set-effort" function
               (:user-visible-flag t
                :arguments ("value" "increment"))
                nil [600787 602702])
            ("org-entry-properties" function (:arguments ("pom" "which")) nil [602704 610738])
            ("org-property--local-values" function (:arguments ("property" "literal-nil")) nil [610740 611729])
            ("org-entry-get" function (:arguments ("pom" "property" "inherit" "literal-nil")) nil [611731 613213])
            ("org-property-or-variable-value" function (:arguments ("var" "inherit")) nil [613215 613576])
            ("org-entry-delete" function (:arguments ("pom" "property")) nil [613578 614482])
            ("org-entry-add-to-multivalued-property" function (:arguments ("pom" "property" "value")) nil [614628 615076])
            ("org-entry-remove-from-multivalued-property" function (:arguments ("pom" "property" "value")) nil [615078 615523])
            ("org-entry-member-in-multivalued-property" function (:arguments ("pom" "property" "value")) nil [615525 615846])
            ("org-entry-get-multivalued-property" function (:arguments ("pom" "property")) nil [615848 616109])
            ("org-entry-put-multivalued-property" function (:arguments ("pom" "property" "values")) nil [616111 616538])
            ("org-entry-protect-space" function (:arguments ("s")) nil [616540 616768])
            ("org-entry-restore-space" function (:arguments ("s")) nil [616770 616998])
            ("org-entry-property-inherited-from" variable (:default-value (make-marker)) nil [617000 617395])
            ("org-entry-get-with-inheritance" function (:arguments ("property" "literal-nil")) nil [617397 618719])
            ("org-property-changed-functions" variable nil nil [618721 618914])
            ("org-entry-put" function (:arguments ("pom" "property" "value")) nil [618916 621833])
            ("org-buffer-property-keys" function (:arguments ("specials" "defaults" "columns")) nil [621835 624393])
            ("org-property-values" function (:arguments ("key")) nil [624395 624724])
            ("org-insert-property-drawer" function nil nil [624726 625521])
            ("org-insert-drawer" function
               (:user-visible-flag t
                :arguments ("arg" "drawer"))
                nil [625523 627581])
            ("org-property-set-functions-alist" variable nil nil [627583 627818])
            ("org-set-property-function" function (:arguments ("property")) nil [627820 628078])
            ("org-read-property-value" function (:arguments ("property")) nil [628080 628807])
            ("org-last-set-property" variable nil nil [628809 628843])
            ("org-last-set-property-value" variable nil nil [628844 628884])
            ("org-read-property-name" function nil nil [628885 629310])
            ("org-set-property-and-value" function
               (:user-visible-flag t
                :arguments ("use-last"))
                nil [629312 629941])
            ("org-set-property" function
               (:user-visible-flag t
                :arguments ("property" "value"))
                nil [629943 630864])
            ("org-find-property" function (:arguments ("property" "value")) nil [630866 631638])
            ("org-delete-property" function
               (:user-visible-flag t
                :arguments ("property"))
                nil [631640 632238])
            ("org-delete-property-globally" function
               (:user-visible-flag t
                :arguments ("property"))
                nil [632240 632878])
            ("org-columns-current-fmt-compiled" variable nil nil [632880 632921])
            ("org-compute-property-at-point" function (:user-visible-flag t) nil [632951 633496])
            ("org-property-allowed-value-functions" variable nil nil [633498 633958])
            ("org-property-get-allowed-values" function (:arguments ("pom" "property" "table")) nil [633960 635182])
            ("org-property-previous-allowed-value" function
               (:user-visible-flag t
                :arguments ("previous"))
                nil [635184 635358])
            ("org-property-next-allowed-value" function
               (:user-visible-flag t
                :arguments ("previous"))
                nil [635360 636754])
            ("org-find-olp" function (:arguments ("path" "this-buffer")) nil [636756 638385])
            ("org-find-exact-headline-in-buffer" function (:arguments ("heading" "buffer" "pos-only")) nil [638387 639119])
            ("org-find-exact-heading-in-directory" function (:arguments ("heading" "dir")) nil [639121 639826])
            ("org-find-entry-with-id" function
               (:user-visible-flag t
                :arguments ("ident"))
                nil [639828 640422])
            ("org-last-changed-timestamp" variable nil nil [640441 640480])
            ("org-last-inserted-timestamp" variable nil nil [640481 640584])
            ("org-ts-what" variable nil nil [640585 640605])
            ("org-time-stamp" function
               (:user-visible-flag t
                :arguments ("arg" "inactive"))
                nil [640638 643289])
            ("org-get-compact-tod" function (:arguments ("s")) nil [643370 644002])
            ("org-time-stamp-inactive" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [644004 644419])
            ("org-date-ovl" variable (:default-value (make-overlay 1 1)) nil [644421 644461])
            ("overlay-put" code nil nil [644462 644513])
            ("org-detach-overlay" code nil nil [644514 644547])
            ("org-ans1" variable nil nil [644549 644566])
            ("org-ans2" variable nil nil [644598 644615])
            ("org-plain-time-of-day-regexp" variable nil nil [644648 644685])
            ("org-overriding-default-time" variable nil nil [644703 644743])
            ("org-read-date-overlay" variable nil nil [644765 644799])
            ("org-dcst" variable nil nil [644800 644821])
            ("org-read-date-history" variable nil nil [644843 644877])
            ("org-read-date-final-answer" variable nil nil [644878 644917])
            ("org-read-date-analyze-futurep" variable nil nil [644918 644960])
            ("org-read-date-analyze-forced-year" variable nil nil [644961 645007])
            ("org-read-date-inactive" variable nil nil [645008 645039])
            ("org-read-date-minibuffer-local-map" variable (:default-value (let* ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (org-defkey map (kbd ".") (lambda nil (interactive) (if (org-looking-back "^[^:]+: " (let ((inhibit-field-text-motion t)) (line-beginning-position))) (org-eval-in-calendar (quote (calendar-goto-today))) (insert ".")))) (org-defkey map (kbd "C-.") (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-goto-today))))) (org-defkey map [(meta shift left)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-month 1))))) (org-defkey map [(meta shift right)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-month 1))))) (org-defkey map [(meta shift up)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-year 1))))) (org-defkey map [(meta shift down)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-year 1))))) (org-defkey map [27 (shift left)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-month 1))))) (org-defkey map [27 (shift right)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-month 1))))) (org-defkey map [27 (shift up)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-year 1))))) (org-defkey map [27 (shift down)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-year 1))))) (org-defkey map [(shift up)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-week 1))))) (org-defkey map [(shift down)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-week 1))))) (org-defkey map [(shift left)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-backward-day 1))))) (org-defkey map [(shift right)] (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-forward-day 1))))) (org-defkey map "!" (lambda nil (interactive) (org-eval-in-calendar (quote (diary-view-entries))) (message ""))) (org-defkey map ">" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-left 1))))) (org-defkey map "<" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-right 1))))) (org-defkey map "" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-left-three-months 1))))) (org-defkey map "\366" (lambda nil (interactive) (org-eval-in-calendar (quote (calendar-scroll-right-three-months 1))))) map)) nil [645041 648236])
            ("org-def" variable nil nil [648238 648254])
            ("org-defdecode" variable nil nil [648255 648277])
            ("org-with-time" variable nil nil [648278 648300])
            ("org-read-date" function (:arguments ("org-with-time" "to-time" "from-string" "prompt" "default-time" "default-input" "inactive")) nil [648302 654806])
            ("org-read-date-display" function nil nil [654808 656274])
            ("org-read-date-analyze" function (:arguments ("ans" "org-def" "org-defdecode")) nil [656276 665323])
            ("parse-time-weekdays" variable nil nil [665325 665353])
            ("org-read-date-get-relative" function (:arguments ("s" "today" "default")) nil [665354 666890])
            ("org-order-calendar-date-args" function (:arguments ("arg1" "arg2" "arg3")) nil [666892 667654])
            ("org-eval-in-calendar" function (:arguments ("form" "keepdate")) nil [667656 668394])
            ("org-calendar-select" function (:user-visible-flag t) nil [668396 668849])
            ("org-insert-time-stamp" function (:arguments ("time" "with-hm" "inactive" "pre" "post" "extra")) nil [668851 670084])
            ("org-toggle-time-stamp-overlays" function (:user-visible-flag t) nil [670086 670938])
            ("org-display-custom-time" function (:arguments ("beg" "end")) nil [670940 672014])
            ("org-fix-decoded-time" function (:arguments ("time")) nil [672016 672217])
            ("define-obsolete-function-alias" code nil nil [672219 672299])
            ("org-time-stamp-to-now" function (:arguments ("timestamp-string" "seconds")) nil [672301 672647])
            ("org-deadline-close" function (:arguments ("timestamp-string" "ndays")) nil [672649 672926])
            ("org-get-wdays" function (:arguments ("ts" "delay" "zero-delay")) nil [672928 673876])
            ("org-calendar-select-mouse" function
               (:user-visible-flag t
                :arguments ("ev"))
                nil [673878 674366])
            ("org-check-deadlines" function
               (:user-visible-flag t
                :arguments ("ndays"))
                nil [674368 675221])
            ("org-re-timestamp" function (:arguments ("type")) nil [675223 676016])
            ("org-check-before-date" function
               (:user-visible-flag t
                :arguments ("date"))
                nil [676018 676624])
            ("org-check-after-date" function
               (:user-visible-flag t
                :arguments ("date"))
                nil [676626 677231])
            ("org-check-dates-range" function
               (:user-visible-flag t
                :arguments ("start-date" "end-date"))
                nil [677233 678076])
            ("org-evaluate-time-range" function
               (:user-visible-flag t
                :arguments ("to-buffer"))
                nil [678078 680375])
            ("org-make-tdiff-string" function (:arguments ("y" "d" "h" "m")) nil [680377 680867])
            ("org-time-string-to-time" function (:arguments ("s" "buffer" "pos")) nil [680869 681232])
            ("org-time-string-to-seconds" function (:arguments ("s")) nil [681234 681374])
            ("org-time-string-to-absolute" function (:arguments ("s" "daynr" "prefer" "show-all" "buffer" "pos")) nil [681376 682413])
            ("org-days-to-iso-week" function (:arguments ("days")) nil [682415 682545])
            ("org-small-year-to-year" function (:arguments ("year")) nil [682547 683081])
            ("org-time-from-absolute" function (:arguments ("d")) nil [683083 683352])
            ("org-calendar-holiday" function nil nil [683354 683631])
            ("org-diary-sexp-entry" function (:arguments ("sexp" "entry" "date")) nil [683633 684438])
            ("org-diary-to-ical-string" function (:arguments ("frombuf")) nil [684440 685283])
            ("org-closest-date" function (:arguments ("start" "current" "change" "prefer" "show-all")) nil [685285 688447])
            ("org-date-to-gregorian" function (:arguments ("date")) nil [688449 688847])
            ("org-parse-time-string" function (:arguments ("s" "nodefault")) nil [688849 689704])
            ("org-timestamp-up" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [689706 690028])
            ("org-timestamp-down" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [690030 690358])
            ("org-timestamp-up-day" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [690360 690669])
            ("org-timestamp-down-day" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [690671 690988])
            ("org-at-timestamp-p" function
               (:user-visible-flag t
                :arguments ("inactive-ok"))
                nil [690990 692340])
            ("org-toggle-timestamp-type" function (:user-visible-flag t) nil [692342 692859])
            ("org-at-clock-log-p" function nil nil [692861 693017])
            ("org-clock-history" variable nil nil [693019 693045])
            ("org-clock-adjust-closest" variable nil nil [693092 693129])
            ("org-timestamp-change" function (:arguments ("n" "what" "updown" "suppress-tmp-delay")) nil [693165 699164])
            ("org-modify-ts-extra" function (:arguments ("s" "pos" "n" "dm")) nil [699166 700687])
            ("org-recenter-calendar" function (:arguments ("date")) nil [700689 701005])
            ("org-goto-calendar" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [701007 701748])
            ("org-get-date-from-calendar" function nil nil [701750 701943])
            ("org-date-from-calendar" function (:user-visible-flag t) nil [701945 702364])
            ("org-effort-durations" variable (:default-value (\` (("min" . 1) ("h" . 60) ("d" \, (* 60 8)) ("w" \, (* 60 8 5)) ("m" \, (* 60 8 5 4)) ("y" \, (* 60 8 5 40))))) nil [702366 703059])
            ("org-minutes-to-clocksum-string" function (:arguments ("m")) nil [703061 707353])
            ("defalias" code nil nil [707355 707426])
            ("make-obsolete" code nil nil [707427 707534])
            ("org-hours-to-clocksum-string" function (:arguments ("n")) nil [707536 707620])
            ("org-hh:mm-string-to-minutes" function (:arguments ("s")) nil [707622 708183])
            ("org-image-actual-width" variable (:default-value t) nil [708185 709093])
            ("org-agenda-inhibit-startup" variable nil nil [709095 709402])
            ("define-obsolete-variable-alias" code nil nil [709404 709514])
            ("org-agenda-ignore-properties" variable nil nil [709516 710127])
            ("org-duration-string-to-minutes" function (:arguments ("s" "output-to-string")) nil [710129 710905])
            ("org-save-all-org-buffers" function (:user-visible-flag t) nil [710919 711237])
            ("org-revert-all-org-buffers" function (:user-visible-flag t) nil [711239 712259])
            ("org-switchb" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [712295 713181])
            ("defalias" code nil nil [713265 713305])
            ("defalias" code nil nil [713321 713358])
            ("org-buffer-list" function (:arguments ("predicate" "exclude-tmp")) nil [713360 714594])
            ("org-agenda-files" function (:arguments ("unrestricted" "archives")) nil [714596 715724])
            ("org-agenda-file-p" function (:arguments ("file")) nil [715726 716050])
            ("org-edit-agenda-file-list" function (:user-visible-flag t) nil [716052 716975])
            ("org-store-new-agenda-file-list" function (:arguments ("list")) nil [716977 717638])
            ("org-read-agenda-file-list" function (:arguments ("pair-with-expansion")) nil [717640 718358])
            ("org-cycle-agenda-files" function (:user-visible-flag t) nil [718375 719008])
            ("org-agenda-file-to-front" function
               (:user-visible-flag t
                :arguments ("to-end"))
                nil [719010 720036])
            ("org-remove-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [720038 720929])
            ("org-file-menu-entry" function (:arguments ("file")) nil [720931 721006])
            ("org-check-agenda-file" function (:arguments ("file")) nil [721008 721409])
            ("org-get-agenda-file-buffer" function (:arguments ("file")) nil [721411 721821])
            ("org-release-buffers" function (:arguments ("blist")) nil [721823 722294])
            ("org-agenda-prepare-buffers" function
               (:user-visible-flag t
                :arguments ("files"))
                nil [722296 724884])
            ("org-cdlatex-mode-map" variable (:default-value (make-sparse-keymap)) nil [724913 725008])
            ("org-defkey" code nil nil [725010 725077])
            ("org-defkey" code nil nil [725078 725145])
            ("org-defkey" code nil nil [725146 725204])
            ("org-defkey" code nil nil [725205 725267])
            ("org-defkey" code nil nil [725268 725341])
            ("org-cdlatex-texmathp-advice-is-done" variable nil nil [725343 725463])
            ("define-minor-mode" code nil nil [725465 726669])
            ("turn-on-org-cdlatex" function nil nil [726671 726772])
            ("org-try-cdlatex-tab" function nil nil [726774 727566])
            ("org-cdlatex-underscore-caret" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [727568 727943])
            ("org-cdlatex-math-modify" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [727945 728307])
            ("org-cdlatex-environment-indent" function
               (:user-visible-flag t
                :arguments ("environment" "item"))
                nil [728309 730329])
            ("org-inside-LaTeX-fragment-p" function nil nil [730355 732314])
            ("org-inside-latex-macro-p" function nil nil [732316 732516])
            ("org-latex-fragment-image-overlays" variable nil nil [732518 732625])
            ("make-variable-buffer-local" code nil nil [732626 732689])
            ("org-remove-latex-fragment-image-overlays" function (:arguments ("beg" "end")) nil [732691 733424])
            ("define-obsolete-function-alias" code nil nil [733426 733522])
            ("org-toggle-latex-fragment" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [733523 736685])
            ("org-format-latex" function (:arguments ("prefix" "dir" "overlays" "msg" "forbuffer" "processing-type")) nil [736687 741314])
            ("org-create-math-formula" function
               (:user-visible-flag t
                :arguments ("latex-frag" "mathml-file"))
                nil [741316 743788])
            ("org-format-latex-as-mathml" function (:arguments ("latex-frag" "latex-frag-type" "prefix" "dir")) nil [743790 744925])
            ("org-create-formula-image" function (:arguments ("string" "tofile" "options" "buffer" "type")) nil [744927 745975])
            ("declare-function" code nil nil [745977 746030])
            ("declare-function" code nil nil [746031 746105])
            ("declare-function" code nil nil [746106 746182])
            ("declare-function" code nil nil [746183 746246])
            ("declare-function" code nil nil [746247 746321])
            ("org-create-formula--latex-header" function nil nil [746322 746877])
            ("org--get-display-dpi" function nil nil [746879 747203])
            ("org-create-formula-image-with-dvipng" function (:arguments ("string" "tofile" "options" "buffer")) nil [747263 749572])
            ("declare-function" code nil nil [749574 749649])
            ("org-create-formula-image-with-imagemagick" function (:arguments ("string" "tofile" "options" "buffer")) nil [749650 751950])
            ("org-splice-latex-header" function (:arguments ("tpl" "def-pkg" "pkg" "snippets-p" "extra")) nil [751952 753764])
            ("org-latex-packages-to-string" function (:arguments ("pkg" "snippets-p" "newline")) nil [753766 754290])
            ("org-dvipng-color" function (:arguments ("attr")) nil [754292 754678])
            ("org-dvipng-color-format" function (:arguments ("color-name")) nil [754680 754874])
            ("org-latex-color" function (:arguments ("attr")) nil [754876 755260])
            ("org-latex-color-format" function (:arguments ("color-name")) nil [755262 755440])
            ("org-normalize-color" function (:arguments ("value")) nil [755442 755577])
            ("org-inline-image-overlays" variable nil nil [755600 755638])
            ("make-variable-buffer-local" code nil nil [755639 755694])
            ("org-toggle-inline-images" function
               (:user-visible-flag t
                :arguments ("include-linked"))
                nil [755696 756309])
            ("org-redisplay-inline-images" function (:user-visible-flag t) nil [756311 756541])
            ("org-display-inline-images" function
               (:user-visible-flag t
                :arguments ("include-linked" "refresh" "beg" "end"))
                nil [756543 760483])
            ("define-obsolete-function-alias" code nil nil [760485 760599])
            ("org-display-inline-remove-overlay" function (:arguments ("ov" "after" "beg" "end" "len")) nil [760601 760885])
            ("org-remove-inline-images" function (:user-visible-flag t) nil [760887 761065])
            ("define-key" code nil nil [761170 761242])
            ("define-key" code nil nil [761243 761315])
            ("define-key" code nil nil [761316 761410])
            ("define-key" code nil nil [761411 761507])
            ("define-key" code nil nil [761508 761597])
            ("define-key" code nil nil [761598 761668])
            ("define-key" code nil nil [761669 761737])
            ("define-key" code nil nil [761738 761810])
            ("define-key" code nil nil [761811 761901])
            ("define-key" code nil nil [761902 762000])
            ("org-defkey" code nil nil [763925 763982])
            ("org-defkey" code nil nil [764010 764059])
            ("org-defkey" code nil nil [764060 764109])
            ("org-defkey" code nil nil [764110 764177])
            ("org-defkey" code nil nil [764178 764223])
            ("unless" code nil nil [764280 764366])
            ("org-defkey" code nil nil [764367 764423])
            ("define-key" code nil nil [764424 764473])
            ("org-defkey" code nil nil [764475 764540])
            ("org-defkey" code nil nil [764541 764613])
            ("org-defkey" code nil nil [764614 764678])
            ("org-defkey" code nil nil [764710 764764])
            ("org-defkey" code nil nil [764765 764820])
            ("org-defkey" code nil nil [764821 764873])
            ("org-defkey" code nil nil [764874 764928])
            ("org-defkey" code nil nil [764930 765014])
            ("org-defkey" code nil nil [765015 765098])
            ("org-defkey" code nil nil [765099 765165])
            ("org-defkey" code nil nil [765166 765233])
            ("org-defkey" code nil nil [765234 765298])
            ("org-defkey" code nil nil [765299 765365])
            ("org-defkey" code nil nil [765367 765427])
            ("org-defkey" code nil nil [765428 765490])
            ("org-defkey" code nil nil [765491 765553])
            ("org-defkey" code nil nil [765554 765617])
            ("org-defkey" code nil nil [765619 765691])
            ("org-defkey" code nil nil [765692 765763])
            ("org-defkey" code nil nil [765764 765830])
            ("org-defkey" code nil nil [765831 765902])
            ("define-key" code nil nil [765918 765978])
            ("mapc" code nil nil [765979 766087])
            ("when" code nil nil [766220 768072])
            ("org-defkey" code nil nil [768097 768151])
            ("org-defkey" code nil nil [768181 768229])
            ("if" code nil nil [768230 768370])
            ("if" code nil nil [768371 768507])
            ("if" code nil nil [768508 768648])
            ("org-defkey" code nil nil [768649 768708])
            ("org-defkey" code nil nil [768709 768766])
            ("org-defkey" code nil nil [768767 768825])
            ("org-defkey" code nil nil [768826 768878])
            ("org-defkey" code nil nil [768879 768933])
            ("org-defkey" code nil nil [768934 769002])
            ("org-defkey" code nil nil [769003 769072])
            ("org-defkey" code nil nil [769073 769125])
            ("org-defkey" code nil nil [769126 769182])
            ("org-defkey" code nil nil [769183 769240])
            ("org-defkey" code nil nil [769241 769302])
            ("org-defkey" code nil nil [769303 769372])
            ("org-defkey" code nil nil [769373 769429])
            ("org-defkey" code nil nil [769430 769491])
            ("org-defkey" code nil nil [769492 769561])
            ("org-defkey" code nil nil [769562 769628])
            ("org-defkey" code nil nil [769629 769690])
            ("org-defkey" code nil nil [769691 769737])
            ("org-defkey" code nil nil [769738 769784])
            ("org-defkey" code nil nil [769785 769843])
            ("org-defkey" code nil nil [769844 769894])
            ("org-defkey" code nil nil [769895 769945])
            ("org-defkey" code nil nil [769946 770002])
            ("org-defkey" code nil nil [770003 770051])
            ("org-defkey" code nil nil [770052 770098])
            ("org-defkey" code nil nil [770099 770152])
            ("org-defkey" code nil nil [770177 770236])
            ("org-defkey" code nil nil [770255 770307])
            ("org-defkey" code nil nil [770308 770364])
            ("org-defkey" code nil nil [770365 770437])
            ("org-defkey" code nil nil [770438 770493])
            ("org-defkey" code nil nil [770494 770574])
            ("org-defkey" code nil nil [770575 770666])
            ("org-defkey" code nil nil [770667 770722])
            ("org-defkey" code nil nil [770723 770782])
            ("org-defkey" code nil nil [770783 770836])
            ("org-defkey" code nil nil [770837 770902])
            ("org-defkey" code nil nil [770903 770964])
            ("org-defkey" code nil nil [770965 771020])
            ("org-defkey" code nil nil [771021 771077])
            ("org-defkey" code nil nil [771078 771134])
            ("org-defkey" code nil nil [771135 771185])
            ("org-defkey" code nil nil [771209 771261])
            ("org-defkey" code nil nil [771285 771346])
            ("org-defkey" code nil nil [771363 771413])
            ("org-defkey" code nil nil [771439 771500])
            ("org-defkey" code nil nil [771501 771556])
            ("org-defkey" code nil nil [771557 771617])
            ("org-defkey" code nil nil [771618 771686])
            ("org-defkey" code nil nil [771687 771756])
            ("org-defkey" code nil nil [771757 771819])
            ("org-defkey" code nil nil [771820 771873])
            ("org-defkey" code nil nil [771874 771944])
            ("org-defkey" code nil nil [771945 772018])
            ("org-defkey" code nil nil [772019 772073])
            ("org-defkey" code nil nil [772074 772127])
            ("org-defkey" code nil nil [772128 772174])
            ("org-defkey" code nil nil [772175 772230])
            ("org-defkey" code nil nil [772231 772299])
            ("org-defkey" code nil nil [772300 772367])
            ("org-defkey" code nil nil [772368 772426])
            ("org-defkey" code nil nil [772427 772491])
            ("org-defkey" code nil nil [772492 772566])
            ("org-defkey" code nil nil [772567 772643])
            ("org-defkey" code nil nil [772644 772704])
            ("org-defkey" code nil nil [772705 772753])
            ("org-defkey" code nil nil [772754 772809])
            ("org-defkey" code nil nil [772810 772868])
            ("org-defkey" code nil nil [772869 772928])
            ("org-defkey" code nil nil [772929 772980])
            ("org-defkey" code nil nil [772981 773041])
            ("org-defkey" code nil nil [773042 773096])
            ("org-defkey" code nil nil [773097 773155])
            ("org-defkey" code nil nil [773156 773211])
            ("org-defkey" code nil nil [773212 773266])
            ("org-defkey" code nil nil [773267 773344])
            ("org-defkey" code nil nil [773345 773416])
            ("org-defkey" code nil nil [773417 773485])
            ("org-defkey" code nil nil [773486 773534])
            ("org-defkey" code nil nil [773535 773609])
            ("org-defkey" code nil nil [773610 773681])
            ("org-defkey" code nil nil [773682 773739])
            ("org-defkey" code nil nil [773740 773800])
            ("org-defkey" code nil nil [773801 773856])
            ("org-defkey" code nil nil [773857 773918])
            ("org-defkey" code nil nil [773919 773980])
            ("org-defkey" code nil nil [773981 774042])
            ("org-defkey" code nil nil [774043 774094])
            ("org-defkey" code nil nil [774095 774145])
            ("org-defkey" code nil nil [774146 774215])
            ("org-defkey" code nil nil [774299 774356])
            ("org-defkey" code nil nil [774357 774415])
            ("org-defkey" code nil nil [774416 774475])
            ("org-defkey" code nil nil [774477 774549])
            ("org-defkey" code nil nil [774550 774604])
            ("org-defkey" code nil nil [774605 774664])
            ("org-defkey" code nil nil [774665 774725])
            ("org-defkey" code nil nil [774726 774781])
            ("org-defkey" code nil nil [774782 774838])
            ("org-defkey" code nil nil [774839 774897])
            ("org-defkey" code nil nil [774898 774957])
            ("org-defkey" code nil nil [774958 775016])
            ("org-defkey" code nil nil [775017 775076])
            ("org-defkey" code nil nil [775077 775144])
            ("org-defkey" code nil nil [775145 775211])
            ("org-defkey" code nil nil [775212 775284])
            ("org-defkey" code nil nil [775285 775353])
            ("org-defkey" code nil nil [775354 775415])
            ("org-defkey" code nil nil [775416 775474])
            ("org-defkey" code nil nil [775475 775543])
            ("org-defkey" code nil nil [775544 775600])
            ("org-defkey" code nil nil [775601 775657])
            ("org-defkey" code nil nil [775658 775727])
            ("org-defkey" code nil nil [775728 775795])
            ("org-defkey" code nil nil [775796 775874])
            ("org-defkey" code nil nil [775876 775927])
            ("org-defkey" code nil nil [775928 775984])
            ("org-defkey" code nil nil [775985 776042])
            ("org-defkey" code nil nil [776043 776099])
            ("org-defkey" code nil nil [776100 776169])
            ("define-key" code nil nil [776171 776224])
            ("define-key" code nil nil [776226 776275])
            ("define-key" code nil nil [776277 776335])
            ("define-key" code nil nil [776336 776394])
            ("define-key" code nil nil [776396 776454])
            ("when" code nil nil [776457 776538])
            ("org-speed-commands-default" variable
               (:constant-flag t
                :default-value (quote (("Outline Navigation") ("n" org-speed-move-safe (quote org-next-visible-heading)) ("p" org-speed-move-safe (quote org-previous-visible-heading)) ("f" org-speed-move-safe (quote org-forward-heading-same-level)) ("b" org-speed-move-safe (quote org-backward-heading-same-level)) ("F" . org-next-block) ("B" . org-previous-block) ("u" org-speed-move-safe (quote outline-up-heading)) ("j" . org-goto) ("g" org-refile t) ("Outline Visibility") ("c" . org-cycle) ("C" . org-shifttab) (" " . org-display-outline-path) ("s" . org-narrow-to-subtree) ("=" . org-columns) ("Outline Structure Editing") ("U" . org-metaup) ("D" . org-metadown) ("r" . org-metaright) ("l" . org-metaleft) ("R" . org-shiftmetaright) ("L" . org-shiftmetaleft) ("i" progn (forward-char 1) (call-interactively (quote org-insert-heading-respect-content))) ("^" . org-sort) ("w" . org-refile) ("a" . org-archive-subtree-default-with-confirmation) ("@" . org-mark-subtree) ("#" . org-toggle-comment) ("Clock Commands") ("I" . org-clock-in) ("O" . org-clock-out) ("Meta Data Editing") ("t" . org-todo) ("," org-priority) ("0" org-priority 32) ("1" org-priority 65) ("2" org-priority 66) ("3" org-priority 67) (":" . org-set-tags-command) ("e" . org-set-effort) ("E" . org-inc-effort) ("W" lambda (m) (interactive "sMinutes before warning: ") (org-entry-put (point) "APPT_WARNTIME" m)) ("Agenda Views etc") ("v" . org-agenda) ("/" . org-sparse-tree) ("Misc") ("o" . org-open-at-point) ("?" . org-speed-command-help) ("<" org-agenda-set-restriction-lock (quote subtree)) (">" org-agenda-remove-restriction-lock))))
                nil [776541 778420])
            ("org-print-speed-command" function (:arguments ("e")) nil [778422 778738])
            ("org-speed-command-help" function (:user-visible-flag t) nil [778740 779349])
            ("org-speed-move-safe" function
               (:user-visible-flag t
                :arguments ("cmd"))
                nil [779351 779713])
            ("org-self-insert-command-undo-counter" variable nil nil [779715 779762])
            ("org-table-auto-blank-field" variable nil nil [779764 779799])
            ("org-speed-command" variable nil nil [779826 779856])
            ("define-obsolete-function-alias" code nil nil [779858 779959])
            ("org-speed-command-activate" function (:arguments ("keys")) nil [779961 780407])
            ("define-obsolete-function-alias" code nil nil [780409 780514])
            ("org-babel-speed-command-activate" function (:arguments ("keys")) nil [780516 780730])
            ("org-speed-command-hook" variable (:default-value (quote (org-speed-command-default-hook org-babel-speed-command-hook))) nil [780732 781452])
            ("org-self-insert-command" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [781454 783798])
            ("org-check-before-invisible-edit" function (:arguments ("kind")) nil [783800 786209])
            ("org-fix-tags-on-the-fly" function nil nil [786211 786366])
            ("org-delete-backward-char" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [786368 787468])
            ("org-delete-char" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [787470 788522])
            ("put" code nil nil [788591 788752])
            ("put" code nil nil [788753 788917])
            ("put" code nil nil [788918 788969])
            ("put" code nil nil [788970 789030])
            ("put" code nil nil [789031 789070])
            ("put" code nil nil [789122 789172])
            ("put" code nil nil [789173 789226])
            ("put" code nil nil [789227 789269])
            ("put" code nil nil [789270 789321])
            ("put" code nil nil [789375 789437])
            ("put" code nil nil [789438 789503])
            ("org-remap" function (:arguments ("map" "commands")) nil [789505 789883])
            ("org-transpose-words" function (:user-visible-flag t) nil [789885 790202])
            ("org-remap" code nil nil [790203 790265])
            ("when" code nil nil [790267 790638])
            ("org-ctrl-c-ctrl-c-hook" variable nil nil [790640 791193])
            ("org-ctrl-c-ctrl-c-final-hook" variable nil nil [791195 791749])
            ("org-tab-first-hook" variable nil nil [791751 792220])
            ("org-tab-after-check-for-table-hook" variable nil nil [792222 792636])
            ("org-tab-after-check-for-cycling-hook" variable nil nil [792638 792998])
            ("org-tab-before-tab-emulation-hook" variable nil nil [793000 793272])
            ("org-metaleft-hook" variable nil nil [793274 793412])
            ("org-metaright-hook" variable nil nil [793413 793553])
            ("org-metaup-hook" variable nil nil [793554 793688])
            ("org-metadown-hook" variable nil nil [793689 793827])
            ("org-shiftmetaleft-hook" variable nil nil [793828 793973])
            ("org-shiftmetaright-hook" variable nil nil [793974 794121])
            ("org-shiftmetaup-hook" variable nil nil [794122 794263])
            ("org-shiftmetadown-hook" variable nil nil [794264 794409])
            ("org-metareturn-hook" variable nil nil [794410 794549])
            ("org-shiftup-hook" variable nil nil [794550 794685])
            ("org-shiftup-final-hook" variable nil nil [794686 794905])
            ("org-shiftdown-hook" variable nil nil [794906 795045])
            ("org-shiftdown-final-hook" variable nil nil [795046 795269])
            ("org-shiftleft-hook" variable nil nil [795270 795409])
            ("org-shiftleft-final-hook" variable nil nil [795410 795633])
            ("org-shiftright-hook" variable nil nil [795634 795775])
            ("org-shiftright-final-hook" variable nil nil [795776 796001])
            ("org-modifier-cursor-error" function nil nil [796003 796206])
            ("org-shiftselect-error" function nil nil [796208 796564])
            ("org-call-for-shift-select" function (:arguments ("cmd")) nil [796566 796683])
            ("org-shifttab" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [796685 797357])
            ("org-shiftmetaleft" function (:user-visible-flag t) nil [797359 798026])
            ("org-shiftmetaright" function (:user-visible-flag t) nil [798028 798692])
            ("org-shiftmetaup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [798694 799290])
            ("org-shiftmetadown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [799292 799920])
            ("org-hidden-tree-error" function nil nil [799922 800049])
            ("org-metaleft" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [800051 801296])
            ("org-metaright" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [801298 802759])
            ("org-check-for-hidden" function (:arguments ("what")) nil [802761 803708])
            ("org-metaup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [803710 804586])
            ("org-metadown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [804588 805476])
            ("org-shiftup" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [805478 806524])
            ("org-shiftdown" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [806526 807569])
            ("org-shiftright" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [807571 809163])
            ("org-shiftleft" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [809165 810774])
            ("org-shiftcontrolright" function (:user-visible-flag t) nil [810776 811192])
            ("org-shiftcontrolleft" function (:user-visible-flag t) nil [811194 811619])
            ("org-shiftcontrolup" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [811621 811959])
            ("org-shiftcontroldown" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [811961 812305])
            ("org-increase-number-at-point" function
               (:user-visible-flag t
                :arguments ("inc"))
                nil [812307 812997])
            ("org-decrease-number-at-point" function
               (:user-visible-flag t
                :arguments ("inc"))
                nil [812999 813236])
            ("org-ctrl-c-ret" function (:user-visible-flag t) nil [813238 813482])
            ("org-find-visible" function nil nil [813484 813647])
            ("org-find-invisible" function nil nil [813648 813819])
            ("org-copy-visible" function
               (:user-visible-flag t
                :arguments ("beg" "end"))
                nil [813821 814263])
            ("org-copy-special" function (:user-visible-flag t) nil [814265 814565])
            ("org-cut-special" function (:user-visible-flag t) nil [814567 814861])
            ("org-paste-special" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [814863 815206])
            ("org-in-fixed-width-region-p" function nil nil [815208 815371])
            ("org-edit-special" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [815373 818123])
            ("org-table-coordinate-overlays" variable nil nil [818125 818163])
            ("org-ctrl-c-ctrl-c" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [818190 827252])
            ("org-mode-restart" function nil nil [827254 827555])
            ("org-kill-note-or-show-branches" function (:user-visible-flag t) nil [827557 827879])
            ("org-delete-indentation" function
               (:user-visible-flag t
                :arguments ("ARG"))
                nil [827881 828985])
            ("org-open-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [828987 829290])
            ("org-return" function
               (:user-visible-flag t
                :arguments ("indent"))
                nil [829292 832000])
            ("org-return-indent" function (:user-visible-flag t) nil [832002 832244])
            ("org-ctrl-c-star" function (:user-visible-flag t) nil [832246 832599])
            ("org-ctrl-c-minus" function (:user-visible-flag t) nil [832601 833142])
            ("org-toggle-item" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [833144 838402])
            ("org-toggle-heading" function
               (:user-visible-flag t
                :arguments ("nstars"))
                nil [838404 842064])
            ("org-meta-return" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [842066 842512])
            ("org-in-subtree-not-table-p" function nil nil [842532 842689])
            ("easy-menu-define" code nil nil [842720 845734])
            ("easy-menu-define" code nil nil [845736 854329])
            ("org-info" function
               (:user-visible-flag t
                :arguments ("node"))
                nil [854331 854523])
            ("org-submit-bug-report" function (:user-visible-flag t) nil [854540 856997])
            ("org-install-agenda-files-menu" function nil nil [857000 857660])
            ("org-require-autoloaded-modules" function nil nil [857682 857851])
            ("org-reload" function
               (:user-visible-flag t
                :arguments ("uncompiled"))
                nil [857868 859864])
            ("org-customize" function (:user-visible-flag t) nil [859881 860063])
            ("org-create-customize-menu" function (:user-visible-flag t) nil [860065 860770])
            ("org-get-at-eol" function (:arguments ("property" "n")) nil [860830 860989])
            ("org-find-text-property-in-string" function (:arguments ("prop" "s")) nil [860991 861224])
            ("org-display-warning" function (:arguments ("message")) nil [861226 861720])
            ("org-eval" function (:arguments ("form")) nil [861722 861865])
            ("org-in-clocktable-p" function nil nil [861867 862213])
            ("org-in-verbatim-emphasis" function nil nil [862215 862413])
            ("org-goto-marker-or-bmk" function (:arguments ("marker" "bookmark")) nil [862415 862908])
            ("org-quote-csv-field" function (:arguments ("s")) nil [862910 863102])
            ("org-force-self-insert" function
               (:user-visible-flag t
                :arguments ("N"))
                nil [863104 863234])
            ("org-string-width" function (:arguments ("s")) nil [863236 864278])
            ("org-shorten-string" function (:arguments ("s" "maxlength")) nil [864280 865097])
            ("org-get-indentation" function (:arguments ("line")) nil [865099 865473])
            ("org-get-string-indentation" function (:arguments ("s")) nil [865475 865833])
            ("org-remove-tabs" function (:arguments ("s" "width")) nil [865835 866195])
            ("org-fix-indentation" function (:arguments ("line" "ind")) nil [866197 866656])
            ("org-remove-indentation" function (:arguments ("code" "n")) nil [866658 866918])
            ("org-do-remove-indentation" function (:arguments ("n")) nil [866920 867464])
            ("org-fill-template" function (:arguments ("template" "alist")) nil [867466 867877])
            ("org-base-buffer" function (:arguments ("buffer")) nil [867879 868067])
            ("org-wrap" function (:arguments ("string" "width" "lines")) nil [868069 869020])
            ("org-do-wrap" function (:arguments ("words" "width")) nil [869022 869378])
            ("org-split-string" function (:arguments ("string" "separators")) nil [869380 870281])
            ("org-quote-vert" function (:arguments ("s")) nil [870283 870423])
            ("org-uuidgen-p" function (:arguments ("s")) nil [870425 870604])
            ("org-in-src-block-p" function (:arguments ("inside")) nil [870606 871037])
            ("org-context" function nil nil [871039 875588])
            ("org-in-regexp" function (:arguments ("re" "nlines" "visually")) nil [875590 876288])
            ("define-obsolete-function-alias" code nil nil [876289 876370])
            ("org-between-regexps-p" function (:arguments ("start-re" "end-re" "lim-up" "lim-down")) nil [876372 877605])
            ("org-in-block-p" function (:arguments ("names")) nil [877607 878324])
            ("org-occur-in-agenda-files" function
               (:user-visible-flag t
                :arguments ("regexp" "_nlines"))
                nil [878326 879212])
            ("if" code nil nil [879214 879958])
            ("org-occur-link-in-agenda-files" function (:user-visible-flag t) nil [879960 880317])
            ("org-reverse-string" function (:arguments ("string")) nil [880319 880440])
            ("org-uniquify-alist" function (:arguments ("alist")) nil [880501 881021])
            ("org-delete-all" function (:arguments ("elts" "list")) nil [881023 881163])
            ("org-count" function (:arguments ("cl-item" "cl-seq")) nil [881165 881668])
            ("org-remove-if" function (:arguments ("predicate" "seq")) nil [881670 881891])
            ("org-remove-if-not" function (:arguments ("predicate" "seq")) nil [881893 882120])
            ("org-reduce" function (:arguments ("cl-func" "cl-seq" "cl-keys")) nil [882122 882616])
            ("org-every" function (:arguments ("pred" "seq")) nil [882618 882843])
            ("org-some" function (:arguments ("pred" "seq")) nil [882845 883062])
            ("org-back-over-empty-lines" function nil nil [883064 883467])
            ("org-skip-whitespace" function nil nil [883469 883532])
            ("org-point-in-group" function (:arguments ("point" "group" "context")) nil [883534 883988])
            ("org-switch-to-buffer-other-window" function (:arguments ("args")) nil [883990 884248])
            ("org-combine-plists" function (:arguments ("plists")) nil [884250 884735])
            ("org-replace-escapes" function (:arguments ("string" "table")) nil [884737 886017])
            ("org-sublist" function (:arguments ("list" "start" "end")) nil [886019 886294])
            ("org-find-base-buffer-visiting" function (:arguments ("file")) nil [886296 886567])
            ("org-image-file-name-regexp" function (:arguments ("extensions")) nil [886569 887110])
            ("org-file-image-p" function (:arguments ("file" "extensions")) nil [887112 887288])
            ("org-get-cursor-date" function (:arguments ("with-time")) nil [887290 888435])
            ("org-mark-subtree" function
               (:user-visible-flag t
                :arguments ("up"))
                nil [888437 889078])
            ("org--get-expected-indentation" function (:arguments ("element" "contentsp")) nil [889098 893257])
            ("org--align-node-property" function nil nil [893259 893621])
            ("org-indent-line" function (:user-visible-flag t) nil [893623 896615])
            ("org-indent-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [896617 900763])
            ("org-indent-drawer" function (:user-visible-flag t) nil [900765 901292])
            ("org-indent-block" function (:user-visible-flag t) nil [901294 901974])
            ("org-element-paragraph-separate" variable nil nil [902560 902599])
            ("org-setup-filling" function nil nil [902617 903478])
            ("org-fill-line-break-nobreak-p" function nil nil [903480 903720])
            ("org-fill-paragraph-with-timestamp-nobreak-p" function nil nil [903722 903914])
            ("declare-function" code nil nil [903916 903965])
            ("orgtbl-line-start-regexp" variable nil nil [903966 903999])
            ("org-adaptive-fill-function" function nil nil [904020 906579])
            ("declare-function" code nil nil [906581 906630])
            ("message-cite-prefix-regexp" variable nil nil [906631 906666])
            ("org-fill-paragraph" function
               (:user-visible-flag t
                :arguments ("justify"))
                nil [906685 912017])
            ("org-auto-fill-function" function nil nil [912019 912445])
            ("org-comment-line-break-function" function (:arguments ("soft")) nil [912447 912908])
            ("org-toggle-fixed-width" function (:user-visible-flag t) nil [912934 918034])
            ("org-setup-comments-handling" function nil nil [918795 919215])
            ("org-insert-comment" function nil nil [919217 920035])
            ("comment-empty-lines" variable nil nil [920037 920065])
            ("org-comment-or-uncomment-region" function (:arguments ("beg" "end" "_")) nil [920089 922575])
            ("org-comment-dwim" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [922577 922829])
            ("org-timestamp--to-internal-time" function (:arguments ("timestamp" "end")) nil [922964 923396])
            ("org-timestamp-has-time-p" function (:arguments ("timestamp")) nil [923398 923538])
            ("org-timestamp-format" function (:arguments ("timestamp" "format" "end" "utc")) nil [923540 923975])
            ("org-timestamp-split-range" function (:arguments ("timestamp" "end")) nil [923977 925168])
            ("org-timestamp-translate" function (:arguments ("timestamp" "boundary")) nil [925170 926180])
            ("reftex-docstruct-symbol" variable nil nil [926202 926234])
            ("reftex-cite-format" variable nil nil [926235 926262])
            ("org--rds" variable nil nil [926263 926280])
            ("org-reftex-citation" function (:user-visible-flag t) nil [926282 927329])
            ("org-beginning-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [927379 930020])
            ("org-end-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [930022 931762])
            ("define-key" code nil nil [931764 931819])
            ("define-key" code nil nil [931820 931869])
            ("org-backward-sentence" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [931871 932670])
            ("org-forward-sentence" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [932672 933583])
            ("define-key" code nil nil [933585 933640])
            ("define-key" code nil nil [933641 933695])
            ("org-kill-line" function
               (:user-visible-flag t
                :arguments ("_arg"))
                nil [933697 934459])
            ("define-key" code nil nil [934461 934508])
            ("org-yank" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [934510 935743])
            ("org-yank-generic" function (:arguments ("command" "arg")) nil [935745 937499])
            ("org-yank-folding-would-swallow-text" function (:arguments ("beg" "end")) nil [937501 938064])
            ("define-key" code nil nil [938095 938137])
            ("org-truely-invisible-p" function nil nil [938139 938459])
            ("org-invisible-p2" function nil nil [938461 938714])
            ("org-back-to-heading" function (:arguments ("invisible-ok")) nil [938716 939009])
            ("org-before-first-heading-p" function nil nil [939011 939172])
            ("org-at-heading-p" function (:arguments ("ignored")) nil [939174 939245])
            ("defalias" code nil nil [939296 939342])
            ("org-in-commented-heading-p" function (:arguments ("no-inheritance")) nil [939344 939927])
            ("org-at-comment-p" function nil nil [939929 940090])
            ("org-at-drawer-p" function nil nil [940092 940239])
            ("org-at-block-p" function nil nil [940241 940385])
            ("org-point-at-end-of-empty-headline" function nil nil [940387 940804])
            ("org-at-heading-or-item-p" function nil nil [940806 940883])
            ("org-at-target-p" function nil nil [940885 940998])
            ("defalias" code nil nil [941049 941093])
            ("org-up-heading-all" function (:arguments ("arg")) nil [941095 941442])
            ("org-up-heading-safe" function nil nil [941481 942137])
            ("org-first-sibling-p" function (:user-visible-flag t) nil [942139 942517])
            ("org-goto-sibling" function (:arguments ("previous")) nil [942519 943249])
            ("org-show-siblings" function nil nil [943251 943488])
            ("org-goto-first-child" function nil nil [943490 943954])
            ("org-show-hidden-entry" function nil nil [943956 944080])
            ("org-flag-heading" function (:arguments ("flag" "entry")) nil [944082 944586])
            ("org-get-next-sibling" function nil nil [944588 945025])
            ("org-get-last-sibling" function nil nil [945027 945485])
            ("org-end-of-subtree" function (:arguments ("invisible-ok" "to-heading")) nil [945487 946988])
            ("org-end-of-meta-data" function (:arguments ("full")) nil [946990 947845])
            ("org-forward-heading-same-level" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok"))
                nil [947847 949262])
            ("org-backward-heading-same-level" function
               (:user-visible-flag t
                :arguments ("arg" "invisible-ok"))
                nil [949264 949552])
            ("org-next-visible-heading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [949554 949886])
            ("org-previous-visible-heading" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [949888 950232])
            ("org-next-block" function
               (:user-visible-flag t
                :arguments ("arg" "backward" "block-regexp"))
                nil [950234 951675])
            ("org-previous-block" function
               (:user-visible-flag t
                :arguments ("arg" "block-regexp"))
                nil [951677 951950])
            ("org-forward-paragraph" function (:user-visible-flag t) nil [951952 955978])
            ("org-backward-paragraph" function (:user-visible-flag t) nil [955980 958854])
            ("org-forward-element" function (:user-visible-flag t) nil [958856 959648])
            ("org-backward-element" function (:user-visible-flag t) nil [959650 960930])
            ("org-up-element" function (:user-visible-flag t) nil [960932 961441])
            ("org-element-greater-elements" variable nil nil [961443 961480])
            ("org-down-element" function (:user-visible-flag t) nil [961481 962104])
            ("org-drag-element-backward" function (:user-visible-flag t) nil [962106 963105])
            ("org-drag-element-forward" function (:user-visible-flag t) nil [963107 964498])
            ("org-drag-line-forward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [964500 964845])
            ("org-drag-line-backward" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [964847 964984])
            ("org-mark-element" function (:user-visible-flag t) nil [964986 965698])
            ("org-narrow-to-element" function (:user-visible-flag t) nil [965700 966272])
            ("org-transpose-element" function (:user-visible-flag t) nil [966274 966575])
            ("org-unindent-buffer" function (:user-visible-flag t) nil [966577 967454])
            ("org-show-subtree" function (:user-visible-flag t) nil [967456 967648])
            ("org-show-entry" function (:user-visible-flag t) nil [967650 968133])
            ("org-make-options-regexp" function (:arguments ("kwds" "extra")) nil [968135 968475])
            ("org-isearch-end" function nil nil [968522 969210])
            ("org-isearch-post-command" function nil nil [969212 969390])
            ("org-imenu-markers" variable nil nil [969464 969535])
            ("make-variable-buffer-local" code nil nil [969536 969583])
            ("org-imenu-new-marker" function (:arguments ("pos")) nil [969585 969798])
            ("org-imenu-get-tree" function nil nil [969800 970809])
            ("eval-after-load" code nil nil [970811 970977])
            ("org-link-display-format" function (:arguments ("link")) nil [970979 971350])
            ("org-toggle-link-display" function (:user-visible-flag t) nil [971352 971732])
            ("org-speedbar-restriction-lock-overlay" variable (:default-value (make-overlay 1 1)) nil [971755 971881])
            ("overlay-put" code nil nil [971882 971974])
            ("overlay-put" code nil nil [971975 972089])
            ("org-detach-overlay" code nil nil [972090 972148])
            ("org-speedbar-set-agenda-restriction" function (:user-visible-flag t) nil [972150 973516])
            ("speedbar-file-key-map" variable nil nil [973518 973548])
            ("declare-function" code nil nil [973549 973623])
            ("eval-after-load" code nil nil [973624 974174])
            ("org--flyspell-object-check-p" function (:arguments ("element")) nil [974230 975075])
            ("org-mode-flyspell-verify" function nil nil [975077 977417])
            ("put" code nil nil [977418 977484])
            ("org-remove-flyspell-overlays-in" function (:arguments ("beg" "end")) nil [977486 977719])
            ("flyspell-delayed-commands" variable nil nil [977721 977755])
            ("eval-after-load" code nil nil [977756 977853])
            ("eval-after-load" code nil nil [977921 978266])
            ("eval-after-load" code nil nil [978327 978497])
            ("eval-after-load" code nil nil [978552 978784])
            ("org-bookmark-jump-unhide" function nil nil [978786 979087])
            ("org-mark-jump-unhide" function nil nil [979089 979302])
            ("eval-after-load" code nil nil [979304 979482])
            ("eval-after-load" code nil nil [979484 979666])
            ("eval-after-load" code nil nil [979668 979842])
            ("session-globals-exclude" variable nil nil [979892 979924])
            ("eval-after-load" code nil nil [979925 980009])
            ("org" package nil nil [980027 980041])
            ("run-hooks" code nil nil [980043 980069]))          
      :file "org.el"
      :pointmax 980092
      :fsize 980091
      :lastmodtime '(22100 41726 487474 59000)
      :unmatched-syntax '((close-paren 3119 . 3120) (symbol 3064 . 3081) (open-paren 3063 . 3064)))
    (semanticdb-table "org-macs.el"
      :file "org-macs.el"
      :fsize 14167
      :lastmodtime '(22100 41725 423474 39000))
    (semanticdb-table "org-compat.el"
      :file "org-compat.el"
      :fsize 20521
      :lastmodtime '(22100 41724 227474 17000))
    (semanticdb-table "org-entities.el"
      :file "org-entities.el"
      :fsize 29834
      :lastmodtime '(22100 41727 239474 73000))
    (semanticdb-table "org-faces.el"
      :file "org-faces.el"
      :fsize 32537
      :lastmodtime '(22100 41724 595474 24000))
    (semanticdb-table "org-list.el"
      :file "org-list.el"
      :fsize 122798
      :lastmodtime '(22100 41724 691474 25000))
    (semanticdb-table "org-pcomplete.el"
      :file "org-pcomplete.el"
      :fsize 14076
      :lastmodtime '(22100 41726 687474 63000))
    (semanticdb-table "org-src.el"
      :file "org-src.el"
      :fsize 37571
      :lastmodtime '(22100 41724 131474 15000))
    (semanticdb-table "org-footnote.el"
      :file "org-footnote.el"
      :fsize 38074
      :lastmodtime '(22100 41727 143474 71000))
    (semanticdb-table "org-macro.el"
      :file "org-macro.el"
      :fsize 10984
      :lastmodtime '(22100 41724 207474 16000))
    (semanticdb-table "ob.el"
      :file "ob.el"
      :fsize 1232
      :lastmodtime '(22100 41726 243474 55000)))
  :file "!home!harrison!.hlocal!emacs!dot.emacs.d!elpa!org-20151123!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
