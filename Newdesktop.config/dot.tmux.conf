#-- base --#

set -g default-terminal "screen-256color"
set -g display-time 3000
set -g history-limit 65535

#lock
#
#check the session (like the lock-session command) after number seconds of
# inactivity, or the entire server (all sessions) if the lock-server option is
# set. The default is not to lock (set to 0).
set -g lock-after-time 240

# Command to run when locking each client. The default is to run lock(1) with
# -np.
set -g lock-command vlock

# If this option is on (the default), instead of each session locking
# individually as each has been idle for lock-after-time, the entire server will
# lock after all sessions would have locked. This has no effect as a session
# option; it must be set as a global option.
#set -g lock-server [on | off]

#-- bindkeys --#

set -g prefix ^x
unbind ^b
bind a send-prefix

#-- Reload --#
#bind-key r source-file ~/.tmux.conf

#-- copy and paste --#
# move x clipboard into tmux paste buffer
bind ^p run "xclip -o | tmux load-buffer -"
# move tmux copy buffer into x clipboard
bind ^y run "tmux save-buffer - | xclip -i -selection clipboard"
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# copy to clipboard
# 1. [
# 2. Ctrl-v v to select region
# 3. y
# 4. Ctrl-x Ctrl-y to clipboard
# copy between Tmux panels
# 1. [
# 2. Ctrl-v v to select region
# 3. y
# 4. ] to paste into another panel

#lock
#add appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-session

#window navigation
#Ctrl-Left arrow
bind -n C-Left next-window
#Ctrl-Right arrow
bind -n C-Right previous-window

# window split, vertically 
unbind '"'
bind - splitw -v
# window split, horizontally
unbind %
bind | splitw -h

# window selection
#bind k selectp -U
#bind j selectp -D
#bind h selectp -L
#bind l selectp -R
bind Left select-pane -L
bind Right select-pane -R
bind Up select-pane -U
bind Down select-pane -D

# resize window size
# c-a c-i
bind ^i resizep -U 10
bind ^k resizep -D 10
bind ^j resizep -L 10
bind ^l resizep -R 10

# window swap
bind ^u swapp -U
bind ^d swapp -D

bind ^e last
bind q killp

# list window and select it
bind '"' choose-window

# add new session
bind c new-window

# rename session
bind A command-prompt "rename-window %%"

# command placeholder
bind '~' splitw htop
bind ! splitw ncmpcpp
bind m command-prompt "splitw 'exec man %%'"
bind @ command-prompt "splitw 'exec perldoc -t -f %%'"
bind * command-prompt "splitw 'exec perldoc -t -v %%'"
bind % command-prompt "splitw 'exec perldoc -t %%'"
bind / command-prompt "splitw 'exec ri -T %% | less'"

#-- statusbar --#

# default color
set -g status-bg black
set -g status-fg yellow

# Left side of status bar
set -g status-left-length 20
#set -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[bg=black,fg=blue,dim]:#H#[fg=green]]'

# Right side of status bar
set -g status-right '#[fg=green][#[fg=white]#T#[fg=green]][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]#[fg=green]]'
#set -g status-right "#[fg=green]#(hostname)#[default] * #[fg=green]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default]"
set -g status-right-attr bright


setw -g window-status-current-attr bright
#setw -g window-status-current-bg red
#setw -g window-status-current-fg white

# Automatically set window title
setw -g automatic-rename

# stop changing window name after renaming
set-option -g allow-rename off

set -g status-utf8 on
set -g status-interval 1

#set window notification
set -g visual-activity on
setw -g monitor-activity on

# Current or active window in status bar
#set-window-option -g window-status-current-bg yellow
#set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'

# Inactive windows in status bar
set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'

set -g status-keys vi
setw -g mode-keys vi

#-- apps --#
