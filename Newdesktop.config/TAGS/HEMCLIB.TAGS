
/emcsvn/emc/libemcbase/src/unp/tcp_connect.c,39
tcp_connect(5,48
Tcp_connect(46,1069

/emcsvn/emc/libemcbase/src/unp/readn.c,26
readn(5,91
Readn(30,509

/emcsvn/emc/libemcbase/src/unp/gf_time.c,14
gf_time(5,43

/emcsvn/emc/libemcbase/src/unp/wrapsock.c,375
Accept(22,892
Bind(41,1189
Connect(48,1311
Getpeername(55,1442
Getsockname(62,1586
Getsockopt(69,1730
Isfdtype(76,1909
Listen(87,2058
Poll(102,2324
Recv(114,2500
Recvfrom(124,2660
Recvmsg(135,2891
Select(145,3042
Send(156,3304
Sendto(164,3487
Sendmsg(173,3735
Setsockopt(187,4043
Shutdown(194,4222
Sockatmark(201,4314
Socket(212,4448
Socketpair(223,4615

/emcsvn/emc/libemcbase/src/unp/sockfd_to_family.c,104
sockfd_to_family(5,53
	  struct sockaddr	sa;8,93
	  char				data[data9,116
Sockfd_to_family(21,316

/emcsvn/emc/libemcbase/src/unp/wrappthread.c,450
Pthread_create(10,106
Pthread_join(22,337
Pthread_detach(33,498
Pthread_kill(44,642
Pthread_mutexattr_init(55,798
Pthread_mutexattr_setpshared(67,1015
Pthread_mutex_init(79,1237
Pthread_mutex_lock(91,1468
Pthread_mutex_unlock(103,1662
Pthread_cond_broadcast(114,1833
Pthread_cond_signal(125,2009
Pthread_cond_wait(136,2176
Pthread_cond_timedwait(147,2366
Pthread_once(159,2616
Pthread_key_create(170,2786
Pthread_setspecific(181,2975

/emcsvn/emc/libemcbase/src/unp/wrapunix.c,468
Calloc(26,952
Close(36,1085
Dup2(43,1157
Fcntl(50,1241
Gettimeofday(60,1369
Ioctl(68,1498
Fork(78,1677
Malloc(88,1780
Mktemp(98,1900
Mmap(107,2039
Open(117,2245
Pipe(127,2420
Read(134,2493
Sigaddset(144,2634
Sigdelset(151,2744
Sigemptyset(158,2854
Sigfillset(165,2952
Sigismember(172,3046
Sigpending(182,3197
Sigprocmask(189,3292
Strdup(196,3434
Sysconf(206,3557
Sysctl(218,3757
Unlink(227,3957
Wait(234,4070
Waitpid(244,4181
Write(254,4347

/emcsvn/emc/libemcbase/src/unp/get_ifi_info.c,66
get_ifi_info(5,67
free_ifi_info(126,3451
Get_ifi_info(144,3909

/emcsvn/emc/libemcbase/src/unp/rtt.c,201
int		rtt_d_flag 4,40
#define	RTT_RTOCALC(10,221
rtt_minmax(13,306
rtt_init(23,443
rtt_ts(46,941
rtt_newpack(57,1121
rtt_start(63,1186
rtt_stop(81,1735
rtt_timeout(112,2433
rtt_debug(127,2724

/emcsvn/emc/libemcbase/src/unp/unp.h,21
#define	__unp_h5,92

/emcsvn/emc/libemcbase/src/unp/udp_client.c,36
udp_client(5,47
Udp_client(39,899

/emcsvn/emc/libemcbase/src/unp/signal.c,28
signal(5,49
Signal(28,487

/emcsvn/emc/libemcbase/src/unp/sock_ntop_host.c,45
sock_ntop_host(8,88
Sock_ntop_host(66,1440

/emcsvn/emc/libemcbase/src/unp/mcast_join.c,37
mcast_join(6,68
Mcast_join(72,1617

/emcsvn/emc/libemcbase/src/unp/unpifi.h,615
#define	__unp_ifi_h5,141
#define	IFI_NAME	10,200
#define	IFI_HADDR	11,259
struct ifi_info 13,323
  char    ifi_name[ifi_name14,341
  u_char  ifi_haddr[ifi_haddr15,409
  u_short ifi_hlen;16,464
  short   ifi_flags;17,529
  short   ifi_myflags;18,592
  struct sockaddr  *ifi_addr;ifi_addr19,645
  struct sockaddr  *ifi_brdaddr;ifi_brdaddr20,697
  struct sockaddr  *ifi_dstaddr;ifi_dstaddr21,753
  struct ifi_info  *ifi_next;ifi_next22,811
#define	IFI_ALIAS	25,876
struct ifi_info	*get_ifi_info(get_ifi_info28,957
struct ifi_info	*Get_ifi_info(Get_ifi_info29,998
void			 free_ifi_info(30,1039

/emcsvn/emc/libemcbase/src/unp/unprtt.h,485
#define	__unp_rtt_h2,20
struct rtt_info 6,59
  float		rtt_rtt;7,77
  float		rtt_srtt;8,135
  float		rtt_rttvar;9,192
  float		rtt_rto;10,252
  int		rtt_nrexmt;11,304
  uint32_t	rtt_base;12,364
#define	RTT_RXTMIN 15,424
#define	RTT_RXTMAX 16,494
#define	RTT_MAXNREXMT 17,564
void	 rtt_debug(20,651
void	 rtt_init(21,687
void	 rtt_newpack(22,722
int		 rtt_start(23,760
void	 rtt_stop(24,796
int		 rtt_timeout(25,841
uint32_t rtt_ts(26,879
extern int	rtt_d_flag;28,916

/emcsvn/emc/libemcbase/src/unp/unpthread.h,541
#define	__unp_pthread_h5,123
void	Pthread_create(9,166
void	Pthread_join(11,260
void	Pthread_detach(12,299
void	Pthread_kill(13,331
void	Pthread_mutexattr_init(15,367
void	Pthread_mutexattr_setpshared(16,419
void	Pthread_mutex_init(17,482
void	Pthread_mutex_lock(18,549
void	Pthread_mutex_unlock(19,593
void	Pthread_cond_broadcast(21,640
void	Pthread_cond_signal(22,687
void	Pthread_cond_wait(23,731
void	Pthread_cond_timedwait(24,792
void	Pthread_key_create(27,894
void	Pthread_setspecific(28,954
void	Pthread_once(29,1009

/emcsvn/emc/libemcbase/src/unp/write_fd.c,96
write_fd(5,49
	  struct cmsghdr	cm;12,189
	  char				control[control13,211
Write_fd(43,851

/emcsvn/emc/libemcbase/src/unp/mcast_leave.c,38
mcast_leave(4,22
Mcast_leave(38,769

/emcsvn/emc/libemcbase/src/unp/sock_set_addr.c,20
sock_set_addr(4,23

/emcsvn/emc/libemcbase/src/unp/error.c,290
int		daemon_proc;6,105
static void	err_doit(8,160
sys_msg(14,302
v_sys_msg(25,432
err_ret(35,602
v_err_ret(46,732
err_sys(57,903
v_err_sys(68,1033
err_dump(79,1216
v_err_dump(91,1414
err_msg(103,1655
v_err_msg(114,1785
err_quit(125,1958
v_err_quit(136,2089
err_doit(147,2279

/emcsvn/emc/libemcbase/src/unp/isfdtype.c,15
isfdtype(8,75

/emcsvn/emc/libemcbase/src/unp/udp_connect.c,38
udp_connect(5,48
Udp_connect(40,898

/emcsvn/emc/libemcbase/src/unp/wrapstdio.c,70
Fclose(8,66
Fdopen(15,144
Fgets(26,281
Fopen(37,452
Fputs(48,604

/emcsvn/emc/libemcbase/src/unp/connect_timeo.c,96
static void	connect_alarm(4,46
connect_timeo(7,83
connect_alarm(28,568
Connect_timeo(35,672

/emcsvn/emc/libemcbase/src/unp/tcp_listen.c,37
tcp_listen(5,47
Tcp_listen(56,1408

/emcsvn/emc/libemcbase/src/unp/in6addr_any.c,40
const struct in6_addr in6addr_any;4,30

/emcsvn/emc/libemcbase/src/unp/readable_timeo.c,44
readable_timeo(5,51
Readable_timeo(22,314

/emcsvn/emc/libemcbase/src/unp/host_serv.c,34
host_serv(5,60
Host_serv(30,876

/emcsvn/emc/libemcbase/src/unp/sock_cmp_addr.c,20
sock_cmp_addr(8,85

/emcsvn/emc/libemcbase/src/unp/daemon_inetd.c,48
extern int	daemon_proc;4,38
daemon_inetd(7,93

/emcsvn/emc/libemcbase/src/unp/addrinfo.h,878
#define	__addrinfo_h2,21
struct addrinfo 10,188
  int		ai_flags;11,206
  int		ai_family;12,256
  int		ai_socktype;13,289
  int		ai_protocol;14,325
  size_t	ai_addrlen;15,382
  char		*ai_canonname;ai_canonname16,429
  struct sockaddr	*ai_addr;ai_addr17,483
  struct addrinfo	*ai_next;ai_next18,532
#define	AI_PASSIVE	22,637
#define	AI_CANONNAME	23,707
#define	NI_MAXHOST	26,797
#define	NI_MAXSERV	27,851
#define	NI_NOFQDN	29,910
#define	NI_NUMERICHOST 30,960
#define	NI_NAMEREQD	31,1025
#define	NI_NUMERICSERV 32,1093
#define	NI_DGRAM	33,1162
#define	EAI_ADDRFAMILY	36,1253
#define	EAI_AGAIN	37,1323
#define	EAI_BADFLAGS	38,1388
#define	EAI_FAIL	39,1445
#define	EAI_FAMILY	40,1515
#define	EAI_MEMORY	41,1568
#define	EAI_NODATA	42,1623
#define	EAI_NONAME	43,1684
#define	EAI_SERVICE	44,1753
#define	EAI_SOCKTYPE	45,1821
#define	EAI_SYSTEM	46,1877

/emcsvn/emc/libemcbase/src/unp/sock_get_port.c,20
sock_get_port(4,22

/emcsvn/emc/libemcbase/src/unp/daemon_init.c,68
#define	MAXFD	4,38
extern int	daemon_proc;6,56
daemon_init(9,111

/emcsvn/emc/libemcbase/src/unp/connect_nonb.c,19
connect_nonb(4,22

/emcsvn/emc/libemcbase/src/unp/mcast_get_if.c,40
mcast_get_if(4,22
Mcast_get_if(32,437

/emcsvn/emc/libemcbase/src/unp/if_indextoname.c,46
if_indextoname(10,242
If_indextoname(16,316

/emcsvn/emc/libemcbase/src/unp/readline.c,49
my_read(5,56
readline(36,586
Readline(67,1168

/emcsvn/emc/libemcbase/src/unp/sock_set_port.c,20
sock_set_port(4,23

/emcsvn/emc/libemcbase/src/unp/tv_sub.c,13
tv_sub(4,23

/emcsvn/emc/libemcbase/src/unp/mcast_get_loop.c,44
mcast_get_loop(4,22
Mcast_get_loop(38,552

/emcsvn/emc/libemcbase/src/unp/signal_intr.c,38
signal_intr(5,54
Signal_intr(22,385

/emcsvn/emc/libemcbase/src/unp/sock_set_wild.c,20
sock_set_wild(4,23

/emcsvn/emc/libemcbase/src/unp/if_nameindex.c,67
if_nameindex(10,257
if_freenameindex(16,301
If_nameindex(21,371

/emcsvn/emc/libemcbase/src/unp/mcast_set_loop.c,44
mcast_set_loop(5,51
Mcast_set_loop(34,526

/emcsvn/emc/libemcbase/src/unp/sock_cmp_port.c,20
sock_cmp_port(8,85

/emcsvn/emc/libemcbase/src/unp/sockatmark.c,17
sockatmark(4,22

/emcsvn/emc/libemcbase/src/unp/sock_ntop.c,36
sock_ntop(9,112
Sock_ntop(77,1764

/emcsvn/emc/libemcbase/src/unp/mcast_set_ttl.c,42
mcast_set_ttl(4,22
Mcast_set_ttl(32,454

/emcsvn/emc/libemcbase/src/unp/dg_cli.c,13
dg_cli(4,23

/emcsvn/emc/libemcbase/src/unp/if_nametoindex.c,46
if_nametoindex(10,248
If_nametoindex(16,311

/emcsvn/emc/libemcbase/src/unp/hstrerror.c,18
hstrerror(12,296

/emcsvn/emc/libemcbase/src/unp/mcast_set_if.c,41
mcast_set_if(5,42
Mcast_set_if(59,1282

/emcsvn/emc/libemcbase/src/unp/mcast_get_ttl.c,42
mcast_get_ttl(4,22
Mcast_get_ttl(38,541

/emcsvn/emc/libemcbase/src/unp/dg_echo.c,14
dg_echo(4,23

/emcsvn/emc/libemcbase/src/unp/wraplib.c,35
Inet_ntop(9,156
Inet_pton(21,472

/emcsvn/emc/libemcbase/src/unp/str_echo.c,15
str_echo(4,23

/emcsvn/emc/libemcbase/src/unp/writable_timeo.c,44
writable_timeo(5,51
Writable_timeo(22,313

/emcsvn/emc/libemcbase/src/unp/my_addrs.c,32
my_addrs(6,74
My_addrs(23,351

/emcsvn/emc/libemcbase/src/unp/sock_bind_wild.c,44
sock_bind_wild(4,22
Sock_bind_wild(47,897

/emcsvn/emc/libemcbase/src/unp/writen.c,28
writen(5,91
Writen(29,483

/emcsvn/emc/libemcbase/src/unp/udp_server.c,37
udp_server(5,47
Udp_server(44,1057

/emcsvn/emc/libemcbase/src/unp/read_fd.c,95
read_fd(5,48
	  struct cmsghdr	cm;16,253
	  char				control[control17,275
Read_fd(63,1326

/emcsvn/emc/libemcbase/src/unp/pselect.c,16
pselect(13,430

/emcsvn/emc/libemcbase/src/unp/snprintf.c,47
#undef _LOCAL_SNPRINTF14,429
snprintf(17,479

/emcsvn/emc/libemcbase/src/unp/str_cli.c,14
str_cli(4,23

/emcsvn/emc/libemcbase/src/mime/emime.h,1213
#define __emime_h2,18
typedef int BOOL;7,77
#define TRUE 9,96
#define FALSE 10,112
#define START_BREAK_FRAME 12,129
#define END_BREAK_FRAME 13,158
#define SAFE_FREE(14,196
#define MIN(16,249
#define MAX(17,280
typedef int err_t;20,325
typedef struct EError_t 21,344
	err_t errnum;22,370
	const char * desc;23,385
} EError;24,405
#define	SUCCESS	26,416
#define INVALID_STREAM	27,438
#define INVALID_SEEK	28,465
#define NO_MEMORY	29,490
const char * estrerror(31,514
typedef enum EStreamType 35,570
	ESTREAM_BUFFER=36,598
	ESTREAM_FD=37,618
} EStreamType;38,633
typedef struct EStreamBuffer_t 40,649
	void * ebuffer;41,682
	void * pos;42,699
	long datalen;43,712
	long buflen;44,727
} EStreamBuffer;45,741
typedef struct EStreamFd_t 47,759
	int fd;48,788
} EStreamFd;49,797
typedef struct EStream_t 51,811
	EStreamType			type;52,838
	union EStreamData 53,859
		EStreamBuffer	ebuffer;54,880
		EStreamFd		efd;55,905
} EStream;57,928
size_t estream_buffer_write(66,1368
size_t estream_buffer_read(67,1448
int estream_buffer_eos(68,1527
int estream_buffer_rewind(69,1578
long estream_buffer_tell(70,1632
long estream_buffer_seek(71,1685
EStream * estream_buffer_new(74,1767

/emcsvn/emc/libemcbase/src/smtp/smtp_utils.c,356
static char *rcsid rcsid1,0
static void use_rcsid(2,83
inline const char *find_next_rn(find_next_rn15,295
inline const char *find_end_header(find_end_header44,698
#define CURRENT_BUFFER_SIZE 96,1464
char *Get_header_value(Get_header_value98,1518
char *Get_recip_userid(Get_recip_userid182,3182
char *Get_recip_domain(Get_recip_domain208,3704

/emcsvn/emc/libemcbase/src/text/csv.c,99
static char *rcsid rcsid1,0
static void use_rcsid(2,76
int from_csv(13,289
int to_csv(75,1325

/emcsvn/emc/libemcbase/src/text/strip_html.c,774
static char *rcsid rcsid1,0
static void use_rcsid(2,83
typedef struct HtmlBuffer_t 18,382
	const char * buffer;19,412
	const char * pos;20,434
	size_t len;21,453
} HtmlBuffer;22,466
#define OPENTAG 24,481
#define ENDTAG 25,501
#define TOKEN_DELIM 27,521
typedef enum TagType_t 29,546
	UNKNOWN_TAG,30,571
	IMG_TAG,31,585
	A_TAG,32,595
	FONT_TAG,33,603
	COMMENT_TAG,34,614
} TagType;35,628
#define BUFLEN1 37,640
#define BUFLEN2 38,688
#define SECURE_BUFFER 39,739
void append_html_token(41,794
void append_text_token(74,1563
void eat_space(90,1899
TagType get_tag_type(100,2025
int parse_tag_contents(143,3095
int parse_tag_property(160,3445
int parse_comment_tag(222,4740
int parse_tag(242,5191
int parse_text(329,7114
int strip_html(385,8172

/emcsvn/emc/libemcbase/src/text/base64.c,254
static char *rcsid rcsid1,0
static void use_rcsid(2,79
#define BAD 11,231
#define DECODE64(12,250
static const char base64digits[base64digits14,306
static const char base64val[base64val17,412
int from64tobits(29,1085
void to64frombits(71,2042

/emcsvn/emc/libemcbase/src/util/mem.c,132
static char *rcsid rcsid1,0
static void use_rcsid(2,76
#define _GNU_SOURCE8,184
int Asprintf(19,381
void * Safe_malloc(35,697

/emcsvn/emc/libemcbase/src/util/hash.c,525
static char *rcsid rcsid5,48
static void use_rcsid(6,125
enum { ht_num_primes 17,317
static unsigned long ht_prime_list[ht_prime_list19,347
inline void * ht_val(29,730
inline char *ht_key(ht_key35,828
inline int ht_hashcode(41,925
Hash_node *ht_node_create(ht_node_create47,1080
inline Hash_node *ht_next(ht_next69,1611
inline Hash_node *ht_first(ht_first87,1992
Hash *Hash_create(Hash_create97,2236
void * Hash_find(113,2601
void Hash_insert(123,2862
void Hash_destroy(148,3426
int Hash_count(191,4349

/emcsvn/emc/libemcbase/src/util/hash.h,22
#define __hash_h2,17

/emcsvn/emc/libemcbase/src/util/timing.c,114
static char *rcsid rcsid1,0
static void use_rcsid(2,79
int Start_stopwatch(11,234
long Stop_stopwatch(26,493

/emcsvn/emc/libemcbase/src/util/string.c,140
static char *rcsid rcsid1,0
static void use_rcsid(2,79
void String_tolower(12,251
void String_toupper(25,424
void String_chomp(38,598

/emcsvn/emc/libemcbase/src/gmime_helpers/header_lines.c,151
static char *rcsid rcsid5,69
static void use_rcsid(6,154
static int get_line(20,467
int get_header_lines(82,1793
void free_header_lines(111,2256

/emcsvn/emc/libemcbase/src/internals.h,215
#define __emcbase_internals_h2,30
#define ASSERT(8,111
#define ASSERT_SYS(9,203
#define SAFE_FREE(11,299
#define START_BREAK_FRAME 13,356
#define END_BREAK_FRAME 14,385
#define MIN(17,436
#define MAX(20,488

/emcsvn/emc/libemcbase/src/openpgp.c,200
static char *rcsid rcsid1,0
static void use_rcsid(2,82
#define _GNU_SOURCE23,893
int openpgp_encrypt(36,1125
int openpgp_decrypt(129,3609
const char *openpgp_strerror(openpgp_strerror227,6463

/emcsvn/emc/libemcbase/src/network.c,152
static char *rcsid rcsid1,0
static void use_rcsid(2,81
int addr_in_block(22,489
int cidr_addr_in_block(40,853
int addr_directly_connected(62,1333

/emcsvn/emc/libemcbase/src/nfs_locking.c,296
static char *rcsid rcsid1,0
static void use_rcsid(2,85
static int get_procname(27,642
static int lock_is_stale(63,1508
static void set_backoff_with_skew(118,3325
#define MAX_LOCK_ATTEMPTS 140,3832
int nfs_lock(146,3972
int nfs_unlock(257,6619
const char *nfs_errstr(nfs_errstr270,6787

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_write.c,3723
#define MAX_MAIL_COL 42,1771
#define TRUE 45,1809
#define FALSE 49,1846
#define MAX_VALID_IMF_LINE 52,1870
static int mailimf_orig_date_write(54,1902
static int mailimf_date_time_write(56,1999
static int mailimf_from_write(58,2101
static int mailimf_sender_write(60,2190
static int mailimf_reply_to_write(62,2280
static int mailimf_to_write(64,2378
static int mailimf_cc_write(66,2459
static int mailimf_bcc_write(68,2540
static int mailimf_message_id_write(70,2624
static int mailimf_msg_id_list_write(72,2730
static int mailimf_in_reply_to_write(74,2812
static int mailimf_references_write(77,2931
static int mailimf_subject_write(79,3037
static int mailimf_address_write(82,3132
static int mailimf_group_write(84,3223
static int mailimf_mailbox_write(87,3317
static int mailimf_comments_write(90,3407
static int mailimf_optional_field_write(93,3506
static int mailimf_keywords_write(96,3613
static int mailimf_return_write(99,3712
static int mailimf_path_write(102,3808
static int mailimf_resent_date_write(105,3898
static int mailimf_resent_from_write(108,4000
static int mailimf_resent_sender_write(111,4097
static int mailimf_resent_to_write(114,4202
static int mailimf_resent_cc_write(117,4291
static int mailimf_resent_bcc_write(120,4380
mailimf_resent_msg_id_write(124,4484
int mailimf_string_write(132,4622
#define CRLF 148,4889
#define HEADER_FOLD 149,4909
static inline int flush_buf(151,4938
#define CUT_AT_MAX_VALID_IMF_LINE163,5160
int mailimf_string_write(165,5195
int mailimf_header_string_write(280,7574
  STATE_LOWER_72,376,9883
  STATE_LOWER_72_CUT,377,9901
  STATE_EQUAL_72,378,9923
  STATE_LOWER_998,379,9941
  STATE_EQUAL_998,380,9960
int mailimf_header_string_write(383,9983
  STATE_BEGIN,624,15306
  STATE_WORD,625,15321
  STATE_SPACE,626,15335
int mailimf_header_string_write(629,15354
int mailimf_envelope_fields_write(731,17439
int mailimf_fields_write(751,17886
int mailimf_unparsed_fields_write(768,18215
int mailimf_field_write(785,18574
static int mailimf_orig_date_write(869,21187
#define MAX_DATE_STR 892,21635
static int dayofweek(897,21694
static int mailimf_date_time_write(906,21911
static int mailimf_from_write(952,23134
static int mailimf_sender_write(975,23575
static int mailimf_reply_to_write(998,24011
static int mailimf_to_write(1022,24473
static int mailimf_cc_write(1046,24905
static int mailimf_bcc_write(1070,25337
static int mailimf_message_id_write(1096,25818
static int mailimf_msg_id_list_write(1129,26491
static int mailimf_in_reply_to_write(1189,27680
static int mailimf_references_write(1213,28161
static int mailimf_subject_write(1238,28637
int mailimf_address_list_write(1262,29118
static int mailimf_address_write(1294,29695
static int mailimf_group_write(1319,30145
int mailimf_mailbox_list_write(1347,30746
int mailimf_quoted_string_write(1379,31313
static int is_atext(1428,32378
static int mailimf_mailbox_write(1468,32948
static int mailimf_comments_write(1562,35105
static int mailimf_optional_field_write(1586,35594
static int mailimf_keywords_write(1621,36354
static int mailimf_delivering_info_write(1680,37407
mailimf_trace_resent_fields_write(1702,37858
static int mailimf_return_write(1723,38315
static int mailimf_path_write(1746,38766
static int mailimf_resent_fields_write(1767,39200
static int mailimf_resent_field_write(1789,39645
static int mailimf_resent_date_write(1836,40758
static int mailimf_resent_from_write(1859,41218
static int mailimf_resent_sender_write(1882,41674
static int mailimf_resent_to_write(1905,42132
static int mailimf_resent_cc_write(1929,42579
static int mailimf_resent_bcc_write(1953,43026
mailimf_resent_msg_id_write(1980,43533

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_write.h,342
#define MAILIMF_WRITE_H38,1707
int mailimf_string_write(56,2076
int mailimf_fields_write(69,2418
int mailimf_envelope_fields_write(82,2780
int mailimf_field_write(95,3130
int mailimf_quoted_string_write(108,3505
int mailimf_address_list_write(111,3591
int mailimf_mailbox_list_write(115,3694
int mailimf_header_string_write(128,4078

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_stream_write.c,4183
#define MAX_MAIL_COL 42,1785
#define TRUE 46,1850
#define FALSE 50,1887
#define MAX_VALID_IMF_LINE 53,1911
static int mailimf_stream_orig_date_write(55,1943
static int mailimf_stream_date_time_write(57,2057
static int mailimf_stream_from_write(59,2176
static int mailimf_stream_sender_write(61,2282
static int mailimf_stream_reply_to_write(63,2389
static int mailimf_stream_to_write(65,2504
static int mailimf_stream_cc_write(67,2602
static int mailimf_stream_bcc_write(69,2700
static int mailimf_stream_message_id_write(71,2801
static int mailimf_stream_msg_id_list_write(73,2924
static int mailimf_stream_in_reply_to_write(75,3023
static int mailimf_stream_references_write(78,3159
static int mailimf_stream_subject_write(80,3282
static int mailimf_stream_address_write(83,3394
static int mailimf_stream_group_write(85,3502
static int mailimf_stream_mailbox_write(88,3613
static int mailimf_stream_comments_write(91,3720
static int mailimf_stream_optional_field_write(94,3836
static int mailimf_stream_keywords_write(97,3960
static int mailimf_stream_return_write(100,4076
static int mailimf_stream_path_write(103,4189
static int mailimf_stream_resent_date_write(106,4296
static int mailimf_stream_resent_from_write(109,4415
static int mailimf_stream_resent_sender_write(112,4529
static int mailimf_stream_resent_to_write(115,4651
static int mailimf_stream_resent_cc_write(118,4757
static int mailimf_stream_resent_bcc_write(121,4863
mailimf_stream_resent_msg_id_write(125,4984
int mailimf_stream_string_write(133,5139
static inline int flush_buf(150,5443
#define CUT_AT_MAX_VALID_IMF_LINE162,5689
int mailimf_stream_string_write(164,5724
int mailimf_stream_header_string_write(279,8187
  STATE_LOWER_72,384,10921
  STATE_LOWER_72_CUT,385,10939
  STATE_EQUAL_72,386,10961
  STATE_LOWER_998,387,10979
  STATE_EQUAL_998,388,10998
int mailimf_stream_header_string_write(391,11021
  STATE_BEGIN,650,17054
  STATE_WORD,651,17069
  STATE_SPACE,652,17083
int mailimf_stream_header_string_write(655,17102
int mailimf_stream_envelope_fields_write(770,19661
int mailimf_stream_fields_write(790,20132
int mailimf_stream_unparsed_fields_write(807,20485
int mailimf_stream_field_write(824,20868
static int mailimf_stream_orig_date_write(908,23652
#define MAX_DATE_STR 931,24155
static int dayofweek(936,24214
static int mailimf_stream_date_time_write(945,24431
static int mailimf_stream_from_write(991,25678
static int mailimf_stream_sender_write(1014,26174
static int mailimf_stream_reply_to_write(1037,26665
static int mailimf_stream_to_write(1061,27182
static int mailimf_stream_cc_write(1085,27669
static int mailimf_stream_bcc_write(1109,28156
static int mailimf_stream_message_id_write(1135,28692
static int mailimf_stream_msg_id_list_write(1168,29434
static int mailimf_stream_in_reply_to_write(1232,30820
static int mailimf_stream_references_write(1256,31356
static int mailimf_stream_subject_write(1281,31887
int mailimf_stream_address_list_write(1305,32423
static int mailimf_stream_address_write(1337,33031
static int mailimf_stream_group_write(1362,33512
int mailimf_stream_mailbox_list_write(1390,34158
int mailimf_stream_quoted_string_write(1422,34756
static int is_atext(1471,35915
static int mailimf_stream_mailbox_write(1511,36485
static int mailimf_stream_comments_write(1617,39255
static int mailimf_stream_optional_field_write(1641,39799
static int mailimf_stream_keywords_write(1676,40628
static int mailimf_stream_delivering_info_write(1738,41864
mailimf_stream_trace_resent_fields_write(1760,42339
static int mailimf_stream_return_write(1781,42827
static int mailimf_stream_path_write(1804,43333
static int mailimf_stream_resent_fields_write(1825,43805
static int mailimf_stream_resent_field_write(1847,44274
static int mailimf_stream_resent_date_write(1894,45453
static int mailimf_stream_resent_from_write(1917,45968
static int mailimf_stream_resent_sender_write(1940,46479
static int mailimf_stream_resent_to_write(1963,46992
static int mailimf_stream_resent_cc_write(1987,47494
static int mailimf_stream_resent_bcc_write(2011,47996
mailimf_stream_resent_msg_id_write(2038,48558

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_stream_write.h,405
#define MAILIMF_STREAM_WRITE_H38,1721
int mailimf_stream_string_write(57,2126
int mailimf_stream_fields_write(70,2485
int mailimf_stream_envelope_fields_write(83,2864
int mailimf_stream_field_write(96,3231
int mailimf_stream_quoted_string_write(109,3623
int mailimf_stream_address_list_write(112,3726
int mailimf_stream_mailbox_list_write(116,3846
int mailimf_stream_header_string_write(129,4247

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_types_helper.c,1372
mailimf_mailbox_list_new_empty(42,1778
int mailimf_mailbox_list_add(58,2037
int mailimf_mailbox_list_add_parse(70,2280
int mailimf_mailbox_list_add_mb(99,2807
mailimf_address_list_new_empty(129,3334
int mailimf_address_list_add(145,3601
int mailimf_address_list_add_parse(157,3848
int mailimf_address_list_add_mb(186,4389
mailimf_resent_fields_list_new_empty(225,5152
int mailimf_resent_fields_add(241,5429
static void detach_free_common_fields(255,5689
static void detach_resent_field(293,6680
mailimf_resent_fields_add_data(300,6816
mailimf_resent_fields_new_with_data_all(585,15035
mailimf_resent_fields_new_with_data(624,15866
mailimf_fields_new_empty(659,16616
int mailimf_fields_add(675,16877
static void detach_free_fields(687,17103
static void detach_field(729,18117
int mailimf_fields_add_data(735,18242
mailimf_fields_new_with_data_all(1173,30401
mailimf_fields_new_with_data(1216,31303
#define MAX_MESSAGE_ID 1259,32244
char * mailimf_get_message_id(1261,32272
static time_t mkgmtime(1280,32587
struct mailimf_date_time * mailimf_get_current_date(1283,32630
#define WRONG	1403,37467
static int tmcomp(1406,37515
static time_t mkgmtime(1419,37938
void mailimf_single_fields_init(1467,38886
mailimf_single_fields_new(1590,42644
void mailimf_single_fields_free(1606,42964
struct mailimf_field * mailimf_field_new_custom(1612,43102

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_types_helper.h,980
#define MAILIMF_TYPES_HELPER38,1719
mailimf_mailbox_list_new_empty(62,2253
int mailimf_mailbox_list_add(71,2459
int mailimf_mailbox_list_add_parse(82,2803
int mailimf_mailbox_list_add_mb(100,3416
mailimf_address_list_new_empty(108,3640
int mailimf_address_list_add(117,3846
int mailimf_address_list_add_parse(128,4192
int mailimf_address_list_add_mb(146,4817
mailimf_resent_fields_add_data(163,5318
mailimf_resent_fields_new_with_data_all(186,6089
mailimf_resent_fields_new_with_data(207,6847
mailimf_fields_new_empty(218,7174
int mailimf_fields_add(228,7373
int mailimf_fields_add_data(250,8049
mailimf_fields_new_with_data_all(282,9119
mailimf_fields_new_with_data(313,10138
char * mailimf_get_message_id(328,10617
struct mailimf_date_time * mailimf_get_current_date(335,10756
void mailimf_single_fields_init(343,10942
mailimf_single_fields_new(352,11234
void mailimf_single_fields_free(354,11294
struct mailimf_field * mailimf_field_new_custom(364,11575

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_types.c,2876
void mailimf_atom_free(40,1754
void mailimf_dot_atom_free(46,1824
void mailimf_dot_atom_text_free(52,1910
void mailimf_quoted_string_free(58,2001
void mailimf_word_free(64,2107
void mailimf_phrase_free(70,2176
void mailimf_unstructured_free(76,2254
mailimf_date_time_new(84,2384
void mailimf_date_time_free(105,2814
mailimf_address_new(115,2952
void mailimf_address_free(131,3273
mailimf_mailbox_new(144,3560
void mailimf_mailbox_free(158,3799
void mailimf_angle_addr_free(169,4048
mailimf_group_new(177,4166
void mailimf_group_free(191,4441
void mailimf_display_name_free(201,4661
mailimf_mailbox_list_new(209,4809
void mailimf_mailbox_list_free(222,5018
mailimf_address_list_new(234,5273
void mailimf_address_list_free(247,5494
void mailimf_addr_spec_free(258,5733
void mailimf_local_part_free(264,5823
void mailimf_domain_free(270,5917
void mailimf_domain_literal_free(276,5995
struct mailimf_message * mailimf_message_new(284,6107
void mailimf_message_free(299,6417
struct mailimf_body * mailimf_body_new(309,6605
void mailimf_body_free(322,6834
mailimf_field_new(331,6944
void mailimf_field_free(434,9807
struct mailimf_fields * mailimf_fields_new(510,11958
void mailimf_fields_free(523,12173
struct mailimf_orig_date * mailimf_orig_date_new(535,12416
void mailimf_orig_date_free(549,12699
struct mailimf_from * mailimf_from_new(558,12906
void mailimf_from_free(571,13136
struct mailimf_sender * mailimf_sender_new(580,13307
void mailimf_sender_free(593,13529
mailimf_reply_to_new(603,13725
void mailimf_reply_to_free(616,13969
struct mailimf_to * mailimf_to_new(625,14172
void mailimf_to_free(638,14388
struct mailimf_cc * mailimf_cc_new(647,14549
void mailimf_cc_free(660,14765
struct mailimf_bcc * mailimf_bcc_new(669,14926
void mailimf_bcc_free(682,15151
struct mailimf_message_id * mailimf_message_id_new(691,15319
void mailimf_message_id_free(704,15574
struct mailimf_in_reply_to * mailimf_in_reply_to_new(713,15777
void mailimf_in_reply_to_free(726,16058
struct mailimf_references * mailimf_references_new(736,16314
void mailimf_references_free(749,16544
void mailimf_msg_id_free(759,16793
void mailimf_id_left_free(765,16871
void mailimf_id_right_free(771,16953
void mailimf_no_fold_quote_free(777,17039
void mailimf_no_fold_literal_free(783,17115
struct mailimf_subject * mailimf_subject_new(789,17193
void mailimf_subject_free(802,17419
struct mailimf_comments * mailimf_comments_new(810,17575
void mailimf_comments_free(823,17810
struct mailimf_keywords * mailimf_keywords_new(831,17972
void mailimf_keywords_free(844,18207
mailimf_return_new(854,18450
void mailimf_return_free(867,18685
struct mailimf_path * mailimf_path_new(876,18847
void mailimf_path_free(889,19058
mailimf_optional_field_new(899,19262
void mailimf_optional_field_free(913,19530
void mailimf_field_name_free(922,19752

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf_types.h,7910
#define MAILIMF_TYPES_H39,1708
struct mailimf_date_time 78,2429
  int day;79,2456
  int month;80,2467
  int year;81,2480
  int hour;82,2492
  int min;83,2504
  int sec;84,2515
  int zone;85,2526
mailimf_date_time_new(89,2569
void mailimf_date_time_free(92,2669
  MAILIMF_ADDRESS_ERROR,99,2781
  MAILIMF_ADDRESS_MAILBOX,100,2829
  MAILIMF_ADDRESS_GROUP,101,2900
struct mailimf_address 116,3292
  int type;117,3317
  struct mailimf_mailbox * mailbox;118,3329
  struct mailimf_group * group;119,3383
mailimf_address_new(124,3467
void mailimf_address_free(127,3569
struct mailimf_mailbox 142,3961
  char * display_name;143,3986
  char * addr_spec;144,4027
mailimf_mailbox_new(148,4093
void mailimf_mailbox_free(150,4154
struct mailimf_group 165,4482
  char * display_name;166,4505
  struct mailimf_mailbox_list * mb_list;167,4542
mailimf_group_new(171,4628
void mailimf_group_free(173,4708
struct mailimf_mailbox_list 183,4852
  clist * list;184,4882
mailimf_mailbox_list_new(189,4992
void mailimf_mailbox_list_free(191,5033
struct mailimf_address_list 201,5193
  clist * list;202,5223
mailimf_address_list_new(207,5333
void mailimf_address_list_free(209,5374
struct mailimf_body 224,5631
  char * text;225,5653
  size_t size;226,5682
struct mailimf_body * mailimf_body_new(229,5701
void mailimf_body_free(231,5768
struct mailimf_message 244,5971
  struct mailimf_fields * fields;245,5996
  struct mailimf_body * body;246,6044
struct mailimf_message * mailimf_message_new(249,6096
void mailimf_message_free(252,6213
struct mailimf_fields 263,6366
  clist * list;264,6390
struct mailimf_fields * mailimf_fields_new(268,6479
void mailimf_fields_free(270,6538
  MAILIMF_FIELD_NONE,277,6637
  MAILIMF_FIELD_RETURN_PATH,278,6690
  MAILIMF_FIELD_RESENT_DATE,279,6740
  MAILIMF_FIELD_RESENT_FROM,280,6790
  MAILIMF_FIELD_RESENT_SENDER,281,6840
  MAILIMF_FIELD_RESENT_TO,282,6892
  MAILIMF_FIELD_RESENT_CC,283,6940
  MAILIMF_FIELD_RESENT_BCC,284,6988
  MAILIMF_FIELD_RESENT_MSG_ID,285,7037
  MAILIMF_FIELD_ORIG_DATE,286,7093
  MAILIMF_FIELD_FROM,287,7136
  MAILIMF_FIELD_SENDER,288,7179
  MAILIMF_FIELD_REPLY_TO,289,7224
  MAILIMF_FIELD_TO,290,7271
  MAILIMF_FIELD_CC,291,7312
  MAILIMF_FIELD_BCC,292,7353
  MAILIMF_FIELD_MESSAGE_ID,293,7395
  MAILIMF_FIELD_IN_REPLY_TO,294,7444
  MAILIMF_FIELD_REFERENCES,295,7494
  MAILIMF_FIELD_SUBJECT,296,7543
  MAILIMF_FIELD_COMMENTS,297,7589
  MAILIMF_FIELD_KEYWORDS,298,7636
  MAILIMF_FIELD_OPTIONAL_FIELD,299,7683
#define LIBETPAN_MAILIMF_FIELD_UNION354,9161
struct mailimf_field 356,9199
  int type;357,9222
    struct mailimf_return * return_path;359,9244
    struct mailimf_orig_date * resent_date;360,9316
    struct mailimf_from * resent_from;361,9381
    struct mailimf_sender * resent_sender;362,9446
    struct mailimf_to * resent_to;363,9511
    struct mailimf_cc * resent_cc;364,9576
    struct mailimf_bcc * resent_bcc;365,9641
    struct mailimf_message_id * resent_msg_id;366,9706
    struct mailimf_orig_date * orig_date;367,9771
    struct mailimf_from * from;368,9843
    struct mailimf_sender * sender;369,9915
    struct mailimf_reply_to * reply_to;370,9987
    struct mailimf_to * to;371,10059
    struct mailimf_cc * cc;372,10131
    struct mailimf_bcc * bcc;373,10203
    struct mailimf_message_id * message_id;374,10275
    struct mailimf_in_reply_to * in_reply_to;375,10347
    struct mailimf_references * references;376,10419
    struct mailimf_subject * subject;377,10491
    struct mailimf_comments * comments;378,10563
    struct mailimf_keywords * keywords;379,10635
    struct mailimf_optional_field * optional_field;380,10707
  } field;381,10779
mailimf_field_new(385,10817
void mailimf_field_free(409,11708
struct mailimf_orig_date 419,11852
  struct mailimf_date_time * date_time;420,11879
struct mailimf_orig_date * mailimf_orig_date_new(423,11937
void mailimf_orig_date_free(426,12030
struct mailimf_from 437,12188
  struct mailimf_mailbox_list * mb_list;438,12210
struct mailimf_from * mailimf_from_new(441,12269
void mailimf_from_free(443,12349
struct mailimf_sender 453,12485
  struct mailimf_mailbox * mb;454,12509
struct mailimf_sender * mailimf_sender_new(457,12558
void mailimf_sender_free(459,12632
struct mailimf_reply_to 470,12792
  struct mailimf_address_list * addr_list;471,12818
mailimf_reply_to_new(475,12905
void mailimf_reply_to_free(477,12969
struct mailimf_to 488,13124
  struct mailimf_address_list * addr_list;489,13144
struct mailimf_to * mailimf_to_new(492,13205
void mailimf_to_free(494,13283
struct mailimf_cc 505,13417
  struct mailimf_address_list * addr_list;506,13437
struct mailimf_cc * mailimf_cc_new(509,13498
void mailimf_cc_free(511,13576
struct mailimf_bcc 522,13712
  struct mailimf_address_list * addr_list;523,13733
struct mailimf_bcc * mailimf_bcc_new(526,13798
void mailimf_bcc_free(528,13878
struct mailimf_message_id 538,14028
  char * value;539,14056
struct mailimf_message_id * mailimf_message_id_new(542,14090
void mailimf_message_id_free(544,14158
struct mailimf_in_reply_to 555,14344
  clist * msg_id_list;556,14373
struct mailimf_in_reply_to * mailimf_in_reply_to_new(560,14444
void mailimf_in_reply_to_free(562,14520
struct mailimf_references 572,14708
  clist * msg_id_list;573,14736
struct mailimf_references * mailimf_references_new(577,14807
void mailimf_references_free(579,14881
struct mailimf_subject 589,15046
  char * value;590,15071
struct mailimf_subject * mailimf_subject_new(593,15105
void mailimf_subject_free(595,15166
struct mailimf_comments 604,15321
  char * value;605,15347
struct mailimf_comments * mailimf_comments_new(608,15381
void mailimf_comments_free(610,15444
struct mailimf_keywords 619,15599
  clist * list;620,15625
struct mailimf_keywords * mailimf_keywords_new(624,15689
void mailimf_keywords_free(626,15752
struct mailimf_return 635,15919
  struct mailimf_path * path;636,15943
mailimf_return_new(640,16015
void mailimf_return_free(642,16064
struct mailimf_path 651,16214
  char * addr_spec;652,16236
struct mailimf_path * mailimf_path_new(655,16278
void mailimf_path_free(657,16337
struct mailimf_optional_field 668,16517
  char * name;669,16549
  char * value;670,16579
mailimf_optional_field_new(674,16645
void mailimf_optional_field_free(676,16701
struct mailimf_single_fields 713,17601
  struct mailimf_orig_date * orig_date;714,17632
  struct mailimf_from * from;715,17695
  struct mailimf_sender * sender;716,17758
  struct mailimf_reply_to * reply_to;717,17821
  struct mailimf_to * to;718,17884
  struct mailimf_cc * cc;719,17947
  struct mailimf_bcc * bcc;720,18010
  struct mailimf_message_id * message_id;721,18073
  struct mailimf_in_reply_to * in_reply_to;722,18136
  struct mailimf_references * references;723,18199
  struct mailimf_subject * subject;724,18262
  struct mailimf_comments * comments;725,18325
  struct mailimf_keywords * keywords;726,18388
void mailimf_atom_free(736,18480
void mailimf_dot_atom_free(738,18518
void mailimf_dot_atom_text_free(740,18564
void mailimf_quoted_string_free(742,18615
void mailimf_word_free(744,18671
void mailimf_phrase_free(746,18709
void mailimf_unstructured_free(748,18751
void mailimf_angle_addr_free(750,18805
void mailimf_display_name_free(752,18855
void mailimf_addr_spec_free(754,18909
void mailimf_local_part_free(756,18957
void mailimf_domain_free(758,19007
void mailimf_domain_literal_free(760,19049
void mailimf_msg_id_free(762,19099
void mailimf_id_left_free(764,19141
void mailimf_id_right_free(766,19185
void mailimf_no_fold_quote_free(768,19231
void mailimf_no_fold_literal_free(770,19277
void mailimf_field_name_free(772,19325
  MAILIMF_NO_ERROR 779,19435
  MAILIMF_ERROR_PARSE,780,19459
  MAILIMF_ERROR_MEMORY,781,19482
  MAILIMF_ERROR_INVAL,782,19506
  MAILIMF_ERROR_FILE,783,19529

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf.c,9716
#define TRUE 56,2212
#define FALSE 60,2249
static inline int is_dtext(69,2279
static int mailimf_quoted_pair_parse(71,2317
static int mailimf_ccontent_parse(74,2427
mailimf_comment_fws_ccontent_parse(78,2527
static inline int mailimf_comment_parse(81,2618
static int mailimf_qcontent_parse(84,2712
static int mailimf_phrase_parse(87,2812
static int mailimf_unstructured_parse(90,2913
static int mailimf_ignore_unstructured_parse(93,3026
static int mailimf_day_of_week_parse(96,3130
static int mailimf_day_name_parse(99,3239
static int mailimf_date_parse(102,3342
static int mailimf_year_parse(106,3478
static int mailimf_month_parse(109,3580
static int mailimf_month_name_parse(112,3684
static int mailimf_day_parse(115,3791
static int mailimf_time_parse(118,3889
static int mailimf_time_of_day_parse(123,4053
static int mailimf_hour_parse(128,4203
static int mailimf_minute_parse(131,4305
static int mailimf_second_parse(134,4404
static int mailimf_zone_parse(137,4503
static int mailimf_name_addr_parse(140,4605
static int mailimf_angle_addr_parse(145,4754
static int mailimf_group_parse(148,4863
static int mailimf_display_name_parse(152,4995
static int mailimf_addr_spec_parse(155,5108
static int mailimf_local_part_parse(160,5229
static int mailimf_domain_parse(166,5359
static int mailimf_domain_literal_parse(171,5471
static int mailimf_dcontent_parse(174,5581
mailimf_orig_date_parse(178,5696
mailimf_from_parse(182,5819
mailimf_sender_parse(186,5934
mailimf_reply_to_parse(190,6055
mailimf_to_parse(194,6182
mailimf_cc_parse(198,6291
mailimf_bcc_parse(202,6400
static int mailimf_message_id_parse(205,6501
mailimf_in_reply_to_parse(210,6650
static int mailimf_references_parse(215,6779
static int mailimf_unstrict_msg_id_parse(221,6932
static int mailimf_id_left_parse(225,7050
static int mailimf_id_right_parse(228,7153
static int mailimf_no_fold_quote_parse(231,7258
static int mailimf_no_fold_literal_parse(234,7373
static int mailimf_subject_parse(237,7485
static int mailimf_comments_parse(241,7611
static int mailimf_keywords_parse(245,7741
mailimf_resent_date_parse(250,7882
mailimf_resent_from_parse(254,8009
mailimf_resent_sender_parse(258,8131
mailimf_resent_to_parse(262,8259
mailimf_resent_cc_parse(266,8375
mailimf_resent_bcc_parse(270,8491
mailimf_resent_msg_id_parse(274,8610
static int mailimf_return_parse(278,8738
mailimf_path_parse(283,8871
mailimf_optional_field_parse(287,8986
static int mailimf_field_name_parse(291,9121
static inline int is_digit(320,9325
static int mailimf_digit_parse(325,9403
mailimf_number_parse(346,9815
int mailimf_char_parse(381,10414
int mailimf_unstrict_char_parse(400,10767
mailimf_token_case_insensitive_len_parse(422,11215
static int mailimf_oparenth_parse(442,11675
static int mailimf_cparenth_parse(448,11825
static int mailimf_comma_parse(454,11975
static int mailimf_dquote_parse(460,12135
static int mailimf_colon_parse(466,12282
static int mailimf_semi_colon_parse(472,12442
static int mailimf_plus_parse(478,12605
static int mailimf_minus_parse(484,12763
static int mailimf_lower_parse(490,12923
static int mailimf_greater_parse(496,13083
static int mailimf_obracket_parse(502,13245
static int mailimf_cbracket_parse(508,13409
static int mailimf_at_sign_parse(514,13573
static int mailimf_point_parse(520,13735
mailimf_custom_string_parse(527,13899
typedef int mailimf_struct_parser(572,14646
typedef int mailimf_struct_destructor(575,14750
mailimf_struct_multiple_parse(579,14817
mailimf_struct_list_parse(645,16046
static inline int mailimf_wsp_parse(725,17548
int mailimf_crlf_parse(745,17917
static int mailimf_unstrict_crlf_parse(764,18338
static inline int is_no_ws_ctl(800,19259
static inline int mailimf_quoted_pair_parse(833,20019
int mailimf_fws_parse(859,20542
static inline int is_ctext(929,21858
static inline int mailimf_ccontent_parse(955,22223
mailimf_comment_fws_ccontent_parse(990,22839
static inline int mailimf_comment_parse(1015,23334
static inline int mailimf_cfws_fws_comment_parse(1054,24090
int mailimf_cfws_parse(1079,24607
static inline int is_atext(1125,25664
int mailimf_atom_parse(1155,26009
int mailimf_fws_atom_parse(1207,26919
static int mailimf_dot_atom_parse(1263,27886
mailimf_dot_atom_text_parse(1274,28120
static inline int is_qtext(1288,28564
static int mailimf_qcontent_parse(1314,28900
int mailimf_quoted_string_parse(1349,29557
int mailimf_fws_quoted_string_parse(1445,31393
int mailimf_word_parse(1545,33288
int mailimf_fws_word_parse(1568,33740
static int mailimf_phrase_parse(1595,34252
  UNSTRUCTURED_START,1674,35692
  UNSTRUCTURED_CR,1675,35714
  UNSTRUCTURED_LF,1676,35733
  UNSTRUCTURED_WSP,1677,35752
  UNSTRUCTURED_OUT1678,35772
static int mailimf_unstructured_parse(1681,35795
static int mailimf_ignore_unstructured_parse(1795,37812
int mailimf_ignore_field_parse(1879,39336
int mailimf_date_time_parse(2001,41479
static int mailimf_day_of_week_parse(2056,42716
struct mailimf_token_value 2084,43335
  int value;2085,43364
  char * str;2086,43377
static struct mailimf_token_value day_names[day_names2089,43395
  DAY_NAME_START,2100,43554
  DAY_NAME_T,2101,43572
  DAY_NAME_S2102,43586
static int guess_day_name(2105,43603
static int mailimf_day_name_parse(2162,44558
static int mailimf_date_parse(2194,45192
static int mailimf_year_parse(2231,45895
static int mailimf_month_parse(2258,46450
static struct mailimf_token_value month_names[month_names2287,47112
  MONTH_START,2303,47346
  MONTH_J,2304,47361
  MONTH_JU,2305,47372
  MONTH_M,2306,47384
  MONTH_MA,2307,47395
  MONTH_A2308,47407
static int guess_month(2311,47421
static int mailimf_month_name_parse(2404,49050
static int mailimf_day_parse(2436,49691
static int mailimf_time_parse(2463,50223
static int mailimf_time_of_day_parse(2516,51267
static int mailimf_hour_parse(2564,52246
static int mailimf_minute_parse(2583,52579
static int mailimf_second_parse(2602,52915
  STATE_ZONE_1 2637,54027
  STATE_ZONE_2 2638,54047
  STATE_ZONE_3 2639,54067
  STATE_ZONE_OK 2640,54087
  STATE_ZONE_ERR 2641,54109
  STATE_ZONE_CONT 2642,54131
static int mailimf_zone_parse(2645,54158
int mailimf_address_parse(2774,56439
int mailimf_mailbox_parse(2833,57614
static int mailimf_name_addr_parse(2882,58619
static int mailimf_angle_addr_parse(2927,59558
static int mailimf_group_parse(2965,60410
static int mailimf_display_name_parse(3034,61882
mailimf_mailbox_list_parse(3045,62137
mailimf_address_list_parse(3092,63068
static int mailimf_addr_spec_parse(3138,63975
static int mailimf_local_part_parse(3292,66661
static int mailimf_domain_parse(3321,67197
mailimf_domain_literal_fws_dcontent_parse(3350,67679
static int mailimf_domain_literal_parse(3376,68214
static int mailimf_dcontent_parse(3434,69502
static inline int is_dtext(3472,70303
int mailimf_message_parse(3496,70658
int mailimf_body_parse(3550,71705
  RESENT_HEADER_START,3614,73291
static int guess_resent_header_type(3617,73318
mailimf_resent_field_parse(3653,74104
mailimf_resent_fields_list_parse(3780,77145
mailimf_trace_resent_fields_parse(3829,78143
mailimf_delivering_info_parse(3893,79603
  HEADER_START,3954,81075
  HEADER_C,3955,81091
  HEADER_R,3956,81103
  HEADER_RE,3957,81115
  HEADER_S,3958,81128
  HEADER_RES,3959,81140
static int guess_header_type(3962,81158
static int mailimf_field_parse(4083,83842
mailimf_unparsed_fields_parse(4516,94317
int mailimf_fields_parse(4582,95541
mailimf_orig_date_parse(4653,96756
mailimf_from_parse(4711,97941
mailimf_sender_parse(4770,99056
mailimf_reply_to_parse(4829,100147
mailimf_to_parse(4887,101315
mailimf_cc_parse(4946,102424
mailimf_bcc_parse(5005,103545
static int mailimf_message_id_parse(5074,104924
int mailimf_msg_id_list_parse(5132,106059
static int mailimf_in_reply_to_parse(5143,106402
int mailimf_references_parse(5202,107635
int mailimf_msg_id_parse(5261,108865
static int mailimf_parse_unwanted_msg_id(5356,110710
static int mailimf_unstrict_msg_id_parse(5432,112532
static int mailimf_id_left_parse(5468,113329
static int mailimf_id_right_parse(5494,113868
static int mailimf_no_fold_quote_char_parse(5520,114399
static int mailimf_no_fold_quote_parse(5553,115011
mailimf_no_fold_literal_char_parse(5612,116225
static int mailimf_no_fold_literal_parse(5644,116825
static int mailimf_subject_parse(5705,118043
static int mailimf_comments_parse(5763,119162
static int mailimf_keywords_parse(5821,120300
mailimf_resent_date_parse(5886,121606
mailimf_resent_from_parse(5944,122783
mailimf_resent_sender_parse(6002,123918
mailimf_resent_to_parse(6060,125022
mailimf_resent_cc_parse(6118,126151
mailimf_resent_bcc_parse(6176,127292
mailimf_resent_msg_id_parse(6235,128467
static int mailimf_trace_parse(6295,129620
static int mailimf_return_parse(6358,131050
static int mailimf_path_parse(6417,132221
static int mailimf_received_parse(6485,133597
mailimf_name_val_list_parse(6562,135238
mailimf_name_val_pair_parse(6654,137094
static int mailimf_item_name_parse(6716,138415
static int is_item_value_atext(6779,139606
static int mailimf_item_value_atom_parse(6793,139780
static int mailimf_item_value_parse(6821,140438
mailimf_optional_field_parse(6925,142823
static inline int is_ftext(6985,144026
static int mailimf_field_name_parse(6987,144064
static inline int is_ftext(7032,145068
static int mailimf_envelope_field_parse(7056,145431
int mailimf_envelope_fields_parse(7292,150889
mailimf_envelope_or_optional_field_parse(7362,152160
mailimf_envelope_and_optional_fields_parse(7403,153122
mailimf_only_optional_field_parse(7464,154226
mailimf_optional_fields_parse(7499,155042

/emcsvn/emc/libemcbase/src/libemime/imf/mailimf.h,1191
#define MAILIMF_H38,1695
int mailimf_message_parse(65,2366
int mailimf_body_parse(83,2986
int mailimf_fields_parse(101,3593
mailimf_mailbox_list_parse(120,4201
mailimf_address_list_parse(139,4821
int mailimf_address_parse(157,5417
int mailimf_mailbox_parse(175,6005
int mailimf_date_time_parse(193,6595
int mailimf_envelope_fields_parse(213,7307
int mailimf_ignore_field_parse(230,7839
mailimf_envelope_and_optional_fields_parse(252,8563
mailimf_optional_fields_parse(272,9212
int mailimf_fws_parse(279,9382
int mailimf_cfws_parse(281,9453
int mailimf_char_parse(284,9534
int mailimf_unstrict_char_parse(287,9627
int mailimf_crlf_parse(290,9724
mailimf_custom_string_parse(293,9800
mailimf_token_case_insensitive_len_parse(298,9941
#define mailimf_token_case_insensitive_parse(302,10078
int mailimf_quoted_string_parse(306,10264
mailimf_number_parse(310,10369
int mailimf_msg_id_parse(313,10465
int mailimf_msg_id_list_parse(317,10563
int mailimf_word_parse(320,10668
int mailimf_atom_parse(323,10765
int mailimf_fws_atom_parse(326,10862
int mailimf_fws_word_parse(329,10960
int mailimf_fws_quoted_string_parse(332,11058
int mailimf_references_parse(337,11192

/emcsvn/emc/libemcbase/src/libemime/tools/cinthash.c,577
struct cinthash_list 39,1720
  unsigned long hash;40,1743
  void * data;41,1765
  struct cinthash_list * next;42,1780
static struct cinthash_list HASH_LISTHEAD_NEW 45,1815
static inline int hash_list_add(47,1883
static inline void hash_list_free(68,2292
static inline int hash_list_remove(81,2519
static inline void * hash_list_find(104,2963
cinthash_t * cinthash_new(119,3272
void cinthash_free(141,3706
int cinthash_add(153,3898
int cinthash_remove(181,4360
void * cinthash_find(206,4739
void cinthash_foreach_key(218,4977
void cinthash_foreach_data(234,5408

/emcsvn/emc/libemcbase/src/libemime/tools/cinthash.h,414
#define CINTHASH_H38,1697
typedef struct cinthash_t 44,1757
  struct cinthash_list * table;45,1785
  unsigned long hashtable_size 46,1817
  unsigned long count;47,1850
} cinthash_t;48,1873
cinthash_t * cinthash_new(50,1888
void cinthash_free(51,1945
int cinthash_add(53,1986
int cinthash_remove(54,2057
void * cinthash_find(55,2118
void cinthash_foreach_key(57,2181
void cinthash_foreach_data(61,2290

/emcsvn/emc/libemcbase/src/libemime/tools/md5.c,1187
#define S11 74,2871
#define S12 75,2885
#define S13 76,2900
#define S14 77,2915
#define S21 78,2930
#define S22 79,2944
#define S23 80,2958
#define S24 81,2973
#define S31 82,2988
#define S32 83,3002
#define S33 84,3017
#define S34 85,3032
#define S41 86,3047
#define S42 87,3061
#define S43 88,3076
#define S44 89,3091
static void MD5Transform PROTO_LIST 91,3107
static void Encode PROTO_LIST92,3178
static void Decode PROTO_LIST94,3260
static void MD5_memcpy PROTO_LIST 96,3342
static void MD5_memset PROTO_LIST 97,3412
static unsigned char PADDING[PADDING99,3479
#undef I109,3829
#define F(112,3846
#define G(113,3894
#define H(114,3942
#define I(115,3979
#define ROTATE_LEFT(121,4071
#define FF(127,4263
#define GG(128,4403
#define HH(129,4558
#define II(130,4712
void MD5Init 135,4942
void MD5Update 153,5413
void MD5Final 199,6662
static void MD5Transform 232,7490
static void Encode 327,11814
static void Decode 347,12355
static void MD5_memcpy 363,12742
static void MD5_memset 377,12995
void hmac_md5_init(388,13191
void hmac_md5_precalc(458,15306
void hmac_md5_import(474,15680
void hmac_md5_final(489,16169
void hmac_md5(498,16436

/emcsvn/emc/libemcbase/src/libemime/tools/md5.h,273
#define MD5_H64,2626
  UINT4 state[state72,2717
  UINT4 count[count73,2788
  unsigned char buffer[buffer74,2859
} MD5_CTX;75,2930
void MD5Init PROTO_LIST 77,2942
void MD5Update PROTO_LIST78,2981
void MD5Final PROTO_LIST 80,3055
void hmac_md5 PROTO_LIST 82,3116

/emcsvn/emc/libemcbase/src/libemime/tools/emime_outstream.c,176
#define BUFFER_SIZE 7,108
void emime_outstream_free(9,147
EMimeOutStream * emime_outstream_new(20,278
size_t emime_outstream_write(42,650
int emime_outstream_putc(68,1181

/emcsvn/emc/libemcbase/src/libemime/tools/emime_outstream.h,551
#define __emime_out_stream_h2,29
#define CRLF 7,100
#define LF 8,120
typedef enum EMimeOutStreamType_t 10,137
	STRING_STREAM,11,173
	FILE_STREAM,12,189
	FD_STREAM	13,203
} EMimeOutStreamType;14,215
typedef struct EMimeOutStream_t 16,238
	EMimeOutStreamType type;17,272
	char * delim;18,298
	char * buffer;19,313
	size_t buffer_size;20,329
	size_t cur_size;21,350
} EMimeOutStream;22,368
size_t emime_outstream_write(24,387
int emime_outstream_putc(25,463
void emime_outstream_free(26,519
EMimeOutStream * emime_outstream_new(27,568

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_types.h,789
#define MAILSTREAM_TYPES_H38,1713
#define LIBETPAN_MAILSTREAM_DEBUG44,1781
typedef struct _mailstream mailstream;48,1837
typedef struct _mailstream_low mailstream_low;52,1902
struct _mailstream 54,1950
  size_t buffer_max_size;55,1971
  char * write_buffer;57,1998
  size_t write_buffer_len;58,2021
  char * read_buffer;60,2049
  size_t read_buffer_len;61,2071
  mailstream_low * low;63,2098
struct mailstream_low_driver 66,2126
  ssize_t (* mailstream_read)67,2157
  ssize_t (* mailstream_write)68,2222
  int (* mailstream_close)69,2288
  int (* mailstream_get_fd)70,2334
  void (* mailstream_free)71,2381
typedef struct mailstream_low_driver mailstream_low_driver;74,2431
struct _mailstream_low 76,2492
  void * data;77,2517
  mailstream_low_driver * driver;78,2532

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream.c,772
#define DEFAULT_NETWORK_TIMEOUT 43,1811
#define STREAM_DEBUG47,1882
#define LOG_FILE 51,1924
int mailstream_debug 53,1970
#define STREAM_LOG_BUF(55,1997
#define STREAM_LOG(71,2385
#define STREAM_LOG_BUF(89,2758
#define STREAM_LOG(90,2809
mailstream * mailstream_new(95,2860
static size_t write_to_internal_buffer(126,3406
static size_t write_direct(135,3613
ssize_t mailstream_write(160,4026
int mailstream_flush(186,4556
static ssize_t read_from_internal_buffer(216,5063
static ssize_t read_through_buffer(232,5440
ssize_t mailstream_read(260,5929
mailstream_low * mailstream_get_low(349,7834
void mailstream_set_low(354,7908
int mailstream_close(359,7991
ssize_t mailstream_feed_read_buffer(374,8177
struct timeval mailstream_network_delay 392,8531

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream.h,459
#define MAILSTREAM_H38,1701
mailstream * mailstream_new(52,1935
ssize_t mailstream_write(53,2006
ssize_t mailstream_read(54,2074
int mailstream_close(55,2141
int mailstream_flush(56,2179
ssize_t mailstream_feed_read_buffer(57,2217
mailstream_low * mailstream_get_low(58,2270
void mailstream_set_low(59,2323
extern int mailstream_debug;62,2420
#define LIBETPAN_MAILSTREAM_NETWORK_DELAY65,2457
extern struct timeval mailstream_network_delay;66,2499

/emcsvn/emc/libemcbase/src/libemime/tools/connect.c,70
uint16_t mail_get_service_port(44,1809
int mail_tcp_connect(56,2012

/emcsvn/emc/libemcbase/src/libemime/tools/connect.h,96
#define CONNECT_H38,1695
uint16_t mail_get_service_port(46,1777
int mail_tcp_connect(47,1839

/emcsvn/emc/libemcbase/src/libemime/tools/maildb_helper.h,144
#define DB_HELPER_H38,1703
int maildb_open(46,1781
void maildb_close(47,1827
int maildb_open_lock(48,1856
void maildb_close_unlock(49,1907

/emcsvn/emc/libemcbase/src/libemime/tools/charconv.c,123
static size_t mail_iconv 46,1823
int charconv(105,2922
int charconv_buffer(161,3892
void charconv_buffer_free(225,5025

/emcsvn/emc/libemcbase/src/libemime/tools/charconv.h,268
#define CHARCONV_H38,1697
  MAIL_CHARCONV_NO_ERROR 47,1788
  MAIL_CHARCONV_ERROR_UNKNOWN_CHARSET,48,1818
  MAIL_CHARCONV_ERROR_MEMORY,49,1857
  MAIL_CHARCONV_ERROR_CONV,50,1887
int charconv(53,1919
int charconv_buffer(56,2015
void charconv_buffer_free(60,2145

/emcsvn/emc/libemcbase/src/libemime/tools/mmapstring.c,1187
#define MAX(47,1848
#define MIN(48,1890
#define MMAP_STRING_DEFAULT_CEIL 50,1933
#define DEFAULT_TMP_PATH 52,1985
static char tmpdir[tmpdir54,2018
static size_t mmap_string_ceil 56,2068
static pthread_mutex_t mmapstring_lock 60,2157
static chash * mmapstring_hashtable 61,2225
static void mmapstring_hashtable_init(63,2270
void mmap_string_set_tmpdir(68,2385
int mmap_string_ref(75,2505
int mmap_string_unref(107,3109
#define MY_MAXSIZE 154,3876
nearest_power 157,3931
void mmap_string_set_ceil(172,4130
static MMAPString * mmap_string_realloc_file(180,4218
static MMAPString * mmap_string_realloc_memory(242,5518
mmap_string_maybe_expand 257,5770
mmap_string_sized_new 289,6476
mmap_string_new 312,6885
mmap_string_new_len 327,7134
mmap_string_free 346,7446
mmap_string_assign 362,7689
mmap_string_truncate 373,7894
mmap_string_set_size 396,8483
mmap_string_insert_len 417,8907
mmap_string_append 439,9366
mmap_string_append_len 446,9525
mmap_string_append_c 454,9697
mmap_string_prepend 461,9831
mmap_string_prepend_len 468,9980
mmap_string_prepend_c 476,10146
mmap_string_insert 483,10274
mmap_string_insert_c 491,10451
mmap_string_erase 512,10874

/emcsvn/emc/libemcbase/src/libemime/tools/mmapstring.h,1087
#define __MMAP_STRING_H__38,1706
typedef struct _MMAPString MMAPString;50,1826
struct _MMAPString52,1866
  char * str;54,1887
  size_t len;55,1901
  size_t allocated_len;56,1919
  int fd;57,1943
  size_t mmapped_size;58,1953
void mmap_string_set_tmpdir(66,2062
MMAPString * mmap_string_new 71,2126
MMAPString * mmap_string_new_len 73,2177
MMAPString * mmap_string_sized_new 76,2253
void mmap_string_free 78,2308
MMAPString * mmap_string_assign 80,2354
MMAPString * mmap_string_truncate 83,2434
MMAPString * mmap_string_set_size 86,2514
MMAPString * mmap_string_insert_len 89,2591
MMAPString * mmap_string_append 94,2725
MMAPString * mmap_string_append_len 97,2804
MMAPString * mmap_string_append_c 101,2914
MMAPString * mmap_string_prepend 104,2987
MMAPString * mmap_string_prepend_c 107,3068
MMAPString * mmap_string_prepend_len 110,3143
MMAPString * mmap_string_insert 114,3256
MMAPString * mmap_string_insert_c 118,3352
MMAPString * mmap_string_erase(122,3443
void mmap_string_set_ceil(126,3548
int mmap_string_ref(128,3589
int mmap_string_unref(129,3631

/emcsvn/emc/libemcbase/src/libemime/tools/carray.c,318
carray * carray_new(44,1863
int carray_add(60,2181
int carray_set_size(74,2437
int carray_delete_fast(94,2799
int carray_delete(103,2942
int carray_delete_slow(112,3129
void ** carray_data(123,3390
uint32_t carray_count(127,3454
void * carray_get(131,3518
void carray_set(135,3601
void carray_free(140,3704

/emcsvn/emc/libemcbase/src/libemime/tools/carray.h,629
#define CARRAY_H41,1819
struct carray_s 49,1900
  void ** array;50,1918
  uint32_t len;51,1935
  uint32_t max;52,1951
typedef struct carray_s carray;55,1971
carray *   carray_new(58,2076
int       carray_add(62,2228
int carray_set_size(64,2298
int       carray_delete(68,2473
int       carray_delete_slow(72,2652
int carray_delete_fast(75,2768
void **   carray_data(82,2995
int       carray_count(85,3077
void *    carray_get(88,3149
void      carray_set(91,3232
#define   carray_data(94,3299
#define   carray_count(95,3343
#define   carray_get(96,3385
#define   carray_set(97,3435
void carray_free(100,3510

/emcsvn/emc/libemcbase/src/libemime/tools/hmac-md5.h,487
#define HMAC_MD5_H 40,1737
#define HMAC_MD5_SIZE 46,1799
typedef struct HMAC_MD5_CTX_s 49,1856
    MD5_CTX ictx,50,1888
    MD5_CTX ictx, octx;50,1888
} HMAC_MD5_CTX;51,1912
typedef struct HMAC_MD5_STATE_s 56,2013
    UINT4 istate[istate57,2047
    UINT4 ostate[ostate58,2068
} HMAC_MD5_STATE;59,2089
void hmac_md5(65,2181
void hmac_md5_init(71,2359
void hmac_md5_precalc(76,2492
void hmac_md5_import(81,2635
#define hmac_md5_update(83,2701
void hmac_md5_final(87,2870

/emcsvn/emc/libemcbase/src/libemime/tools/mail.h,172
#define MAIL_H38,1689
typedef void progress_function(46,1769
#define TRUE 49,1847
#define FALSE 53,1884
#define DIR_SEPARATOR 57,1930
#define DIR_SEPARATOR_S 61,1988

/emcsvn/emc/libemcbase/src/libemime/tools/mail_cache_db.h,309
#define MAIL_CACHE_DB_H38,1707
int mail_cache_db_open(62,2163
void mail_cache_db_close(72,2358
int mail_cache_db_open_lock(82,2600
void mail_cache_db_close_unlock(92,2818
int mail_cache_db_put(101,3004
int mail_cache_db_get(111,3247
int mail_cache_db_del(121,3494
int mail_cache_db_clean_up(131,3742

/emcsvn/emc/libemcbase/src/libemime/tools/md5global.h,243
#define MD5GLOBAL_H41,1745
#define PROTOTYPES 53,2038
typedef unsigned char *POINTER;POINTER57,2112
typedef unsigned short int UINT2;60,2181
typedef unsigned long int UINT4;63,2253
#define PROTO_LIST(70,2470
#define PROTO_LIST(72,2506

/emcsvn/emc/libemcbase/src/libemime/tools/mail_cache_db_types.h,104
#define MAIL_CACHE_DB_TYPES_H38,1719
struct mail_cache_db 44,1790
  void * internal_database;45,1813

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_low.c,223
mailstream_low * mailstream_low_new(41,1757
int mailstream_low_close(56,1989
int mailstream_low_get_fd(65,2118
void mailstream_low_free(72,2243
ssize_t mailstream_low_read(77,2326
ssize_t mailstream_low_write(84,2489

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_low.h,256
#define MAILSTREAM_LOW_H38,1709
mailstream_low * mailstream_low_new(49,1854
ssize_t mailstream_low_write(51,1944
ssize_t mailstream_low_read(52,2020
int mailstream_low_close(53,2095
int mailstream_low_get_fd(54,2141
void mailstream_low_free(55,2188

/emcsvn/emc/libemcbase/src/libemime/tools/maillock.c,264
#define LOCKTO_RM	138,6142
#define LOCKTO_GLOB	139,6205
static int lock_common(141,6273
static int unlock_common(240,8066
int maillock_read_lock(267,8553
int maillock_read_unlock(272,8651
int maillock_write_lock(277,8744
int maillock_write_unlock(282,8843

/emcsvn/emc/libemcbase/src/libemime/tools/maillock.h,161
#define MAILLOCK_H38,1697
int maillock_read_lock(44,1757
int maillock_read_unlock(45,1806
int maillock_write_lock(46,1857
int maillock_write_unlock(47,1907

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_ssl.c,1003
struct mailstream_ssl_data 56,1975
  int fd;57,2004
  SSL * ssl_conn;58,2014
  SSL_CTX * ssl_ctx;59,2032
static pthread_mutex_t ssl_lock 64,2079
static int ssl_init_done 65,2140
static int mailstream_low_ssl_close(69,2193
static ssize_t mailstream_low_ssl_read(70,2250
static ssize_t mailstream_low_ssl_write(72,2347
static void mailstream_low_ssl_free(74,2439
static int mailstream_low_ssl_get_fd(75,2496
static mailstream_low_driver local_mailstream_ssl_driver 77,2555
mailstream_low_driver * mailstream_ssl_driver 85,2848
static struct mailstream_ssl_data * ssl_data_new(91,3013
static void  ssl_data_free(151,4204
static void  ssl_data_close(156,4293
mailstream_low * mailstream_low_ssl_open(167,4541
static int mailstream_low_ssl_close(193,4965
static void mailstream_low_ssl_free(203,5162
static int mailstream_low_ssl_get_fd(214,5375
static ssize_t mailstream_low_ssl_read(222,5555
static ssize_t mailstream_low_ssl_write(263,6415
mailstream * mailstream_ssl_open(275,6683

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_ssl.h,187
#define MAILSTREAM_SSL_H38,1709
extern mailstream_low_driver * mailstream_ssl_driver;49,1829
mailstream_low * mailstream_low_ssl_open(52,1891
mailstream * mailstream_ssl_open(53,1941

/emcsvn/emc/libemcbase/src/libemime/tools/base64.c,191
#define OUTPUT_SIZE 40,1716
#define CHAR64(41,1740
static char index_64[index_6443,1806
static char basis_64[basis_6454,2287
char * encode_base64(57,2384
char * decode_base64(95,3186

/emcsvn/emc/libemcbase/src/libemime/tools/base64.h,85
#define BASE64_H37,1691
char * encode_base64(47,1880
char * decode_base64(53,2060

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_socket.c,868
static int mailstream_low_socket_close(43,1807
static ssize_t mailstream_low_socket_read(44,1867
static ssize_t mailstream_low_socket_write(46,1963
static void mailstream_low_socket_free(48,2061
static int mailstream_low_socket_get_fd(49,2121
static mailstream_low_driver local_mailstream_socket_driver 51,2183
mailstream_low_driver * mailstream_socket_driver 59,2494
static struct mailstream_socket_data * socket_data_new(64,2643
static void socket_data_free(80,2921
static void socket_data_close(85,3021
mailstream_low * mailstream_low_socket_open(91,3151
static int mailstream_low_socket_close(112,3553
static void mailstream_low_socket_free(122,3771
static int mailstream_low_socket_get_fd(133,4005
static ssize_t mailstream_low_socket_read(143,4228
static ssize_t mailstream_low_socket_write(168,4788
mailstream * mailstream_socket_open(180,5061

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_socket.h,256
#define MAILSTREAM_SOCKET_H38,1715
extern mailstream_low_driver * mailstream_socket_driver;48,1823
mailstream_low * mailstream_low_socket_open(50,1881
mailstream * mailstream_socket_open(51,1934
struct mailstream_socket_data 53,1980
  int fd;54,2012

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_helper.c,467
static void remove_trailing_eol(40,1757
char * mailstream_read_line(52,2040
static char * mailstream_read_len_append(60,2227
char * mailstream_read_line_append(74,2550
char * mailstream_read_line_remove_eol(109,3242
int mailstream_is_end_multiline(119,3437
char * mailstream_read_multiline(129,3586
static gboolean end_of_multiline(178,4682
char * mailstream_read_multiline(210,5110
static ssize_t send_data_line(249,5922
int mailstream_send_data(340,7230

/emcsvn/emc/libemcbase/src/libemime/tools/mailstream_helper.h,282
#define MAILSTREAM_HELPER_H38,1715
char * mailstream_read_line(48,1851
char * mailstream_read_line_append(50,1921
char * mailstream_read_line_remove_eol(52,1998
char * mailstream_read_multiline(54,2079
int mailstream_is_end_multiline(60,2276
int mailstream_send_data(62,2323

/emcsvn/emc/libemcbase/src/libemime/tools/chash.c,470
#define CHASH_MAXDEPTH 48,2016
static inline unsigned int chash_func(50,2045
static inline char * chash_dup(64,2317
chash * chash_new(75,2515
int chash_get(96,2913
int chash_set(119,3394
int chash_delete(218,5484
void chash_free(264,6471
void chash_clear(285,6878
chashiter * chash_begin(306,7332
chashiter * chash_next(320,7564
int chash_resize(338,7849
int chash_count(370,8513
int chash_size(374,8570
void chash_value(378,8625
void chash_key(382,8712

/emcsvn/emc/libemcbase/src/libemime/tools/chash.h,1191
#define CHASH_H41,1807
  char * data;48,1881
  int len;49,1896
} chashdatum;50,1907
struct chash 52,1922
  int size,53,1937
  int size, count,53,1937
  int size, count, copyvalue,53,1937
  int size, count, copyvalue, copykey;53,1937
  struct chashcell ** cells;54,1976
typedef struct chash chash;57,2010
struct chashcell 59,2039
  unsigned int func;60,2058
  chashdatum key;61,2079
  chashdatum value;62,2097
  struct chashcell * next;63,2117
typedef struct chashcell chashiter;66,2148
#define CHASH_COPYNONE 68,2185
#define CHASH_COPYKEY 69,2213
#define CHASH_COPYVALUE 70,2241
#define CHASH_COPYALL 71,2269
#define CHASH_DEFAULTSIZE 73,2330
chash * chash_new(82,2759
void chash_free(85,2819
void chash_clear(88,2890
int chash_set(95,3218
int chash_get(102,3471
int chash_delete(108,3778
int chash_resize(113,3907
chashiter * chash_begin(116,4023
chashiter * chash_next(119,4120
int          chash_size(125,4357
int          chash_count(128,4451
void chash_key(131,4556
void chash_value(134,4678
static inline int chash_size(137,4742
static inline int chash_count(142,4811
static inline void chash_key(147,4882
static inline void chash_value(152,4979

/emcsvn/emc/libemcbase/src/libemime/tools/mapping.c,25
int get_mapping(41,1741

/emcsvn/emc/libemcbase/src/libemime/tools/mapping.h,51
#define MAPPING_H38,1695
int get_mapping(46,1778

/emcsvn/emc/libemcbase/src/libemime/tools/clist.c,600
clist * clist_new(43,1853
void clist_free(55,2033
int clist_isempty(69,2207
clistiter * clist_begin(73,2300
clistiter * clist_end(77,2363
clistiter * clist_next(81,2423
clistiter * clist_previous(88,2528
void * clist_content(95,2641
int clist_count(102,2744
int clist_prepend(106,2799
int clist_append(110,2901
int clist_insert_before(115,3007
int clist_insert_after(149,3609
clistiter * clist_delete(183,4201
void clist_foreach(209,4609
void clist_concat(217,4785
static inline clistiter * internal_clist_nth(236,5163
void * clist_nth_data(252,5415
clistiter * clist_nth(263,5585

/emcsvn/emc/libemcbase/src/libemime/tools/clist.h,1325
#define CLIST_H41,1829
typedef struct clistcell_s 47,1886
  void * data;48,1915
  struct clistcell_s * previous;49,1930
  struct clistcell_s * next;50,1963
} clistcell;51,1992
struct clist_s 53,2006
  clistcell * first;54,2023
  clistcell * last;55,2044
  int count;56,2064
typedef struct clist_s clist;59,2081
typedef clistcell clistiter;60,2111
clist *      clist_new(63,2175
void        clist_free(66,2269
int         clist_isempty(73,2479
int         clist_count(76,2565
clistiter *   clist_begin(79,2659
clistiter *   clist_end(82,2754
clistiter *   clist_next(85,2847
clistiter *   clist_previous(88,2949
void*       clist_content(91,3052
int         clist_prepend(94,3154
int         clist_append(97,3254
#define     clist_isempty(99,3303
#define     clist_count(100,3393
#define     clist_begin(101,3449
#define     clist_end(102,3505
#define     clist_next(103,3560
#define     clist_previous(104,3630
#define     clist_content(105,3704
#define     clist_prepend(106,3774
#define     clist_append(107,3857
int         clist_insert_before(111,4021
int         clist_insert_after(114,4159
clistiter *   clist_delete(118,4317
typedef void (* clist_func)120,4368
void clist_foreach(122,4414
void clist_concat(124,4478
void * clist_nth_data(126,4525
clistiter * clist_nth(128,4573

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_disposition.c,707
mailmime_disposition_parm_parse(43,1797
mailmime_creation_date_parm_parse(49,1945
mailmime_filename_parm_parse(53,2061
mailmime_modification_date_parm_parse(57,2174
mailmime_read_date_parm_parse(61,2298
mailmime_size_parm_parse(65,2413
mailmime_quoted_date_time_parse(69,2519
int mailmime_disposition_parse(80,2756
mailmime_disposition_type_parse(174,4649
int mailmime_disposition_guess_type(248,6373
mailmime_disposition_parm_parse(271,6979
mailmime_filename_parm_parse(424,10507
mailmime_creation_date_parm_parse(457,11196
mailmime_modification_date_parm_parse(490,11912
mailmime_read_date_parm_parse(523,12624
mailmime_size_parm_parse(556,13300
mailmime_quoted_date_time_parse(591,14091

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_disposition.h,165
#define MAILMIME_DISPOSITION_H38,1721
int mailmime_disposition_parse(46,1822
mailmime_disposition_type_parse(51,1965
int mailmime_disposition_guess_type(55,2098

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_decode.c,683
#define TRUE 56,2063
#define FALSE 60,2100
static int mailmime_charset_parse(63,2124
  MAILMIME_ENCODING_B,67,2237
  MAILMIME_ENCODING_Q68,2260
static int mailmime_encoding_parse(71,2286
static int mailmime_etoken_parse(74,2391
mailmime_non_encoded_word_parse(78,2505
mailmime_encoded_word_parse(83,2621
  TYPE_ERROR,89,2765
  TYPE_WORD,90,2779
  TYPE_ENCODED_WORD,91,2792
int mailmime_encoded_phrase_parse(94,2817
mailmime_non_encoded_word_parse(231,5630
static int mailmime_encoded_word_parse(295,6640
static int mailmime_charset_parse(455,9879
static int mailmime_encoding_parse(461,10053
int is_etoken_char(491,10603
static int mailmime_etoken_parse(521,10945

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_decode.h,77
#define MAILMIME_DECODE_H38,1711
int mailmime_encoded_phrase_parse(46,1807

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_types.c,2046
void mailmime_attribute_free(42,1777
mailmime_composite_type_new(52,1929
void mailmime_composite_type_free(66,2145
mailmime_content_new(77,2355
void mailmime_content_free(94,2687
void mailmime_description_free(110,3048
mailmime_discrete_type_new(117,3179
void mailmime_discrete_type_free(131,3482
void mailmime_encoding_free(140,3726
void mailmime_extension_token_free(146,3853
void mailmime_id_free(152,3965
struct mailmime_mechanism * mailmime_mechanism_new(158,4043
void mailmime_mechanism_free(172,4326
mailmime_parameter_new(182,4552
void mailmime_parameter_free(196,4810
void mailmime_subtype_free(206,5019
void mailmime_token_free(213,5128
mailmime_type_new(221,5227
void mailmime_type_free(238,5626
void mailmime_value_free(249,5905
mailmime_field_new(264,6079
void mailmime_field_free(290,6706
struct mailmime_fields * mailmime_fields_new(310,7263
void mailmime_fields_free(323,7481
mailmime_multipart_body_new(356,8115
void mailmime_multipart_body_free(369,8330
struct mailmime * mailmime_new(381,8559
void mailmime_free(438,9982
mailmime_encoded_word_new(468,10797
void mailmime_charset_free(481,11021
void mailmime_encoded_text_free(487,11104
void mailmime_encoded_word_free(493,11183
mailmime_disposition_new(508,11430
void mailmime_disposition_free(522,11730
mailmime_disposition_type_new(536,12057
void mailmime_disposition_type_free(550,12331
mailmime_disposition_parm_new(561,12567
void mailmime_disposition_parm_free(586,13199
void mailmime_filename_parm_free(606,13821
void mailmime_creation_date_parm_free(612,13928
void mailmime_modification_date_parm_free(618,14039
void mailmime_read_date_parm_free(624,14154
void mailmime_quoted_date_time_free(630,14261
struct mailmime_section * mailmime_section_new(636,14366
void mailmime_section_free(649,14593
struct mailmime_language * mailmime_language_new(660,14794
void mailmime_language_free(673,15006
void mailmime_decoded_part_free(682,15205
struct mailmime_data * mailmime_data_new(688,15297
void mailmime_data_free(708,15763

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_types.h,7148
#define MAILMIME_TYPES_H38,1709
  MAILMIME_COMPOSITE_TYPE_ERROR,49,1845
  MAILMIME_COMPOSITE_TYPE_MESSAGE,50,1878
  MAILMIME_COMPOSITE_TYPE_MULTIPART,51,1913
  MAILMIME_COMPOSITE_TYPE_EXTENSION52,1950
struct mailmime_composite_type 55,1990
  int type;56,2023
  char * token;57,2035
struct mailmime_content 61,2056
  struct mailmime_type * type;62,2082
  char * subtype;63,2113
  clist * parameters;64,2131
  MAILMIME_DISCRETE_TYPE_ERROR,69,2214
  MAILMIME_DISCRETE_TYPE_TEXT,70,2246
  MAILMIME_DISCRETE_TYPE_IMAGE,71,2277
  MAILMIME_DISCRETE_TYPE_AUDIO,72,2309
  MAILMIME_DISCRETE_TYPE_VIDEO,73,2341
  MAILMIME_DISCRETE_TYPE_APPLICATION,74,2373
  MAILMIME_DISCRETE_TYPE_EXTENSION75,2411
struct mailmime_discrete_type 78,2450
  int type;79,2482
  char * extension;80,2494
  MAILMIME_FIELD_NONE,84,2525
  MAILMIME_FIELD_TYPE,85,2548
  MAILMIME_FIELD_TRANSFER_ENCODING,86,2571
  MAILMIME_FIELD_ID,87,2607
  MAILMIME_FIELD_DESCRIPTION,88,2628
  MAILMIME_FIELD_VERSION,89,2658
  MAILMIME_FIELD_DISPOSITION,90,2684
  MAILMIME_FIELD_LANGUAGE,91,2714
struct mailmime_field 94,2745
  int type;95,2769
  struct mailmime_content * content;96,2781
  struct mailmime_mechanism * encoding;97,2818
  char * id;98,2858
  char * description;99,2871
  uint32_t version;100,2893
  struct mailmime_disposition * disposition;101,2913
  struct mailmime_language * language;102,2958
  MAILMIME_MECHANISM_ERROR,106,3008
  MAILMIME_MECHANISM_7BIT,107,3036
  MAILMIME_MECHANISM_8BIT,108,3063
  MAILMIME_MECHANISM_BINARY,109,3090
  MAILMIME_MECHANISM_QUOTED_PRINTABLE,110,3119
  MAILMIME_MECHANISM_BASE64,111,3158
  MAILMIME_MECHANISM_TOKEN112,3187
struct mailmime_mechanism 115,3218
  int type;116,3246
  char * token;117,3258
struct mailmime_fields 121,3279
  clist * list;122,3304
struct mailmime_parameter 126,3365
  char * name;127,3393
  char * value;128,3408
  MAILMIME_TYPE_ERROR,132,3435
  MAILMIME_TYPE_DISCRETE_TYPE,133,3458
  MAILMIME_TYPE_COMPOSITE_TYPE134,3489
struct mailmime_type 137,3524
  int type;138,3547
  struct mailmime_discrete_type * discrete_type;139,3559
  struct mailmime_composite_type * composite_type;140,3608
void mailmime_attribute_free(143,3663
mailmime_composite_type_new(146,3745
void mailmime_composite_type_free(148,3799
mailmime_content_new(151,3898
void mailmime_content_free(155,4000
void mailmime_description_free(157,4064
mailmime_discrete_type_new(160,4149
void mailmime_discrete_type_free(162,4206
void mailmime_encoding_free(165,4293
void mailmime_extension_token_free(167,4361
void mailmime_id_free(169,4416
struct mailmime_mechanism * mailmime_mechanism_new(171,4451
void mailmime_mechanism_free(173,4528
mailmime_parameter_new(176,4626
void mailmime_parameter_free(178,4678
void mailmime_subtype_free(180,4748
void mailmime_token_free(182,4793
mailmime_type_new(185,4857
void mailmime_type_free(189,4991
void mailmime_value_free(191,5046
struct mailmime_language 195,5089
  clist * list;196,5116
struct mailmime_language * mailmime_language_new(199,5156
void mailmime_language_free(201,5221
mailmime_field_new(209,5361
void mailmime_field_free(218,5629
struct mailmime_fields * mailmime_fields_new(220,5687
void mailmime_fields_free(222,5748
struct mailmime_multipart_body 225,5810
  clist * list;226,5843
mailmime_multipart_body_new(230,5896
void mailmime_multipart_body_free(232,5940
  MAILMIME_DATA_TEXT,236,6026
  MAILMIME_DATA_FILE,237,6048
struct mailmime_data 240,6074
  int type;241,6097
  int encoding;242,6109
  int encoded;243,6125
  char * data;244,6140
  size_t length;245,6155
  char * filename;246,6172
struct mailmime_data * mailmime_data_new(249,6195
void mailmime_data_free(253,6332
  MAILMIME_NONE,257,6400
  MAILMIME_SINGLE,258,6417
  MAILMIME_MULTIPLE,259,6436
  MAILMIME_MESSAGE260,6457
struct mailmime 263,6480
  int parent_type;265,6525
  struct mailmime * parent;266,6544
  clistiter * multipart_pos;267,6572
  int type;269,6602
  char * mime_start;270,6614
  size_t length;271,6635
  struct mailimf_fields * fields;273,6653
  struct mailmime_fields * mime_fields;275,6688
  struct mailmime_content * content_type;276,6728
  struct mailmime_data * body;279,6791
  struct mailmime_data * preamble;282,6842
  struct mailmime_data * epilogue;283,6877
  clist * list;284,6912
  struct mailmime * msg_mime;287,6945
  struct mailmime_data * msg_content;292,7066
struct mailmime * mailmime_new(295,7108
void mailmime_free(308,7578
struct mailmime_encoded_word 310,7623
  char * charset;311,7654
  char * text;312,7672
mailmime_encoded_word_new(316,7722
void mailmime_encoded_word_free(318,7779
void mailmime_charset_free(320,7848
void mailmime_encoded_text_free(322,7893
struct mailmime_disposition 325,7941
  struct mailmime_disposition_type * dsp_type;326,7971
  clist * disposition_parms;327,8018
  MAILMIME_DISPOSITION_TYPE_ERROR,332,8098
  MAILMIME_DISPOSITION_TYPE_INLINE,333,8133
  MAILMIME_DISPOSITION_TYPE_ATTACHMENT,334,8169
  MAILMIME_DISPOSITION_TYPE_EXTENSION335,8209
struct mailmime_disposition_type 338,8251
  int type;339,8286
  char * extension;340,8298
  MAILMIME_DISPOSITION_PARM_FILENAME,345,8330
  MAILMIME_DISPOSITION_PARM_CREATION_DATE,346,8368
  MAILMIME_DISPOSITION_PARM_MODIFICATION_DATE,347,8411
  MAILMIME_DISPOSITION_PARM_READ_DATE,348,8458
  MAILMIME_DISPOSITION_PARM_SIZE,349,8497
  MAILMIME_DISPOSITION_PARM_PARAMETER350,8531
struct mailmime_disposition_parm 353,8573
  int type;354,8608
  char * filename;355,8620
  char * creation_date;356,8639
  char * modification_date;357,8663
  char * read_date;358,8691
  size_t size;359,8711
  struct mailmime_parameter * parameter;360,8726
mailmime_disposition_new(364,8801
void mailmime_disposition_free(367,8904
mailmime_disposition_type_new(370,9007
void mailmime_disposition_type_free(372,9067
mailmime_disposition_parm_new(375,9185
void mailmime_disposition_parm_free(383,9416
void mailmime_filename_parm_free(386,9507
void mailmime_creation_date_parm_free(388,9559
void mailmime_modification_date_parm_free(390,9612
void mailmime_read_date_parm_free(392,9669
void mailmime_quoted_date_time_free(394,9718
struct mailmime_section 396,9769
  clist * list;397,9795
struct mailmime_section * mailmime_section_new(400,9840
void mailmime_section_free(402,9903
  MAILMIME_PART_TYPE_NONE,407,9981
  MAILMIME_PART_TYPE_TEXT,408,10008
  MAILMIME_PART_TYPE_FILE,409,10035
void mailmime_decoded_part_free(413,10073
struct mailmime_single_fields 415,10120
  struct mailmime_content * content;416,10152
  char * content_charset;417,10189
  char * content_boundary;418,10215
  char * content_name;419,10242
  struct mailmime_mechanism * encoding;420,10265
  char * id;421,10305
  char * description;422,10318
  uint32_t version;423,10340
  struct mailmime_disposition * disposition;424,10360
  char * disposition_filename;425,10405
  char * disposition_creation_date;426,10436
  char * disposition_modification_date;427,10472
  char * disposition_read_date;428,10512
  size_t disposition_size;429,10544
  struct mailmime_language * language;430,10571

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_stream_write.c,2217
#define MAX_MAIL_COL 51,1984
#define TRUE 54,2022
#define FALSE 58,2059
static int mailmime_stream_field_write(61,2083
static int mailmime_stream_id_write(64,2190
static int mailmime_stream_description_write(66,2270
static int mailmime_stream_version_write(68,2362
static int mailmime_stream_encoding_write(70,2454
static int mailmime_stream_language_write(73,2574
static int mailmime_stream_disposition_write(76,2693
mailmime_stream_disposition_param_write(81,2845
static int mailmime_stream_parameter_write(84,2965
static int mailmime_stream_type_write(92,3188
mailmime_stream_discrete_type_write(96,3309
mailmime_stream_composite_type_write(100,3444
static int mailmime_stream_sub_write(103,3572
int mailmime_stream_fields_write(109,3690
static int mailmime_stream_field_write(127,4088
static int mailmime_stream_id_write(172,5125
static int mailmime_stream_description_write(202,5788
static int mailmime_stream_version_write(224,6288
static int mailmime_stream_encoding_write(249,6885
static int mailmime_stream_language_write(301,8103
static int mailmime_stream_disposition_write(360,9311
mailmime_stream_disposition_param_write(419,10741
static int mailmime_stream_parameter_write(536,13895
int mailmime_stream_content_type_write(556,14400
int mailmime_stream_content_write(612,15698
static int mailmime_stream_type_write(632,16174
mailmime_stream_discrete_type_write(658,16706
mailmime_stream_composite_type_write(701,17721
static int mailmime_stream_text_content_write(743,18623
static int mailmime_stream_part_write(777,19378
static int mailmime_stream_sub_write(951,23232
int mailmime_stream_write(987,24032
int mailmime_stream_data_write(997,24288
static int mailmime_stream_text_content_write(1080,25880
static char base64_encoding[base64_encoding1102,26474
#define BASE64_MAX_COL 1105,26575
int mailmime_stream_base64_write(1107,26602
#define MAX_WRITE_SIZE 1182,28042
  STATE_INIT,1186,28084
  STATE_CR,1187,28098
  STATE_SPACE,1188,28110
  STATE_SPACE_CR,1189,28125
static inline int write_stream_try_buf(1193,28153
static inline int write_stream_remaining(1209,28472
#define QP_MAX_COL 1226,28776
int mailmime_stream_quoted_printable_write(1228,28799

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_stream_write.h,343
#define  MAILMIME_STREAM_WRITE_H38,1723
int mailmime_stream_fields_write(49,1908
int mailmime_stream_content_write(52,2012
int mailmime_stream_content_type_write(55,2120
int mailmime_stream_write(58,2231
int mailmime_stream_quoted_printable_write(61,2325
int mailmime_stream_base64_write(64,2443
int mailmime_stream_data_write(67,2539

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_types_helper.c,1834
#define MIME_VERSION 47,1865
int mailmime_transfer_encoding_get(49,1897
mailmime_disposition_new_filename(65,2284
struct mailmime_fields * mailmime_fields_new_empty(72,2447
int mailmime_fields_add(93,2760
static void mailmime_field_detach(105,2981
mailmime_fields_new_with_data(116,3231
mailmime_fields_new_with_version(226,5913
struct mailmime_content * mailmime_get_content_message(263,6793
struct mailmime_content * mailmime_get_content_text(310,7825
mailmime_new_message_file(367,8880
mailmime_new_message_text(415,9918
mailmime_new_message_data(463,10976
#define MAX_MESSAGE_ID 501,11743
static char * generate_boundary(503,11771
mailmime_new_empty(520,12081
mailmime_new_with_content(633,14269
int mailmime_set_preamble_file(702,15615
int mailmime_set_epilogue_file(717,15956
int mailmime_set_preamble_text(732,16297
int mailmime_set_epilogue_text(747,16658
int mailmime_set_body_file(763,17020
int mailmime_set_body_text(781,17421
int mailmime_add_part(802,17887
void mailmime_remove_part(826,18444
int mailmime_smart_add_part(854,18971
int mailmime_smart_remove_part(965,21250
struct mailmime_content * mailmime_content_new_with_str(1019,22154
struct mailmime_fields * mailmime_fields_new_encoding(1035,22521
struct mailmime * mailmime_multiple_new(1060,23014
void mailmime_set_imf_fields(1090,23616
struct mailmime_content * mailmime_get_content(1097,23753
mailmime_disposition_new_with_data(1117,24103
static void mailmime_disposition_single_fields_init(1214,26499
static void mailmime_content_single_fields_init(1252,27574
void mailmime_single_fields_init(1276,28230
mailmime_single_fields_new(1328,29547
void mailmime_single_fields_free(1346,29921
struct mailmime_fields * mailmime_fields_new_filename(1352,30033
mailmime_data_new_data(1384,30804
mailmime_data_new_file(1391,31006

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_types_helper.h,1532
#define MAILMIME_TYPES_HELPER_H38,1723
int mailmime_transfer_encoding_get(46,1825
mailmime_disposition_new_filename(49,1925
struct mailmime_fields * mailmime_fields_new_empty(51,1988
int mailmime_fields_add(53,2047
mailmime_fields_new_with_data(57,2165
mailmime_fields_new_with_version(64,2407
struct mailmime_content * mailmime_get_content_message(70,2611
struct mailmime_content * mailmime_get_content_text(71,2673
#define mailmime_get_content 74,2805
mailmime_data_new_data(77,2888
mailmime_data_new_file(81,3000
mailmime_new_message_file(85,3096
mailmime_new_message_text(88,3159
mailmime_new_message_data(91,3237
mailmime_new_empty(94,3311
mailmime_new_with_content(98,3414
int mailmime_set_preamble_file(102,3538
int mailmime_set_epilogue_file(105,3628
int mailmime_set_preamble_text(108,3718
int mailmime_set_epilogue_text(111,3823
int mailmime_set_body_file(114,3928
int mailmime_set_body_text(117,4010
int mailmime_add_part(120,4107
void mailmime_remove_part(123,4193
void mailmime_set_imf_fields(125,4245
mailmime_disposition_new_with_data(130,4373
void mailmime_single_fields_init(134,4524
mailmime_single_fields_new(138,4710
void mailmime_single_fields_free(141,4811
int mailmime_smart_add_part(144,4897
int mailmime_smart_remove_part(147,4983
struct mailmime_content * mailmime_content_new_with_str(149,5040
struct mailmime_fields * mailmime_fields_new_encoding(151,5110
struct mailmime * mailmime_multiple_new(153,5176
struct mailmime_fields * mailmime_fields_new_filename(155,5231

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_content.c,2105
#define TRUE 48,1865
#define FALSE 52,1902
static int mailmime_parse_with_default(64,1981
char * mailmime_content_charset_get(72,2202
char * mailmime_content_param_get(83,2422
	PREAMBLE_STATE_A0,217,4732
	PREAMBLE_STATE_A,218,4752
	PREAMBLE_STATE_A1,219,4771
	PREAMBLE_STATE_B,220,4791
	PREAMBLE_STATE_C,221,4810
	PREAMBLE_STATE_D,222,4829
	PREAMBLE_STATE_E223,4848
static int mailmime_preamble_parse(226,4870
static int mailmime_boundary_parse(346,7024
static int is_wsp(394,8181
static int mailmime_lwsp_parse(402,8278
	BODY_PART_DASH2_STATE_0,431,8761
	BODY_PART_DASH2_STATE_1,432,8787
	BODY_PART_DASH2_STATE_2,433,8813
	BODY_PART_DASH2_STATE_3,434,8839
	BODY_PART_DASH2_STATE_4,435,8865
	BODY_PART_DASH2_STATE_5,436,8891
	BODY_PART_DASH2_STATE_6437,8917
mailmime_body_part_dash2_parse(441,8958
	MULTIPART_CLOSE_STATE_0,567,11447
	MULTIPART_CLOSE_STATE_1,568,11473
	MULTIPART_CLOSE_STATE_2,569,11499
	MULTIPART_CLOSE_STATE_3,570,11525
	MULTIPART_CLOSE_STATE_4571,11551
static int mailmime_multipart_close_parse(574,11580
	MULTIPART_NEXT_STATE_0,664,13252
	MULTIPART_NEXT_STATE_1,665,13277
	MULTIPART_NEXT_STATE_2666,13302
int mailmime_multipart_next_parse(669,13330
mailmime_multipart_body_parse(724,14311
	MAILMIME_DEFAULT_TYPE_TEXT_PLAIN,1112,21798
	MAILMIME_DEFAULT_TYPE_MESSAGE1113,21833
int mailmime_parse(1117,21869
char * mailmime_extract_boundary(1184,23191
static void remove_unparsed_mime_headers(1218,23855
static int mailmime_parse_with_default(1265,24924
static int mailmime_get_section_list(1531,30609
int mailmime_get_section(1587,31794
static char get_base64_value(1611,32111
int mailmime_base64_body_parse(1631,32462
static inline int hexa_to_char(1737,34287
static inline char to_char(1748,34569
	STATE_NORMAL,1754,34683
	STATE_CODED,1755,34698
	STATE_OUT,1756,34712
	STATE_CR,1757,34724
static int write_decoded_qp(1761,34740
#define WRITE_MAX_QP 1770,34942
int mailmime_quoted_printable_body_parse(1772,34968
int mailmime_binary_body_parse(1799,35551
int mailmime_part_parse(1844,36305
int mailmime_get_section_id(1866,36927

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_content.h,427
#define MAILMIME_CONTENT_H38,1713
char * mailmime_content_charset_get(46,1810
char * mailmime_content_param_get(48,1883
int mailmime_parse(51,1973
int mailmime_get_section(54,2073
char * mailmime_extract_boundary(59,2195
int mailmime_base64_body_parse(64,2285
int mailmime_quoted_printable_body_parse(68,2422
int mailmime_binary_body_parse(73,2577
int mailmime_part_parse(77,2714
int mailmime_get_section_id(82,2845

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_write.c,2116
#define MAX_MAIL_COL 51,1970
#define TRUE 54,2008
#define FALSE 58,2045
static int mailmime_field_write(61,2069
static int mailmime_id_write(64,2159
static int mailmime_description_write(66,2222
static int mailmime_version_write(68,2297
static int mailmime_encoding_write(70,2372
static int mailmime_language_write(73,2475
static int mailmime_disposition_write(76,2577
mailmime_disposition_param_write(81,2712
static int mailmime_parameter_write(84,2815
static int mailmime_type_write(92,3021
mailmime_discrete_type_write(96,3125
mailmime_composite_type_write(100,3243
static int mailmime_sub_write(103,3354
int mailmime_fields_write(109,3455
static int mailmime_field_write(126,3827
static int mailmime_id_write(171,4798
static int mailmime_description_write(201,5392
static int mailmime_version_write(223,5837
static int mailmime_encoding_write(248,6379
static int mailmime_language_write(300,7507
static int mailmime_disposition_write(356,8532
mailmime_disposition_param_write(415,9879
static int mailmime_parameter_write(529,12812
int mailmime_content_type_write(549,13279
int mailmime_content_write(602,14403
static int mailmime_type_write(622,14824
mailmime_discrete_type_write(648,15325
mailmime_composite_type_write(691,16281
static int mailmime_text_content_write(733,17145
struct mailmime_config * mailmime_config_new(745,17486
int mailmime_config_add(750,17553
void mailmime_config_free(756,17648
mailmime_resolve_mime_type(761,17738
static int mailmime_part_write(767,17841
static int mailmime_sub_write(941,21467
int mailmime_write(977,22205
int mailmime_data_write(987,22430
static int mailmime_text_content_write(1070,23977
static char base64_encoding[base64_encoding1092,24533
#define BASE64_MAX_COL 1095,24634
int mailmime_base64_write(1097,24661
#define MAX_WRITE_SIZE 1172,26029
  STATE_INIT,1176,26071
  STATE_CR,1177,26085
  STATE_SPACE,1178,26097
  STATE_SPACE_CR,1179,26112
static inline int write_try_buf(1183,26140
static inline int write_remaining(1199,26435
#define QP_MAX_COL 1216,26715
int mailmime_quoted_printable_write(1218,26738

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime_write.h,287
#define  MAILMIME_WRITE_H38,1709
int mailmime_fields_write(47,1824
int mailmime_content_write(50,1911
int mailmime_content_type_write(53,2002
int mailmime_write(56,2096
int mailmime_quoted_printable_write(59,2173
int mailmime_base64_write(62,2274
int mailmime_data_write(65,2353

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime.c,1407
#define TRUE 63,2019
#define FALSE 67,2056
static int mailmime_attribute_parse(70,2080
mailmime_composite_type_parse(74,2207
static int is_text(78,2346
mailmime_discrete_type_parse(81,2387
static int mailmime_mechanism_parse(85,2522
static int mailmime_subtype_parse(89,2660
static int is_token(92,2765
static int mailmime_token_parse(94,2796
static int is_tspecials(98,2900
static int mailmime_type_parse(100,2935
static int mailmime_attribute_parse(124,3512
mailmime_composite_type_parse(136,3776
int mailmime_content_parse(195,5117
static int is_text(310,7632
int mailmime_description_parse(323,7810
mailmime_discrete_type_parse(340,8179
int mailmime_encoding_parse(423,10192
  FIELD_STATE_START,439,10610
  FIELD_STATE_T,440,10631
  FIELD_STATE_D441,10648
static int guess_field_type(444,10668
mailmime_field_parse(506,11811
mailmime_extension_token_parse(634,14992
int mailmime_id_parse(664,15809
static int mailmime_mechanism_parse(676,16105
mailmime_unparsed_fields_parse(786,18862
mailmime_fields_parse(847,20087
int mailmime_parameter_parse(914,21428
static int mailmime_subtype_parse(1008,23296
static int is_token(1019,23567
static int mailmime_token_parse(1036,23777
static int is_tspecials(1141,25661
static int mailmime_type_parse(1169,25996
int mailmime_value_parse(1229,27320
int mailmime_version_parse(1249,27721
int mailmime_language_parse(1333,29469

/emcsvn/emc/libemcbase/src/libemime/mailmime/mailmime.h,417
#define MAILMIME_H38,1697
int mailmime_content_parse(52,1963
int mailmime_description_parse(56,2086
int mailmime_encoding_parse(60,2202
mailmime_field_parse(65,2334
int mailmime_id_parse(68,2436
mailmime_fields_parse(72,2535
int mailmime_version_parse(77,2649
mailmime_extension_token_parse(82,2760
int mailmime_parameter_parse(85,2866
int mailmime_value_parse(89,2997
int mailmime_language_parse(92,3091

/emcsvn/emc/libemcbase/src/libemime/libemime.c,420
static char *rcsid rcsid1,0
static void use_rcsid(2,81
const char * emime_message_get_header(84,2183
int emime_message_parse(116,3010
#define MIME_RECURSE_FINISHED	168,4088
#define MIME_RECURSE_CONTINUE	169,4122
static int hookup_cached_body(171,4156
static int emime_message_parse_body_internal(222,5394
void emime_message_parse_body(277,6893
static void hash_free(290,7139
void emime_message_free(303,7480

/emcsvn/emc/libemcbase/src/libemime/libemime.h,855
#define __libemime_h2,21
typedef struct EMimeMessage_t 16,304
	struct mailmime * mimepart;17,336
	const char * msg;18,365
	size_t len;19,384
	long headers_end;20,397
	GHashTable * cached_headers;21,416
	GSList * cached_bodies;22,446
} EMimeMessage;23,471
typedef struct ECachedHeader_t 25,488
	char * header_val;26,521
	size_t len;27,541
	char * header_name;28,554
} ECachedHeader;29,575
typedef struct ECachedBody_t 31,593
	char * body;32,624
	size_t len;33,638
	int is_html;34,651
	int is_raw;35,665
	struct mailmime_content * content_type;36,678
	struct mailmime * mime;37,719
	int encoding;38,744
} ECachedBody;39,759
typedef struct mailmime EMime;41,775
int emime_message_parse(43,807
void emime_message_free(44,886
void emime_message_parse_body(45,934
const char *emime_message_get_header(emime_message_get_header46,991

/emcsvn/emc/libemcbase/src/libemcbase.h,7911
#define __libemcbase_h2,23
#define BOOL 61,1576
#define TRUE 64,1613
#define FALSE 67,1649
#undef	recv78,1874
#undef	send79,1886
#define	recv(80,1898
#define	send(81,1942
#define	INADDR_NONE	86,2038
#define	SHUT_RD	90,2184
#define	SHUT_WR	91,2230
#define	SHUT_RDWR	92,2276
#define	INET_ADDRSTRLEN	101,2484
#define	INET6_ADDRSTRLEN	109,2768
#define	bzero(118,3111
#define	gethostbyname2(125,3279
#define	CMSG_LEN(133,3592
#define	CMSG_SPACE(137,3701
# define	SUN_LEN(145,3987
#define AF_LOCAL	152,4214
#define PF_LOCAL	155,4263
#define INFTIM 163,4603
#define	INFTIM_UNPH	166,4703
#define	LISTENQ	172,4921
#define	MAXLINE	175,5005
#define	MAXSOCKADDR 176,5054
#define	BUFFSIZE	177,5119
#define	SERV_PORT	180,5247
#define	SERV_PORT_STR	181,5307
#define	UNIXSTR_PATH	182,5371
#define	UNIXDG_PATH	183,5442
#define	SA	193,5932
#define	FILE_MODE	195,5960
#define	DIR_MODE	197,6075
typedef	void	Sigfunc(200,6186
#define	min(202,6240
#define	max(203,6281
unsigned short	in_cksum(212,6415
int		 sockatmark(277,7646
int		 connect_nonb(286,7819
int		 connect_timeo(287,7872
void	 daemon_init(288,7926
void	 daemon_inetd(289,7964
void	 dg_cli(290,8003
void	 dg_echo(291,8053
char	*gf_time(gf_time292,8090
struct addrinfo *host_serv(host_serv293,8111
char   **my_addrs(my_addrs294,8177
int		 readable_timeo(295,8203
ssize_t	 readline(296,8235
ssize_t	 readn(297,8275
ssize_t	 read_fd(298,8312
Sigfunc *signal_intr(signal_intr299,8358
int		 sock_bind_wild(300,8396
int		 sock_cmp_addr(301,8428
int		 sock_cmp_port(302,8484
int		 sock_get_port(303,8540
void	 sock_set_addr(304,8584
void	 sock_set_port(305,8636
void	 sock_set_wild(306,8679
char	*sock_ntop(sock_ntop307,8717
char	*sock_ntop_host(sock_ntop_host308,8757
int		 sockfd_to_family(309,8802
void	 str_echo(310,8831
void	 str_cli(311,8852
int		 tcp_connect(312,8880
int		 tcp_listen(313,8927
void	 tv_sub(314,8986
int		 udp_client(315,9036
int		 udp_connect(316,9104
int		 udp_server(317,9151
int		 writable_timeo(318,9210
ssize_t	 writen(319,9242
ssize_t	 write_fd(320,9286
int		 mcast_leave(323,9345
int		 mcast_join(324,9392
int		 mcast_get_if(325,9459
int		 mcast_get_loop(326,9484
int		 mcast_get_ttl(327,9511
int		 mcast_set_if(328,9537
int		 mcast_set_loop(329,9583
int		 mcast_set_ttl(330,9615
void	 Mcast_leave(332,9647
void	 Mcast_join(333,9694
int		 Mcast_get_if(334,9761
int		 Mcast_get_loop(335,9786
int		 Mcast_get_ttl(336,9813
void	 Mcast_set_if(337,9839
void	 Mcast_set_loop(338,9885
void	 Mcast_set_ttl(339,9917
typedef struct Ht_node 351,10230
	char * key;352,10255
	void * val;353,10268
	struct Ht_node *next;next354,10281
} Hash_node;355,10304
typedef struct Ht_ht 357,10318
	int size;358,10341
	struct Ht_node **tbl;tbl359,10352
	int iter_index;360,10375
	struct Ht_node *iter_next;iter_next361,10392
	int items;362,10420
	 int collisions;363,10432
} Hash;364,10450
Hash * Hash_create(366,10459
void *Hash_find(Hash_find367,10492
void Hash_insert(368,10542
void Hash_destroy(369,10616
int Hash_count(370,10645
int Asprintf(372,10679
void * Safe_malloc(373,10732
typedef struct CfgFile_t 379,10912
	char * filename;380,10939
	Hash * _hash;381,10957
} CfgFile;382,10972
CfgFile * Cfg_init(384,10984
void * Cfg_getopt(385,11029
void Cfg_destroy(387,11118
void to64frombits(397,11418
int from64tobits(398,11484
int from_csv(399,11529
int to_csv(400,11599
typedef struct HtmlOptions_t 405,11798
	BOOL delete_spaces;406,11829
	BOOL save_img;407,11850
	BOOL save_href;408,11866
	BOOL save_comments;409,11883
	BOOL save_img_contents;410,11904
	BOOL save_anchor_contents;411,11929
	BOOL save_font_contents;412,11957
	int num_imgs;414,11985
	int num_anchors;415,12000
	int num_comments;416,12018
	int num_fonts;417,12037
	int num_tags;418,12053
	long total_html_tag_len;419,12068
} HtmlOptions;420,12094
int strip_html(422,12110
void String_toupper(431,12462
void String_tolower(432,12500
void String_chomp(433,12538
typedef struct Stopwatch_t 435,12575
	long tv_sec;436,12604
	long tv_usec;437,12618
} Stopwatch;438,12633
int Start_stopwatch(439,12646
long Stop_stopwatch(440,12692
time_t get_date(442,12739
char * Get_header_value(447,12915
char * Get_recip_userid(449,13009
char * Get_recip_domain(450,13057
void	 Connect_timeo(456,13240
struct addrinfo *Host_serv(Host_serv457,13294
const char		*Inet_ntop(Inet_ntop458,13360
void			 Inet_pton(459,13419
char			*If_indextoname(If_indextoname460,13465
unsigned int		 If_nametoindex(461,13511
struct if_nameindex	*If_nameindex(If_nameindex462,13556
char   **My_addrs(My_addrs463,13597
ssize_t	 Read_fd(464,13623
int		 Readable_timeo(465,13669
Sigfunc *Signal(Signal466,13701
Sigfunc *Signal_intr(Signal_intr467,13734
int		 Sock_bind_wild(468,13772
char	*Sock_ntop(Sock_ntop469,13804
char	*Sock_ntop_host(Sock_ntop_host470,13844
int		 Sockfd_to_family(471,13889
int		 Tcp_connect(472,13918
int		 Tcp_listen(473,13965
int		 Udp_client(474,14024
int		 Udp_connect(475,14092
int		 Udp_server(476,14139
ssize_t	 Write_fd(477,14198
int		 Writable_timeo(478,14243
void	*Calloc(Calloc481,14345
void	 Close(482,14375
void	 Dup2(483,14393
int		 Fcntl(484,14415
void	 Gettimeofday(485,14443
int		 Ioctl(486,14489
pid_t	 Fork(487,14520
void	*Malloc(Malloc488,14539
void	 Mktemp(489,14561
void	*Mmap(Mmap490,14583
int		 Open(491,14633
void	 Pipe(492,14672
ssize_t	 Read(493,14694
void	 Sigaddset(494,14730
void	 Sigdelset(495,14764
void	 Sigemptyset(496,14798
void	 Sigfillset(497,14829
int		 Sigismember(498,14859
void	 Sigpending(499,14901
void	 Sigprocmask(500,14931
char	*Strdup(Strdup501,14985
long	 Sysconf(502,15013
void	 Sysctl(503,15033
void	 Unlink(504,15095
pid_t	 Wait(505,15123
pid_t	 Waitpid(506,15143
void	 Write(507,15178
void	 Fclose(510,15283
FILE	*Fdopen(Fdopen511,15305
char	*Fgets(Fgets512,15338
FILE	*Fopen(Fopen513,15372
void	 Fputs(514,15413
int		 Accept(517,15520
void	 Bind(518,15558
void	 Connect(519,15598
void	 Getpeername(520,15641
void	 Getsockname(521,15684
void	 Getsockopt(522,15727
int		 Isfdtype(523,15781
void	 Listen(524,15807
int		 Poll(526,15848
ssize_t	 Readline(528,15904
ssize_t	 Readn(529,15944
ssize_t	 Recv(530,15981
ssize_t	 Recvfrom(531,16022
ssize_t	 Recvmsg(532,16086
int		 Select(533,16131
void	 Send(534,16198
void	 Sendto(535,16242
void	 Sendmsg(536,16311
void	 Setsockopt(537,16359
void	 Shutdown(538,16417
int		 Sockatmark(539,16443
int		 Socket(540,16466
void	 Socketpair(541,16495
void	 Writen(542,16535
void	 sys_msg(544,16571
void	 err_dump(545,16605
void	 err_msg(546,16640
void	 err_quit(547,16674
void	 err_ret(548,16709
void	 err_sys(549,16743
void	 v_sys_msg(550,16777
void	 v_err_dump(551,16820
void	 v_err_msg(552,16864
void	 v_err_quit(553,16907
void	 v_err_ret(554,16951
void	 v_err_sys(555,16994
int addr_in_block(569,17311
int cidr_addr_in_block(570,17394
int addr_directly_connected(571,17471
#define NFS_LOCK_OK 577,17550
#define NFS_LOCK_TOOLONG 578,17580
#define NFS_LOCK_CREATE 579,17610
#define NFS_LOCK_STAT 580,17640
#define NFS_LOCK_BUSY 581,17670
#define NFS_LOCK_HOSTNAME 582,17700
int nfs_lock(584,17731
int nfs_unlock(585,17762
const char *nfs_errstr(nfs_errstr586,17795
#define OPENPGP_MAX_KEYS	591,17854
#define OPENPGP_ENONE	593,17922
#define OPENPGP_ERROR	594,17948
#define OPENPGP_ECONFIG	595,18022
#define OPENPGP_EEXEC	596,18050
#define OPENPGP_EPASS	597,18101
#define OPENPGP_EPARM	598,18165
struct openpgp_config 600,18214
	char *home_dir;home_dir601,18238
	char **keys;keys602,18325
	char *passphrase;passphrase603,18368
int openpgp_encrypt(606,18423
int openpgp_decrypt(607,18512
const char *openpgp_strerror(openpgp_strerror608,18601
int chown_tree(613,18672
int get_header_lines(618,18775
void free_header_lines(619,18860

/emcsvn/emc/libemcbase/src/test_clients/smtp_utils.c,15
int main(3,25

/emcsvn/emc/libemcbase/src/test_clients/strip_html.c,47
#define HTML_BUFFER_LEN 7,104
int main(9,148

/emcsvn/emc/libemcbase/src/cfgfile/mcfg.c,947
static char *rcsid rcsid1,0
static void use_rcsid(2,77
#define BUFR_INC 13,263
static char *bufr=bufr15,289
static int  bsize=16,328
static char *cursec=cursec17,355
static FILE   *openConfFile  _Declare 22,430
static int    Parse          _Declare 23,488
static int    Section        _Declare 26,687
static int    Continuation   _Declare 27,760
static char   *loc_realloc   _Declare 28,822
static int    eatWhitespace  _Declare 29,882
static int    Parameter      _Declare 30,934
static void   regSection     _Declare 32,1072
static int Parameter 78,2625
static FILE *openConfFile(openConfFile259,7031
int paramProcess(332,9112
static int eatComment(386,10076
static int eatWhitespace(399,10234
static int Continuation(411,10387
static int Parse(463,11770
static int Section(546,13587
static char *loc_realloc(loc_realloc646,15880
static void regSection(698,16829
char *getCurrentSection(getCurrentSection731,17288

/emcsvn/emc/libemcbase/src/cfgfile/mcfg.h,235
#define INI_H2,14
#define _Declare(47,606
#define _Declare(49,666
#define const50,705
#define     MS_STYLE 53,727
#define     NOT_MS_STYLE 54,761
int paramProcess        _Declare 59,825
char *getCurrentSection _Declare 62,1025

/emcsvn/emc/libemcbase/src/cfgfile/cfgfile.c,542
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define DEFAULT_HASH_SIZE 16,321
#define DEFAULT_SECTION 17,352
static int do_config_section(19,395
static int do_config_param(20,450
CfgFile * config_init_internal(21,529
char * cursec 24,599
Hash * curhash 25,621
CfgFile * dynamic 26,644
CfgFile * Cfg_init(28,671
CfgFile * config_init_internal(39,842
const char * config_get_filename(65,1424
void * Cfg_getopt(69,1508
void Cfg_destroy(82,1798
static int do_config_section(92,1974
static int do_config_param(100,2144

/emcsvn/emc/libemcbase/src/cfgfile/cfgfile.h,25
#define __cfgfile_h2,20

/emcsvn/emc/libemcbase/src/libbase.h,206
#define __itnernal_libbase_h2,29
struct if_nameindex 7,116
  unsigned int   if_index;8,138
  char          *if_name;if_name9,182
struct timespec 17,361
  time_t	tv_sec;18,379
  long		tv_nsec;19,411

/emcsvn/emc/libemcbase/src/chown_tree.c,81
static char *rcsid rcsid1,0
static void use_rcsid(2,84
int chown_tree(24,595

/emcsvn/emc/libemcbase/src/libdemime/demime.c,1004
static char *rcsid rcsid1,0
static void use_rcsid(2,80
#define _GNU_SOURCE8,188
extern int debug;26,517
extern GList *config;config27,535
GMimeObject *html_body_part html_body_part29,558
	handle_multipart_mixed 32,655
	handle_multipart_alternative 34,769
	handle_multipart_alternative 37,890
	handle_multipart_mixed 84,2266
GMimeObject *demime_message_get_html_body(demime_message_get_html_body134,3655
GMimeObject *demime_message_get_text_body(demime_message_get_text_body148,3940
GMimeObject *demime_message_get_body(demime_message_get_body164,4355
static int write_header_to_spool(197,5396
static int write_body_to_spool(221,5961
static int write_part_to_spool(249,6645
static void do_part(270,7166
static int unlink_tree(358,9364
void demime_cleanup(397,10218
int demime_message(446,11434
int demime_g_mime_message(481,12238
const char *demime_get_header(demime_get_header578,14759
int demime_open(594,15197
static void free_parts(626,15823
int demime_close(656,16357

/emcsvn/emc/libemcbase/src/libdemime/demime.h,1513
#define _DEMIME_H2,18
typedef enum {DEMIME_HEADER,DEMIME_HEADER8,100
typedef enum {DEMIME_HEADER, DEMIME_BODY,8,100
typedef enum {DEMIME_HEADER, DEMIME_BODY, DEMIME_ATTACHMENT}DEMIME_ATTACHMENT8,100
typedef enum {DEMIME_HEADER, DEMIME_BODY, DEMIME_ATTACHMENT} demime_part_type;8,100
struct demime_part 10,180
	demime_part_type part_type;11,201
	const char *path;path12,230
	const char *type,type13,249
	const char *type, *subtype;subtype13,249
	const char *attachment_extension;attachment_extension14,278
	const char *attachment_filename;attachment_filename15,313
	int unpacked;16,347
	GList *children;children17,432
	void *user_data;user_data18,511
typedef struct demime_handle 21,533
	const char *spooldir;spooldir22,564
	const char *filename;filename23,630
	GMimeMessage *message;message24,699
	GMimeObject *body_part;body_part25,723
	GList *attachment_parts;attachment_parts26,748
	magic_t cookie;27,774
	off_t file_size;28,791
	int index;29,809
	char *errstr;errstr30,821
	int rc;31,836
} demime_handle;32,845
int demime_open(35,886
int demime_close(36,949
void demime_cleanup(37,984
int demime_message(38,1024
int demime_g_mime_message(39,1071
int dearchive_parts(40,1140
const char *demime_get_header(demime_get_header41,1198
GMimeObject *demime_message_get_body(demime_message_get_body42,1268
GMimeObject *demime_message_get_html_body(demime_message_get_html_body43,1375
GMimeObject *demime_message_get_text_body(demime_message_get_text_body44,1487

/emcsvn/emc/libemcbase/src/libdemime/dearchive.c,265
static char *rcsid rcsid6,130
static void use_rcsid(7,213
#define _GNU_SOURCE13,321
extern int debug;29,608
extern GList *config;config30,626
static int unpack_zip(32,649
static int unpack_rar(100,2464
int add_files(183,4633
int dearchive_parts(273,6828

/emcsvn/emc/libemcbase/src/libdemime/demime_debug.c,861
#define _GNU_SOURCE1,0
#define MAX_LOG_MSG_LEN 12,322
#define LOG_DEBUG 13,351
char *get_file_name(get_file_name15,372
gboolean my_log(16,412
void glist_test(19,525
GList *debug_glist_create(debug_glist_create20,544
void debug_glist_destroy(21,573
void glist_test(23,613
GList *debug_glist_create(debug_glist_create32,794
void debug_glist_destroy(47,1002
gboolean my_log(69,1342
char *get_file_name(get_file_name92,1871
#define      HTML_BODY 114,2254
#define      TEXT_BODY 115,2290
#define MIME_STRUCT_INFO 116,2326
#define DEMIME_OUTPUT_INFO 117,2362
#define DEMIME_DUMP_INFO 118,2398
GMimeObject *get_html_body_part(get_html_body_part120,2435
int main(138,2783
void print_mime_message(321,6974
void print_mime_struct(363,8035
int write_attachment(458,10002
void debug_print_dh(506,10798
void debug_print_attach_parts(522,11314

/emcsvn/emc/libemcbase/src/libdemime/demime_debug.h,182
#define _GNU_SOURCE1,0
void print_mime_message(12,297
void print_mime_struct(13,359
void debug_print_dh(14,428
void debug_print_attach_parts(15,468
int write_attachment(16,530
